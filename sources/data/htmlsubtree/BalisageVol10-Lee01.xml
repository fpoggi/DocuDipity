<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#FatMarkup:TrimmingtheFatMarkupMythonecalorieatatimeANCHOR" name="FatMarkup:TrimmingtheFatMarkupMythonecalorieatatimeTOC">Fat Markup: Trimming the Fat Markup Myth one calorie at a time</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheMythANCHOR" name="TheMythTOC">The Myth</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#Whatis&#34;FatMarkup&#34;?ANCHOR" name="Whatis&#34;FatMarkup&#34;?TOC">What is "Fat Markup"?</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#SizeMattersANCHOR" name="SizeMattersTOC">Size Matters</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ShapeMattersANCHOR" name="ShapeMattersTOC">Shape Matters</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#SpeedMattersANCHOR" name="SpeedMattersTOC">Speed Matters</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#LooksMatterANCHOR" name="LooksMatterTOC">Looks Matter</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#What'sitallmean?ANCHOR" name="What'sitallmean?TOC">What's it all mean?</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheExperimentANCHOR" name="TheExperimentTOC">The Experiment</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MultipleDocumentCorpusesANCHOR" name="MultipleDocumentCorpusesTOC">Multiple Document Corpuses</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DocumentSizeandshapeANCHOR" name="DocumentSizeandshapeTOC">Document Size and shape</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#JSONFormatsANCHOR" name="JSONFormatsTOC">JSON Formats</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#JSONExamplesANCHOR" name="JSONExamplesTOC">JSON Examples</a></div>
                     <div class="headedContainerTOC">
                        <div class="headedContainerTitleTOC"><a href="#Twitter1FullANCHOR" name="Twitter1FullTOC">Twitter 1 Full</a></div>
                     </div>
                  </div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#XMLFormatsANCHOR" name="XMLFormatsTOC">XML Formats</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#XMLExamplesANCHOR" name="XMLExamplesTOC">XML Examples</a></div>
                  </div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#SizesofcorpusANCHOR" name="SizesofcorpusTOC">Sizes of corpus</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MethodologyandArchitectureANCHOR" name="MethodologyandArchitectureTOC">Methodology and Architecture</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ServerANCHOR" name="ServerTOC">Server</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ClientANCHOR" name="ClientTOC">Client</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#TestsANCHOR" name="TestsTOC">Tests</a></div>
                  </div>
               </div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ResultsANCHOR" name="ResultsTOC">Results</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TestCoverageANCHOR" name="TestCoverageTOC">Test Coverage</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#BrowserCoverageANCHOR" name="BrowserCoverageTOC">Browser Coverage</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#OperatingSystemCoverageANCHOR" name="OperatingSystemCoverageTOC">Operating System Coverage</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DataSizesANCHOR" name="DataSizesTOC">Data Sizes</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DataTransmissionSpeedANCHOR" name="DataTransmissionSpeedTOC">Data Transmission Speed</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ParsingSpeedANCHOR" name="ParsingSpeedTOC">Parsing Speed</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#QuerySpeedANCHOR" name="QuerySpeedTOC">Query Speed</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PuttingittogetherANCHOR" name="PuttingittogetherTOC">Putting it together</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PullingitapartANCHOR" name="PullingitapartTOC">Pulling it apart</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ProblemsandIssuesANCHOR" name="ProblemsandIssuesTOC">Problems and Issues</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionsANCHOR" name="ConclusionsTOC">Conclusions</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#SuggestionstoArchitectsandDevelopersANCHOR" name="SuggestionstoArchitectsandDevelopersTOC">Suggestions to Architects and Developers</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">August 6 - 9, 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">dlee@marklogic.com</div>
         <div class="singletermTERMS">David</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">https://code.google.com/p/jsonxmlspeed/</div>
         <div class="singletermTERMS">https://developers.google.com/web-toolkit/</div>
         <div class="singletermTERMS">https://www.mturk.com/mturk/</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">Lead Engineer</div>
         <div class="singletermTERMS">Lee</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">regardless</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="FatMarkup:TrimmingtheFatMarkupMythonecalorieatatimeANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3">
      <div class="title e1">Fat Markup: Trimming the Fat Markup Myth one calorie at a time</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2013</div>
            <div class="confdates e5">August 6 - 9, 2013</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">We all know that XML is "fat" and JSON is the "thinner", "faster", "smaller",
               "better" markup. We know this to be true because we've been told it over and over.
               It's "obvious" and "inherently true" because XML has redundant end tags,
               namespaces, entities and other extra "pounds of fat" that JSON doesn't have. But
               where is the science supporting this? What are the facts and what is myth? When
               people make design and architecture decisions it should be supported by facts not
               speculation. In this paper I show the results of an ongoing series of real world
               tests of Markup performance in browsers across a wide variety of devices, browsers
               and operating systems and attempt to quantify markup performance with experimental
               results and maybe trim the fat myth one calorie at a time.
            </div>
         </div>
         <div class="author e8">
            <div class="personname e9">
               <div class="firstname e10">David</div>
               <div class="surname e11">Lee</div>
            </div>
            <div class="personblurb e12">
               <div class="para e13">David Lee has over 30 years' experience in the software industry responsible
                  for many major projects in small and large companies including Sun Microsystems,
                  IBM, Centura Software (formerly Gupta.), Premenos, Epiphany (formerly
                  RightPoint), WebGain, Nexstra, Epocrates, MarkLogic. As Lead Engineer at
                  MarkLogic, Inc., Mr. Lee is responsible for maintaining and enhancing the core
                  XML Database server.
               </div>
            </div>
            <div class="affiliation e14">
               <div class="jobtitle e15">Lead Engineer</div>
               <div class="orgname e16">MarkLogic, Inc.</div>
            </div>
            <div class="email e17">dlee@marklogic.com</div>
         </div>
         <div class="legalnotice e18">
            <div class="para e19">Copyright © 2013 David A. Lee</div>
         </div>
      </div><a name="TheMythANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e20">
         <div class="title e21">The Myth</div>
         <div class="para e22">JSON is lean and XML is fat. We know this to be true. Here is a typical quote stated
            as an undisputed fact. 
            <div class="popupBox e23">
               <div class="popupLabel" onmouseover="$('#d1e37').show('1000');" onmouseout="$('#d1e37').hide('1000');">[ blockquote ]</div>
               <div id="d1e37" style="display: none;">
                  <div class="blockquote">
                     <div class="para e24">JSON’s lightweight payload allows for reduced bandwidth needs and faster
                        transfers. 
                        <div class="xref e25" linkend="JSONLIGHT"></div>
                     </div>
                  </div>
               </div>
            </div> Douglas Crockford boldly titles his paper 
            <div class="popupBox e26">
               <div class="popupLabel" onmouseover="$('#d1e42').show('1000');" onmouseout="$('#d1e42').hide('1000');">[ blockquote ]</div>
               <div id="d1e42" style="display: none;">
                  <div class="blockquote">
                     <div class="para e27">JSON: The Fat-Free Alternative to XML 
                        <div class="xref e28" linkend="XMLFAT"></div>
                        
                     </div>
                  </div>
               </div>
            </div>
            
            <div class="popupBox e29">
               <div class="popupLabel" onmouseover="$('#d1e48').show('1000');" onmouseout="$('#d1e48').hide('1000');">[ footnote ]</div>
               <div id="d1e48" style="display: none;">
                  <div class="footnote">
                     <div class="para e30">Although interestingly he claims that JSON is neither a document format nor a
                        markup language.
                        <div class="quote e31">JSON is not a document format. It is not a markup
                           language.
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            
         </div>
         <div class="para e32">Simply search the web or ask your friends and except for a few evangelist's 
            <div class="xref e33" linkend="XMLJSON1"></div> they will tell you the same thing. For people who want to
            promote and use JSON they often use this "fact" to support their cause. For people
            who
            want to use and promote XML they usually accept this and point to XML's other features
            that are more important.
         </div>
         <div class="para e34">Yet few dispute this fact or attempt a systematic measurement to validate or disprove
            it.  And when they do it's usually a very constrained test with a single corpus 
            <div class="xref e35" linkend="AJAX1"></div>. It's just true. 
         </div>
         <div class="popupBox e36">
            <div class="popupLabel" onmouseover="$('#d1e62').show('1000');" onmouseout="$('#d1e62').hide('1000');">[ blockquote ]</div>
            <div id="d1e62" style="display: none;">
               <div class="blockquote">
                  <div class="para e37">The worst misconceptions are those which everyone knows to be true, and yet are completely
                     false. Once a false idea gets into the public consciousness, however, they are very
                     difficult to expunge, and rarely go away completely.
                  </div>
               </div>
            </div>
         </div>
         <div class="para e38">Dr. Steven Novella 
            <div class="xref e39" linkend="MISCONCEPTION"></div> 
         </div>
      </div><a name="Whatis&#34;FatMarkup&#34;?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e40">
         <div class="title e41">What is "Fat Markup"?</div>
         <div class="para e42">When used to describe Markup, "Fat" has many factors and connotations. For the
            purposes of this paper the following attributes are investigated - size, shape, speed
            and looks.
         </div><a name="SizeMattersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e43">
            <div class="title e44">Size Matters</div>
            <div class="para e45">The total size of a marked up document matters for some purposes. The larger the size
               of the document, generally the more memory it consumes when parsed, the more space
               it takes in storage and the more time it takes to transfer over a network. However,
               a single measurement of size is misleading.
            </div>
            <div class="para e46">Size can be measured in bytes, characters, nodes and other metrics - both on
               storage and in memory. Encoding and compression can affect the byte size given the
               same character size in storage (and often memory). Choices of particular markup style
               representing the same document data can affect the number of characters; for example
               choosing shorter element names can produce a document with less characters. Markup
               choices can also affect node structure and size; for example using attributes in XML
               instead of elements for some data produces a different representation of the node
               tree itself which in turn affects the number of characters and bytes. There are many
               other considerations such as numeric precision, ignorable and boundary whitespace,
               defaulted attributes, use of namespaces etc. While some specifics are particular to
               the markup language the concept is valid in both XML and JSON formats.
            </div>
            <div class="para e47">Thus given the same document as an abstract object, it is meaningless to attempt
               to provide a single measurement of its size as expressed in a particular markup
               format. However, one can measure specific sizes of a particular representation of
               a
               document.
            </div>
            <div class="para e48">But even given a specific metric for the size of a document, does it matter? That
               would depend on what one cares about. Size is at best an indirect measurement of
               some other quantity one is interested in such as time to transmit over a network or
               disk space used. General intuition is that probably smaller is "better". However,
               to
               get a more definitive answer then that we need to ask "better for what and whom?"
               A
               binary compressed document may be smallest and better at conserving disk space but
               not better at readability, usability or parsing speed.
            </div>
         </div><a name="ShapeMattersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e49">
            <div class="title e50">Shape Matters</div>
            <div class="para e51">The "Shape" or particular structure of a document matters for some purposes. For
               example, readability and ease of authoring by humans or machines may be important.
               The "shape" also affects the design of parsers, data models and programming
               API's.
            </div>
            <div class="para e52">A particular shape may be better for some uses then others - an exact mapping to a
               particular programming language object structure may be useful in that language but
               cumbersome in another. Even in a single language some models may be better suited
               for direct access and others for searching.
            </div>
            <div class="para e53">Shape of a document is hard to quantify, but I suggest that one can use "ease of
               use" as a proxy. A shape that doesn’t fit your use case is hard to use and could be
               considered "Fat" in terms of the difficulty of using it.
            </div>
         </div><a name="SpeedMattersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e54">
            <div class="title e55">Speed Matters</div>
            <div class="para e56">When something is considered "Fat" it's generally implied that its "Slow". Speed
               matters. The time it takes to transfer a document from disk to memory, the time it
               takes to transfer across a network, the time it takes to parse and query a document
               - all matter. There is also developer time. How long does it take a developer to
               learn a language and write code to process a document?
            </div>
            <div class="para e57">Sometimes speed in the small doesn’t mean speed in the large. The story of the
               Tortoise and the Hare can provide good reflection on this. As a practical example,
               imagine a document which is very fast to load into a programming language but the
               data format produced doesn’t lend itself for some use cases so extra processing,
               internal transformations to other models or use of complex and slow libraries may
               be
               required to access the document. For example it is common practice in JSON to embed
               HTML snippets as strings. If you want to search, combine or reformat them you may
               then have to construct an HTML document and parse it with an HTML parser to produce
               an object model which useful. The leanness of the original markup is lost in the
               overhead of having to perform multiple layers of parsing. 
            </div>
         </div><a name="LooksMatterANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e58">
            <div class="title e59">Looks Matter</div>
            <div class="para e60">Fat is generally considered "Ugly". A "Fat Markup" often implies an ugly one. If a
               document format is so ugly you can't stand looking it, you will try to avoid
               it.
            </div>
            <div class="para e61">Fortunately "Beauty is in the eyes of the Beholder". This is true in markup as
               well as the humanities. As time, exposure, and fashion change so can the subjective
               beauty of a markup format.
            </div>
         </div><a name="What'sitallmean?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e62">
            <div class="title e63">What's it all mean?</div>
            <div class="para e64">Sweeping statements of technologies like "Fat", "Slow", "Bloated" have  imprecise
               meaning. Worse they are often chosen to pull in emotional associations which may not
               apply to
               the specific cases. So even if it were considered true, what does it mean by saying
               "XML Is Fat"? I suggest it means very little, actually of negative usefulness. A
               markup itself is not used in isolation; it is used in the context of complex
               work-flows including editing, distribution and processing. So what should one do to
               characterize a Markup Language in a meaningful and useful way? 
            </div>
            <div class="para e65">I suggest a path lies in defining tests that measure specific use cases and
               provide reproducible metrics. These metrics can be used to get a better
               understanding of the performance of markup in a meaningful way.
            </div>
            <div class="para e66">In short, An Experiment.</div>
         </div>
      </div><a name="TheExperimentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e67">
         <div class="title e68">The Experiment</div>
         <div class="para e69">I designed an experiment to attempt to quantify some of the attributes attributed
            to
            "Fat Markup". In particular I focused on what is generally considered an already
            answered question in particular because I would like to validate that the "common
            wisdom" is in fact based on fact, and if so or not, to what degree and in what exact
            cases. The Experiment focuses on performance of JSON and XML in the use case of being
            delivered by a standard web Server and being parsed and queried in a Browser.
            Furthermore, mobile devices are becoming vastly more prevalent then in the recent
            past
            and little research addresses Mobile Browsers so I attempt to include them as much
            as
            possible in the tested scenarios.
         </div>
         <div class="para e70">The Experiment I developed attempts to test the following attributes of XML and JSON
            processing.
         </div><a name="MultipleDocumentCorpusesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e71">
            <div class="title e72">Multiple Document Corpuses</div>
            <div class="para e73">Most of the past publications I have found focus on a single corpus of documents and
               usually attempt to derive a single metric.
               These are often very artificial, focused on a single domain or structurally similar.
               For this experiment I take 6 very different documents and a baseline to attempt to
               cover a range of document uses 'in the wild'.
            </div>
            <div class="para e74">Subsets of larger corpus and duplication of smaller datasets were chosen so the
               resultant XML and JSON sizes ranged from 100 KB to 1 MB. These limits were chosen
               so
               the size was large enough to take noticeable time to load, parse and query but not
               so
               large as to break most reasonable browsers even on mobile devices.
            </div>
            <div class="para e75">The Document corpus used is as follows</div>
            <div class="itemizedlist e76">
               <div class="listitem e77">
                  <div class="para e78">base</div>
                  <div class="para e79">This is a very basic baseline document. It consists of a root object and a
                     child object with 3 properties. This baseline is used to sanity check the
                     test to make sure proper counting of size and nodes could be easily manually
                     validated.
                  </div>
               </div>
               <div class="listitem e80">
                  <div class="para e81">books</div>
                  <div class="para e82">This is an expanded sample of the BOOKS sample distributed with Saxon 
                     <div class="xref e83" linkend="Saxon"></div>. It
                     contains 600 book items, with 300 categories.
                  </div>
               </div>
               <div class="listitem e84">
                  <div class="para e85">epa</div>
                  <div class="para e86">A portion of the EPA  Geospatial  data at 
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e87" xlink:actuate="onRequest" xlink:href="http://www.epa.gov/enviro/geo_data.html" xlink:show="new" xlink:type="simple">http://www.epa.gov/enviro/geo_data.html</div> containing a collection
                     of 100 FacilitySite records.
                  </div>
               </div>
               <div class="listitem e88">
                  <div class="para e89">ndc</div>
                  <div class="para e90">A subset of the National Drug Code Directory at 
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e91" xlink:actuate="onRequest" xlink:href="http://www.fda.gov/drugs/informationondrugs/ucm142438.htm" xlink:show="new" xlink:type="simple">http://www.fda.gov/drugs/informationondrugs/ucm142438.htm</div>
                     containing a collection of 1000 FORMULATRION records.
                  </div>
               </div>
               <div class="listitem e92">
                  <div class="para e93">snomed</div>
                  <div class="para e94">A subset of the SNOMED concept database from 
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e95" xlink:actuate="onRequest" xlink:href="http://www.nlm.nih.gov/research/umls/Snomed/snomed_main.html" xlink:show="new" xlink:type="simple">http://www.nlm.nih.gov/research/umls/Snomed/snomed_main.html</div>
                     containing a collection of 100 SNOMED concept records.
                  </div>
               </div>
               <div class="listitem e96">
                  <div class="para e97">spl</div>
                  <div class="para e98">A single SPL document from the FDA as provided by DailyMed, a website
                     run by the National Institute of Health 
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e99" xlink:actuate="onRequest" xlink:href="http://dailymed.nlm.nih.gov/dailymed/downloadLabels.cfm" xlink:show="new" xlink:type="simple">http://dailymed.nlm.nih.gov/dailymed/downloadLabels.cfm</div>
                     
                  </div>
               </div>
               <div class="listitem e100">
                  <div class="para e101">twitter</div>
                  <div class="para e102">A collection of 1000 random tweets from a search of Super Bowl and
                     advertiser terms.   Identifying data from the collection was anonymized by
                     randomizing the user names and ID's.
                  </div>
               </div>
            </div>
         </div><a name="DocumentSizeandshapeANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e103">
            <div class="title e104">Document Size and shape</div>
            <div class="para e105">Most research I have found makes the incorrect assumption that there is a single
               representation of a document in a particular markup. I take a different approach.
               Starting with seven (7) different documents I produce 2 variants in JSON and 3
               variants in XML that all represent the same abstract document. These documents span
               several data styles including simple tabular, highly structured and document format.
               Some of the corpus is synthetic and some taken from real world data. In addition I
               test the support for HTTP gzip compression on these documents.
            </div><a name="JSONFormatsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e106">
               <div class="title e107">JSON Formats</div>
               <div class="para e108">For JSON documents I produced 2 variants. </div>
               <div class="para e109">One variant similar to the default XML to JSON transformation from json.org (
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e110" xlink:actuate="onRequest" xlink:href="http://www.json.org/java/index.html" xlink:show="new" xlink:type="simple">http://www.json.org/java/index.html</div>). This variant, while fully
                  expressive is generally not what a JSON developer would expect. However, it is
                  what a naive XML to JSON transformation may produce.
               </div>
               <div class="para e111">The second JSON variant is a custom transformation informed by the specific
                  data structures and is close to what a JSON programmer might expect from a JSON
                  format.
               </div>
               <div class="para e112">In both cases extraneously white-spaces are removed.</div><a name="JSONExamplesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e113">
                  <div class="title e114">JSON Examples</div><a name="Twitter1FullANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e115">
                     <div class="title e116">Twitter 1 Full</div>
                     <div class="para e117">The following is an example of a single JSON object in the twiter-1full.json.  This
                        is representative of a naive conversion from XML using code similar to that at json.org.
                        Whitespace, newlines and indentation was added for presentation only; it does not
                        exist in the actual document.
                     </div>
                     <div class="figure e118" xml:id="Twitter1">
                        <div class="title e119">Twitter 1 full example</div>
                        <div class="para e120">
                           
                           <div class="code e121">
                              
                              {
                              "status": {
                              "_attributes": {
                              "id": "303239543170138114"
                              },
                              "_children": [
                              "\n      ",
                              {
                              "created-at": {
                              "_children": [
                              "2013-02-17T15:28:35"
                              ]
                              }
                              },
                              "\n      ",
                              {
                              "user": {
                              "_attributes": {
                              "created-at": "2012-05-30T01:40:04",
                              "description": "No regrets im blessed to say the old me dead and gone away",
                              "favorites-count": "1079",
                              "id": "6674089274671724277",
                              "lang": "en",
                              "name": "AqmtidAkSesSZ",
                              "screen-name": "ITQMiAqmti"
                              },
                              "_children": [
                              "\n         ",
                              {
                              "location": {
                              "_children": [
                              "Hartselle "
                              ]
                              }
                              },
                              "\n      "
                              ]
                              }
                              },
                              "\n      ",
                              {
                              "hash-tags": {
                              "_children": [
                              "\n         ",
                              {
                              "hash-tag": {
                              "_attributes": {
                              "start": "65",
                              "end": "78"
                              },
                              "_children": [
                              "coolranchdlt"
                              ]
                              }
                              },
                              "\n      "
                              ]
                              }
                              },
                              "\n      ",
                              {
                              "source": {
                              "_children": [
                              "&amp;lt;a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\"&amp;gt;Twitter for
                              iPhone&amp;lt;/a&amp;gt;"
                              ]
                              }
                              },
                              "\n      ",
                              {
                              "text": {
                              "_children": [
                              "Taco Bell has cooler ranch Doritos tacos my life just got better #coolranchdlt"
                              ]
                              }
                              },
                              "\n      ",
                              {
                              "url-entities": {}
                              },
                              "\n      ",
                              {
                              "user-mention-entities": {}
                              },
                              "\n   "
                              ]
                              }
                              
                              
                              
                           </div>
                        </div>
                     </div>
                     <div class="para e122">This is an example of the same record represented in a format that a
                        native JSON developer may expect. Whitespace, newlines and indentation
                        was added for presentation only; it does not exist in the actual
                        document.
                     </div>
                     <div class="figure e123" xml:id="Twitter2">
                        <div class="title e124">Twitter 2 custom example</div>
                        <div class="para e125">
                           
                           
                           <div class="code e126">
                              
                              {
                              "status": {
                              "id": "303239543170138114",
                              "created-at": "2013-02-17T15:28:35",
                              "user": {
                              "created-at": "2012-05-30T01:40:04",
                              "description": "No regrets im blessed to say the old me dead and gone away",
                              "favorites-count": "1079",
                              "id": "6674089274671724277",
                              "lang": "en",
                              "name": "AqmtidAkSesSZ",
                              "screen-name": "ITQMiAqmti",
                              "location": "Hartselle "
                              },
                              "hash-tags": {
                              "hash-tag": [
                              {
                              "start": "65",
                              "end": "78",
                              "_value": "coolranchdlt"
                              }
                              ]
                              },
                              "source": "&amp;lt;a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\"&amp;gt;Twitter
                              for iPhone&amp;lt;/a&amp;gt;",
                              "text": "Taco Bell has cooler ranch Doritos tacos my life just got better #coolranchdlt",
                              "url-entities": "",
                              "user-mention-entities": ""
                              }
                              },
                              
                              
                              
                              
                              
                           </div>
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div><a name="XMLFormatsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e127">
               <div class="title e128">XML Formats</div>
               <div class="para e129">For the first format I used the "native" XML format (if the document
                  originated as XML) or a naive transformation from the object model to
                  XML.
               </div>
               <div class="para e130">For the second format I took the first format and simply removed boundary and
                  ignorable whitespace
               </div>
               <div class="para e131">For the third XML format I transformed the XML into an attribute centric
                  format. This was accomplished by taking all XML elements which contained only
                  text content, no attributes, and is not repeating and transformed that element
                  into an attribute. 
               </div><a name="XMLExamplesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e132">
                  <div class="title e133">XML Examples</div>
                  <div class="para e134">What follows are 3 examples of the same twitter record as used for the XML
                     documents.
                  </div>
                  <div class="figure e135" xml:id="TwitterXML1">
                     <div class="title e136">XML 1 example - base xml with whitespace and indentation</div>
                     <div class="para e137">
                        
                        
                        <div class="code e138">
                           
                           
                           &lt;status id="303239543170138114"&gt;
                           &lt;created-at&gt;2013-02-17T15:28:35&lt;/created-at&gt;
                           &lt;user created-at="2012-05-30T01:40:04" description="No regrets im blessed to say the
                           old me dead and gone away" favorites-count="1079" id="6674089274671724277" lang="en"
                           name="AqmtidAkSesSZ" screen-name="ITQMiAqmti"&gt;
                           &lt;location&gt;Hartselle &lt;/location&gt;
                           &lt;/user&gt;
                           &lt;hash-tags&gt;
                           &lt;hash-tag start="65" end="78"&gt;coolranchdlt&lt;/hash-tag&gt;
                           &lt;/hash-tags&gt;
                           &lt;source&gt;&amp;lt;a href="http://twitter.com/download/iphone" rel="nofollow"&amp;gt;Twitter
                           for iPhone&amp;lt;/a&amp;gt;&lt;/source&gt;
                           &lt;text&gt;Taco Bell has cooler ranch Doritos tacos my life just got better #coolranchdlt&lt;/text&gt;
                           &lt;url-entities/&gt;
                           &lt;user-mention-entities/&gt;
                           &lt;/status&gt;
                           
                           
                        </div> 
                     </div>
                  </div>
                  <div class="figure e139" xml:id="TwitterXML2">
                     <div class="title e140">XML 2 example - All whitespace and indentation removed</div>
                     <div class="para e141">
                        
                        <div class="code e142">
                           
                           &lt;status id="303239543170138114"&gt;&lt;created-at&gt;2013-02-17T15:28:35&lt;/created-at&gt;&lt;user
                           created-at="2012-05-30T01:40:04" description="No regrets im blessed to say the old
                           me dead and gone away" favorites-count="1079" id="6674089274671724277" lang="en" name="AqmtidAkSesSZ"
                           screen-name="ITQMiAqmti"&gt;&lt;location&gt;Hartselle &lt;/location&gt;&lt;/user&gt;&lt;hash-tags&gt;&lt;hash-tag
                           start="65" end="78"&gt;coolranchdlt&lt;/hash-tag&gt;&lt;/hash-tags&gt;&lt;source&gt;&amp;lt;a href="http://twitter.com/download/iphone"
                           rel="nofollow"&amp;gt;Twitter for iPhone&amp;lt;/a&amp;gt;&lt;/source&gt;&lt;text&gt;Taco Bell has cooler
                           ranch Doritos tacos my life just got better #coolranchdlt&lt;/text&gt;&lt;url-entities/&gt;&lt;user-mention-entities/&gt;&lt;/status&gt;
                           
                           
                           
                        </div>
                        
                     </div>
                  </div>
                  <div class="figure e143" xml:id="TwitterXML3">
                     <div class="title e144">XML 3 example - All non-repeating leaf elements pulled up into
                        attributes
                     </div>
                     <div class="para e145">
                        
                        <div class="code e146">
                           
                           &lt;status id="303239543170138114" created-at="2013-02-17T15:28:35" source="&amp;lt;a href=&amp;#34;http://twitter.com/download/iphone&amp;#34;
                           rel=&amp;#34;nofollow&amp;#34;&amp;gt;Twitter for iPhone&amp;lt;/a&amp;gt;" text="Taco Bell has cooler
                           ranch Doritos tacos my life just got better #coolranchdlt" url-entities="" user-mention-entities=""&gt;&lt;user
                           created-at="2012-05-30T01:40:04" description="No regrets im blessed to say the old
                           me dead and gone away" favorites-count="1079" id="6674089274671724277" lang="en" name="AqmtidAkSesSZ"
                           screen-name="ITQMiAqmti" location="Hartselle "/&gt;&lt;hash-tags&gt;&lt;hash-tag start="65" end="78"&gt;coolranchdlt&lt;/hash-tag&gt;&lt;/hash-tags&gt;&lt;/status&gt;&lt;/twitter&gt;
                           
                           
                           
                        </div>
                        
                     </div>
                  </div>
               </div>
            </div><a name="SizesofcorpusANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e147">
               <div class="title e148">Sizes of corpus</div>
               <div class="para e149"> The following table lists the corpus documents, types, and sizes (raw and
                  compressed). This data is stored as a resource (index) and is available to the
                  client on start-up. 
                  <div class="table e150" xml:id="FileSizeTable">
                     <div class="caption e151">
                        <div class="para e152">Corpus documents with sizes</div>
                     </div>
                     <div class="tr e153">
                        <div class="th e154">group</div>
                        <div class="th e155">type</div>
                        <div class="th e156">name</div>
                        <div class="th e157">size</div>
                        <div class="th e158">compress-size</div>
                     </div>
                     <div class="tr e159">
                        <div class="td e160">base</div>
                        <div class="td e161">json</div>
                        <div class="td e162">base-custom.json</div>
                        <div class="td e163" align="right">56</div>
                        <div class="td e164" align="right">83</div>
                     </div>
                     <div class="tr e165">
                        <div class="td e166">base</div>
                        <div class="td e167">json</div>
                        <div class="td e168">base-full.json</div>
                        <div class="td e169" align="right">93</div>
                        <div class="td e170" align="right">107</div>
                     </div>
                     <div class="tr e171">
                        <div class="td e172">base</div>
                        <div class="td e173">xml</div>
                        <div class="td e174">base.xml</div>
                        <div class="td e175" align="right">45</div>
                        <div class="td e176" align="right">69</div>
                     </div>
                     <div class="tr e177">
                        <div class="td e178">books</div>
                        <div class="td e179">json</div>
                        <div class="td e180">books1-custom.json</div>
                        <div class="td e181" align="right">204832</div>
                        <div class="td e182" align="right">1933</div>
                     </div>
                     <div class="tr e183">
                        <div class="td e184">books</div>
                        <div class="td e185">json</div>
                        <div class="td e186">books1-full.json</div>
                        <div class="td e187" align="right">438133</div>
                        <div class="td e188" align="right">3758</div>
                     </div>
                     <div class="tr e189">
                        <div class="td e190">books</div>
                        <div class="td e191">xml</div>
                        <div class="td e192">books1.xml</div>
                        <div class="td e193" align="right">256030</div>
                        <div class="td e194" align="right">2412</div>
                     </div>
                     <div class="tr e195">
                        <div class="td e196">books</div>
                        <div class="td e197">xml</div>
                        <div class="td e198">books2.xml</div>
                        <div class="td e199" align="right">226430</div>
                        <div class="td e200" align="right">2169</div>
                     </div>
                     <div class="tr e201">
                        <div class="td e202">books</div>
                        <div class="td e203">xml</div>
                        <div class="td e204">books3.xml</div>
                        <div class="td e205" align="right">186230</div>
                        <div class="td e206" align="right">1819</div>
                     </div>
                     <div class="tr e207">
                        <div class="td e208">epa</div>
                        <div class="td e209">json</div>
                        <div class="td e210">epa1-custom.json</div>
                        <div class="td e211" align="right">140914</div>
                        <div class="td e212" align="right">13024</div>
                     </div>
                     <div class="tr e213">
                        <div class="td e214">epa</div>
                        <div class="td e215">json</div>
                        <div class="td e216">epa1-full.json</div>
                        <div class="td e217" align="right">199025</div>
                        <div class="td e218" align="right">14862</div>
                     </div>
                     <div class="tr e219">
                        <div class="td e220">epa</div>
                        <div class="td e221">xml</div>
                        <div class="td e222">epa1.xml</div>
                        <div class="td e223" align="right">195201</div>
                        <div class="td e224" align="right">14591</div>
                     </div>
                     <div class="tr e225">
                        <div class="td e226">epa</div>
                        <div class="td e227">xml</div>
                        <div class="td e228">epa2.xml</div>
                        <div class="td e229" align="right">192449</div>
                        <div class="td e230" align="right">14528</div>
                     </div>
                     <div class="tr e231">
                        <div class="td e232">epa</div>
                        <div class="td e233">xml</div>
                        <div class="td e234">epa3.xml</div>
                        <div class="td e235" align="right">136813</div>
                        <div class="td e236" align="right">12729</div>
                     </div>
                     <div class="tr e237">
                        <div class="td e238">ndc</div>
                        <div class="td e239">json</div>
                        <div class="td e240">ndc1-custom.json</div>
                        <div class="td e241" align="right">95093</div>
                        <div class="td e242" align="right">8503</div>
                     </div>
                     <div class="tr e243">
                        <div class="td e244">ndc</div>
                        <div class="td e245">json</div>
                        <div class="td e246">ndc1-full.json</div>
                        <div class="td e247" align="right">235603</div>
                        <div class="td e248" align="right">9621</div>
                     </div>
                     <div class="tr e249">
                        <div class="td e250">ndc</div>
                        <div class="td e251">xml</div>
                        <div class="td e252">ndc1.xml</div>
                        <div class="td e253" align="right">176157</div>
                        <div class="td e254" align="right">9140</div>
                     </div>
                     <div class="tr e255">
                        <div class="td e256">ndc</div>
                        <div class="td e257">xml</div>
                        <div class="td e258">ndc2.xml</div>
                        <div class="td e259" align="right">153157</div>
                        <div class="td e260" align="right">8952</div>
                     </div>
                     <div class="tr e261">
                        <div class="td e262">ndc</div>
                        <div class="td e263">xml</div>
                        <div class="td e264">ndc3.xml</div>
                        <div class="td e265" align="right">96087</div>
                        <div class="td e266" align="right">8295</div>
                     </div>
                     <div class="tr e267">
                        <div class="td e268">snomed</div>
                        <div class="td e269">json</div>
                        <div class="td e270">snomed1-custom.json</div>
                        <div class="td e271" align="right">230371</div>
                        <div class="td e272" align="right">22665</div>
                     </div>
                     <div class="tr e273">
                        <div class="td e274">snomed</div>
                        <div class="td e275">json</div>
                        <div class="td e276">snomed1-full.json</div>
                        <div class="td e277" align="right">501577</div>
                        <div class="td e278" align="right">25757</div>
                     </div>
                     <div class="tr e279">
                        <div class="td e280">snomed</div>
                        <div class="td e281">xml</div>
                        <div class="td e282">snomed1.xml</div>
                        <div class="td e283" align="right">405294</div>
                        <div class="td e284" align="right">24484</div>
                     </div>
                     <div class="tr e285">
                        <div class="td e286">snomed</div>
                        <div class="td e287">xml</div>
                        <div class="td e288">snomed2.xml</div>
                        <div class="td e289" align="right">355195</div>
                        <div class="td e290" align="right">23853</div>
                     </div>
                     <div class="tr e291">
                        <div class="td e292">snomed</div>
                        <div class="td e293">xml</div>
                        <div class="td e294">snomed3.xml</div>
                        <div class="td e295" align="right">221409</div>
                        <div class="td e296" align="right">22237</div>
                     </div>
                     <div class="tr e297">
                        <div class="td e298">spl</div>
                        <div class="td e299">json</div>
                        <div class="td e300">spl1-custom.json</div>
                        <div class="td e301" align="right">55762</div>
                        <div class="td e302" align="right">10857</div>
                     </div>
                     <div class="tr e303">
                        <div class="td e304">spl</div>
                        <div class="td e305">json</div>
                        <div class="td e306">spl1-full.json</div>
                        <div class="td e307" align="right">135948</div>
                        <div class="td e308" align="right">12398</div>
                     </div>
                     <div class="tr e309">
                        <div class="td e310">spl</div>
                        <div class="td e311">xml</div>
                        <div class="td e312">spl1.xml</div>
                        <div class="td e313" align="right">99571</div>
                        <div class="td e314" align="right">11974</div>
                     </div>
                     <div class="tr e315">
                        <div class="td e316">spl</div>
                        <div class="td e317">xml</div>
                        <div class="td e318">spl2.xml</div>
                        <div class="td e319" align="right">97965</div>
                        <div class="td e320" align="right">11927</div>
                     </div>
                     <div class="tr e321">
                        <div class="td e322">spl</div>
                        <div class="td e323">xml</div>
                        <div class="td e324">spl3.xml</div>
                        <div class="td e325" align="right">87755</div>
                        <div class="td e326" align="right">11262</div>
                     </div>
                     <div class="tr e327">
                        <div class="td e328">twitter</div>
                        <div class="td e329">json</div>
                        <div class="td e330">twitter1-custom.json</div>
                        <div class="td e331" align="right">715005</div>
                        <div class="td e332" align="right">196939</div>
                     </div>
                     <div class="tr e333">
                        <div class="td e334">twitter</div>
                        <div class="td e335">xml</div>
                        <div class="td e336">twitter1-full.json</div>
                        <div class="td e337" align="right">1056212</div>
                        <div class="td e338" align="right">207340</div>
                     </div>
                     <div class="tr e339">
                        <div class="td e340">twitter</div>
                        <div class="td e341">xml</div>
                        <div class="td e342">twitter1.xml</div>
                        <div class="td e343" align="right">809469</div>
                        <div class="td e344" align="right">198325</div>
                     </div>
                     <div class="tr e345">
                        <div class="td e346">twitter</div>
                        <div class="td e347">xml</div>
                        <div class="td e348">twitter2.xml</div>
                        <div class="td e349" align="right">718016</div>
                        <div class="td e350" align="right">195197</div>
                     </div>
                     <div class="tr e351">
                        <div class="td e352">twitter</div>
                        <div class="td e353">xml</div>
                        <div class="td e354">twitter3.xml</div>
                        <div class="td e355" align="right">700412</div>
                        <div class="td e356" align="right">194971</div>
                     </div>
                  </div>
                  
               </div>
            </div>
         </div><a name="MethodologyandArchitectureANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e357">
            <div class="title e358">Methodology and Architecture</div>
            <div class="para e359">The experiment contains a Server, Browser, and Analysis components. The components
               were created using standard open source software and as much as possible designed
               to
               focus on the attributes being tested and eliminating introduction of bias from
               components which are not related to the test goals.
            </div><a name="ServerANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e360">
               <div class="title e361">Server</div>
               <div class="para e362">The Server component provides two roles. It serves the source data used by the
                  Client and collects the results submitted by the client.
               </div>
               <div class="para e363">The Server software used is Apache HTTP server
                  <div class="xref e364" linkend="Apache"></div>. Client
                  documents (HTML, CSS, JavaScript and corpus data) are served as static resources
                  to minimize server side variations.  The server is running on an Amazon EC2
                  instance in Virginia, US.
               </div>
               <div class="para e365">Results from the client are sent back to the server via an HTTP POST. The
                  server runs a CGI script which formats the results and queues them to a message queue.
                  <div class="popupBox e366">
                     <div class="popupLabel" onmouseover="$('#d1e668').show('1000');" onmouseout="$('#d1e668').hide('1000');">[ footnote ]</div>
                     <div id="d1e668" style="display: none;">
                        <div class="footnote">
                           <div class="para e367">Amazon SQS service was used for the messaging queue 
                              <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e368" xlink:actuate="onRequest" xlink:href="http://aws.amazon.com/sqs/" xlink:show="new" xlink:type="simple">http://aws.amazon.com/sqs/</div>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e369">A data collection script periodically polls the queue for new results and when
                  it receives one enriches the results by expanding the UserAgent string into
                  sub-components for easier identification of browser and OS versions.
                  <div class="popupBox e370">
                     <div class="popupLabel" onmouseover="$('#d1e675').show('1000');" onmouseout="$('#d1e675').hide('1000');">[ footnote ]</div>
                     <div id="d1e675" style="display: none;">
                        <div class="footnote">
                           <div class="para e371">The service "user agent info" 
                              <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e372" xlink:actuate="onRequest" xlink:href="http://user-agent-string.info/" xlink:show="new" xlink:type="simple">http://user-agent-string.info/</div> was used for this enrichment.
                           </div>
                        </div>
                     </div>
                  </div>   The
                  results are then stored locally as an XML file and also published to a database
                  for future analysis.
               </div>
               <div class="para e373">The mechanism used to report results is independent of the tests themselves,
                  do not affect the test data and could be replaced by other analogous
                  methods.
               </div>
               <div class="para e374">The only Server component that could affect the tests is the serving of static
                  JSON and XML corpus documents. These are exposed as static resources with HTTP
                  GET, with and without gzip compression enabled.
               </div>
            </div><a name="ClientANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e375">
               <div class="title e376">Client</div>
               <div class="para e377">The Client is a Browser based JavaScript application. The GUI components of
                  the client were developed using GWT 
                  <div class="xref e378" linkend="GWT"></div>. The code which performs the measured parts
                  of the tests are hand written JavaScript, with the exception that jQuery
                  <div class="xref e379" linkend="JQUERY"></div> is used
                  for part of the test as indicated.
               </div>
               <div class="para e380">
                  
                  <div class="figure e381" xml:id="ClientApp">
                     <div class="title e382">Client Application</div>
                     <div class="mediaobject e383">
                        <div class="imageobject e384">
                           <div class="metaBox e385"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e702').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e702" class="metaSource" style="display:none;">                
                                 &lt;imagedata<span class="metaAttribute">class='e385'
                                    </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-001.png'
                                    </span>
                                 &gt;
                                 
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e386">On start-up the client requests an index document and shows a list of all files
                  in the corpus, their types and sizes. The user can choose to run tests
                  individually or as a whole.
               </div>
               <div class="para e387">There is one button which when tapped runs all tests then submits the results
                  to the server via an HTTP POST. The time it takes to load, initialize and update
                  the GUI, and to send the results is not included in the results.
               </div>
               <div class="para e388">Publicly available data available to the client program (browser) is also
                  included in the results. This data is used to identify the browser and OS of the
                  client.
               </div><a name="TestsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e389">
                  <div class="title e390">Tests</div>
                  <div class="para e391">When the "Run All Tests" button is tapped the following procedure is run.
                     For each of the files in the index the following is performed and
                     individually timed. 
                     <div class="itemizedlist e392">
                        <div class="listitem e393">
                           <div class="para e394">The data file is fetched from the server in raw (not
                              compressed) format and stored as a string. Where possible the
                              actual Content-Length is used to update the data size metric for
                              this file.
                           </div>
                        </div>
                        <div class="listitem e395">
                           <div class="para e396">The data file is fetched from the server in compressed (gzip)
                              format and uncompressed and stored as a string. Where possible
                              the actual Content-Length is used to update the compressed size
                              metric for this file.
                           </div>
                        </div>
                        <div class="listitem e397">
                           <div class="para e398">The data is parsed into an in memory object. For JSON files
                              this uses the JavaScript eval() method. For XML files standard
                              browser methods are used to parse the XML file.
                           </div>
                        </div>
                        <div class="listitem e399">
                           <div class="para e400">The object is "Queried". To simulate a consistent query across
                              the variety of the corpus all nodes of the document are
                              recursively descended and counted. The number of nodes visited
                              is recorded along with the elapsed time.
                           </div>
                        </div>
                        <div class="listitem e401">
                           <div class="para e402">The data is again parsed into an in memory object. For both
                              JSON and XML files, jQuery is used to parse the document and
                              produce a jQuery object.
                           </div>
                        </div>
                        <div class="listitem e403">
                           <div class="para e404">The object is "Queried". To simulate a consistent query across
                              the variety of the corpus all nodes of the jQuery document are
                              recursively descended and evaluated. The number of nodes visited
                              is recorded along with the elapsed time.
                           </div>
                        </div>
                     </div>
                     
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ResultsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e405">
         <div class="title e406">Results</div><a name="TestCoverageANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e407">
            <div class="title e408">Test Coverage</div>
            <div class="para e409">In addition to a variety of data sources and formats, the experiment attempts to
               cover a range of devices, operating systems, browsers and networks. This is achieved
               by "crowd sourcing". The URL to the test was made public and distributed to a range
               of mailing lists and social media sites including Amazon Mechanical Turk
               <div class="xref e410" linkend="TURK"></div>. Ideally
               this experiment can continue for a long duration so that trends over time can be
               measured.
            </div>
            <div class="para e411">It is expected that performance varies considerably across devices, especially
               mobile devices, and prior research has largely ignored differences across
               devices.
            </div>
            <div class="para e412">Only the browser "User Agent" string is used to distinguish browsers, devices and
               operating systems. This makes some measurements impossible such as distinguishing
               between broadband, wifi, 3G, LTE and other networks.
            </div>
            <div class="para e413">However, even lacking some measurements and precision, seeing the range of
               performance across platforms is still educational and useful.
            </div>
            <div class="para e414">At the time of this paper approximately 1200 distinct successful tests results
               were collected.
            </div><a name="BrowserCoverageANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e415">
               <div class="title e416">Browser Coverage</div>
               <div class="para e417">
                  
                  
                  <div class="table e418">
                     <div class="tr e419">
                        <div class="th e420" colspan="1" rowspan="1">name</div>
                        <div class="th e421" colspan="1" rowspan="1">count</div>
                     </div>
                     <div class="tr e422">
                        <div class="td e423" colspan="1" rowspan="1">Chrome</div>
                        <div class="td e424" align="right" colspan="1" rowspan="1">423</div>
                     </div>
                     <div class="tr e425">
                        <div class="td e426" colspan="1" rowspan="1">Firefox</div>
                        <div class="td e427" align="right" colspan="1" rowspan="1">277</div>
                     </div>
                     <div class="tr e428">
                        <div class="td e429" colspan="1" rowspan="1">Mobile Safari</div>
                        <div class="td e430" align="right" colspan="1" rowspan="1">148</div>
                     </div>
                     <div class="tr e431">
                        <div class="td e432" colspan="1" rowspan="1">IE</div>
                        <div class="td e433" align="right" colspan="1" rowspan="1">75</div>
                     </div>
                     <div class="tr e434">
                        <div class="td e435" colspan="1" rowspan="1">Android Webkit</div>
                        <div class="td e436" align="right" colspan="1" rowspan="1">75</div>
                     </div>
                     <div class="tr e437">
                        <div class="td e438" colspan="1" rowspan="1">Safari</div>
                        <div class="td e439" align="right" colspan="1" rowspan="1">72</div>
                     </div>
                     <div class="tr e440">
                        <div class="td e441" colspan="1" rowspan="1">Chrome Mobile</div>
                        <div class="td e442" align="right" colspan="1" rowspan="1">57</div>
                     </div>
                     <div class="tr e443">
                        <div class="td e444" colspan="1" rowspan="1">Opera</div>
                        <div class="td e445" align="right" colspan="1" rowspan="1">15</div>
                     </div>
                     <div class="tr e446">
                        <div class="td e447" colspan="1" rowspan="1">Chromium</div>
                        <div class="td e448" align="right" colspan="1" rowspan="1">7</div>
                     </div>
                     <div class="tr e449">
                        <div class="td e450" colspan="1" rowspan="1">Mobile Firefox</div>
                        <div class="td e451" align="right" colspan="1" rowspan="1">4</div>
                     </div>
                     <div class="tr e452">
                        <div class="td e453" colspan="1" rowspan="1">IceWeasel</div>
                        <div class="td e454" align="right" colspan="1" rowspan="1">4</div>
                     </div>
                     <div class="tr e455">
                        <div class="td e456" colspan="1" rowspan="1">IE Mobile</div>
                        <div class="td e457" align="right" colspan="1" rowspan="1">3</div>
                     </div>
                     <div class="tr e458">
                        <div class="td e459" colspan="1" rowspan="1">Opera Mobile</div>
                        <div class="td e460" align="right" colspan="1" rowspan="1">3</div>
                     </div>
                     <div class="tr e461">
                        <div class="td e462" colspan="1" rowspan="1">Avant Browser</div>
                        <div class="td e463" align="right" colspan="1" rowspan="1">2</div>
                     </div>
                     <div class="tr e464">
                        <div class="td e465" colspan="1" rowspan="1">SeaMonkey</div>
                        <div class="td e466" align="right" colspan="1" rowspan="1">2</div>
                     </div>
                     <div class="tr e467">
                        <div class="td e468" colspan="1" rowspan="1">Epiphany</div>
                        <div class="td e469" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e470">
                        <div class="td e471" colspan="1" rowspan="1">Netscape Navigator</div>
                        <div class="td e472" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e473">
                        <div class="td e474" colspan="1" rowspan="1">Rekonq</div>
                        <div class="td e475" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e476">
                        <div class="td e477" colspan="1" rowspan="1">Konqueror</div>
                        <div class="td e478" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e479">
                  
                  <div class="figure e480" xml:id="Browsers">
                     <div class="title e481">Browsers Covered</div>
                     <div class="mediaobject e482">
                        <div class="imageobject e483">
                           <div class="metaBox e484"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e868').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e868" class="metaSource" style="display:none;">                
                                 &lt;imagedata<span class="metaAttribute">class='e484'
                                    </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-002.png'
                                    </span>
                                 &gt;
                                 
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="caption e485">
                        <div class="para e486">Number of tests suites run on specific browsers</div>
                     </div>
                  </div>
                  
               </div>
            </div><a name="OperatingSystemCoverageANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e487">
               <div class="title e488">Operating System Coverage</div>
               <div class="para e489">
                  
                  <div class="table e490">
                     <div class="tr e491">
                        <div class="th e492" colspan="1" rowspan="1">OS</div>
                        <div class="th e493" colspan="1" rowspan="1">count</div>
                     </div>
                     <div class="tr e494">
                        <div class="td e495" colspan="1" rowspan="1">Windows 7</div>
                        <div class="td e496" align="right" colspan="1" rowspan="1">402</div>
                     </div>
                     <div class="tr e497">
                        <div class="td e498" colspan="1" rowspan="1">iOS 6</div>
                        <div class="td e499" align="right" colspan="1" rowspan="1">138</div>
                     </div>
                     <div class="tr e500">
                        <div class="td e501" colspan="1" rowspan="1">OS X 10.8 Mountain Lion</div>
                        <div class="td e502" align="right" colspan="1" rowspan="1">136</div>
                     </div>
                     <div class="tr e503">
                        <div class="td e504" colspan="1" rowspan="1">Windows XP</div>
                        <div class="td e505" align="right" colspan="1" rowspan="1">70</div>
                     </div>
                     <div class="tr e506">
                        <div class="td e507" colspan="1" rowspan="1">Linux</div>
                        <div class="td e508" align="right" colspan="1" rowspan="1">69</div>
                     </div>
                     <div class="tr e509">
                        <div class="td e510" colspan="1" rowspan="1">Android 4.1.x Jelly Bean</div>
                        <div class="td e511" align="right" colspan="1" rowspan="1">48</div>
                     </div>
                     <div class="tr e512">
                        <div class="td e513" colspan="1" rowspan="1">Linux (Ubuntu)</div>
                        <div class="td e514" align="right" colspan="1" rowspan="1">46</div>
                     </div>
                     <div class="tr e515">
                        <div class="td e516" colspan="1" rowspan="1">Android 4.2 Jelly Bean</div>
                        <div class="td e517" align="right" colspan="1" rowspan="1">39</div>
                     </div>
                     <div class="tr e518">
                        <div class="td e519" colspan="1" rowspan="1">Windows 8</div>
                        <div class="td e520" align="right" colspan="1" rowspan="1">38</div>
                     </div>
                     <div class="tr e521">
                        <div class="td e522" colspan="1" rowspan="1">OS X 10.7 Lion</div>
                        <div class="td e523" align="right" colspan="1" rowspan="1">36</div>
                     </div>
                     <div class="tr e524">
                        <div class="td e525" colspan="1" rowspan="1">OS X 10.6 Snow Leopard</div>
                        <div class="td e526" align="right" colspan="1" rowspan="1">33</div>
                     </div>
                     <div class="tr e527">
                        <div class="td e528" colspan="1" rowspan="1">Android 4.0.x Ice Cream Sandwich</div>
                        <div class="td e529" align="right" colspan="1" rowspan="1">32</div>
                     </div>
                     <div class="tr e530">
                        <div class="td e531" colspan="1" rowspan="1">iOS 5</div>
                        <div class="td e532" align="right" colspan="1" rowspan="1">20</div>
                     </div>
                     <div class="tr e533">
                        <div class="td e534" colspan="1" rowspan="1">Android 2.3.x Gingerbread</div>
                        <div class="td e535" align="right" colspan="1" rowspan="1">18</div>
                     </div>
                     <div class="tr e536">
                        <div class="td e537" colspan="1" rowspan="1">Windows Vista</div>
                        <div class="td e538" align="right" colspan="1" rowspan="1">17</div>
                     </div>
                     <div class="tr e539">
                        <div class="td e540" colspan="1" rowspan="1">Android</div>
                        <div class="td e541" align="right" colspan="1" rowspan="1">8</div>
                     </div>
                     <div class="tr e542">
                        <div class="td e543" colspan="1" rowspan="1">Android 2.2.x Froyo</div>
                        <div class="td e544" align="right" colspan="1" rowspan="1">5</div>
                     </div>
                     <div class="tr e545">
                        <div class="td e546" colspan="1" rowspan="1">FreeBSD</div>
                        <div class="td e547" align="right" colspan="1" rowspan="1">3</div>
                     </div>
                     <div class="tr e548">
                        <div class="td e549" colspan="1" rowspan="1">Windows Phone 8</div>
                        <div class="td e550" align="right" colspan="1" rowspan="1">3</div>
                     </div>
                     <div class="tr e551">
                        <div class="td e552" colspan="1" rowspan="1">Windows RT</div>
                        <div class="td e553" align="right" colspan="1" rowspan="1">2</div>
                     </div>
                     <div class="tr e554">
                        <div class="td e555" colspan="1" rowspan="1">OS X 10.5 Leopard</div>
                        <div class="td e556" align="right" colspan="1" rowspan="1">2</div>
                     </div>
                     <div class="tr e557">
                        <div class="td e558" colspan="1" rowspan="1">iOS</div>
                        <div class="td e559" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e560">
                        <div class="td e561" colspan="1" rowspan="1">Linux (CentOS)</div>
                        <div class="td e562" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e563">
                        <div class="td e564" colspan="1" rowspan="1">Linux (Fedora)</div>
                        <div class="td e565" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e566">
                        <div class="td e567" colspan="1" rowspan="1">iOS 7</div>
                        <div class="td e568" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e569">
                        <div class="td e570" colspan="1" rowspan="1">OS X</div>
                        <div class="td e571" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                     <div class="tr e572">
                        <div class="td e573" colspan="1" rowspan="1">Solaris</div>
                        <div class="td e574" align="right" colspan="1" rowspan="1">1</div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e575">
                  
                  <div class="figure e576" xml:id="OSs">
                     <div class="title e577">Operating Systems Covered</div>
                     <div class="mediaobject e578">
                        <div class="imageobject e579">
                           <div class="metaBox e580"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1029').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1029" class="metaSource" style="display:none;">                
                                 &lt;imagedata<span class="metaAttribute">class='e580'
                                    </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-003.png'
                                    </span>
                                 &gt;
                                 
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="caption e581">
                        <div class="para e582">Number of tests suites run on specific Operating Systems</div>
                     </div>
                  </div>
                  
               </div>
            </div>
         </div><a name="DataSizesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e583">
            <div class="title e584">Data Sizes</div>
            <div class="para e585">XML is inherently larger then than JSON. This is known as 'obviously true' due to
               several factors inherent to XML markup. 
               <div class="itemizedlist e586">
                  <div class="listitem e587">
                     <div class="para e588">The end tags of XML duplicate data in the start tags making the total
                        text longer.
                     </div>
                  </div>
                  <div class="listitem e589">
                     <div class="para e590">Namespaces, prefixes, entities, comments, PI's and other XML features
                        add bloat not present in JSON.
                     </div>
                  </div>
                  <div class="listitem e591">
                     <div class="para e592">JSON has a direct concise representation for arrays which XML does
                        not.
                     </div>
                  </div>
               </div> These are all reasonable presumptions, but how much do these things
               contribute to data sizes? In real use how much difference does it make? One of the
               features of modern markup is that we sacrifice some compactness in exchange for
               readability and usability.  If the most important goal was compact size we would be
               using specialized binary formats.   In any case let's look at the actual
               measurements from the corpus. For the most part size is a static feature of the data
               files themselves, although this can be affected somewhat by the transmission
               protocol. Experimentation has shown that overwhelmingly the static data size is very
               close to the HTTP transmitted size of anything but very tiny documents. HTTP does
               add a little variable overhead such as chunked encoding and headers, but this is
               very small. The gzip compression available in HTTP 1.1 has been shown to be equal
               in
               size to using the "gzip" command. For the purposes of Data Size we shall examine the
               static size of the documents on disk. All documents are stored in UTF-8 encoding as
               plain text files. 
            </div>
            <div class="para e593">As we can see from 
               <div class="xref e594" linkend="FileSizeFigure"></div> and 
               <div class="xref e595" linkend="FileSizeTable"></div>, for each data set the XML and JSON file size can vary
               significantly depending on the formatting choices used. However, if one carefully
               chooses a formatting style to minimize size then XML and JSON come very close with
               XML smaller in some cases and JSON in others. Looking at the compressed sizes of the
               files in 
               <div class="xref e596" linkend="FileSizeCompressFigure"></div> we can see that the file sizes are
               very close 
               <div class="emphasis e597" role="ital">regardless</div> of formatting style.
            </div>
            <div class="para e598">
               
               <div class="figure e599" xml:id="FileSizeFigure">
                  <div class="title e600">Corpus File Sizes </div>
                  <div class="mediaobject e601">
                     <div class="imageobject e602">
                        <div class="metaBox e603"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1068').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1068" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e603'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-004.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e604">
                     <div class="para e605">Compressed and uncompressed file sizes</div>
                  </div>
               </div>
               
            </div>
            <div class="para e606">
               
               <div class="figure e607" xml:id="FileSizeCompressFigure">
                  <div class="title e608">Compressed File Sizes </div>
                  <div class="mediaobject e609">
                     <div class="imageobject e610">
                        <div class="metaBox e611"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1080').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1080" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e611'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-005.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e612">
                     <div class="para e613">Compressed file sizes (excluding twitter data)</div>
                  </div>
               </div>
               
            </div>
         </div><a name="DataTransmissionSpeedANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e614">
            <div class="title e615">Data Transmission Speed</div>
            <div class="para e616">The predominant factors influencing data transmission speed are the size of the
               data transmitted and the network speed. In addition, processing speed of the client
               (browser) and server have some influence as well as packet losses and other internet
               related issues. Mobile networks generally have significantly higher latency so are
               more affected by packet loss and retransmission.
            </div>
            <div class="para e617">This experiment focuses on measuring end to end speeds of HTTP from server to
               browser using uncompressed and HTTP gzip compression across a range of devices and
               browsers. It does not attempt to examine the root causes of network bandwidth and
               traffic.
            </div>
            <div class="para e618">The range of devices and networks produces a large scatter of transmission speeds.
               While the trend is that uncompressed and compressed data are fairly linear with
               respect to bytes transferred there are a lot of outliers. Note that each mark
               represents the same base document requested uncompressed then compressed via HTTP.
               If network speed was identical for both then the marks would have x and y values
               equal, forming a tight line.  Rather we see significant amount of outliers.
            </div>
            <div class="para e619">Transmission Speed
               <div class="figure e620" xml:id="NetSpeed">
                  <div class="mediaobject e621">
                     <div class="imageobject e622">
                        <div class="metaBox e623"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1099').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1099" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e623'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-006.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e624">
                     <div class="para e625">Transmission time in bytes/sec for Compressed (x) vs Raw (y)</div>
                  </div>
               </div>
            </div>
         </div><a name="ParsingSpeedANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e626">
            <div class="title e627">Parsing Speed</div>
            <div class="para e628">So far we have dealt with markup agnostic metrics. It doesn’t take any more or less
               time to transfer the same number of JSON bytes as XML bytes. Parsing is a different
               matter. This experiment tests two variants of parsing for each JSON and XML. The
               first variant is to use standard low level JavaScript methods for parsing. The other
               variant is to use a common library (jQuery). The code for parsing was hand written
               JavaScript and corresponds to what seems "best practice" in web programming
               today.
            </div>
            <div class="figure e629" xml:id="jsonparse1">
               <div class="title e630">JSON Parsing using native JavaScript</div>
               <div class="programlisting e631" xml:space="preserve">          
                  eval('(' + responseString + ')');
                  
               </div>
            </div>
            <div class="figure e632" xml:id="jsonparse2">
               <div class="title e633">JSON Parsing using jQuery</div>
               <div class="programlisting e634" xml:space="preserve">	            
                  $wnd.jQuery.parseJSON( responseString );
                  
               </div>
            </div>
            <div class="figure e635" xml:id="xmlparse1">
               <div class="title e636">XML Parsing using native JavaScript</div>
               <div class="programlisting e637" xml:space="preserve">function getIEParser() {
                  try { return new ActiveXObject("Msxml2.DOMDocument"); } catch (e) { }
                  try { return new ActiveXObject("MSXML.DOMDocument"); } catch (e) { }
                  try { return new ActiveXObject("MSXML3.DOMDocument"); } catch (e) { }
                  try { return new ActiveXObject("Microsoft.XmlDom"); } catch (e) { }
                  try { return new ActiveXObject("Microsoft.DOMDocument"); } catch (e) { }
                  
                  throw new Error("XMLParserImplIE6.createDocumentImpl: Could not find appropriate version
                  of DOMDocument.");
                  };
                  if ($wnd.DOMParser){
                  parser=new DOMParser();
                  xmlDoc=parser.parseFromString(responseString,"text/xml");
                  }
                  else // Internet Explorer
                  {
                  xmlDoc=  getIEParser();
                  xmlDoc.async=false;
                  xmlDoc.loadXML(txt); 
                  }
                  return xmlDoc ;
                  
               </div>
            </div>
            <div class="figure e638" xml:id="xmlparse2">
               <div class="title e639">XML Parsing using jQuery</div>
               <div class="programlisting e640" xml:space="preserve">	            
                  $wnd.jQuery.parseXML( responseString );
                  
               </div>
            </div>
            <div class="para e641">
               
               <div class="figure e642" xml:id="JavascriptParse">
                  <div class="title e643">Parsing speed using JavaScript in seconds vs file size</div>
                  <div class="mediaobject e644">
                     <div class="imageobject e645">
                        <div class="metaBox e646"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1135').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1135" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e646'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-007.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e647">
                     <div class="para e648">Parses time in seconds for native JavaScript (y) vs size of raw
                        document in bytes (x).
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e649">
               
               <div class="figure e650" xml:id="JQueryParse">
                  <div class="title e651">Parsing speed using jQuery in seconds vs file size</div>
                  <div class="mediaobject e652">
                     <div class="imageobject e653">
                        <div class="metaBox e654"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1147').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1147" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e654'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-008.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e655">
                     <div class="para e656">Parses time in seconds for jQuery (y) vs size of raw document in bytes
                        (x).
                     </div>
                  </div>
               </div>
               
            </div>
         </div><a name="QuerySpeedANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e657">
            <div class="title e658">Query Speed</div>
            <div class="para e659">Testing query across markup languages and a diverse corpus is tricky to achieve
               without bias. For the purposes of this experiment I postulate that the purpose of
               loading the document (JSON or XML) is to use all of it's data in some form.
            </div>
            <div class="para e660">Therefore to simulate a fair "query" I perform a recursive decent of the parsed
               object's document model and count every node. There are certainly many other equally
               good definitions of "query" but I wanted to have a similar test across all the
               corpus that has a reasonable relevance to typical use cases.
            </div>
            <div class="para e661">The following listings show the JavaScript code for a recursive decent query of
               all nodes in the document. It is very interesting to the author that despite popular
               opinion the code for JSON and XML are extremely similar. XML has attributes which
               adds a few lines of code but otherwise it's effectively the same amount of
               programming to recurse and examine a JSON object and an XML object in JavaScript and
               jQuery. XML adds about 4 lines of JavaScript to handle attributes in both the
               JavaScript and jQuery case, but other than that the code is nearly identical.
            </div>
            <div class="figure e662" xml:id="jsonquery1">
               <div class="title e663">JSON Query using native JavaScript</div>
               <div class="programlisting e664" xml:space="preserve">	            
                  var n = 0;
                  var walk = function(o){
                  if( o == null || typeof(o) == "undefined" ) 
                  return;
                  n++;
                  
                  for(var prop in o){
                  n++;
                  if(o.hasOwnProperty(prop)){
                  var val = o[prop];
                  
                  if(typeof val == 'object'){
                  walk(val);
                  }            
                  }
                  else
                  var val = o ;
                  }
                  };
                  
                  walk( this );
                  return n; 
                  
               </div>
            </div>
            <div class="figure e665" xml:id="jsonquery2">
               <div class="title e666">JSON Query using jQuery</div>
               <div class="programlisting e667" xml:space="preserve">	            
                  var n = 0;
                  var walk = function( o )
                  {
                  if( o == null || typeof(o) == "undefined")
                  return ;
                  n++;
                  $wnd.jQuery.each(o, function(key, value) {
                  if( value != null &amp;&amp; typeof(value) == "object" )
                  walk( value )
                  }
                  walk(this);
                  return n;
                  
                  
               </div>
            </div>
            <div class="figure e668" xml:id="xmlquery1">
               <div class="title e669">XML Query using native JavaScript</div>
               <div class="programlisting e670" xml:space="preserve">	            
                  var n =0;
                  var walk = function( o )
                  {
                  if( o == null || typeof(o) == "undefined" )
                  return ;  
                  n++;
                  if( o.attributes != null &amp;&amp; typeof(  o.attributes) != "undefined" )
                  for( var x = 0; x &lt;  o.attributes.length; x++ ) {
                  n++;
                  }
                  if(  o.childNodes != null &amp;&amp; typeof(  o.childNodes) != "undefined" )
                  for( var x = 0; x &lt;  o.childNodes.length; x++ ) {
                  walk(  o.childNodes[x] ); 
                  }
                  }
                  walk(this);
                  return n;
                  
               </div>
            </div>
            <div class="figure e671" xml:id="xmlquery2">
               <div class="title e672">XML Query using jQuery</div>
               <div class="programlisting e673" xml:space="preserve">	            
                  var n = 0;
                  var walk = function( o )
                  {
                  if( o == null || typeof(o) == "undefined" )
                  return ;
                  n++;
                  $wnd.jQuery( o).children().each( function( ) {
                  n++ ;
                  walk( this );      
                  })
                  var a = o.attributes;
                  if( a != null &amp;&amp; typeof(a) != "undefined" )
                  $wnd.jQuery(a).each( function() {
                  n++;
                  })
                  }
                  walk(this);
                  return n;       
                  
               </div>
            </div>
            <div class="para e674">Taking a look at the query times however, JSON clearly has an advantage over XML
               in pure query times. jQuery clearly imposes a significant penalty on XML query but
               it also imposes a huge penalty on JSON query.
            </div>
            <div class="para e675">
               
               <div class="figure e676" xml:id="JavascriptQuery2">
                  <div class="title e677">Query speed using JavaScript in seconds vs file size</div>
                  <div class="mediaobject e678">
                     <div class="imageobject e679">
                        <div class="metaBox e680"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1190').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1190" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e680'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-009.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e681">
                     <div class="para e682">Query speed in seconds (y) using pure JavaScript vs file size
                        (x).
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e683">
               
               <div class="figure e684" xml:id="JQueryParse2">
                  <div class="title e685">Query speed using jQuery in seconds vs file size</div>
                  <div class="mediaobject e686">
                     <div class="imageobject e687">
                        <div class="metaBox e688"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1202').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1202" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e688'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-010.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e689">
                     <div class="para e690">Query speed in seconds using jQuery (y) vs file size (x).</div>
                  </div>
               </div>
               
            </div>
         </div><a name="PuttingittogetherANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e691">
            <div class="title e692">Putting it together</div>
            <div class="para e693">So far we have looked at pieces of the entire work-flow - network speed, parsing
               and query. Putting it all together what does it look like? Lets assume the developer
               has chosen the most compact form for each document (JSON and XML), presuming that
               would also be the most efficient form. What performance can we see across all
               devices, OS's and browsers tested ? The following figures show the full time for
               each test using only the most compact form of each document, tested using pure
               JavaScript and jQuery, both compressed and uncompressed HTTP transfers.
            </div>
            <div class="para e694">The results are somewhat surprising. It's not a great surprise that jQuery adds a
               significant performance penalty, but it is a surprise that across all ranges of
               platforms that the total time for JSON and XML using native JavaScript is
               effectively identical. Compare 
               <div class="xref e695" linkend="FullJS"></div> and 
               <div class="xref e696" linkend="FullJSCompress"></div>. This is still looking at the whole forest and not
               the trees, but it is surprising to the author that there appears to be no
               significant performance penalty using XML over JSON in pure JavaScript. However,
               jQuery does impose a significant performance penalty to both JSON and XML, much more
               so for XML.
            </div>
            <div class="para e697">
               
               <div class="figure e698" xml:id="FullJS">
                  <div class="title e699">Complete time uncompressed in pure JavaScript in seconds vs file
                     size
                  </div>
                  <div class="mediaobject e700">
                     <div class="imageobject e701">
                        <div class="metaBox e702"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1225').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1225" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e702'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-011.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e703">
                     <div class="para e704">Total time uncompressed in seconds. (transmission + parse + query) in
                        pure Javascript (y) vs raw document size (x)
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e705">
               
               <div class="figure e706" xml:id="FullJQ">
                  <div class="title e707">Complete time uncompressed in jQuery in seconds vs file size</div>
                  <div class="mediaobject e708">
                     <div class="imageobject e709">
                        <div class="metaBox e710"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1237').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1237" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e710'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-012.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e711">
                     <div class="para e712">Total time uncompressed in seconds (transmission + parse + query) in
                        jQuery (y) vs raw document size (x)
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e713">
               
               <div class="figure e714" xml:id="FullJSCompress">
                  <div class="title e715">Complete time gzip in JavaScript in seconds vs file size</div>
                  <div class="mediaobject e716">
                     <div class="imageobject e717">
                        <div class="metaBox e718"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1249').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1249" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e718'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-013.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e719">
                     <div class="para e720">Total time gzip compressed in seconds (transmission + parse + query)
                        in pure JavaScript (y) vs raw document size (x)
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e721">
               
               <div class="figure e722" xml:id="FullJQCompress">
                  <div class="title e723">Complete time gzip in jQuery in seconds vs file size</div>
                  <div class="mediaobject e724">
                     <div class="imageobject e725">
                        <div class="metaBox e726"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1261').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1261" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e726'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-014.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='75%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e727">
                     <div class="para e728">Total time gzip compressed in seconds (transmission + parse + query)
                        in jQuery (y) vs raw document size (x)
                     </div>
                  </div>
               </div>
               
            </div>
         </div><a name="PullingitapartANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e729">
            <div class="title e730">Pulling it apart</div>
            <div class="para e731">It is interesting to see how everything adds up, but so far we've seen the forest
               not the trees. What does it look like for a particular user? Where is time spent for
               a specific document on a particular browser and OS?
            </div>
            <div class="para e732">Since the experiment collects data from such a wide variety of systems it's
               difficult to show a meaningful view of this. Averages and even percentiles mean very
               little when looking at data that spans orders of magnitude. Instead lets look at a
               couple typical test results which might help make sense of the big picture.
            </div>
            <div class="para e733">The following are the total of median times (median(data transfer) + median(parse)
               + median(query)) for the most compact form of the Twitter document in both JSON and
               XML using both pure JavaScript and jQuery across all browsers. These results span
               across a variety of devices, some browsers are obvious if they are mobile or desktop
               and some are not obvious.
            </div>
            <div class="para e734">In the following charts, the vertical axis is time in seconds (more is slower),
               and the horizontal axis represents one combination of  "User Agent" + either JSON
               or
               XML (for every user agent there is two columns of data).    Network transfer time
               is
               indicated as blue.  Parsing time is indicated as red. Query time is indicated as
               green.
            </div>
            <div class="para e735">
               
               <div class="figure e736" xml:id="TwitterJS_Raw">
                  <div class="title e737">Browser Processing Speed, Uncompressed, JavaScript</div>
                  <div class="mediaobject e738">
                     <div class="imageobject e739">
                        <div class="metaBox e740"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1284').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1284" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e740'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-015.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e741">
                     <div class="para e742">Median total times in seconds (y) for Twitter document, raw file using
                        JavaScript vs. user agent (y). User Agent is often a proxy for device type.
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e743">In 
               <div class="xref e744" linkend="TwitterJS_Raw"></div> we can see that the total time is dominated by
               network transmission time.   Mobile browsers such as Android Webkit, IE Mobile  and
               Opera Mobile take more time in the parsing and query layer probably due to their
               slower CPU.
            </div>
            <div class="para e745">
               
               <div class="figure e746" xml:id="TwitterJQ_Raw">
                  <div class="title e747">Browser Processing Speed, Uncompressed, jQuery</div>
                  <div class="mediaobject e748">
                     <div class="imageobject e749">
                        <div class="metaBox e750"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1300').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1300" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e750'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-016.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e751">
                     <div class="para e752">Median total times in seconds (y) for Twitter document, raw file using
                        jQuery vs. user agent (y).   User Agent is often a proxy for device
                        type.
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e753"> In 
               <div class="xref e754" linkend="TwitterJQ_Raw"></div>  notice the change in the vertical access to
               accomidate for large time spent in query and parse on some devices.   Network time
               remains the same but in many more cases are parse and query time a larger
               contributor.
            </div>
            <div class="para e755">
               
               <div class="figure e756" xml:id="TwitterJS_Compressed">
                  <div class="title e757">Browser Processing Speed, Compressed, JavaScript</div>
                  <div class="mediaobject e758">
                     <div class="imageobject e759">
                        <div class="metaBox e760"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1316').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1316" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e760'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-017.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e761">
                     <div class="para e762">Median total times in seconds (y) for Twitter document, compressed
                        using JavaScript vs User Agent (y). User Agent is often a proxy for device type.
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e763">In 
               <div class="xref e764" linkend="TwitterJS_Compressed"></div> notice the change in vertical axis.  The total time is dramatically smaller revealing
               the relative times for parse and query being a larger portion of the total time, especially
               on mobile devices.
            </div>
            <div class="para e765">
               
               <div class="figure e766" xml:id="TwitterJQ_Compressed">
                  <div class="title e767">Browser Processing Speed, Compressed, jQuery</div>
                  <div class="mediaobject e768">
                     <div class="imageobject e769">
                        <div class="metaBox e770"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1333').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1333" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e770'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Lee01/Lee01-018.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e771">
                     <div class="para e772">Median total times in seconds (y) for Twitter document, compressed using jQuery vs
                        User Agent (y). User Agent is often a proxy for device type.
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e773">In 
               <div class="xref e774" linkend="TwitterJQ_Compressed"></div> we can see the impact of using jQuery on mobile devices especially for XML.
            </div>
         </div>
      </div><a name="ProblemsandIssuesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e775">
         <div class="title e776">Problems and Issues</div>
         <div class="para e777">The topic in general and the experiment in particular are difficult issues to address.
            The topic itself is "slippery". How does one address a generalized concept where the
            basis is ill defined and the generalization is hazy?  What is trying to be proved?
            The
            experiment only addresses a few questions from a huge range of possibilities.
         </div>
         <div class="para e778">Focusing on the experiment itself there are many specific issues which could be improved
            and should be addressed in future experiments.
         </div>
         <div class="para e779">
            <div class="itemizedlist e780">
               <div class="listitem e781">
                  <div class="para e782">Browser Focused</div>
                  <div class="para e783">The experiments and this paper focus specifically on the use case of data
                     sent from a "Server" and parsed and queried in a "Browser".  There is no
                     testing of server based processing of data. The language in the browser is
                     limited to JavaScript which has very limited choice of technologies so there
                     was no testing of different libraries, languages and technologies.
                  </div>
                  <div class="para e784">Additional experiments involving server to server communications would be
                     useful to collaborate the findings and expand on the range of
                     analysis.
                  </div>
               </div>
               <div class="listitem e785">
                  <div class="para e786">Browser Errors</div>
                  <div class="para e787">The nature of the client program is such that server errors are not
                     reported. If things go wrong in the client then no record is reported. Only
                     by out of band information have I discovered issues such as individuals who
                     were not able to run the test. For example IE versions 8 and below were
                     particularly problematic and reports indicate it would stop part way through
                     the test. Future experiments should have a means of better reporting of
                     errors.   
                  </div>
                  <div class="para e788">In addition approximately 1% of the results showed meaningless data most
                     likely a result of a browser error.  An example is tests that report
                     negative times or file sizes.  These tests were excluded from the
                     analysis.
                  </div>
               </div>
               <div class="listitem e789">
                  <div class="para e790">Limited Corpus</div>
                  <div class="para e791">The Corpus was designed to span a wide range of use cases, but ultimately any sample
                     set of data is limited and biased.  Future experiments could improve on the variety
                     and focus on if different types of data perform differently.
                  </div>
               </div>
               <div class="listitem e792">
                  <div class="para e793">Simplistic parsing tests</div>
                  <div class="para e794">The parsing test does not attempt to do very much with the data besides
                     walk the parsed tree. More complex tests could be performed that attempt to
                     do something with the data such as create new objects or search for specific
                     values. I choose this test as a bare minimum that could be universally
                     applied to the entire corpus but acknowledge that it could be biased in that
                     it does very little with the parsed data so may not reflective of real world
                     use cases.
                  </div>
               </div>
               <div class="listitem e795">
                  <div class="para e796">Too Much Data</div>
                  <div class="para e797">This experiment produced a lot of data. Compared to many scientific
                     experiments the data size is trivial, but for the purposes of distilling
                     down a few basic principles the amount and variety of test results is
                     daunting especially in its variety. On the other hand, more data is better
                     than less and this experiment improves on many attempts to categorize markup
                     performance in browsers. I am hopeful that the experiment can run for a long
                     duration so that ongoing analysis can be performed. The raw data will be
                     provided for those who wish to analyze it themselves.
                  </div>
               </div>
               <div class="listitem e798">
                  <div class="para e799">Statistical Analysis</div>
                  <div class="para e800">This paper focuses more on showing the range of results with visualizations and trends
                     rather
                     than traditional statistical analysis. However this seems less scientific
                     and exact then ideal. Many more visualizations and analysis would be useful
                     but are limited by forum of publication and time, imagination and skills of
                     the author. Suggestions on improvement of the analytics and visualizations
                     are greatly welcome. 
                  </div>
               </div>
               <div class="listitem e801">
                  <div class="para e802">Crowd Sourcing</div>
                  <div class="para e803">Due to a lack of an army of volunteers and a vast personal collection of
                     hardware, crowd-sourcing was used to enlist participation. This produced a
                     good number of responses (about 650 as of this writing) but is likely to
                     include self-selected bias. The distribution channel for the solicitation
                     and people who volunteered to run the tests may well not be a statistically
                     good sample set. Future experiments should focus on getting a wider range of
                     people to perform tests.
                  </div>
               </div>
               <div class="listitem e804">
                  <div class="para e805">Mechanical Turk</div>
                  <div class="para e806">In order to acquire more test samples, Amazon "Mechanical Turk"
                     <div class="xref e807" linkend="TURK"></div> was employed to hire additional testers focusing on
                     mobile devices. This added about 500 additional responses in a 3 day period
                     at an average cost of 15 cents (USD) / test. 
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ConclusionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e808">
         <div class="title e809">Conclusions</div>
         <div class="para e810">We have shown that many of the presumptions of "Fat XML", while well imagined, do
            not
            hold up to experiment. Given the same document object, one can produce nearly identical
            sized JSON and XML representations. Network transfer speed is directly related to
            the
            document size so is unaffected by the markup given similar size. Compressed documents
            in
            all formats even very "Fat" representations of JSON or XML compress to nearly identical
            size which is an indicator that they contain approximately the same entropy or
            information content and transferring these documents to a wide variety of devices
            takes
            effectively the same time per device. Parsing speed varies on the technique used.
            Pure
            JavaScript parsing generally performs better with XML then with JSON but not always,
            while Query speed generally is faster for JSON, but again, not always. Overall using
            native JavaScript the use of XML and JSON is essentially identical performance for
            total
            user experience (transfer plus parse plus query), however use of the popular JavaScript
            library jQuery imposes a steep penalty on both JSON and XML, more-so for XML. 
            <div class="popupBox e811">
               <div class="popupLabel" onmouseover="$('#d1e1402').show('1000');" onmouseout="$('#d1e1402').hide('1000');">[ footnote ]</div>
               <div id="d1e1402" style="display: none;">
                  <div class="footnote">
                     <div class="para e812">Experiments comparing different JavaScript libraries would be useful to see if
                        jQuery is unique or is representative of JavaScript query libraries in
                        general.
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e813">From a programming perspective accessing both JSON and XML in a generic fashion, using
            either pure JavaScript or jQuery is very similar in complexity and difficulty. Not
            shown
            is the advantage of accessing JSON objects as JavaScript objects using "dot notation"
            which provides a programming advantage, however the evolution towards using query
            languages to access JSON (or XML) such as jQuery largely negates that advantage. Future
            enhancements in JavaScript libraries and cross compilation technologies (such as
            CoffeeScript
            <div class="xref e814" linkend="COFFEESCRIPT"></div>, GWT and Dart
            <div class="xref e815" linkend="DART"></div>) may
            well equalize these discrepancies but that is yet to be seen. The fact that hand-coded
            JavaScript query of XML can perform as well as query over JSON does suggest that
            libraries such as jQuery could be optimized for similar performance and especially
            cross
            compilers should be able to achieve similar performance. On the other-hand, the wide
            adoption of JavaScript libraries even in the face of significant performance degradation
            even for JSON suggests that developers are not as concerned about performance
            considerations over ease of programming.  This may be because the data layer of the
            application is small compared to the other components of the application such as GUI
            and
            business logic.
         </div>
         <div class="para e816"></div><a name="SuggestionstoArchitectsandDevelopersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e817">
            <div class="title e818">Suggestions to Architects and Developers</div>
            <div class="para e819">Architects and developers who are seriously interested in maximizing performance should
               consider the following.
            </div>
            <div class="itemizedlist e820">
               <div class="listitem e821">
                  <div class="para e822">Use HTTP Compression</div>
                  <div class="para e823">The use of HTTP compression, regardless of the device, operating system, browser or
                     markup
                     language is the biggest factor in total performance, and by inference, user
                     experience. Use of HTTP Compression should be used in most cases where large
                     amounts of data is being transferred from server to client. The exception is
                     that in some cases under powered devices can actually perform slower with
                     compressed data then uncompressed data. If you are targeting low end mobile
                     devices then using your own tests to validate customer experience is
                     suggested.
                  </div>
               </div>
               <div class="listitem e824">
                  <div class="para e825">Optimize your markup</div>
                  <div class="para e826">Optimizing markup for transmission and query provides a second order
                     performance enhancement. Sometimes this is at the cost of usability.
                     Compression effectively eliminates the advantages of optimized markup for
                     transmission purposes, but parsing and query times are affected by the
                     particulars of the markup form. Choosing the right balance between ease of
                     programming and transmission should be seriously considered. If your target
                     is specific known devices then optimizing for those devices may be
                     beneficial. How you intend to use the data once it is turned into JavaScript
                     objects is also an important consideration. Using a library like jQuery
                     eliminates the preconceived advantage of native "dot notation" for
                     JavaScript (using JSON) but adds loose binding, query, search and often
                     performance degradation.
                  </div>
               </div>
               <div class="listitem e827">
                  <div class="para e828">Use optimized libraries or hand coded JavaScript.</div>
                  <div class="para e829">Use of libraries to ease development effort can have a significant
                     performance penalty. This penalty is in general much greater than the
                     penalty of which markup format you are using. If performance is your most
                     important factor then avoiding unoptimized libraries will be your biggest
                     performance gain regardless of the markup format. Look to the future for
                     this issue to be improved. If more developers prioritize performance then
                     library and cross compilation vendors are likely to focus more on
                     performance. In any case your choice of a parsing and query library are by
                     far the biggest performance factor beyond compression, much more so than the
                     markup format. Look to Cross Compilation technologies such as GWT and Blink
                     to provide machine optimized JavaScript code much like the compilers for C,
                     C++ and Java do for non browser environments. 
                  </div>
               </div>
               <div class="listitem e830">
                  <div class="para e831">Know your users.</div>
                  <div class="para e832">Performance varies *vastly* across browsers, operating systems and
                     devices. If you know your users and their platforms you can make better
                     choices about which technologies and formats to use. But be aware that
                     implementations change frequently and what is efficient today may be slow
                     tomorrow and visa-versa so optimizing too tightly for particular devices may
                     be detrimental in the future.  Mobile devices are particularly prone to
                     differences in performance but are often hard to optimize because the
                     biggest hit is network speed which is usually not under the programmers
                     control. However programming for minimum network usage will provide the best
                     advantage for mobile devices. Use of HTML local storage, JavaScript based
                     applications which avoid passing page markup and instead pass data and allow
                     page transitions to be performed without a round trip to the server are
                     likely going to provide good user experience. 
                  </div>
               </div>
               <div class="listitem e833">
                  <div class="para e834">Markup doesn’t matter.</div>
                  <div class="para e835">The choice of JSON vs XML is nearly indistinguishable from a performance
                     perspective. There are a few outliers (such as Mobile and Desktop Firefox
                     using jQuery) where there is a notable difference but as time goes on and
                     vendors pay attention to user feedback I expect these differences to be
                     reduced. But for most uses the difference in markup choice will result in
                     little or no user noticeable difference in performance and end user
                     experience. There are significant browser architectural changes coming such
                     as HTML5 and Chrome Blink 
                     <div class="xref e836" linkend="BLINK"></div>. We don’t know what
                     performance changes these will incur but evidence suggests that performance
                     in the browser is a main goal of new browser technologies.  Looking to the
                     future the landscape may change.
                  </div>
               </div>
               <div class="listitem e837">
                  <div class="para e838">Markup Matters</div>
                  <div class="para e839">Contrary to myth, performance varies very little with different markup formats in
                     current
                     devices and software. However the shape and ease of use of markup formats
                     can matter for developers (both client and server). As can be seen with the
                     use of libraries such as jQuery, performance is often trivially tossed away
                     in exchange for ease of programming - even with JSON. Sometimes that is a
                     reasonable tradeoff.  
                     <div class="popupBox e840">
                        <div class="popupLabel" onmouseover="$('#d1e1450').show('1000');" onmouseout="$('#d1e1450').hide('1000');">[ footnote ]</div>
                        <div id="d1e1450" style="display: none;">
                           <div class="footnote">
                              <div class="para e841"> It is interesting to the author that the use of libraries like
                                 jQuery entirely eliminate the native advantage in JavaScript of
                                 using JSON as the data format ("dot notation"), add significant
                                 processing overhead and yet is strongly promoted while XML usage is
                                 discouraged under the guise of it not mapping well to native
                                 JavaScript data structures and its slow performance. Compare the
                                 jQuery code for JSON and XML and you can see the programming
                                 difference is nearly indistinguishable. 
                              </div>
                           </div>
                        </div>
                     </div>
                     
                  </div>
                  <div class="para e842">Engineering is about balancing compromises. Make the compromise that
                     maters to you, your product, your business and your customers. If
                     performance matters to you and your applications - do what it takes to
                     achieve maximum performance. If it doesn’t matter then use whatever
                     technology is easiest for you. Often the "you" is many people in an
                     organization or across organizations. If its harder for the producer of data
                     to change formats then work with them to use their format. If its harder for
                     the consumer to change formats then work with the producers to produce the
                     format the consumer needs.
                  </div>
                  <div class="para e843">In any case make this decision based on facts not myth. </div>
               </div>
               <div class="listitem e844">
                  <div class="para e845">Is Data really your problem ?</div>
                  <div class="para e846">This paper focuses exclusively on data transmission, parsing and querying.
                     It may well be that in your application that component is a small piece
                     compared to display and business logic. If the data layer is not a
                     significant part of your performance or development problem then it may not
                     be worth the effort to optimize it. As your application evolves your data
                     use may change so always be open to re-evaluating decisions made early in
                     the design process.
                  </div>
               </div>
               <div class="listitem e847">
                  <div class="para e848">Don’t Trust Anyone</div>
                  <div class="para e849">Don’t believe blindly what you are told. Perform experiments, test your
                     own data and code with your own users and devices.  What "seems obvious" is
                     not always true.
                  </div>
                  <div class="para e850">As always with engineering; experiment, develop, test. And test
                     again.
                  </div>
                  <div class="para e851">The source code and data corpus is published at 
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e852" xlink:actuate="onRequest" xlink:href="https://code.google.com/p/jsonxmlspeed/" xlink:show="new" xlink:type="simple">https://code.google.com/p/jsonxmlspeed/</div>. The raw results for
                     this experiment will be published along with this paper for peer review.
                     Test it. Dispute it. Come up with better tests and publish the
                     results.
                  </div>
                  <div class="para e853"> It is hoped that an ongoing interactive web site will be developed to
                     continue to track, analyze, and monitor this research.
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e854">
         <div class="title e855">References</div>
         <div class="bibliomixed e856" xml:id="AJAX1" xreflabel="AJAX Performance">AJAX - JSON vs. XML 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e857" xlink:actuate="onRequest" xlink:href="http://www.navioo.com/ajax/ajax_json_xml_Benchmarking.php" xlink:show="new" xlink:type="simple">http://www.navioo.com/ajax/ajax_json_xml_Benchmarking.php</div>
         </div>
         <div class="bibliomixed e858" xml:id="XMLJSON1" xreflabel="XML vs JSON">Edward A. Webb, XML vs JSON 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e859" xlink:actuate="onRequest" xlink:href="http://www.edwardawebb.com/tips/xml-json" xlink:show="new" xlink:type="simple">http://www.edwardawebb.com/tips/xml-json</div>
         </div>
         <div class="bibliomixed e860" xml:id="JSONLIGHT" xreflabel="JSONLIGHT">janu bajaj, My Open Source Initiative 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e861" xlink:actuate="onRequest" xlink:href="http://bajajblog123.blogspot.com/2012/07/json.html" xlink:show="new" xlink:type="simple">http://bajajblog123.blogspot.com/2012/07/json.html</div>
         </div>
         <div class="bibliomixed e862" xml:id="XMLFAT" xreflabel="XMLFAT">Douglas Crockford, 2006; JSON: The Fat-Free Alternative to XML 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e863" xlink:actuate="onRequest" xlink:href="http://www.json.org/fatfree.html" xlink:show="new" xlink:type="simple">http://www.json.org/fatfree.html</div>
         </div>
         <div class="bibliomixed e864" xml:id="MISCONCEPTION" xreflabel="MISCONCEPTION">Dr. Steven Novella; 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e865" xlink:actuate="onRequest" xlink:href="http://tech.groups.yahoo.com/group/skeptic/message/30893" xlink:show="new" xlink:type="simple">http://tech.groups.yahoo.com/group/skeptic/message/30893</div>
         </div>
         <div class="bibliomixed e866" xml:id="Saxon" xreflabel="Saxon">Saxon XSLT and XQuery Processor 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e867" xlink:actuate="onRequest" xlink:href="http://www.saxonica.com" xlink:show="new" xlink:type="simple">http://www.saxonica.com</div>
         </div>
         <div class="bibliomixed e868" xml:id="BLINK" xreflabel="Blink">Chrome Blink 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e869" xlink:actuate="onRequest" xlink:href="http://www.theverge.com/2013/4/3/4180260/google-forks-webkit-with-new-blink-rendering-engine-for-chrome" xlink:show="new" xlink:type="simple">http://www.theverge.com/2013/4/3/4180260/google-forks-webkit-with-new-blink-rendering-engine-for-chrome
               
            </div>
         </div>
         <div class="bibliomixed e870" xml:id="GWT" xreflabel="GWT">Google Web Toolkit 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e871" xlink:actuate="onRequest" xlink:href="https://developers.google.com/web-toolkit/" xlink:show="new" xlink:type="simple">https://developers.google.com/web-toolkit/</div>
         </div>
         <div class="bibliomixed e872" xml:id="JQUERY" xreflabel="jQuery">jQueryt 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e873" xlink:actuate="onRequest" xlink:href="http://jquery.com/" xlink:show="new" xlink:type="simple">http://jquery.com/</div>
         </div>
         <div class="bibliomixed e874" xml:id="COFFEESCRIPT" xreflabel="CoffeScript">CoffeeScript 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e875" xlink:actuate="onRequest" xlink:href="http://coffeescript.org/" xlink:show="new" xlink:type="simple">http://coffeescript.org/</div>
         </div>
         <div class="bibliomixed e876" xml:id="DART" xreflabel="DART">DART 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e877" xlink:actuate="onRequest" xlink:href="http://www.dartlang.org/" xlink:show="new" xlink:type="simple">http://www.dartlang.org/</div>
         </div>
         <div class="bibliomixed e878" xml:id="TURK" xreflabel="Mechanical Turk">Mechanical Turk 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e879" xlink:actuate="onRequest" xlink:href="https://www.mturk.com/mturk/" xlink:show="new" xlink:type="simple">https://www.mturk.com/mturk/</div>
         </div>
         <div class="bibliomixed e880" xml:id="Apache" xreflabel="Apache">Apache HTTPD server 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e881" xlink:actuate="onRequest" xlink:href="http://httpd.apache.org/" xlink:show="new" xlink:type="simple">http://httpd.apache.org/</div>
         </div>
      </div>
   </div>
</div>