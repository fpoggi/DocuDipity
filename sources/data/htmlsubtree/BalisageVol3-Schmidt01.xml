<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#MergingMultiVersionTexts:aGeneralSolutiontotheOverlapProblemANCHOR" name="MergingMultiVersionTexts:aGeneralSolutiontotheOverlapProblemTOC">Merging Multi-Version Texts: a General Solution to the Overlap Problem</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AdvantagesoftheMVDFormatANCHOR" name="AdvantagesoftheMVDFormatTOC">Advantages of the MVD Format</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#OperationsonMVDsANCHOR" name="OperationsonMVDsTOC">Operations on MVDs</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AnalogiestotheCurrentProblemANCHOR" name="AnalogiestotheCurrentProblemTOC">Analogies to the Current Problem</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#BioinformaticsANCHOR" name="BioinformaticsTOC">Bioinformatics</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MultipleSequenceAlignmentANCHOR" name="MultipleSequenceAlignmentTOC">Multiple Sequence Alignment</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#TwoWayGlobalAlignmentANCHOR" name="TwoWayGlobalAlignmentTOC">Two-Way Global Alignment</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#ProgressiveAlignmentANCHOR" name="ProgressiveAlignmentTOC">Progressive Alignment</a></div>
                     <div class="headedContainerTOC">
                        <div class="headedContainerTitleTOC"><a href="#DisadvantagesofProgressiveAlignmentANCHOR" name="DisadvantagesofProgressiveAlignmentTOC">Disadvantages of Progressive Alignment</a></div>
                     </div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#PartialOrderAlignmentANCHOR" name="PartialOrderAlignmentTOC">Partial Order Alignment</a></div>
                     <div class="headedContainerTOC">
                        <div class="headedContainerTitleTOC"><a href="#DisadvantagesofPOAANCHOR" name="DisadvantagesofPOATOC">Disadvantages of POA</a></div>
                     </div>
                  </div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#deBruijnandABruijnGraphsANCHOR" name="deBruijnandABruijnGraphsTOC">de Bruijn and A-Bruijn Graphs</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#DisadvantagesofdeBruijnandABruijnGraphsANCHOR" name="DisadvantagesofdeBruijnandABruijnGraphsTOC">Disadvantages of de Bruijn and A-Bruijn Graphs</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#DiscussionANCHOR" name="DiscussionTOC">Discussion</a></div>
                  </div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#AnchorBasedAlignersANCHOR" name="AnchorBasedAlignersTOC">Anchor-Based Aligners</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#ShuffleLAGANANCHOR" name="ShuffleLAGANTOC">Shuffle-LAGAN</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#MauveANCHOR" name="MauveTOC">Mauve</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#DiscussionANCHOR" name="DiscussionTOC">Discussion</a></div>
                  </div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TranspositionAlgorithmsANCHOR" name="TranspositionAlgorithmsTOC">Transposition Algorithms</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#DiscussionANCHOR" name="DiscussionTOC">Discussion</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#CollationAlgorithmsANCHOR" name="CollationAlgorithmsTOC">Collation Algorithms</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#SlidingWindowCollatorsANCHOR" name="SlidingWindowCollatorsTOC">Sliding Window Collators</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ProgressiveAlignmentANCHOR" name="ProgressiveAlignmentTOC">Progressive Alignment</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#JUXTAANCHOR" name="JUXTATOC">JUXTA</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MEDITEANCHOR" name="MEDITETOC">MEDITE</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#DisadvantagesofCollationANCHOR" name="DisadvantagesofCollationTOC">Disadvantages of Collation</a></div>
               </div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AFastAlgorithmtoMergenVersionswithBlockMovesANCHOR" name="AFastAlgorithmtoMergenVersionswithBlockMovesTOC">A Fast Algorithm to Merge n Versions with Block Moves</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AlignmentWithoutTransposingANCHOR" name="AlignmentWithoutTransposingTOC">Alignment Without Transposing</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#Algorithm1ANCHOR" name="Algorithm1TOC">Algorithm 1</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#FindingTheBestMUMANCHOR" name="FindingTheBestMUMTOC">Finding The Best MUM</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#TimeComplexityoftheMATCHProcedureANCHOR" name="TimeComplexityoftheMATCHProcedureTOC">Time Complexity of the MATCH Procedure</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#UpdatingtheMUMANCHOR" name="UpdatingtheMUMTOC">Updating the MUM</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MergingtheMUMintotheGraphANCHOR" name="MergingtheMUMintotheGraphTOC">Merging the MUM into the Graph</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#Definition1ANCHOR" name="Definition1TOC">Definition 1</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#Definition2ANCHOR" name="Definition2TOC">Definition 2</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#Definition3ANCHOR" name="Definition3TOC">Definition 3</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#OneSmallProblemANCHOR" name="OneSmallProblemTOC">One Small Problem</a></div>
                  </div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AddingTranspositionsANCHOR" name="AddingTranspositionsTOC">Adding Transpositions</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#WhyDetectTranspositionsAutomatically?ANCHOR" name="WhyDetectTranspositionsAutomatically?TOC">Why Detect Transpositions Automatically?</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#WhatConstitutesaTransposition?ANCHOR" name="WhatConstitutesaTransposition?TOC">What Constitutes a Transposition?</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MergingTranspositionsintotheVariantGraphANCHOR" name="MergingTranspositionsintotheVariantGraphTOC">Merging Transpositions into the Variant Graph</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ASimpleAlgorithmforDetectingTranspositionsANCHOR" name="ASimpleAlgorithmforDetectingTranspositionsTOC">A Simple Algorithm for Detecting Transpositions</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#Algorithm2ANCHOR" name="Algorithm2TOC">Algorithm 2</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#TimeComplexityofAlgorithm2ANCHOR" name="TimeComplexityofAlgorithm2TOC">Time Complexity of Algorithm 2</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ExperimentalPerformanceofAlgorithm2ANCHOR" name="ExperimentalPerformanceofAlgorithm2TOC">Experimental Performance of Algorithm 2</a></div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#PerformanceofAlgorithm2onExampleTextsANCHOR" name="PerformanceofAlgorithm2onExampleTextsTOC">Performance of Algorithm 2 on Example Texts</a></div>
                  </div>
                  <div class="headedContainerTOC">
                     <div class="headedContainerTitleTOC"><a href="#AlignmentQualityANCHOR" name="AlignmentQualityTOC">Alignment Quality</a></div>
                  </div>
               </div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionANCHOR" name="ConclusionTOC">Conclusion</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AcknowledgementsANCHOR" name="AcknowledgementsTOC">Acknowledgements</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibliographyANCHOR" name="BibliographyTOC">Bibliography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">all</div>
         <div class="singletermTERMS">August 11 - 14, 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">between</div>
         <div class="singletermTERMS">backwards</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">CTB</div>
         <div class="singletermTERMS">Campagna romana</div>
         <div class="singletermTERMS">calculate</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">Digital Variants</div>
         <div class="singletermTERMS">Desmond</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">except</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">MergeTester</div>
         <div class="singletermTERMS">Multiple Sequence Alignment</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">Overlapping Hierarchies</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">plus</div>
         <div class="singletermTERMS">pairs</div>
         <div class="singletermTERMS">plain</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">Refrains</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">substring</div>
         <div class="singletermTERMS">special arc</div>
         <div class="singletermTERMS">subgraph</div>
         <div class="singletermTERMS">subarc</div>
         <div class="singletermTERMS">specials</div>
         <div class="singletermTERMS">specials;</div>
         <div class="singletermTERMS">schmidda@qut.edu.au</div>
         <div class="singletermTERMS">Software Engineer</div>
         <div class="singletermTERMS">Schmidt</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">Textual Variation</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">Ulysses</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="MergingMultiVersionTexts:aGeneralSolutiontotheOverlapProblemANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2">
      <div class="title e1">Merging Multi-Version Texts: a General Solution to the Overlap Problem</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2009</div>
            <div class="confdates e5">August 11 - 14, 2009</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">Multi-Version Documents or MVDs, as described in Schmidt and Colomb (
               <div class="xref e8" linkend="Schm09"></div>), provide a simple format for representing overlapping structures in digital text.
               They permit the reuse of existing technologies, such as XML, to encode the content
               of individual versions, while allowing overlapping hierarchies (separate, partial
               or conditional) and textual variation (insertions, deletions, alternatives and transpositions)
               to exist within the same document. Most desired operations on MVDs may be performed
               by simple algorithms in linear time. However, creating and editing MVDs is a much
               harder and more complex operation that resembles the multiple-sequence alignment problem
               in biology. The inclusion of the transposition operation into the alignment process
               makes this a hard problem, with no solutions known to be both optimal and practical.
               However, a suitable heuristic algorithm can be devised, based in part on the most
               recent biological alignment programs, whose time complexity is quadratic in the worst
               case, and is often much faster. The results are satisfactory both in terms of speed
               and alignment quality. This means that MVDs can be considered as a practical and editable
               format suitable for representing many cases of overlapping structure in digital text.
            </div>
         </div>
         <div class="author e9">
            <div class="personname e10">
               <div class="firstname e11">Desmond</div>
               <div class="surname e12">Schmidt</div>
            </div>
            <div class="personblurb e13">
               <div class="para e14">Desmond Schmidt has a BA from the University of Queensland in Classical Greek Language
                  and Ancient History (1980), a PhD from the University of Cambridge, UK, in Classical
                  Greek papyrology (1987). He has worked at the Cambridge Wittgenstein Archive making
                  an edition of Wittgenstein, as a Computer Associate at the Wellcome/CRC (biosciences)
                  Institute. In Australia he has worked as a software developer on a commercial license
                  managment system for Mac OSX, and on the Leximancer data mining application. He currently
                  works at the Information Security Institute, Queensland University of Technology,
                  as a software engineer. Since 2002 he has worked with Domenico Fiormonte and the Digital
                  Variants team developing tools for viewing and editing multi-version texts. He has
                  recently submitted a second PhD at the ITEE School at UQ entitled ‘Multiple Versions
                  and Overlap in Digital Text’.
               </div>
            </div>
            <div class="affiliation e15">
               <div class="jobtitle e16">Software Engineer</div>
               <div class="orgname e17">Information Security Institute, Queensland University of Technology</div>
            </div>
            <div class="email e18">schmidda@qut.edu.au</div>
         </div>
         <div class="legalnotice e19">
            <div class="para e20">Copyright © 2009 Desmond Schmidt. Used by permission.</div>
         </div>
         <div class="keywordset e21" role="author">
            <div class="keyword e22">Overlapping Hierarchies</div>
            <div class="keyword e23">Textual Variation</div>
            <div class="keyword e24">Multiple Sequence Alignment</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e25">
         <div class="title e26">Introduction</div>
         <div class="para e27">Over 20 years ago, shortly after the standardisation of SGML in 1986 (
            <div class="xref e28" linkend="Gold90"></div>), the problem of overlap was first noticed as a serious difficulty in the encoding
            of digital texts in the humanities and linguistics (
            <div class="xref e29" linkend="Barn88"></div>). Overlap may be defined as the inability of markup systems to easily represent overlapping
            structures by means of paired tags whose primary function is to contain text or other
            markup in a strictly nested and ‘well-formed’ way (
            <div class="xref e30" linkend="Bray08"></div>, 2.1). Barnard et al. (
            <div class="xref e31" linkend="Barn88"></div>, 275) reassured the reader at the time that ‘SGML can successfully cope with the
            problem of maintaining multiple structural views’ and that the ‘solutions can be made
            practical’. After around 50 papers and theses later it would seem that this early
            assessment may have underestimated the extent of the problem. There have been many
            surveys of the literature on the subject (
            <div class="xref e32" linkend="Witt02"></div>; 
            <div class="xref e33" linkend="Maas03"></div>; 
            <div class="xref e34" linkend="Dero04"></div>), but the consensus seems to be that no general solution to the overlap problem is
            known or likely (
            <div class="xref e35" linkend="Maas03"></div>, 18; 
            <div class="xref e36" linkend="Sahl05"></div>, 3).
         </div>
         <div class="para e37">The Multi-Version Document or MVD format has been put forward as a possible general
            solution to the overlap problem (
            <div class="xref e38" linkend="Schm09"></div>). Although originally conceived as a solution to textual variation, an MVD can also
            be used to represent ‘overlapping hierarchies’, since multiple conflicting markup
            perspectives of a single linear text can be construed as variant texts in which only
            the markup varies. An MVD represents both overlap and variation by replacing the conventional
            linear form of text with a directed graph. This graph may take two forms:
         </div>
         <div class="orderedlist e39">
            <div class="listitem e40">
               <div class="para e41">As an explicit directed acyclic graph that starts at one point, then diverges and
                  remerges as required, before ending again at a single point. I call this a ‘variant
                  graph’. Each arc is labelled with the set of versions to which that arc belongs, and
                  a fragment of text, which may be empty. Any version can be read by following the appropriate
                  path through the graph from start to finish. Figure 1 shows a variant graph generated
                  using the algorithm described in this paper from three versions (labelled A,B,C) of
                  part of Valerio Magrelli’s Italian poem 
                  <div class="emphasis e42">Campagna romana</div> (
                  <div class="xref e43" linkend="Magr81"></div>).
               </div>
            </div>
            <div class="listitem e44">
               <div class="para e45">As a list of interleaved pairs, consisting of the labels of each arc, and the sets
                  of versions to which it belongs. The pairs are ordered so that the labels preserve
                  the order of the text for each version they represent (Figure 2).
               </div>
            </div>
         </div>
         <div class="mediaobject e46">
            <div class="imageobject e47">
               <div class="metaBox e48"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e83').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e83" class="metaSource" style="display:none;">                
                     &lt;imagedata<span class="metaAttribute">class='e48'
                        </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-001.png'
                        </span><span class="metaAttribute">format='png'
                        </span>
                     &gt;
                     
                  </div>
               </div>
            </div>
            <div class="caption e49">
               <div class="para e50">Figure 1: A Variant Graph</div>
            </div>
         </div>
         <div class="mediaobject e51">
            <div class="imageobject e52">
               <div class="metaBox e53"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e89').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e89" class="metaSource" style="display:none;">                
                     &lt;imagedata<span class="metaAttribute">class='e53'
                        </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-002.png'
                        </span><span class="metaAttribute">format='png'
                        </span>
                     &gt;
                     
                  </div>
               </div>
            </div>
            <div class="caption e54">
               <div class="para e55">Figure 2: Part of the Same Graph as a List of Pairs</div>
            </div>
         </div>
         <div class="para e56">These two forms are equivalent and interchangeable. The list form is currently better
            for searching, listing, saving and comparing two versions in an MVD, and the explicit
            graph for creating and editing an MVD. Conversion between the two forms can be performed
            losslessly in essentially linear time. It is hoped that in the future it will also
            be possible to edit and create MVDs using the simpler list format.
         </div><a name="AdvantagesoftheMVDFormatANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e57">
            <div class="title e58">Advantages of the MVD Format</div>
            <div class="orderedlist e59">
               <div class="listitem e60">
                  <div class="para e61">Because an MVD doesn’t know anything about the format of the text contained in each
                     arc-label or pair, any technology can be used to represent the content of an individual
                     version. In this way the complex overlapping structures of the text are abstracted
                     out into the graph structure, so that the content can be represented using conventional,
                     and simplified, markup. This allows the reuse of existing markup-based tools such
                     as XSLT (Figure 3).
                  </div>
               </div>
               <div class="listitem e62">
                  <div class="para e63">Representing a work that contains multiple versions or markup perspectives as a single
                     digital entity facilitates searching, comparing, editing and transmission of the work
                     without the need for complex software to integrate a set of separate files.
                  </div>
               </div>
               <div class="listitem e64">
                  <div class="para e65">Because the MVD representation is very simple, and is not dependent on markup, it
                     can provide a general solution to the overlap problem in corpus linguistics and humanities
                     texts of various types and dates. It can work equally well with plain text and some
                     binary formats.
                  </div>
               </div>
            </div>
            <div class="para e66">The only real disadvantage of the format is the difficulty of producing it automatically,
               which is the problem this paper attempts to solve.
            </div>
            <div class="mediaobject e67">
               <div class="imageobject e68">
                  <div class="metaBox e69"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e112').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e112" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e69'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-003.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e70">
                  <div class="para e71">Figure 3: Separation of Variation from Content</div>
               </div>
            </div>
         </div><a name="OperationsonMVDsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e72">
            <div class="title e73">Operations on MVDs</div>
            <div class="para e74">The commonest operations that may be performed on MVDs include:
               
               <div class="orderedlist e75">
                  <div class="listitem e76">
                     <div class="para e77">Listing a given version</div>
                  </div>
                  <div class="listitem e78">
                     <div class="para e79">Comparing two versions</div>
                  </div>
                  <div class="listitem e80">
                     <div class="para e81">Searching a multi-version text</div>
                  </div>
                  <div class="listitem e82">
                     <div class="para e83">Finding out what is a variant of what</div>
                  </div>
                  <div class="listitem e84">
                     <div class="para e85">Creating and updating an MVD</div>
                  </div>
               </div>
               The first four operations can be performed by relatively simple algorithms in linear
               time. The fifth operation, however, is considerably more complex and costly. Unless
               a method can be found to efficiently perform this operation, the advantages of the
               MVD format will be unrealised. In addition, making MVDs editable would represent an
               advance over current standoff techniques for representing overlap in linguistics texts
               (
               <div class="xref e86" linkend="Stuh08"></div>; 
               <div class="xref e87" linkend="Ide06"></div>). In these systems editing the overall representation once created is limited or
               difficult. Although this may be an acceptable limitation for linguists, who are commenting
               on or marking up an essentially static text, it is a fundamental requirement for humanists
               to be able to edit texts that contain overlapping structures (
               <div class="xref e88" linkend="Buzz02"></div>; 
               <div class="xref e89" linkend="Vett03"></div>; 
               <div class="xref e90" linkend="Neyt06"></div>; 
               <div class="xref e91" linkend="Mcga01"></div>, 17; 
               <div class="xref e92" linkend="Bart06"></div>).
            </div>
            <div class="para e93">An MVD may be created by successively adding versions to an initially empty document.
               Updating an existing version can be performed in the same way by first deleting the
               version to be replaced. Creating and updating an MVD thus both reduce to the same
               operation: that of merging a single version into an existing multi-version document.
            </div>
         </div>
      </div><a name="AnalogiestotheCurrentProblemANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e94">
         <div class="title e95">Analogies to the Current Problem</div>
         <div class="para e96">The basic problem that underlies this merging operation has already been researched
            in other fields, in particular in bioinformatics, text processing and humanities computing.
            Since the solutions in these areas work with different data and with different objectives,
            none of these algorithms provide a precise match with the current problem. Nevertheless,
            examining similar areas of research like this is likely to reveal potential pitfalls
            as well as furnish possible components of the required solution.
         </div><a name="BioinformaticsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e97">
            <div class="title e98">Bioinformatics</div>
            <div class="para e99">Biologists have studied the computational alignment of multiple sequences of nucleic
               and amino acids for over 40 years. These computations reduce to the finding of insertions,
               deletions, substitutions and transpositions in texts with a restricted alphabet of
               4 characters for nucleotides or 20 for amino acids. There are in fact three main sub-fields
               within bioinformatics that are relevant to the current problem.
            </div><a name="MultipleSequenceAlignmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e100">
               <div class="title e101">Multiple Sequence Alignment</div>
               <div class="para e102">Biologists frequently search databases for similar sequences to newly sequenced genes
                  or proteins (
                  <div class="xref e103" linkend="Lesk02"></div>, 177). The results, however, are usually a set of close matches whose interrelationships
                  may need further exploration. For example, it is often of interest to trace the evolutionary
                  history of a series of mutation events that gave rise to different versions of a protein.
                  This is the multiple sequence alignment problem (
                  <div class="xref e104" linkend="Edga06"></div>).
               </div><a name="TwoWayGlobalAlignmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e105">
                  <div class="title e106">Two-Way Global Alignment</div>
                  <div class="para e107">A multiple sequence alignment is usually built up from a series of two-way alignments,
                     for which an optimal dynamic programming solution has existed since 1970 (
                     <div class="xref e108" linkend="Need70"></div>). This calculates a ‘global’ alignment, because it aligns every character in the
                     two sequences.
                  </div>
                  <div class="mediaobject e109">
                     <div class="imageobject e110">
                        <div class="metaBox e111"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e183').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e183" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e111'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-004.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e112">
                        <div class="para e113">Figure 4: Needleman-Wunsch Algorithm</div>
                     </div>
                  </div>
                  <div class="para e114">In Figure 4 a 2-D matrix representing the alignment of the two strings is filled from
                     the bottom right-hand corner to the top left-hand corner, one cell at a time. Each
                     cell is filled with 1 if the letters at those coordinates match, otherwise 0, 
                     <div class="emphasis e115">plus</div> the maximum cell-value of the next row and column down and to the right. Once filled,
                     the matrix can be used to recover a common subsequence with the highest score by following
                     matching pairs from 0,0 down and to the right. There may be more than one such optimal
                     path through the matrix.
                  </div>
                  <div class="para e116">Although it is theoretically possible to extend their method to n sequences, the time
                     and space requirements increase exponentially for n &gt; 2. For this reason only the
                     2-way alignments of all possible 
                     <div class="emphasis e117">pairs</div> of sequences are normally computed, which are then used to construct a close approximation
                     to a global n-way alignment. Even this shortcut turns out to be quite expensive, since
                     the number of possible pairs of n sequences is n(n-1)/2. And the computation of the
                     alignment for each pair of sequences also costs O(MN(M+N)) time, where N and M are
                     the lengths of the two sequences. To give some idea of just how costly that is, the
                     computation of the optimal pairwise alignments of the 36 versions of the Sibylline
                     Gospel (
                     <div class="xref e118" linkend="Schm08"></div>), i.e. 630 pairwise combinations, each around 2,500 characters long, took 6.6 hours
                     on an ordinary desktop computer.
                  </div>
               </div><a name="ProgressiveAlignmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e119">
                  <div class="title e120">Progressive Alignment</div>
                  <div class="para e121">One popular way of aligning multiple sequences is progressive alignment (
                     <div class="xref e122" linkend="Feng87"></div>). In this method the global pairwise alignments of a set of sequences are scored
                     for similarity and the results are used to construct a phylogenetic tree, which records
                     the stemmatic relationships between sequences, to act as a ‘guide’ for the merging
                     process. The multiple-sequence alignment or MSA (Figure 5) is then built up by starting
                     with the most similar pair of sequences, adding gaps where needed (and never removed
                     once inserted), then gradually adding in the other sequences as dictated by the guide-tree.
                     Modern examples of this approach include CLUSTALW (
                     <div class="xref e123" linkend="Thom94"></div>) and T-COFFEE (
                     <div class="xref e124" linkend="Notr00"></div>), although the latter augments the usual progressive technique with iterative refinement.
                  </div>
                  <div class="mediaobject e125">
                     <div class="imageobject e126">
                        <div class="metaBox e127"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e212').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e212" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e127'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-005.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e128">
                        <div class="para e129">Figure 5: Multiple Sequence Alignment</div>
                     </div>
                  </div><a name="DisadvantagesofProgressiveAlignmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e130">
                     <div class="title e131">Disadvantages of Progressive Alignment</div>
                     <div class="para e132">Because this method was originally developed to handle short sequences, it doesn’t
                        take account of transpositions, or repeated segments, which appear to be common features
                        of longer protein sequences (
                        <div class="xref e133" linkend="Pevz04"></div>; 
                        <div class="xref e134" linkend="Delc02"></div>; 
                        <div class="xref e135" linkend="Gu99"></div>).
                     </div>
                     <div class="para e136">Also, it is a greedy algorithm sensitive to the order in which the sequences are added
                        to the 
                        MSA. Alignment errors that occur early on get locked in and lead to greater divergences
                        
                        later (
                        <div class="xref e137" linkend="Thom94"></div>).
                     </div>
                     <div class="para e138">The initial pairwise alignments are particularly expensive to calculate. This limits
                        the number and length of sequences that can be aligned.
                     </div>
                     <div class="para e139">Progressive alignment is based on the concept of edit distance (
                        <div class="xref e140" linkend="Leve66"></div>). This is a count of the number of insertions, deletions and substitutions of individual
                        characters that need to be performed to turn one string into another. This can only
                        ever approximate the real biological processes that gave rise to the differences (
                        <div class="xref e141" linkend="Lass02"></div>, 13; 
                        <div class="xref e142" linkend="Lesk02"></div>, 168).
                     </div>
                  </div>
               </div><a name="PartialOrderAlignmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e143">
                  <div class="title e144">Partial Order Alignment</div>
                  <div class="para e145">A relatively new technique of multiple sequence alignment called POA or Partial Order
                     Alignment has been described by Lee et al. (
                     <div class="xref e146" linkend="Lee02"></div>) and Grasso et al. (
                     <div class="xref e147" linkend="Gras04"></div>). The roots of their method go back to Morgenstern’s Dialign program (
                     <div class="xref e148" linkend="Morg96"></div>). In that method, as in MAFFT (
                     <div class="xref e149" linkend="Kato02"></div>), highly similar regions within two sequences are first identified. They are then
                     resolved into a non-overlapping set of diagonals in n Dimensions, then added to the
                     MSA using a greedy strategy. Unaligned regions are then processed recursively. The
                     difference here is that gaps are no longer explicitly introduced: they are simply
                     what is left over once the aligned portions have been determined.
                  </div>
                  <div class="para e150">POA takes this strategy one step further: it replaces the MSA matrix with a directed
                     graph.  Instead of pairwise alignment they align each successive sequence – in no
                     particular order – to a partly-built PO-MSA (Partial Order Multiple Sequence Alignment).
                     In their method the initial computation of n(n-1)/2 pairwise alignments is not a preliminary
                     step, but is instead integrated into the alignment process. Because a PO-MSA contains
                     far less data than that contained in all possible pairs of sequences, the computational
                     cost is drastically reduced. 
                  </div>
                  <div class="para e151">Figure 6 shows their adaptation of the dynamic programming method to the directed
                     graph structure. Instead of aligning two linear sequences within a flat 2-D matrix,
                     in the the PO-MSA method the 2-D matrix becomes a complex planar surface corresponding
                     to the partly merged structure of the directed graph, on the one hand, and the new
                     linear sequence, on the other. At each join between surfaces the program has to decide
                     which surface to align with. Regardless of the order in which the sequences are added
                     to the alignment, each possible pairwise combination of sequences will be considered,
                     since each new sequence is compared to all those already in the graph.
                  </div>
                  <div class="mediaobject e152">
                     <div class="imageobject e153">
                        <div class="metaBox e154"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e260').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e260" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e154'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-006.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e155">
                        <div class="para e156">Figure 6: PO-MSA Alignment</div>
                     </div>
                  </div>
                  <div class="para e157">The speed of the program is impressive, but the quality of the alignments is somewhat
                     less than could be achieved by traditional progressive alignment techniques (
                     <div class="xref e158" linkend="Lass02"></div>). Grasso et al. (
                     <div class="xref e159" linkend="Gras04"></div>) think the cause is partly that the original algorithm still appears to be sensitive
                     to the order in which sequences are added to the PO-MSA. This is probably because,
                     unlike the progressive method, each new version is aligned only with those versions
                     already in the graph, not with those still to be added.
                  </div><a name="DisadvantagesofPOAANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e160">
                     <div class="title e161">Disadvantages of POA</div>
                     <div class="para e162">In spite of its innovative data model, the POA graph and associated software can’t
                        handle transpositions or repeated segments. The remaining order sensitivity seems
                        to be an inherent deficiency of this approach.
                     </div>
                  </div>
               </div>
            </div><a name="deBruijnandABruijnGraphsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e163">
               <div class="title e164">de Bruijn and A-Bruijn Graphs</div>
               <div class="para e165">The second area in bioinformatics that provides a close analogy to the current problem
                  is a more radical solution to the multiple sequence alignment problem. It evolved
                  from the related field of contig-assembly. Starting in the 1980s DNA sequencing machines
                  were developed which output fragments of DNA, typically 650 base pairs in length (
                  <div class="xref e166" linkend="Delc02"></div>, 2480). These short segments have to be assembled correctly into longer ‘contigs,’
                  which is an NP-hard problem. Pevzner (
                  <div class="xref e167" linkend="Pevz89"></div>), Idury and Waterman (
                  <div class="xref e168" linkend="Idur95"></div>) and Pevzner (
                  <div class="xref e169" linkend="Pevz01"></div>) developed a heuristic method in which each DNA fragment was broken up into a series
                  of short overlapping substrings of fixed length. For example, if all possible substrings
                  of length 3 are calculated for the string ‘AGTCGTATAC’, then the original string can
                  be reassembled by overlapping these substrings to form the directed graph of Figure
                  7.
               </div>
               <div class="mediaobject e170">
                  <div class="imageobject e171">
                     <div class="metaBox e172"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e290').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e290" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e172'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-007.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e173">
                     <div class="para e174">Figure 7: A Sequence Graph</div>
                  </div>
               </div>
               <div class="para e175">Each node represents two characters shared by its two adjacent arcs, which are labelled
                  with the 3-character substrings. The cycles record the repeats ‘GT’ and ‘TA’. In practice
                  the length of the substrings would be much greater than 3 – around 20 or so (
                  <div class="xref e176" linkend="Pevz01"></div>, 9751).
               </div>
               <div class="para e177">This enabled them to reduce the contig-asssembly problem to one of finding an ‘Eulerian’
                  path through the graph. An Eulerian path is one that visits each arc exactly once,
                  although Idury and Waterman (
                  <div class="xref e178" linkend="Idur95"></div>, 295) interpret this to mean a path that may cross the same arc multiple times as
                  if it were a set of parallel arcs. The problem can then be solved in linear time by
                  Fleury's algorithm (
                  <div class="xref e179" linkend="Aldo00"></div>, 202).
               </div>
               <div class="para e180">The original de Bruijn graph represented all possible strings of length 
                  <div class="emphasis e181">k</div> over an alphabet 
                  <div class="emphasis e182">A</div> and was entirely cyclical (
                  <div class="xref e183" linkend="Debr46"></div>; 
                  <div class="xref e184" linkend="Good46"></div>). An example is shown in Figure 8, which shows all the 3-character sequences of the
                  alphabet {0,1}.
               </div>
               <div class="mediaobject e185">
                  <div class="imageobject e186">
                     <div class="metaBox e187"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e318').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e318" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e187'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-008.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e188">
                     <div class="para e189">Figure 8: A De Bruijn or Good Graph</div>
                  </div>
               </div>
               <div class="para e190">Raphael et al.'s approach is to add insertions and deletions to the ‘de Bruijn’ graph,
                  calling the result an A-Bruijn graph, and to use it as their data representation (
                  <div class="xref e191" linkend="Raph04"></div>). Although they succeed in representing transpositions (or ‘shuffles’) and repeats,
                  their method only aligns the highly similar regions of protein sequences, while the
                  rest is processed separately using progressive alignment techniques.
               </div><a name="DisadvantagesofdeBruijnandABruijnGraphsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e192">
                  <div class="title e193">Disadvantages of de Bruijn and A-Bruijn Graphs</div>
                  <div class="para e194">Using directed cycles to represent transpositions leads to complications, as admitted
                     by Pevzner (
                     <div class="xref e195" linkend="Pevz01"></div>, 9571). For example, if there are several arcs exiting a multiple arc, which of them
                     does one take, and in what order? And what if different sequences need to traverse
                     a multiple arc a different number of times? These complications, although they may
                     be overcome by careful labeling of the arcs, are unnecessary. A variant graph represents
                     transpositions without cycles (
                     <div class="xref e196" linkend="Schm09"></div>) and repeats can be treated as transpositions in the same version.
                  </div>
                  <div class="para e197">Also, what can be the advantage in breaking up the text and multiplying the amount
                     of data by a factor of twenty, then joining it all back up again? Pevzner et al. admit
                     that this actually throws away information, which has to be restored later (
                     <div class="xref e198" linkend="Pevz01"></div>, 9748).
                  </div>
                  <div class="para e199">The A-Bruijn graph also doesn’t appear to be editable.</div>
               </div><a name="DiscussionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e200">
                  <div class="title e201">Discussion</div>
                  <div class="para e202">It is interesting that biologists have now recognised that a useful way to represent
                     multiple sequence alignments might be to use a directed graph instead of a matrix,
                     although they have not yet worked out how best to do this. The mere fact that these
                     approaches are an active area of research, and resemble the variant graph approach,
                     provides a vindication of the overall MVD strategy. Many of the same problems described
                     above will also need to be dealt with when formulating a solution to the current problem.
                  </div>
               </div>
            </div><a name="AnchorBasedAlignersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e203">
               <div class="title e204">Anchor-Based Aligners</div>
               <div class="para e205">The third area of bioinformatics that overlaps with the current problem has developed
                  only recently. As a result of the successful sequencing of entire genomes, biologists
                  became interested in much larger scale alignments than had been possible via traditional
                  multiple sequence alignment. The limitation is imposed by the dynamic programming
                  technique and its essentially O(N
                  <div class="superscript e206">2</div>) performance and space requirements per pair of sequences. Also, at the level of
                  millions of base pairs, relocation, reversal and duplication events have become impossible
                  to ignore.
               </div>
               <div class="para e207">This need has been met by the rapid development of fragment based aligners, using
                  an anchoring strategy, similar to Heckel's (
                  <div class="xref e208" linkend="Heck78"></div>) algorithm. Anchoring is the process of first identifying the most similar parts
                  of two or more sequences. Once those have been identified and merged, the program
                  searches for further alignments in the unmerged portions of the sequences. The early
                  fragment based aligners worked only with two versions, e.g. MUMmer (
                  <div class="xref e209" linkend="Delc02"></div>); MultiPipMaker, based on BLASTZ (
                  <div class="xref e210" linkend="Schw00"></div>); Avid (
                  <div class="xref e211" linkend="Bray03"></div>) and LAGAN (
                  <div class="xref e212" linkend="Brud03a"></div>), and do not handle transpositions, reversals and duplications within the two sequences
                  being compared.
               </div><a name="ShuffleLAGANANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e213">
                  <div class="title e214">Shuffle-LAGAN</div>
                  <div class="para e215">Shuffle-Lagan or SLAGAN (
                     <div class="xref e216" linkend="Brud03b"></div>) was the first algorithm to add these more advanced editorial operations. However,
                     the authors decline to define a mathematical model for these events and their costs
                     (i56). The program is not symmetric: two different results will be obtained if the
                     two sequences are presented in the opposite order. It is also rather slow; the authors
                     quote a running time of 25 CPU-days to align the human and mouse genomes (i56).
                  </div>
               </div><a name="MauveANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e217">
                  <div class="title e218">Mauve</div>
                  <div class="para e219">Mauve (
                     <div class="xref e220" linkend="Darl04"></div>) handles transpositions, reversals and duplications, and multiple long sequences.
                     Like the other fragment-based alignment programs, Mauve is based on anchors. The alignment
                     process is shown in Figure 9.
                  </div>
                  <div class="mediaobject e221">
                     <div class="imageobject e222">
                        <div class="metaBox e223"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e382').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e382" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e223'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-009.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e224">
                        <div class="para e225">Figure 9: Anchor-based Alignment in Mauve</div>
                     </div>
                  </div>
                  <div class="para e226">In the first stage the program searches for Maximal Unique Matches across all the
                     versions, the so-called ‘multiMUMs’. The multiMUMs are used to generate a phylogenetic
                     guide tree. Successive multiMUMs that don’t overlap are then merged into local co-linear
                     blocks or LCBs (2).  These act as anchors and allow the identification of further
                     multi-MUMs within and between the LCBs. The identification and merging of LCBs then
                     proceeds recursively (3). Finally, progressive alignment is performed on each LCB
                     using the guide tree.
                  </div>
                  <div class="para e227">The authors don’t say how fast it is, but it must be slower than Shuffle-LAGAN since
                     it deals with more versions and uses progressive alignment. Its weakest point appears
                     to be that it has no special data representation for the transpositions, and instead
                     uses colour and interconnecting lines to adapt the traditional MSA matrix display.
                  </div>
               </div><a name="DiscussionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e228">
                  <div class="title e229">Discussion</div>
                  <div class="para e230">Unlike the dynamic programming techniques considered earlier, fragment based approaches
                     are able to process much longer sequences. They are also able to identify transpositions.
                     If the progressive alignment stage is removed, they also have the potential to be
                     very fast.
                  </div>
               </div>
            </div>
         </div><a name="TranspositionAlgorithmsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e231">
            <div class="title e232">Transposition Algorithms</div>
            <div class="para e233">The transposition operation, which is a key part of the current problem, has been
               little studied in the fields of source code management (version control) and text
               processing. For these purposes simply calculating the insertions and deletions between
               two texts at a time, the so-called ‘diffs’ usually suffices. Tichy (
               <div class="xref e234" linkend="Tich84"></div>), for example, reports that adding transposition to the standard diff algorithm for
               source code management systems only improved performance by 7%. Apart from a couple
               of practical algorithms for computing transpositions, most of the work is theoretical.
            </div>
            <div class="para e235">Heckel's 1978 algorithm is the earliest known (
               <div class="xref e236" linkend="Heck78"></div>). It first identifies all the unique lines shared by the two strings, and extends
               them on either side as long as they match in both versions. If the order of these
               blocks differs in the two versions they are considered transposed, and otherwise aligned.
               His method, however, fails if there are no unique lines shared by the two strings.
               
            </div>
            <div class="para e237">Tichy (
               <div class="xref e238" linkend="Tich84"></div>) proposed a linear time algorithm using a suffix tree for finding what he called
               the ‘minimal covering set’ of block moves between two strings. He defines a covering
               set to mean that every character appearing in both strings is covered by some block
               move. As shown in Figure 10, a minimal set is just a set of such moves of minimal
               size. Neither string need be entirely covered by the moves, however, and the moves
               may overlap.
            </div>
            <div class="mediaobject e239">
               <div class="imageobject e240">
                  <div class="metaBox e241"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e412').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e412" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e241'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-010.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e242">
                  <div class="para e243">Figure 10: Tichy's Minimal Covering Set</div>
               </div>
            </div>
            <div class="para e244">On the theoretical side, the complexity of the transposition problem was first investigated
               by Wagner (
               <div class="xref e245" linkend="Wagn75"></div>). He proved that even the addition of simple transpositions of two adjacent characters
               changes the computational complexity of the edit distance problem from quadratic to
               NP-complete.
            </div>
            <div class="para e246">The edit distance problem with block moves was then investigated in depth by Lopresti
               and Tomkins (
               <div class="xref e247" linkend="Lopr97"></div>). They examined variations of the problem in which:
            </div>
            <div class="orderedlist e248">
               <div class="listitem e249">
                  <div class="para e250">The blocks are disjoint, i.e. they don’t overlap, denoted by D, or if they do by 
                     <div class="inlinemediaobject e251">
                        <div class="imageobject e252">
                           <div class="metaBox e253"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e430').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e430" class="metaSource" style="display:none;">                
                                 &lt;imagedata<span class="metaAttribute">class='e253'
                                    </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-011.png'
                                    </span><span class="metaAttribute">format='png'
                                    </span>
                                 &gt;
                                 
                              </div>
                           </div>
                        </div>
                     </div>.
                  </div>
               </div>
               <div class="listitem e254">
                  <div class="para e255">The blocks form a cover, i.e. the transposed blocks occupy all of the text, denoted
                     by C or by 
                     <div class="inlinemediaobject e256">
                        <div class="imageobject e257">
                           <div class="metaBox e258"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e437').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e437" class="metaSource" style="display:none;">                
                                 &lt;imagedata<span class="metaAttribute">class='e258'
                                    </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-012.png'
                                    </span><span class="metaAttribute">format='png'
                                    </span>
                                 &gt;
                                 
                              </div>
                           </div>
                        </div>
                     </div> if they don’t.
                  </div>
               </div>
            </div>
            <div class="para e259">For each of the possible combinations of C,
               <div class="inlinemediaobject e260">
                  <div class="imageobject e261">
                     <div class="metaBox e262"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e443').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e443" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e262'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-012.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>,D,
               <div class="inlinemediaobject e263">
                  <div class="imageobject e264">
                     <div class="metaBox e265"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e447').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e447" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e265'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-011.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div> they examined the cost of computing the string edit distance between two strings
               A and B. Using the C,D notation the CD-CD problem is the computation of the string
               edit distance for a disjoint cover for strings A and B. They reduce each such combination
               to job scheduling – a known NP-complete problem (
               <div class="xref e266" linkend="Gare79"></div>). They conclude that the only variations that are not NP-complete are those involving
               
               <div class="inlinemediaobject e267">
                  <div class="imageobject e268">
                     <div class="metaBox e269"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e453').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e453" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e269'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-012.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="inlinemediaobject e270">
                  <div class="imageobject e271">
                     <div class="metaBox e272"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e456').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e456" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e272'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-011.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div> for one of the sequences.  It is clear that the current problem here is 
               <div class="inlinemediaobject e273">
                  <div class="imageobject e274">
                     <div class="metaBox e275"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e460').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e460" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e275'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-012.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>D-
               <div class="inlinemediaobject e276">
                  <div class="imageobject e277">
                     <div class="metaBox e278"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e465').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e465" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e278'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-012.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>D, which is NP-complete. These results are confirmed by Shapira and Storer (
               <div class="xref e279" linkend="Shap02"></div>).
            </div><a name="DiscussionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e280">
               <div class="title e281">Discussion</div>
               <div class="para e282">The practical solutions in this section are not much use for the current problem since
                  they only deal with two versions at a time. Also, since the current problem is NP-complete,
                  it will not be possible to design an algorithm to calculate an optimal solution with
                  respect to edit distance. This is not as bad a result as it seems, since:
               </div>
               <div class="orderedlist e283">
                  <div class="listitem e284">
                     <div class="para e285">there is no generally agreed measure of edit distance for transpositions, as there
                        is for insertions, deletions and substitutions
                     </div>
                  </div>
                  <div class="listitem e286">
                     <div class="para e287">just as evolutionary events are not precisely modelled by edit distance, so too an
                        ‘optimal’ alignment in a computational sense may not correspond to an optimal alignment
                        in an aesthetic sense.
                     </div>
                  </div>
               </div>
               <div class="para e288">A well-designed heuristic algorithm, then, might actually produce better results,
                  as well as take less time.
               </div>
            </div>
         </div><a name="CollationAlgorithmsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e289">
            <div class="title e290">Collation Algorithms</div>
            <div class="para e291">The third area of analogous research belongs to the more familiar field of humanities
               computing. A collation program is designed to automate a manual task: the comparison
               of a number of texts to discover their differences, and output them as an apparatus
               criticus (
               <div class="xref e292" linkend="Shil96"></div>, 134). These differences could then be used to construct a stemma or phylogenetic
               tree, which would in turn be used in the establishment of the one ‘true’ text (
               <div class="xref e293" linkend="Gree94"></div>, 359-360). Clearly, this process belongs to the age of print, but even in the modern
               digital era there is still a need to compare texts. The current problem can be regarded
               as a reframing of that process for the digital medium.
            </div><a name="SlidingWindowCollatorsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e294">
               <div class="title e295">Sliding Window Collators</div>
               <div class="para e296">Froger (
                  <div class="xref e297" linkend="Frog68"></div>, 230) describes the execution of what was probably the world's first collation program,
                  running on a Bull GE-55 computer that had only 5K of internal memory. It compared
                  two texts, one word at a time. If there was a mismatch the program gradually increased
                  its lookahead to 2, 5, 25, ... words, comparing all of the words with one another
                  in this window until it found a match, then sliding the window on by one word at a
                  time. This allowed it to recognise insertions, deletions and substitutions over short
                  distances.
               </div>
               <div class="para e298">This sliding window design, although later much enhanced, appears to have been the
                  basis of all collating programs until recently. Its main disadvantages are that it
                  can’t recognise transpositions, and that it will fail to correctly align inserted
                  or deleted sections larger than its window size. Computational complexity for each
                  pair of versions is O(NW
                  <div class="superscript e299">2</div>), where W is the sliding window size, and N is the average length of the two sequences.
                  Typically a modern collation program will compare each version against a single, and
                  possibly idealistic, base text. Examples include COLLATE (
                  <div class="xref e300" linkend="Robi89"></div>, 102) and TUSTEP (
                  <div class="xref e301" linkend="Ott00"></div>).
               </div>
            </div><a name="ProgressiveAlignmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e302">
               <div class="title e303">Progressive Alignment</div>
               <div class="para e304">Spencer and Howe (
                  <div class="xref e305" linkend="Spen04"></div>) apply biological progressive alignment to medieval texts of the Canterbury Tales
                  and Parzival. They point out that current automatic collation techniques mimic the
                  original manual process too closely. In particular they object that comparing each
                  version against a base text omits important comparisons between individual witnesses.
                  However, their main objective is to generate a phylogenetic tree or stemma, rather
                  than to produce an apparatus.
               </div>
            </div><a name="JUXTAANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e306">
               <div class="title e307">JUXTA</div>
               <div class="para e308">JUXTA (
                  <div class="xref e309" linkend="Mcga06"></div>) is an open source program, whose collation algorithm is an adaptation of Heckel's
                  (1978). The adaptation consists in reducing the granularity from a line to a word,
                  and in calling it recursively on the unaligned parts. JUXTA collates plain text with
                  embedded empty XML elements as milestone references, like the COCOA references in
                  COLLATE. JUXTA can also be used to produce an apparatus criticus.
               </div>
            </div><a name="MEDITEANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e310">
               <div class="title e311">MEDITE</div>
               <div class="para e312">MEDITE (
                  <div class="xref e313" linkend="Bour07"></div>) is a two-way alignment algorithm based loosely on the fragment based aligners Shuffle-LAGAN
                  and Mauve. The advantage of this approach, in which the transpositions and matches
                  are identified first, then substitutions, insertions and deletions, is that a linear
                  performance can be achieved. The algorithm is basically:
                  
                  <div class="orderedlist e314">
                     <div class="listitem e315">
                        <div class="para e316">Normalise the two texts in some predefined way, e.g. removal of punctuation, reduction
                           to lowercase, removal of accents etc.
                        </div>
                     </div>
                     <div class="listitem e317">
                        <div class="para e318">Build a generalised suffix tree between strings A and B, as described in (
                           <div class="xref e319" linkend="Gusf97"></div>, 125). This calculates MUMs between the two strings in linear time.
                        </div>
                     </div>
                     <div class="listitem e320">
                        <div class="para e321">Decide which matches are aligned and which are transposed. Since the number of combinations
                           of matches generated by step 2 is exponential, a LIS heuristic (
                           <div class="xref e322" linkend="Guye97"></div>) is used to find a good alignment.
                        </div>
                     </div>
                     <div class="listitem e323">
                        <div class="para e324">Repeat steps 2 and 3 recursively between each pair of aligned blocks.</div>
                     </div>
                  </div>
               </div>
            </div><a name="DisadvantagesofCollationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e325">
               <div class="title e326">Disadvantages of Collation</div>
               <div class="para e327">Collation algorithms have several potential weaknesses. They are mostly slow, and
                  generally collate 
                  <div class="emphasis e328">plain</div> text, rather than XML. Nowadays transcriptions of documents in linguistics and the
                  humanities are more likely to be in some form of XML. The problem is that if one collates
                  XML, then the generated apparatus will contain unmatched tags. Markup will then have
                  to be ignored, but that means losing valuable information.
               </div>
               <div class="para e329">The inclusion of COCOA or empty XML references embedded in the text precludes the
                  use of any other kind of markup, such as structural markup. But references are only
                  needed for attaching the apparatus to the main text, and this could be done away with
                  in a purely digital edition.
               </div>
               <div class="para e330">Comparison needs to be between all versions at once. Currently only Spencer and Howe's
                  (
                  <div class="xref e331" linkend="Spen04"></div>) method achieves this.
               </div>
               <div class="para e332">Transpositions need to be detected, especially when a work is witnessed by many independent
                  copies. Few of the algorithms do this, and none over n versions.
               </div>
               <div class="para e333">Taken together, the most advanced algorithm appears to be Bourdaillet's (
                  <div class="xref e334" linkend="Bour07"></div>). However, it can only consider two versions at a time, and so cannot be directly
                  applied to the current problem.
               </div>
            </div>
         </div>
      </div><a name="AFastAlgorithmtoMergenVersionswithBlockMovesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e335">
         <div class="title e336">A Fast Algorithm to Merge n Versions with Block Moves</div>
         <div class="para e337">The preceding sections have described the various techniques and pitfalls of aligning
            n versions with or without block transpositions. As explained at the beginning of
            this paper, if the MVD concept is to become a viable solution, some means must be
            provided to update an MVD with the text of a new or existing version. This can only
            be achieved if a number of conditions are met:
         </div>
         <div class="orderedlist e338">
            <div class="listitem e339">
               <div class="para e340">It has to work in ‘real’ time, so that the user doesn’t lose interest in the process.
                  In other words, the algorithm must terminate correctly in the order of seconds, rather
                  than minutes, hours or days.
               </div>
            </div>
            <div class="listitem e341">
               <div class="para e342">It has to detect transpositions automatically.</div>
            </div>
            <div class="listitem e343">
               <div class="para e344">It doesn’t have to produce 100% accurate alignments, but it should be accurate enough
                  for the user not to notice.
               </div>
            </div>
            <div class="listitem e345">
               <div class="para e346">It needs to update by aligning the new version with 
                  <div class="emphasis e347">all</div> versions currently in the MVD. Otherwise editing will gradually degrade the quality
                  of the alignment.
               </div>
            </div>
         </div><a name="AlignmentWithoutTransposingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e348">
            <div class="title e349">Alignment Without Transposing</div>
            <div class="para e350">Before considering the complications arising from transpositions, the algorithm’s
               processing of direct alignments will be described. This will simplify the transposition
               case and provide a better overall understanding of how the algorithm works. For direct
               alignments the procedure is basically:
            </div><a name="Algorithm1ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e351">
               <div class="title e352">Algorithm 1</div>
               <div class="programlisting e353" xml:space="preserve">
                  1. Find the longest MUM (Maximal Unique Match) between the new version and the versions
                  of the variant 
                  graph.
                  2. Merge the new version and the graph at that point, partitioning them both into
                  two halves.
                  3. Call the algorithm recursively on the two subgraphs, each spanned by one segment
                  of the new 
                  version.
               </div>
            </div><a name="FindingTheBestMUMANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e354">
               <div class="title e355">Finding The Best MUM</div>
               <div class="para e356">When comparing two strings, a Maximal Exact Match, or MEM, is a sequence of consecutive
                  matching characters in both strings that cannot be extended at either end. A MUM,
                  or Maximal Unique Match, is a MEM that occurs only once in the two strings (
                  <div class="xref e357" linkend="Delc02"></div>). In Figure 11 ‘the quick brown fox’ and ‘ brown fox jumps over the ’ are both MUMs,
                  while ‘the ’ is a MEM that also occurs elsewhere.
               </div>
               <div class="mediaobject e358">
                  <div class="imageobject e359">
                     <div class="metaBox e360"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e606').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e606" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e360'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-013.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e361">
                     <div class="para e362">Figure 11: Maximal Exact Match and Maximal Unique Match</div>
                  </div>
               </div>
               <div class="para e363">In the current problem MUMs will be sought between the new version being added to
                  the graph and the entire graph, the longest of which is the best MUM. They need to
                  be MUMs and not MEMs because otherwise erroneous alignments would be generated. For
                  example, choosing arbitrary instances of multiple spaces at the start of lines, or
                  repeated sequences of markup tokens as points of equivalence would lead to serious
                  misalignments.
               </div>
               <div class="para e364">Finding the best MUM is related to the problem of finding the Longest Common Substring
                  (LCS) between two strings. A naive approach to finding the LCS might look like this:
               </div>
               <div class="orderedlist e365">
                  <div class="listitem e366">
                     <div class="para e367">Examine each character in the first string and compare it with each character in the
                        second string.
                     </div>
                  </div>
                  <div class="listitem e368">
                     <div class="para e369">If the two characters are the same, continue comparing successive positions in the
                        two strings until you get a mismatch.
                     </div>
                  </div>
                  <div class="listitem e370">
                     <div class="para e371">Store the match in a table. If it was already present, increment its count by 1.</div>
                  </div>
                  <div class="listitem e372">
                     <div class="para e373">Once all characters in the first string have been used up, the best MUM is the longest
                        string in the table whose frequency is 1.
                     </div>
                  </div>
               </div>
               <div class="para e374">Two problems with this naive approach are immediately clear: firstly it is inefficient,
                  since it will take O(MN) time, where M and N are the lengths of the two strings. Secondly,
                  the number of strings in the table will be enormous, as many as M
                  <div class="superscript e375">2</div>N
                  <div class="superscript e376">2</div>. A much faster and more space-efficient way is to use suffix trees.
               </div>
               <div class="para e377">A suffix tree stores all the suffixes of a given string. In Figure 12 each path from
                  the root to a leaf spells out one possible suffix of ‘Woolloomooloo’. In the leaves
                  are stored the start position of each suffix in the original string. A node labelled
                  λ indicates that at this point in the tree a suffix occurs with no further text, e.g.
                  for the suffixes ‘oo’ and ‘o’. A suffix tree can be used to find any 
                  <div class="emphasis e378">substring</div> of length M in that string with just M comparisons, however long the string may be.
               </div>
               <div class="mediaobject e379">
                  <div class="imageobject e380">
                     <div class="metaBox e381"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e642').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e642" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e381'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-014.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e382">
                     <div class="para e383">Figure 12: A Suffix Tree of ‘Woolloomooloo’</div>
                  </div>
               </div>
               <div class="para e384">A suffix tree can be constructed in linear time using Ukkonen's algorithm (
                  <div class="xref e385" linkend="Ukko95"></div>). The LCS between two strings can also be calculated in linear time by building what
                  is called a ‘generalised suffix tree’ (
                  <div class="xref e386" linkend="Gusf97"></div>, 125). A generalised suffix tree represents n strings instead of 1. For two strings
                  this method constructs a suffix tree from one of the strings in linear time, then
                  carries on building the same tree with the second string. The leaf nodes are labelled
                  by the number of the string and the starting index in either or both strings. Any
                  internal node that has only two leaves as children, one from each string, or any leaf
                  shared by the two strings, must be the suffix of a MUM. The MUM itself can be recovered
                  by counting backwards in both strings until a mismatch. 
               </div>
               <div class="para e387">Unfortunately, it is unclear if one can build a suffix tree from a variant graph.
                  How are the suffixes to be identified, and how can one represent starting offsets
                  within arcs that belong to multiple versions? In any case the gains from using a generalised
                  suffix tree appear to be minimal in practice, since its use greatly increases storage
                  requirements.
               </div>
               <div class="para e388">The method adopted here resembles the streaming technique used in MUMmer (
                  <div class="xref e389" linkend="Delc02"></div>). In this method only one suffix tree is built. The other sequence is then streamed
                  against it to find matches.
               </div>
               <div class="mediaobject e390">
                  <div class="imageobject e391">
                     <div class="metaBox e392"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e661').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e661" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e392'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-015.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e393">
                     <div class="para e394">Figure 13: Finding Matches </div>
                  </div>
               </div>
               <div class="para e395">The place of the streamed sequence can be taken by the variant graph, whose characters
                  can be exhaustively listed by breadth-first traversal (
                  <div class="xref e396" linkend="Sedg88"></div>, 430f). Each successive character from the graph is traced in a suffix tree built
                  from the text of the new version, as shown in Figure 13. At the end of an arc, for
                  example, at node 3, MATCH calls itself recursively on each diverging arc until a mismatch
                  occurs. At this point the MATCH procedure has detected a raw match, of which there
                  are likely to be very many. Since all that is wanted is the longest MUM, some filtering
                  of matches is clearly required.
               </div>
               <div class="orderedlist e397">
                  <div class="listitem e398">
                     <div class="para e399">Any match shorter than a minimum length (typically 3-5) can be discarded. The user,
                        however, may set this  to 1 for a  finer-grained alignment.
                     </div>
                  </div>
                  <div class="listitem e400">
                     <div class="para e401">Many matches are not unique in the suffix tree. Any match that terminates in an internal
                        node shares a path with some other suffix in the tree, and can be discarded. This
                        also cuts out most short matches that pass the first filter.
                     </div>
                  </div>
                  <div class="listitem e402">
                     <div class="para e403">Most remaining matches are not maximal. This can be tested for by comparing the two
                        characters immediately preceding the match in the new version and the variant graph.
                        If they are the same, the match is not maximal and can be discarded.
                     </div>
                  </div>
               </div>
               <div class="para e404">Candidate MUMs surviving these tests are passed to the UPDATEMUM procedure. Experimental
                  data suggests that, with a minimum match length of five, only about 15% of matches
                  that make it through the three filters are not MUMs.
               </div>
            </div><a name="TimeComplexityoftheMATCHProcedureANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e405">
               <div class="title e406">Time Complexity of the MATCH Procedure</div>
               <div class="para e407">The cost of scanning for matches between the graph and the new version is O(M(1+
                  <div class="inlinemediaobject e408">
                     <div class="imageobject e409">
                        <div class="metaBox e410"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e688').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e688" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e410'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-016.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>)), where M is the number of characters in the graph, and 
                  <div class="inlinemediaobject e411">
                     <div class="imageobject e412">
                        <div class="metaBox e413"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e692').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e692" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e413'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-016.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div> the average length of a match in the suffix tree. In the case that the graph and
                  the new version have no characters in common, exactly M comparisons will be made.
                  On the other hand, in the worst case that the graph and the new version are identical,
                  the program will require NM/2 comparisons. So the time complexity lies between quadratic
                  and linear, depending on the number and distribution of differences between the graph
                  and the new version.
               </div>
            </div><a name="UpdatingtheMUMANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e414">
               <div class="title e415">Updating the MUM</div>
               <div class="para e416">The candidate MUMs, and their frequencies, are stored in a hashtable. When a new candidate
                  MUM arrives from the MATCH procedure, and is already present in the table, its frequency
                  is incremented, otherwise it is added to the table with frequency 1. After the scan
                  of the variant graph is complete, the longest match in the table whose frequency is
                  still 1 will be the best MUM. The cost of each update to the hashtable is constant,
                  and the cost of the final searching through the entries to find the best MUM is an
                  additional linear cost for the whole operation, which has no effect on the time complexity
                  of the algorithm.
               </div>
            </div><a name="MergingtheMUMintotheGraphANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e417">
               <div class="title e418">Merging the MUM into the Graph</div>
               <div class="para e419">Having found the longest MUM, the next step is to merge the new version with the variant
                  graph at that point. In fact, before searching for the MUM the new version has already
                  been added to the variant graph as a 
                  <div class="emphasis e420">special arc</div> connected to the start and end-nodes, as shown in Figure 14.
               </div>
               <div class="mediaobject e421">
                  <div class="imageobject e422">
                     <div class="metaBox e423"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e709').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e709" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e423'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-017.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e424">
                     <div class="para e425">Figure 14: Direct Alignment, First Iteration </div>
                  </div>
               </div><a name="Definition1ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e426">
                  <div class="title e427">Definition 1</div>
                  <div class="para e428">A 
                     <div class="emphasis e429">special arc</div> represents a new version as yet unassimilated into the variant graph, and is distinguished
                     in some way from other non-special arcs. In all other respects a special arc is still
                     part of the graph, and does not violate its definition because it is part of the unique
                     path of the new version. In Figure 14 the C-arc is a special arc, and is drawn in
                     grey to indicate its status. A special arc is associated with a MUM, which represents
                     its best fit to the variant graph. In Figure 14 the longest MUM, marked in bold, is
                     ‘&lt;/l&gt;&lt;l&gt;d’un antico acquedotto di sguardi,&lt;/l&gt;&lt;l&gt;la sua curva sacra e ’ (‘&lt;/l&gt;&lt;l&gt;of
                     an ancient aqueduct of glances,&lt;/l&gt;&lt;l&gt;its curve sacred and ’), taken from the B-version.
                     It can be merged with the rest of the variant graph by splitting the special arc and
                     the graph at each end of the MUM, then adding new nodes as required, and finally connecting
                     the new arcs to the right nodes. The result is shown in Figure 15.
                  </div>
                  <div class="mediaobject e430">
                     <div class="imageobject e431">
                        <div class="metaBox e432"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e723').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e723" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e432'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-018.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e433">
                        <div class="para e434">Figure 15: Direct Alignment, Second Iteration </div>
                     </div>
                  </div>
                  <div class="para e435">Figure 16 shows that there are now two subgraphs on either side of the newly aligned
                     section, and two subarcs left over from the special arc. The terms ‘subarc’ and ‘subgraph’
                     need to be defined because they will be used in the discussion that follows.
                  </div>
                  <div class="mediaobject e436">
                     <div class="imageobject e437">
                        <div class="metaBox e438"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e731').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e731" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e438'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-019.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e439">
                        <div class="para e440">Figure 16: Subgraphs and Subarcs </div>
                     </div>
                  </div>
               </div><a name="Definition2ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e441">
                  <div class="title e442">Definition 2</div>
                  <div class="para e443">A 
                     <div class="emphasis e444">subgraph</div> refers to either the entire graph, minus any special arcs, or to any subgraph thereof
                     that conforms to the definition of the variant graph. It has distinguished start and
                     end-nodes and a set of versions over which it ranges.
                  </div>
               </div><a name="Definition3ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e445">
                  <div class="title e446">Definition 3</div>
                  <div class="para e447">A 
                     <div class="emphasis e448">subarc</div> is a special arc left over after the merging of another special arc. In Figure 16
                     ‘&lt;l&gt;Questa è la ultima porta’ and ‘solitaria:&lt;/l&gt;’ are both subarcs.
                  </div>
                  <div class="para e449">Algorithm 1 can now be called on the subarcs and their corresponding subgraphs. This
                     process of alignment and recursion will continue until the length of a subgraph or
                     subarc falls below the minimum, or no further MUMs can be found. In Figure 16, the
                     right subgraph and its subarc can be merged by the shared MUM ‘a:&lt;/l&gt;’ and on the
                     left by ‘&lt;l&gt;Questa è la ultima ’. Once those merges have been carried out, however,
                     no further merges of more than one character are possible.
                  </div>
               </div><a name="OneSmallProblemANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e450">
                  <div class="title e451">One Small Problem</div>
                  <div class="para e452">In the subgraphs of Figure 16, the right subgraph no longer contains a complete A-version.
                     Since the A and B versions on the right are not parallel, it is impossible to tell
                     which portion of A corresponds to the remaining part of the C-version. This is not
                     ideal and does lead to some misalignments. For example, if the text of version C had
                     ended with ‘magic’ instead of ‘solitari’, then, after merging, ‘magic’ would occur
                     twice in the graph, as shown in Figure 17. Order sensitivity has not been entirely
                     banished, as in the POA algorithm.
                  </div>
                  <div class="mediaobject e453">
                     <div class="imageobject e454">
                        <div class="metaBox e455"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e760').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e760" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e455'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-020.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e456">
                        <div class="para e457">Figure 17: A Non-optimal Alignment</div>
                     </div>
                  </div>
                  <div class="para e458">One solution is to optimise the graph subsequently. Anomalies like these can be merged
                     away by reconsidering all combinations of arcs between shared endpoints once the first
                     pass of the algorithm has produced a rough version of the graph. In this way the two
                     ‘magic’s could be identified as identical variants of one another and merged. In bioinformatics
                     such iterative refinement techniques have produced high quality alignments, for example
                     TCOFFEE (
                     <div class="xref e459" linkend="Notr00"></div>) DIALIGN (
                     <div class="xref e460" linkend="Morg96"></div>) and MAFFT (
                     <div class="xref e461" linkend="Kato02"></div>). However, this problem does not so often arise in practice, and its solution is
                     left open for future work.
                  </div>
               </div>
            </div>
         </div><a name="AddingTranspositionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e462">
            <div class="title e463">Adding Transpositions</div>
            <div class="para e464">The addition of transpositions adds some complications to the simple algorithm just
               described. This section investigates why it is necessary to compute them at all, rather
               than simply identify them manually. It also describes how transpositions can be distinguished
               from random alignments between versions, and how they can be efficiently computed
               by a slight extension to the direct alignment algorithm.
            </div><a name="WhyDetectTranspositionsAutomatically?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e465">
               <div class="title e466">Why Detect Transpositions Automatically?</div>
               <div class="para e467">In texts written by the author evidence of actual transpositions could refute any
                  computational heuristic. Figure 18 shows a clear case of transposition. What need
                  could there be to 
                  <div class="emphasis e468">calculate</div> the presence of transpositions when their existence can be precisely verified in
                  this way?
               </div>
               <div class="mediaobject e469">
                  <div class="imageobject e470">
                     <div class="metaBox e471"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e787').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e787" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e471'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-021.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e472">
                     <div class="para e473">Figure 18: A Clear Case of Transposition</div>
                  </div>
               </div>
               <div class="para e474">Firstly, even in manuscripts written by the author, the presence of a transposition
                  may not always be immediately obvious. The author may choose to completely rewrite
                  the sentence or to indicate the transposition by some other means, such as insertion
                  and deletion, as in Figure 19.
               </div>
               <div class="mediaobject e475">
                  <div class="imageobject e476">
                     <div class="metaBox e477"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e795').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e795" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e477'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-022.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e478">
                     <div class="para e479">Figure 19: Deletion and Reinsertion of ‘la sera’</div>
                  </div>
               </div>
               <div class="para e480">Secondly, in the case of multiple drafts, or multiple witnesses of the one text, the
                  discovery of transpositions 
                  <div class="emphasis e481">between</div> physical versions is extremely difficult using any manual method. Even in the case
                  of original manuscripts with corrections by the author, a good automatic method could
                  produce the correct result most of the time. In that case, the editor would only be
                  obliged to manually intervene in a small number of cases. Exactly how such a manual
                  intervention would work is left for the moment as an open question.
               </div>
            </div><a name="WhatConstitutesaTransposition?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e482">
               <div class="title e483">What Constitutes a Transposition?</div>
               <div class="para e484">The edit cost of a transposition in biological sequences is considered to be constant,
                  e.g. Lopresti and Tomkins (1997). If this was also true of documentary texts then
                  even single characters that matched at the start and end of a long document would
                  have to be considered as potential transpositions, but intuitively that isn’t likely.
               </div>
               <div class="para e485">A metric for assessing the validity of transpositions may instead be modelled as a
                  threshold rather than as an edit cost. Whether a match is a transposition or not seems
                  to be a function of the match's size and the distance between its two halves. Over
                  what ranges those quantities of size and distance may vary can be determined by experiment.
               </div>
               <div class="para e486">A sample of 49 real cases of transposition were manually identified in a wide variety
                  of texts:
               </div>
               <div class="orderedlist e487">
                  <div class="listitem e488">
                     <div class="para e489">The Vienna Edition of Ludwig Wittgenstein (
                        <div class="xref e490" linkend="Nedo99"></div>)
                     </div>
                  </div>
                  <div class="listitem e491">
                     <div class="para e492">The Sibylline Gospel (
                        <div class="xref e493" linkend="Schm08"></div>)
                     </div>
                  </div>
                  <div class="listitem e494">
                     <div class="para e495">Some texts taken from the plays of Henrik Ibsen by Hilda Böe (
                        <div class="xref e496" linkend="Boe08"></div>)
                     </div>
                  </div>
                  <div class="listitem e497">
                     <div class="para e498">The 
                        <div class="emphasis e499">Refrains</div> of the 16th century Flemish poetess Anna Bijns (
                        <div class="xref e500" linkend="Vand08"></div>)
                     </div>
                  </div>
                  <div class="listitem e501">
                     <div class="para e502">The plays of Aeschylus (
                        <div class="xref e503" linkend="Page72"></div>)
                     </div>
                  </div>
                  <div class="listitem e504">
                     <div class="para e505">The 
                        <div class="emphasis e506">Ulysses</div> of James Joyce (
                        <div class="xref e507" linkend="Gabl84"></div>)
                     </div>
                  </div>
               </div>
               <div class="para e508">The results are shown in Figure 20. ‘Size’ means the length of the transposed text
                  and ‘distance’ is the distance in characters between the insertion and deletion points
                  before the transposition was carried out.
               </div>
               <div class="mediaobject e509">
                  <div class="imageobject e510">
                     <div class="metaBox e511"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e854').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e854" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e511'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-023.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e512">
                     <div class="para e513">Figure 20: Transpositions: Size vs Distance</div>
                  </div>
               </div>
               <div class="para e514">It is clear from this graph that real transpositions are mostly short-range affairs.
                  (Not considered here are 'transpositions' produced by the reordering of entire works
                  within a single manuscript, as in 
                  <div class="xref e515" linkend="Spen03"></div>.) An approximate heuristic is d &lt; |m|
                  <div class="superscript e516">φ</div>, where d is the distance between the two halves of the match, |m| its length, and
                  φ is the golden ratio, approximately 1.618034. This ratio is relevant for two reasons:
                  it has been used in the arts since classical times, particularly in architecture,
                  and also it expresses a ratio of relative length: (a+b)/a = a/b = φ. All 49 examples
                  meet this simple criterion. Using such a threshold yields the double benefit of decreasing
                  the amount of calculation while increasing accuracy.
               </div>
            </div><a name="MergingTranspositionsintotheVariantGraphANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e517">
               <div class="title e518">Merging Transpositions into the Variant Graph</div>
               <div class="para e519">Before describing the algorithm it is necessary to explain the difference between
                  merging a direct alignment with the variant graph and merging a transposition. Conceptually
                  a direct alignment and a transposition are very similar: both identify aligned parts
                  in the new version and the variant graph, but in the transposition case the two halves
                  of the alignment are not opposite one another.
               </div>
               <div class="mediaobject e520">
                  <div class="imageobject e521">
                     <div class="metaBox e522"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e872').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e872" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e522'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-024.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e523">
                     <div class="para e524">Figure 21: Merging a Transposition</div>
                  </div>
               </div>
               <div class="para e525">In Figure 21 ‘parrot’ has been identified as a transposition between versions B and
                  C. Merging has been carried out so that the two instances of ‘parrot’ in versions
                  B and C have been separated from their arcs by the addition of new nodes. This creates
                  two new subarcs ‘the raucous’ and ‘swiftly’ on the left, which are both opposite the
                  same subgraph ‘the dog’. The source instance ‘parrot’ in version B may still participate
                  in further transpositions or even in a direct alignment, for example, if the C-version
                  read ‘a surprised parrot’ instead of ‘a surprised lorikeet’. There is no harm in this,
                  and in fact this is one way to detect repetitions. Apart from the addition of a node
                  or two, merging a transposition does not materially change the structure of a variant
                  graph. All that happens is that one half of the match is marked as the parent (in
                  this case the B-version), and the other as the child (version C).
               </div>
            </div>
         </div><a name="ASimpleAlgorithmforDetectingTranspositionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e526">
            <div class="title e527">A Simple Algorithm for Detecting Transpositions</div>
            <div class="para e528">The place to look for transpositions of a special arc is thus anywhere 
               <div class="emphasis e529">except</div> in its opposite subgraph and any arcs parallel to it. But in order to apply the threshold
               formula derived above to restrict the range of that search, there needs to be some
               accurate and reliable way to specify the distance between the two halves of a transposition.
               In Figure 22 the special arc, shown in grey, spans its subgraph, which is shown in
               the context of the overall graph. The special arc contains two matches, shown as thicker
               lines. The distance between the two halves of each match is measured backwards or
               forwards, following the shortest path, from the end of the match in the special arc
               to the start of the transposed text in the graph. The objective here is not to solve
               the shortest path problem optimally – in fact, the very idea of using a shortest path
               is itself a heuristic – but simply to provide a fast way to estimate distance. A simple
               breadth-first traversal combined with a greedy calculation of the shortest path to
               any node from its immediate predecessors provides the appropriate linear performance.
            </div>
            <div class="mediaobject e530">
               <div class="imageobject e531">
                  <div class="metaBox e532"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e888').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e888" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e532'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Schmidt01/Schmidt01-025.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e533">
                  <div class="para e534">Figure 22: Measuring Transpose Distance </div>
               </div>
            </div>
            <div class="para e535">This measurement process also suggests an algorithm. To find what transpositions are
               possible for any special arc one only has to look to the left and right of the immediately
               opposite subgraph of a special arc, as far as the threshold formula allows. For any
               special arc A there is no point looking further than |A|
               <div class="superscript e536">φ</div> bytes to the left or right. Of course, any match m that is found, where |m| &lt; |A|
               also has to pass the threshold formula. Algorithm 2 uses this technique to modify
               Algorithm 1 to include transpositions, and also adds a bit more detail from the above
               discussion.
            </div><a name="Algorithm2ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e537">
               <div class="title e538">Algorithm 2</div>
               <div class="programlisting e539" xml:space="preserve">
                  1.  Set currentArc to a special arc made from the new version
                  2.  Set currentGraph to the variant graph
                  3.  Attach currentArc to the start and end of currentGraph
                  4.  Compute the bestMUM between currentArc and currentGraph
                  5.  Create a priority queue 
                  <div class="emphasis e540">specials</div> of tuples {Arc,MUM,Graph}
                  6.  WHILE bestMUM is not NULL DO
                  7.    Merge bestMUM into currentGraph.
                  8.    FOR each subarc created by the merge DO
                  9.      Compute the directMUM, leftTransposeMUM and rightTransposeMUM
                  10.     Set MUM to the best of the three
                  11.     IF MUM is not NULL THEN
                  12.       Insert {subarc,MUM,subgraph} into 
                  <div class="emphasis e541">specials;</div> keep it sorted
                  13.     END IF
                  14.   END FOR
                  15.   POP {currentArc, bestMUM, currentGraph} from 
                  <div class="emphasis e542">specials;</div>
                  16. END WHILE
                  
               </div>
               <div class="para e543">Algorithm 2 creates a priority queue of triples A
                  <div class="subscript e544">i</div>,M
                  <div class="subscript e545">i</div>,S
                  <div class="subscript e546">j</div>, where A
                  <div class="subscript e547">i</div> is a special arc, M
                  <div class="subscript e548">i</div> is its best MUM with the graph, and S
                  <div class="subscript e549">j</div> is its opposite subgraph. It has a j subscript, not i because, as explained above,
                  more than one special arc may share the same subgraph. The queue is kept sorted on
                  decreasing length of MUM (line 12). In line 7 the longest MUM is used to create 0-2
                  new subgraphs and subarcs. Each new subarc, together with its  subgraph and its best
                  MUM, are added to the 
                  <div class="emphasis e550">specials</div> queue. When the queue no longer contains a valid MUM the program terminates.
               </div>
               <div class="para e551">The calculation of the two transpose MUMs uses the same process as the direct MUM,
                  except that the variant graph is searched 
                  <div class="emphasis e552"> backwards</div> on the left hand side from the start node of the subgraph, and forwards from its
                  end node, as shown in Figure 22. The best such MUM found is recorded as the left or
                  right transpose MUM for the special arc. In choosing the best of three in line 10,
                  if a transpose MUM and a direct MUM are of the same length, the direct MUM is preferred.
               </div>
               <div class="para e553">This algorithm is admittedly naive, but it is easy to implement. In reality transpositions
                  are often composed of imperfectly matched sections, that is, literal matches interspersed
                  with small variants, deletions and insertions. Refinement of the algorithm to allow
                  for such fuzzy matching is left for future work. For the moment, this simple atomic
                  approach to transposition produces satisfactory results.
               </div>
            </div><a name="TimeComplexityofAlgorithm2ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e554">
               <div class="title e555">Time Complexity of Algorithm 2</div>
               <div class="para e556">There are three operations that have greater than constant cost:</div>
               <div class="orderedlist e557">
                  <div class="listitem e558">
                     <div class="para e559">Calculation of Direct Align MUMs (lines 4, 9). Since Algorithm 2 subdivides and recurses
                        into smaller and smaller sections of the graph without recalculating MUMs except where
                        a merge has been made, this process is essentially linear. The speed of the merge
                        operation is thus governed by the cost of calculating the best MUM, which is O(MN).
                     </div>
                  </div>
                  <div class="listitem e560">
                     <div class="para e561">Calculation of Transpose MUMs (line 9). The same observation applies to transpose
                        MUMs, and its cost is likewise governed by the cost of computing the best MUM.
                     </div>
                  </div>
                  <div class="listitem e562">
                     <div class="para e563">Keeping the 
                        <div class="emphasis e564">specials</div> Queue Sorted (line 12). Using a red-black tree the cost is only O(log Q), where Q
                        is the queue length (
                        <div class="xref e565" linkend="Sedg88"></div>, 218f). This has no impact on the overall time complexity because it is always much
                        cheaper than the cost of computing MUMs.
                     </div>
                  </div>
               </div>
               <div class="para e566">Thus, summing the direct alignment, transposition and sorting costs, the time complexity
                  of merging one version into a variant graph using Algorithm 2, with block transpositions,
                  is O(MN) in the worst case.
               </div>
            </div><a name="ExperimentalPerformanceofAlgorithm2ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e567">
               <div class="title e568">Experimental Performance of Algorithm 2</div>
               <div class="para e569">Algorithm 2 has been written up as a test program called 
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e570" xlink:actuate="onRequest" xlink:href="http://www.itee.uq.edu.au/~schmidt/downloads.html" xlink:show="new" xlink:type="simple">MergeTester</div> (http://www.itee.uq.edu.au/~schmidt/downloads.html), and has been run on a wide variety
                  of multi-version example texts. The parameters measured are: author, title, average
                  version size in kilobytes, number of versions, approximate date of manuscripts, total
                  time to merge all versions in seconds and average time to merge one version after
                  the first. Times were computed on a 1.66GHz processor. The test program was single-threaded.
               </div><a name="PerformanceofAlgorithm2onExampleTextsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e571">
                  <div class="title e572">Performance of Algorithm 2 on Example Texts</div>
                  <div class="table e573">
                     <div class="metaBox e574"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e976').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e976" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='left'
                              </span><span class="metaAttribute">class='e574'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="metaBox e575"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e977').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e977" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='left'
                              </span><span class="metaAttribute">class='e575'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="metaBox e576"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e978').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e978" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='center'
                              </span><span class="metaAttribute">class='e576'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="metaBox e577"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e979').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e979" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='center'
                              </span><span class="metaAttribute">class='e577'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="metaBox e578"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e980').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e980" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='left'
                              </span><span class="metaAttribute">class='e578'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="metaBox e579"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e981').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e981" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='center'
                              </span><span class="metaAttribute">class='e579'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="metaBox e580"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e982').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e982" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='center'
                              </span><span class="metaAttribute">class='e580'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="thead e581">
                        <div class="tr e582">
                           <div class="th e583" align="left">Author</div>
                           <div class="th e584">Title</div>
                           <div class="th e585">Size</div>
                           <div class="th e586"># Versions</div>
                           <div class="th e587">Date</div>
                           <div class="th e588">Total Time</div>
                           <div class="th e589">Time Per Version</div>
                        </div>
                     </div>
                     <div class="tbody e590">
                        <div class="tr e591">
                           <div class="td e592">Galiano</div>
                           <div class="td e593">El mapa de las aguas</div>
                           <div class="td e594" align="right">36.0</div>
                           <div class="td e595" align="center">3</div>
                           <div class="td e596">1993</div>
                           <div class="td e597" align="right">8.0</div>
                           <div class="td e598" align="right">4.0</div>
                        </div>
                        <div class="tr e599">
                           <div class="td e600">Chedid</div>
                           <div class="td e601">La robe noire</div>
                           <div class="td e602" align="right">1.3</div>
                           <div class="td e603" align="center">2</div>
                           <div class="td e604">1996</div>
                           <div class="td e605" align="right">0.2</div>
                           <div class="td e606" align="right">0.2</div>
                        </div>
                        <div class="tr e607">
                           <div class="td e608">Bijns</div>
                           <div class="td e609">Refrains</div>
                           <div class="td e610" align="right">15.4</div>
                           <div class="td e611" align="center">3</div>
                           <div class="td e612">16th C.</div>
                           <div class="td e613" align="right">5.0</div>
                           <div class="td e614" align="right">2.5</div>
                        </div>
                        <div class="tr e615">
                           <div class="td e616">Huygens</div>
                           <div class="td e617">Ooghentroost (fragment)</div>
                           <div class="td e618" align="right">3.4</div>
                           <div class="td e619" align="center">6</div>
                           <div class="td e620">17th C.</div>
                           <div class="td e621" align="right">2.0</div>
                           <div class="td e622" align="right">0.4</div>
                        </div>
                        <div class="tr e623">
                           <div class="td e624">Cerami</div>
                           <div class="td e625">La donna serpente</div>
                           <div class="td e626" align="right">12.0</div>
                           <div class="td e627" align="center">9</div>
                           <div class="td e628">1991</div>
                           <div class="td e629" align="right">7.6</div>
                           <div class="td e630" align="right">1.0</div>
                        </div>
                        <div class="tr e631">
                           <div class="td e632">Cerami</div>
                           <div class="td e633">Le visioni del calvo</div>
                           <div class="td e634" align="right">12.0</div>
                           <div class="td e635" align="center">5</div>
                           <div class="td e636">1991</div>
                           <div class="td e637" align="right">2.9</div>
                           <div class="td e638" align="right">0.7</div>
                        </div>
                        <div class="tr e639">
                           <div class="td e640">Cerami</div>
                           <div class="td e641">L'uovo di colombo</div>
                           <div class="td e642" align="right">12.0</div>
                           <div class="td e643" align="center">8</div>
                           <div class="td e644">1991</div>
                           <div class="td e645" align="right">3.0</div>
                           <div class="td e646" align="right">0.4</div>
                        </div>
                        <div class="tr e647">
                           <div class="td e648">Cerami</div>
                           <div class="td e649">Nascosti tra la folla</div>
                           <div class="td e650" align="right">12.0</div>
                           <div class="td e651" align="center">7</div>
                           <div class="td e652">1991</div>
                           <div class="td e653" align="right">4.9</div>
                           <div class="td e654" align="right">0.8</div>
                        </div>
                        <div class="tr e655">
                           <div class="td e656">Cerami</div>
                           <div class="td e657">Paul Newman</div>
                           <div class="td e658" align="right">10.0</div>
                           <div class="td e659" align="center">8</div>
                           <div class="td e660">1991</div>
                           <div class="td e661" align="right">5.7</div>
                           <div class="td e662" align="right">0.8</div>
                        </div>
                        <div class="tr e663">
                           <div class="td e664">Cerami</div>
                           <div class="td e665">Una donna alta</div>
                           <div class="td e666" align="right">12.0</div>
                           <div class="td e667" align="center">11</div>
                           <div class="td e668">1991</div>
                           <div class="td e669" align="right">16.3</div>
                           <div class="td e670" align="right">1.5</div>
                        </div>
                        <div class="tr e671">
                           <div class="td e672">Magrelli</div>
                           <div class="td e673">Campagna romana</div>
                           <div class="td e674" align="right">0.6</div>
                           <div class="td e675" align="center">15</div>
                           <div class="td e676">1981</div>
                           <div class="td e677" align="right">0.8</div>
                           <div class="td e678" align="right">0.05</div>
                        </div>
                        <div class="tr e679">
                           <div class="td e680">ANC Corpus</div>
                           <div class="td e681">Adams Elissa</div>
                           <div class="td e682" align="right">3.4</div>
                           <div class="td e683" align="center">5</div>
                           <div class="td e684">20th C.</div>
                           <div class="td e685" align="right">7.0</div>
                           <div class="td e686" align="right">1.7</div>
                        </div>
                        <div class="tr e687">
                           <div class="td e688">Anon</div>
                           <div class="td e689">Sibylline Gospel</div>
                           <div class="td e690" align="right">3.0</div>
                           <div class="td e691" align="center">36</div>
                           <div class="td e692">4th-12th C.</div>
                           <div class="td e693" align="right">28.4</div>
                           <div class="td e694" align="right">0.8</div>
                        </div>
                        <div class="tr e695">
                           <div class="td e696">Malvezzi</div>
                           <div class="td e697">El Rómulo</div>
                           <div class="td e698" align="right">98.2</div>
                           <div class="td e699" align="center">5</div>
                           <div class="td e700">17th C.</div>
                           <div class="td e701" align="right">68.0</div>
                           <div class="td e702" align="right">17.0</div>
                        </div>
                     </div>
                  </div>
               </div><a name="AlignmentQualityANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e703">
                  <div class="title e704">Alignment Quality</div>
                  <div class="para e705">As pointed out in Darling et al. (
                     <div class="xref e706" linkend="Darl04"></div>, 1398), anchor-based alignment techniques that detect transpositions are very difficult
                     to assess objectively. For multiple sequence alignment programs the manually aligned
                     Baslibase archive (
                     <div class="xref e707" linkend="Thom99"></div>) has been used as a measure of alignment quality. No such benchmark also exists for
                     texts aligned with transpositions and repeats. Visual inspection is subjective, very
                     difficult, and likely to miss many errors. All that can be said at this stage is that,
                     with the exception of the Malvezzi texts (see below), all of the alignments appear
                     to be of good quality, with few missed transpositions or misalignments.
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ConclusionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e708">
         <div class="title e709">Conclusion</div>
         <div class="para e710">The problem of how to merge n versions of a text into a variant graph is closely related
            to applications in biology that seek to compare genetic or amino acid sequences. Their
            output has traditionally been either a set of aligned sequences or a phylogentic tree
            showing the interrelationships between versions. Transpositions were not considered.
         </div>
         <div class="para e711">Like the biologists, humanists have also developed programs to ‘collate’ or compare
            versions to find differences, originally with a view to constructing the apparatus
            criticus of the print edition (a kind of alignment), and also a stemma (a kind of
            phylogenetic tree). Recently they have also tried to apply biological techniques to
            their texts.
         </div>
         <div class="para e712">The biologists have recently realised the importance of transpositions, and have tried
            to create new methods for genome comparison that includes them. Some of these new
            techniques seek to replace the traditional matrix representation of a multiple sequence
            alignment by a directed graph. Their graph models, however, are much more complex
            than the variant graph, although they represent practically the same information.
            They are also very slow to construct if they attempt to align individual characters.
            None of the biological programs can be directly applied to the different requirements
            of humanities and linguistics multi-version texts.
         </div>
         <div class="para e713">The inclusion of transpositions renders the problem of calculating an optimal alignment
            between multiple versions intractable. But an optimal alignment is not really necessary.
            Instead, a heuristic method for aligning n versions with block transpositions has
            been described, which has O(MN) performance in the worst case, and is often much faster.
            It uses a novel technique for filtering transpositions via a simple threshold formula,
            which reduces the amount of computation while increasing accuracy. In texts of typical
            length of around 50K it can add or replace a version in a variant graph or multi-version
            document in a few seconds.
         </div>
         <div class="para e714">Although this represents a ‘first cut’ at solving a difficult problem, results are
            encouraging enough to demonstrate the viability of using variant graphs or MVDs to
            overcome the long-standing problems of how to represent ‘overlapping hierarchies’
            and multiple versions in humanities texts.
         </div>
      </div><a name="AcknowledgementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e715">
         <div class="title e716">Acknowledgements</div>
         <div class="para e717">This work, although independent research, is supported by the Italian project CoOPERARE
            (Content Organisation, Propagation, Evaluation and Reuse through Active Repositories),
            Project of Research in the National Interest (PRIN), 2008-09, whose Rome research
            unit is directed by Domenico Fiormonte.
         </div>
         <div class="para e718">The example texts of Angel Garcia Galiano, Vicenzo Cerami and Valerio Magrelli were
            provided by 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e719" xlink:actuate="onRequest" xlink:href="http://www.digitalvariants.org" xlink:show="new" xlink:type="simple"> Digital Variants</div>. The texts of Huygens and Anna Bijns were supplied by Ron Van den Branden of the
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e720" xlink:actuate="onRequest" xlink:href="http://www.kantl.be/ctb/project/dalf/" xlink:show="new" xlink:type="simple">CTB</div> in Belgium. The Malvezzi texts were supplied by Carmen Isasi of the University of
            Deusto, Spain, and the Sibylline Gospel texts by Nicoletta Brocca of the University
            of Venice Ca' Foscari.
         </div>
      </div><a name="BibliographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e721">
         <div class="title e722">Bibliography</div>
         <div class="bibliomixed e723" xml:id="Aldo00">Aldous, J.M. and Wilson, R.J. Graphs and Applications an Introductory Approach. London:
            Springer, 2000.
         </div>
         <div class="bibliomixed e724" xml:id="Barn88">Barnard, D., Hayter, R., Karababa, M., Logan, G., McFadden, J. ‘SGML-Based Markup
            for Literary Texts: Two Problems and Some Solutions’, Computers and the Humanities.
            22: 265-276, 1988. 
            <div class="biblioid doi e725">10.1007/BF00118602</div>
         </div>
         <div class="bibliomixed e726" xml:id="Bart06">Bart, P.R. ‘Experimental markup in a TEI-conformant setting’, Digital Medievalist,
            2: 2006.
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e727" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.digitalmedievalist.org/article.cfm?RecID=10"</div>
         </div>
         <div class="bibliomixed e728" xml:id="Boe08">Böe, H. ‘Manuscript Encoding Clarification and Transposition; New Features for the
            Module for Transcription of Primary Sources?’, unpublished. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e729" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.emunch.no/tei-mm-2008/index_ms.html</div>
         </div>
         <div class="bibliomixed e730" xml:id="Bour07">Bourdaillet, J. Alignment textuel monolingue avec recherche de déplacements: algorithmique
            pour la critique génétique. PhD Thesis, Université Paris 6 Pierre et Marie Curie,
            2007.
         </div>
         <div class="bibliomixed e731" xml:id="Bray03">Bray, N., Dubchak, I. and Pachter, L. AVID: A Global Alignment Program, Genome Research,
            2003, 97-102.
         </div>
         <div class="bibliomixed e732" xml:id="Bray08">Bray, T., Paoli, J., Sperberg-McQueen, C.M., Maler, E., Yergeau, F. Extensible Markup
            Language (XML) 1.0 (Fifth Edition). 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e733" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/2008/PER-xml-20080205/</div>
         </div>
         <div class="bibliomixed e734" xml:id="Brud03a">Brudno, M., Do, C.B., Cooper, G.M., Kim, M.F., Davydov, E., Green, E.D., Sidow, A.,
            Batzoglou, S. ‘LAGAN and Multi-LAGAN: Efficient Tools for Large-Scale Multiple Alignment
            of Genomic DNA’, Genome Research, 13: 721-731. 
            <div class="biblioid doi e735">10.1101/gr.926603</div>
         </div>
         <div class="bibliomixed e736" xml:id="Brud03b">Brudno, M., Malde, S., Poliakov, A., Do, C.B., Couronne, O., Dubchak, I. and Batzoglou,
            S. ‘Glocal alignment: finding rearrangements during alignment’, Bioinformatics, 19:
            2003, 154-162. 
            <div class="biblioid doi e737">10.1093/bioinformatics/btg1005</div>
         </div>
         <div class="bibliomixed e738" xml:id="Buzz02">Buzzetti, D. ‘Digital Representation and the Text Model’, New Literary History, 33:
            2002, 61-88. 
            <div class="biblioid doi e739">10.1353/nlh.2002.0003</div>
         </div>
         <div class="bibliomixed e740" xml:id="Darl04">Darling, A.C.E., Mau, B. and Blattner, F.R. Mauve: Multiple Alignment of Conserved
            Sequence With Rearrangements. Genome Research, 14: 2004, 1394-1403. 
            <div class="biblioid doi e741">10.1101/gr.2289704</div>
         </div>
         <div class="bibliomixed e742" xml:id="Debr46">de Bruijn, N.G. ‘A Combinatorial Problem’, Koninklijke Nederlandse Akademie v. Wetenschappen,
            49: 1946, 758-764.
         </div>
         <div class="bibliomixed e743" xml:id="Delc02">Delcher, A.L., Phillippy, A., Carlton, J. and Salzberg, S.L. ‘Fast algorithms for
            large-scale genome alignment and comparison’. Nucleic Acids Research, 30.11: 2002,
            2478-2483. 
            <div class="biblioid doi e744">10.1093/nar/30.11.2478</div>
         </div>
         <div class="bibliomixed e745" xml:id="Dero04">DeRose, S. ‘Markup Overlap: A Review and a Horse,’ Extreme Markup Languages Conference,
            Montreal, 2004. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e746" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.idealliance.org/papers/extreme/proceedings/html/2004/DeRose01/EML2004DeRose01.html</div>
         </div>
         <div class="bibliomixed e747" xml:id="Edga06">Edgar, R.C. and Batzoglou, ‘Multiple sequence alignment’, Current Opinion in Structutural
            Biology, 16: 2006, 368-373. 
            <div class="biblioid doi e748">10.1016/j.sbi.2006.04.004</div>
         </div>
         <div class="bibliomixed e749" xml:id="Feng87">Feng, D.F. and Doolittle, R.F. ‘Progressive Sequence Alignment as a Prerequisite to
            Correct Phylogenic Trees’, Journal of Molecular Evolution, 25: 1987, 351-360. 
            <div class="biblioid doi e750">10.1007/BF02603120</div>
         </div>
         <div class="bibliomixed e751" xml:id="Frog68">Froger, D.J. La Critique des textes et son automatisation. Paris: Dunod, 1968.</div>
         <div class="bibliomixed e752" xml:id="Gabl84">Gabler, H.W. ‘Towards an Electronic Edition of James Joyce's Ulysses’, Literary and
            Linguistic Computing, 15: 2000, 115-120. 
            <div class="biblioid doi e753">10.1093/llc/15.1.115</div>
         </div>
         <div class="bibliomixed e754" xml:id="Gare79">Garey, M.R. and Johnson, D. ‘Computers and Intractability; A Guide to the Theory of
            NP-Completeness’, San Francisco: Freeman, 1979.
         </div>
         <div class="bibliomixed e755" xml:id="Gold90">Goldfarb, C. The SGML Handbook. Oxford: Oxford University Press, 1990.</div>
         <div class="bibliomixed e756" xml:id="Good46">Good, I.J. ‘Normal Recurring Decimals’, Journal of the London Mathematical Society,
            21: 1946, 167-169. 
            <div class="biblioid doi e757">10.1112/jlms/s1-21.3.167</div>
         </div>
         <div class="bibliomixed e758" xml:id="Gras04">Grasso, C. and Lee, C. ‘Combining partial order alignment and progressive multiple
            sequence alignment increases alignment speed and scalability to very large alignment
            problems’, Bioinformatics, 20.10: 2004, 1546-1556. 
            <div class="biblioid doi e759">10.1093/bioinformatics/bth126</div>
         </div>
         <div class="bibliomixed e760" xml:id="Gree94">Greetham, D.C. Textual Scholarship: An Introduction. New York and London: Garland,
            1994.
         </div>
         <div class="bibliomixed e761" xml:id="Gu99">Gu, Q-P., Peng, S. and Sudborough, H. ‘A 2-approximation algorithm for genome rearrangement
            by reversals and transpositions’, Theoretical Computer Science, 210: 1999, 327-339.
            
            <div class="biblioid doi e762">10.1016/S0304-3975(98)00092-9</div>
         </div>
         <div class="bibliomixed e763" xml:id="Gusf97">Gusfield, D. Algorithms on Strings, Trees and Sequences: Computer Science and Computer
            Biology. Cambridge: Cambridge University Press, 1997.
         </div>
         <div class="bibliomixed e764" xml:id="Guye97">Guyer, G.S., Heath, L.S., Vergara, J.P.C. ‘Subsequence and Run Heuristics for Sorting
            by Transpositions’, Technical Report TR-97-20, Virginia Polytechnic Institute and
            State University, 1997. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e765" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://historical.ncstrl.org/tr/fulltext/tr/vatech_cs/TR-97-20.txt</div>
         </div>
         <div class="bibliomixed e766" xml:id="Heck78">Heckel, P. ‘A Technique for Isolating Differences Between Files’, Communications of
            the ACM, 21.4: 1978, 264-268. 
            <div class="biblioid doi e767">10.1145/359460.359467</div>
         </div>
         <div class="bibliomixed e768" xml:id="Ide06">Ide, N. and Suderman, K. ‘Integrating Linguistic Resources: The American National
            Corpus Model’,
            Proceedings of the Fifth Language Resources and Evaluation Conference, 2006.
         </div>
         <div class="bibliomixed e769" xml:id="Idur95">Idury, R.M. and Waterman, M.S. ‘A New Algorithm for DNA Sequence Assembly’, Journal
            of Computational Biology, 2.2: 1995, 291-306. 
            <div class="biblioid doi e770">10.1089/cmb.1995.2.291</div>
         </div>
         <div class="bibliomixed e771" xml:id="Kato02">Katoh, K., Misawa, K., Kuma, K. and Miyata, T. ‘MAFFT: a novel method for rapid multiple
            sequence alignment based on Fast Fourier transform’, Nucleic Acids Research, 30.14:
            2002, 3059--3066. 
            <div class="biblioid doi e772">10.1093/nar/gkf436</div>
         </div>
         <div class="bibliomixed e773" xml:id="Lass02">Lassmann, T. and Sonnhammer, E.L.L. ‘Quality assessment of multiple alignment programs’,
            FEBS Letters, 529: 2002, 126-130. 
            <div class="biblioid doi e774">10.1016/S0014-5793(02)03189-7</div>
         </div>
         <div class="bibliomixed e775" xml:id="Lee02">Lee, C. Grasso, C. and Sharlow, M.F. ‘Multiple sequence alignment using partial order
            graphs’, Bioinformatics, 18.3: 2002, 452-464. 
            <div class="biblioid doi e776">10.1093/bioinformatics/18.3.452</div>
         </div>
         <div class="bibliomixed e777" xml:id="Lesk02">Lesk, A.M. Introduction to Bioinformatics. Oxford: Oxford University Press, 2002.</div>
         <div class="bibliomixed e778" xml:id="Leve66">Levenshtein, V.I. ‘Binary Codes Capable of Correcting Insertions and Reversals’, Soviet
            Physics: ‘Doklady’, 10.8: 1966, 707-710.
         </div>
         <div class="bibliomixed e779" xml:id="Lopr97">Lopresti, D. and Tomkins, A. ‘Block edit models for approximate string matching’,
            Theoretical Computer Science, 181: 1997, 159-179. 
            <div class="biblioid doi e780">10.1016/S0304-3975(96)00268-X</div>
         </div>
         <div class="bibliomixed e781" xml:id="Maas03">Maas, J.F. Vollautomatische Konvertierung mehrfach XML-annotierter Texte in das NITE-XML
            Austauschformat, Masters Dissertation, Uni. of Bielefeld, 2003. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e782" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://coli.lili.uni-bielefeld.de/Texttechnologie/Forschergruppe/sekimo/nite/Text/Magisterarbeit.pdf</div>
         </div>
         <div class="bibliomixed e783" xml:id="Magr81">Magrelli, V. Ora serrata retinae. Milan: Feltrinelli, 1981.</div>
         <div class="bibliomixed e784" xml:id="Mcga01">McGann, J.J. Radiant Textuality. London: Palgrave McMillan, 2001.</div>
         <div class="bibliomixed e785" xml:id="Mcga06">McGann, J.J. Juxta, 2006. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e786" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.patacriticism.org/juxta/</div>
         </div>
         <div class="bibliomixed e787" xml:id="Morg96">Morgenstern, B., Dress, A. and Werner, T. ‘Multiple DNA and Protein Sequence Alignment
            Based on Segment-To-Segment Comparison’, Proceedings of the Natioanl Academy of Sciences
            of the United States of America, 93.22: 1996, 12098-12103. 
            <div class="biblioid doi e788">10.1073/pnas.93.22.12098</div>
         </div>
         <div class="bibliomixed e789" xml:id="Need70">Needleman, S.B. and Wunsch, C.D. ‘A General Method Applicable to the Search for Similarities
            in the Amino Acid Sequence of Two Proteins’, Journal of Molecular Biology, 48: 1970,
            443-453. 
            <div class="biblioid doi e790">10.1016/0022-2836(70)90057-4</div>
         </div>
         <div class="bibliomixed e791" xml:id="Nedo99">Nedo, M. Ludwig Wittgenstein Wiener Ausgabe Studien Texte Band 1-5. Vienna and New
            York: Springer, 1999.
         </div>
         <div class="bibliomixed e792" xml:id="Neyt06">Neyt, V. ‘Fretful Tags Amid the Verbiage: Issues in the Representation of Modern Manuscript
            Material’, Literary and Linguistic Computing, 21: 2006, 99-111. 
            <div class="biblioid doi e793">10.1093/llc/fql002</div>
         </div>
         <div class="bibliomixed e794" xml:id="Notr00">Notredame, C, Higgins, D.G. and Heringa, J. T-Coffee: ‘A Novel Method for Fast and
            Accurate Multiple Sequence Alignment’, Journal of Molecular Biology, 302: 2000, 205-217.
            
            <div class="biblioid doi e795">10.1006/jmbi.2000.4042</div>
         </div>
         <div class="bibliomixed e796" xml:id="Ott00">Ott, W. Stategies and Tools for Textual Scholarship: the Tübingen System of Text Processing
            Programs (TUSTEP)’, Literary and Linguistic Computing, 15.1: 2000, 93-108. 
            <div class="biblioid doi e797">10.1093/llc/15.1.93</div>
         </div>
         <div class="bibliomixed e798" xml:id="Page72">Page, D.L. Aeschyli Septem quae Supersunt Tragoedias. Oxford: Clarendon Press, 1972.</div>
         <div class="bibliomixed e799" xml:id="Pevz89">Pevzner, P. ‘L-Tuple DNA sequencing. Computer Analysis’, Journal of Biomolecular Structure
            and Dynamics, 7: 1989, 63-73.
         </div>
         <div class="bibliomixed e800" xml:id="Pevz01">Pevzer P.A., Tang, H. and Waterman, M.S. ‘An Eulerian path approach to DNA fragment
            assembly’, Proceedings of the National Academy of Sciences USA, 98.17: 2001, 9748-9753.
            
            <div class="biblioid doi e801">10.1073/pnas.171285098</div>
         </div>
         <div class="bibliomixed e802" xml:id="Pevz04">Pevzner, P.A., Tang, H. and Tesler, G. ‘De Novo Repeat Classification and Fragment
            Assembly’. Genome Research, 14: 2004, 1786-1796. 
            <div class="biblioid doi e803">10.1101/gr.2395204</div>
         </div>
         <div class="bibliomixed e804" xml:id="Raph04">Raphael, B., Zhi, D. and Tang, H. ‘A novel method for multiple alignment of sequences
            with repeated and shuffled elements’, Genome Research, 14: 2004, 2336-2346. 
            <div class="biblioid doi e805">10.1101/gr.2657504</div>
         </div>
         <div class="bibliomixed e806" xml:id="Robi89">Robinson, P.M.W. ‘The Collation and Textual Criticism of Icelandic Manuscripts (1):
            Collation’, Literary and Linguistic Computing 4.2: 1989, 99-105. 
            <div class="biblioid doi e807">10.1093/llc/4.2.99</div>
         </div>
         <div class="bibliomixed e808" xml:id="Sahl05">Sahle, P. ‘Digitales Archiv – Digitale Edition. Anmerkungen zur Begriffsklärung’.
            In: Literatur und Literaturwissenschaft auf dem Weg zu den neuen Medien, M. Stoltz,
            L.M. Gisi and J. Loop (eds), Basel: germanistik.ch, 2005.
         </div>
         <div class="bibliomixed e809" xml:id="Schm08">Schmidt, D., Brocca, N. and Fiormonte, D. ‘A Multi-Version Wiki’. In: Proceedings
            of Digital Humanities 2008, Oulu, Finland, June, E.S. Ore and L.L. Opas-Hänninen (eds),
            187-188.
         </div>
         <div class="bibliomixed e810" xml:id="Schm09">Schmidt, D. and Colomb, R. ‘A data structure for representing multi-version texts
            online’. International Journal of Human-Computer Studies. 67.6: 2009, 497-514. 
            <div class="biblioid doi e811">10.1016/j.ijhcs.2009.02.001</div>.
         </div>
         <div class="bibliomixed e812" xml:id="Schw00">Schwartz, S., Zhang, Z. and Frazer, A. ‘PipMaker A Web Server for Aligning Two Genomic
            DNA Sequences’, Genome Research, 10: 2000, 577-586. 
            <div class="biblioid doi e813">10.1101/gr.10.4.577</div>
         </div>
         <div class="bibliomixed e814" xml:id="Sedg88">Sedgewick, R. Algorithms. Reading Massachusetts: Addison-Wesley, 1988.</div>
         <div class="bibliomixed e815" xml:id="Shap02">Shapira, D. and Storer, D.A. ‘Edit Distance with Move Operations’, Lecture Notes in
            Computer Science, 2373: 2002, 85-98. 
            <div class="biblioid doi e816">10.1007/3-540-45452-7_9</div>
         </div>
         <div class="bibliomixed e817" xml:id="Shil96">Shillingsburg, P.L. Scholarly Editing in the Computer Age. Theory and Practice. AnnArbor:
            University of Michigan Press, 1996.
         </div>
         <div class="bibliomixed e818" xml:id="Spen04">Spencer, M. and Howe, C.J. ‘Collating Texts Using Progressive Multiple Alignment’,
            Computers and the Humanities, 38: 2004, 253-270. 
            <div class="biblioid doi e819">10.1007/s10579-004-8682-1</div>
         </div>
         <div class="bibliomixed e820" xml:id="Spen03">Spencer, M. Bordalejo, B., Wang, Li-San, Barbrook, A.C., Mooney, L.R., Robinson, P.,
            Warnow, T and Howe, C.J. ‘Analyzing the Order of Items in Manuscripts of The Canterbury
            Tales’, Computers and the Humanities, 37.1: 2003, 97-109. 
            <div class="biblioid doi e821">10.1023/A:1021818600001</div>
         </div>
         <div class="bibliomixed e822" xml:id="Stuh08">Stührenberg, M. and Goecke, D. ‘SGF - An integrated model for multiple annotations
            and its application in a linguistic domain’. In: Balisage: The Markup Conference Proceedings.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e823" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://balisage.net/Proceedings/html/2008/Stuehrenberg01/Balisage2008-Stuehrenberg01.html</div>. 
            <div class="biblioid doi e824">10.4242/BalisageVol1.Stuehrenberg01</div>
         </div>
         <div class="bibliomixed e825" xml:id="Thom94">Thompson, J.D., Higgins, D.G. and Gibson, T.J. ‘CLUSTALW: improving the sensitivity
            of progressive multiple sequence alignment through sequence weighting, position-specific
            gap penalties and weight matrix choice’. Nucleic Acids Research, 22: 1994, 4673-4680.
            
            <div class="biblioid doi e826">10.1093/nar/22.22.4673</div>
         </div>
         <div class="bibliomixed e827" xml:id="Thom99">Thompson, J.D., Plewniak, F. and Poch, O. BAliBASE: a benchmark alignment database
            for the evaluation of multiple alignment programs, Bioinformatics, 15: 1999, 87-88.
            
            <div class="biblioid doi e828">10.1093/bioinformatics/15.1.87</div>
         </div>
         <div class="bibliomixed e829" xml:id="Tich84">Tichy, W.F. ‘The String-to-String Correction Problem with Block Moves’, ACM Transactions
            on Computer Systems 2.4: 1984, 309-321. 
            <div class="biblioid doi e830">10.1145/357401.357404</div>
         </div>
         <div class="bibliomixed e831" xml:id="Ukko95">Ukkonen, E. ‘On-Line Construction of Suffix Trees’, Algorithmica, 14: 1995, 249-260.
            
            <div class="biblioid doi e832">10.1007/BF01206331</div>
         </div>
         <div class="bibliomixed e833" xml:id="Vand08">Van den Branden, R. ‘A Modest Proposal. Analysis of Specific Needs with Reference
            to Collation in Electronic Editions’, Digital Humanities 2008 University of Oulu,
            June 24-29 Book of Abstracts, 2008, 206-207.
         </div>
         <div class="bibliomixed e834" xml:id="Vett03">Vetter, L. and McDonald, J. ‘Witnessing Dickinson’s Witnesses’, Literary and Linguistic
            Computing, 18.2: 2003, 151-165. 
            <div class="biblioid doi e835">10.1093/llc/18.2.151</div>
         </div>
         <div class="bibliomixed e836" xml:id="Wagn75">Wagner, R.A. ‘On the Complexity of the Extended String-to-String Correction Problem’.
            In: Annual ACM Symposium on Theory of Computing. Proceedings of seventh annual ACM
            symposium on Theory of computing, A.K. Chandra, A.R. Meyer, W.C. Rounds, R.E. Stearns,
            R.E. Tarjan, S. Winograd, P.R. Young (eds), 1975, 218-223. 
            <div class="biblioid doi e837">10.1145/800116.803771</div>
         </div>
         <div class="bibliomixed e838" xml:id="Witt02">Witt, A. Multiple Informationsstrukturierung mit Auszeichnungssprachen. XML-basierte
            Methoden und deren Nutzen für die Sprachtechnologie, PhD Dissertation, Uni. of Bielefeld,
            2002. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e839" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://deposit.ddb.de/cgi-bin/dokserv?idn=963909436</div>
         </div>
      </div>
   </div>
</div>