<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#AformalapproachtoXMLsemantics:implicationsforarchivestandardsANCHOR" name="AformalapproachtoXMLsemantics:implicationsforarchivestandardsTOC">A formal approach to XML semantics: implications for archive standards</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#0IntroductionANCHOR" name="0IntroductionTOC">0. Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#1Whysemantics?ANCHOR" name="1Whysemantics?TOC">1. Why semantics?</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#2SyntaxSemanticsMismatchesinXMLANCHOR" name="2SyntaxSemanticsMismatchesinXMLTOC">2. Syntax-Semantics Mismatches in XML</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#3FormalSemanticsofXMLANCHOR" name="3FormalSemanticsofXMLTOC">3. Formal Semantics of XML</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#31SemanticTypesANCHOR" name="31SemanticTypesTOC">3.1 Semantic Types</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#32SemanticCoherenceANCHOR" name="32SemanticCoherenceTOC">3.2 Semantic Coherence</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#33SemanticHierarchiesANCHOR" name="33SemanticHierarchiesTOC">3.3 Semantic Hierarchies</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#4SomeVeryBasicFeaturesofArchiveStandardsANCHOR" name="4SomeVeryBasicFeaturesofArchiveStandardsTOC">4. Some Very Basic Features of Archive Standards</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#5ConclusionANCHOR" name="5ConclusionTOC">5. Conclusion</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibliographyANCHOR" name="BibliographyTOC">Bibliography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">August 2, 2010</div>
         <div class="singletermTERMS">adombrow@uchicago.edu</div>
         <div class="singletermTERMS">Andrew</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">Chatti, et al 2007</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">DeRose, et al. 1990</div>
         <div class="singletermTERMS">Dombrowski</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">lang = "en"</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">Manager, Scholarly Technology</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">Online Etymology Dictionary</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">Piez 2002</div>
         <div class="singletermTERMS">Piez 2001</div>
         <div class="singletermTERMS">PhD student</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
         <div class="singletermTERMS">quinnd@uchicago.edu</div>
         <div class="singletermTERMS">Quinn</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">Renear et al. 2002</div>
         <div class="singletermTERMS">Renear, et al. 2002</div>
         <div class="singletermTERMS">Renear, et al. 1993</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">Sperberg-McQueen et al. 2000</div>
         <div class="singletermTERMS">Sperberg-McQueen, et al. 2000</div>
         <div class="singletermTERMS">Syntax is arbitrarily nested</div>
         <div class="singletermTERMS">Schemas must be semantically coherent.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">TEI P4</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="AformalapproachtoXMLsemantics:implicationsforarchivestandardsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2">
      <div class="title e1">A formal approach to XML semantics: implications for archive standards</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">International Symposium on XML for the Long Haul:  Issues in the Long-term Preservation
               of XML
            </div>
            <div class="confdates e5">August 2, 2010</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">Previous literature characterizing XML semantics (
               <div class="citation e8" linkend="sperbergmcqueen2000">Sperberg-McQueen et al. 2000</div>, 
               <div class="citation e9" linkend="renear2002">Renear et al. 2002</div>, 
               <div class="citation e10" linkend="piez2002">Piez 2002</div>) takes reasonably syntactically and semantically plausible
               markup and/or schemas as a starting point. In contrast, for this paper we aim to work
               towards such a schema as an idealized end goal, by characterizing the necessary—
               if not sufficient— semantic constraints that differentiate a schema intended for archival
               use from nonsense and implausible
               schemas, as well as schemas that fail to sufficiently take semantics into account.
               In addition to the goal of providing a novel approach to the perenially thorny
               problem of XML semantics, we are particularly concerned with the interaction between
               the goals of archival purposes and XML semantics.
            </div>
         </div>
         <div class="author e11">
            <div class="personname e12">
               <div class="firstname e13">Andrew</div>
               <div class="surname e14">Dombrowski</div>
            </div>
            <div class="personblurb e15">
               <div class="para e16">Andrew Dombrowski is a 4th year PhD student at the University of Chicago in
                  the Department of Slavic Languages and Literatures and the Department of
                  Linguistics. His research focuses on language change and contact between Slavic
                  and non-Slavic languages.
               </div>
            </div>
            <div class="affiliation e17">
               <div class="jobtitle e18">PhD student</div>
               <div class="orgname e19">Department of Slavic Languages and Literatures and Department of
                  Linguistics, University of Chicago
               </div>
            </div>
            <div class="email e20">adombrow@uchicago.edu</div>
         </div>
         <div class="author e21">
            <div class="personname e22">
               <div class="firstname e23">Quinn</div>
               <div class="surname e24">Dombrowski</div>
            </div>
            <div class="personblurb e25">
               <div class="para e26">Quinn Dombrowski is the manager of the Scholarly Technology group in the
                  University of Chicago's IT Services organization. She has an MA in Slavic
                  Linguistics from the University of Chicago, and an MLS from the University of
                  Illinois at Urbana-Champaign.
               </div>
            </div>
            <div class="affiliation e27">
               <div class="jobtitle e28">Manager, Scholarly Technology</div>
               <div class="orgname e29">University of Chicago</div>
            </div>
            <div class="email e30">quinnd@uchicago.edu</div>
         </div>
         <div class="legalnotice e31">
            <div class="para e32">Copyright © 2010 by the authors. Licensed under Creative Commons’ attribution, non-commercial,
               share-alike license (
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e33" xlink:actuate="onRequest" xlink:href="http://creativecommons.org/licenses/by-sa/3.0/" xlink:show="new" xlink:type="simple">http://creativecommons.org/licenses/by-sa/3.0/</div>).
            </div>
         </div>
      </div><a name="0IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e34">
         <div class="title e35">0. Introduction</div>
         <div class="para e36">In contrast to syntax, which is explicitly (and machine-readably) defined for XML
            documents through use of a schema, XML semantics is notoriously difficult to pin down.
            
            <div class="citation e37" linkend="sperbergmcqueen2000">Sperberg-McQueen, et al. 2000</div>
            takes the approach of describing semantics by defining some of the processes one goes
            through unconsciously when interpreting the semantics of XML: what meaning elements
            and
            attributes convey, how one makes sense of seemingly conflicting statements, the
            different behavior of distributed and non-distributed features, etc. 
            <div class="citation e38" linkend="renear2002">Renear, et al. 2002</div> presents the issue of XML
            semantics in its historic context, identifies important aspects of semantics (class
            relationships, feature propagation, context and reference, etc.) that are usually
            only
            specified in accompanying prose documentation—if at all, and argues for the value
            of a
            machine-readable representation scheme for markup semantics, which is one of the
            research goals of the BECHAMEL Project. 
            <div class="citation e39" linkend="piez2002">Piez
               2002
            </div> takes a more philosophical approach to XML semantics, drawing on the
            work of Ferdinand de Saussure and the Structuralist movement by describing markup
            as a
            layered sign system. All of these approaches take reasonably syntactically and
            semantically plausible markup and/or schemas as their starting point. In contrast,
            for this paper we aim to work
            towards such a schema as an idealized end goal, by characterizing the necessary—
            if not sufficient— semantic constraints that differentiate a schema intended for archival
            use from nonsense and implausible
            schemas, as well as schemas that fa(i.e.,il to sufficiently take semantics into account.
            In addition to the goal of 
            providing a novel approach to the perenially
            thorny problem of XML semantics, we are particularly concerned with the interaction
            between the goals of archival purposes and XML semantics.
         </div>
         <div class="para e40">We argue that for archival purposes, XML semantics are non-trivial - i.e., (1) that
            the problem of XML semantics cannot be reduced to the set of all possible use cases,
            (2)
            that XML syntax and semantics differ with regard to crucial structural properties,
            and
            (3) that semantics and syntax impose independent well-formedness constraints on schemas.
            We examine these properties in the context of a hypothetical long-haul archival situation
            in which documentation may not have been preserved – and in which the agendas underpinning
            the original markup may not be easy to reconstruct. In such circumstances, the interpretation
            of a given XML markup schema will be facilitated by an ability to explicitly delineate
            plausible markup schemas from non-plausible schemas independent of subject-specific
            knowledge. 
         </div>
         <div class="para e41">With this in mind, we provide a formal semantic characterization of traits found in
            good (reasonably plausible, as
            contrasted with merely syntactically valid) schemas, and finally propose a set of
            properties that characterize such schemas in a way that incorporates both semantic
            and syntactic considerations. We hope
            that specifically considering what semantic characteristics should exclude a schema
            from
            consideration as a plausible archive standard will indirectly shed light on the nature
            of XML semantics more broadly. However, it is not our goal in this paper to propose
            an exhaustive treatment of XML semantics – instead, rather to elucidate the bare minimum
            necessary for a scheme to be plausible. This paper is informed by linguistic methodology
            in the
            broad sense – i.e., the proposition that a characterization of the bare minimum of
            “grammaticality” can yield insight of broader interest. In particular, we draw upon
            notions developed in the modern school of semantics that began with Montague Grammar.
            As
            such, we hope that some of the developments in the field of linguistics in the last
            50
            years, as reflected herein, prove as insightful a lens onto markup as the earlier
            Structuralist school.
         </div>
      </div><a name="1Whysemantics?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e42">
         <div class="title e43">1. Why semantics?</div>
         <div class="para e44">The characterization of archive-appropriate schemas necessitates separating "good"
            (i.e.,
            plausibly useful) schemas from the infinitely large space of valid XML schemas. At
            any
            given point in time, practical and case-specific evaluations of the utility of a given
            schema should suffice for most purposes. However, long-term preservation also means
            planning for environments in which significant amount of case-specific detail may
            have
            been lost. Lexical semantics are particularly mutable over time; the description of
            "symbol" provided by TEI, 
            <div class="quote e45">documents the intended significance of a particular
               character or character sequence within a metrical notation, either explicitly or in
               terms of other symbol elements in the same metDecl
            </div>
            
            <div class="citation e46" linkend="teip4">TEI P4</div> is easier to intuitively grasp given the
            modern English meaning of the word than based on the 15th century usage, meaning "creed,
            summary, religious belief" 
            <div class="citation e47" linkend="onlinetym">Online Etymology
               Dictionary
            </div>. The assumptions underlying research programs are even less
            stable than lexical semantics; the concern with structuralist semantics was superseded
            in the 1960's by the controversial and short-lived generative semantics research program
            which was itself eventually superseded (in the 1980s and onward) by more modern schools
            of semantics, beginning with Montague grammar, that have drawn on techniques of formal
            logic for their basis. An illustrative thought experiment here is to imagine projecting
            markup technologies into the past to be coextensive with literacy. What XML schemas
            would have been created by, for instance: a Greek dramatist, St. Augustine, an early
            medieval Chinese chronicler, and an alchemist? And how would these schemas differ
            from,
            say, TEI? While a single modern guideline such as TEI may be able to encode the written
            records of this diverse group of individuals in a way that is meaningful to the modern
            scholar, a TEI encoding of these texts informed by modern scholarly interests would
            not
            only fail to be interoperable with the schemas devised by the original authors, but
            may
            perhaps not even be comprehensible to them.
         </div>
         <div class="para e48">A rich knowledge of the specific situations (intended use, cultural context, concept
            of authorship/citation, etc.)&nbsp; in which these hypothetical schemas were created would
            ameliorate the situation. However, a goal of long-term preservation standards is to
            allow a certain
            degree of interoperability without crucial context-specific knowledge. One step in
            doing
            so is to separate out the relatively small set of plausibly useful schemas from the
            potentially vast space of valid schemas; it is the goal of this paper to outline a
            way
            of doing so. 
         </div>
         <div class="para e49">To illustrate this, we can consider example XML using completely ridiculous schemas
            and some using merely implausible schemas. Examples using completely ridiculous schemas
            are shown below (1-3). In each of these schemas, the permitted content type of each
            element is the actual object, action, or part of specified by the name of the element
            (i.e.    
            
            <div class="code e50">&lt;branch /&gt;</div> can only contain such a protrusion from a
            tree, 
            <div class="code e51">&lt;simplify /&gt;</div> can only contain the act of
            simplification, etc.)
         </div>
         <div class="orderedlist e52">
            <div class="listitem e53">
               <div class="para e54">&nbsp;the tree-list schema: 
                  <div class="code e55">&lt;trunk /&gt;&lt;oak
                     /&gt;&lt;maple /&gt;&lt;branch /&gt;
                  </div>
               </div>
            </div>
            <div class="listitem e56">
               <div class="para e57">the command-list schema: 
                  <div class="code e58">&lt;simplify /&gt;&lt;eat
                     /&gt;&lt;breathe /&gt;
                  </div>
               </div>
            </div>
            <div class="listitem e59">
               <div class="para e60">the English conjunctions schema: 
                  <div class="code e61">&lt;and /&gt;&lt;but
                     /&gt;&lt;however /&gt;
                  </div>
               </div>
            </div>
         </div>
         <div class="para e62">Some structurally similar schemas are intuitively less ridiculous, although also
            implausible. Examples of XML using implausible schemas are given below (4-7).
         </div>
         <div class="orderedlist e63" startingnumber="4">
            <div class="listitem e64">
               <div class="para e65">the word-length schema: 
                  <div class="code e66">&lt;word length="x"/&gt;</div>, where x
                  = # of letters in word
               </div>
            </div>
            <div class="listitem e67">
               <div class="para e68">the "broken clock is right twice a day" incorrect word-length schema:
                  
                  <div class="code e69">&lt;word length="x*sin(n°)"/&gt;</div> where of x = # of
                  letters in the n-th word in the document
               </div>
            </div>
            <div class="listitem e70">
               <div class="para e71">the count-words-by-threes schema: 
                  <div class="code e72">&lt;word1 /&gt;&lt;word2
                     /&gt;&lt;word3 /&gt;&lt;word1 /&gt;&lt;word2
                     /&gt;&lt;word3 /&gt;&lt;word1 /&gt;
                  </div> etc...
               </div>
            </div>
            <div class="listitem e73">
               <div class="para e74">the conspiracy-theorist schema: 
                  <div class="code e75">&lt;word(n) /&gt;
                     &lt;word(n+k)/&gt; &lt;word(n+2k)/&gt;
                  </div>, etc., where n
                  is the n-th word in the text and k is a number imbued with some significance
                  (e.g. 666, 42, (with a few tweaks) a succession of prime numbers, etc...)
               </div>
            </div>
         </div>
         <div class="para e76">How, then, to distinguish between the ridiculous, the implausible, and the
            plausible?
         </div>
         <div class="para e77">An immediate and intuitive objection to these schemas might be that they can be ruled
            out on the grounds that no one would possibly be interested in them. However, that
            explanation, which can be termed the "practical usability explanation" is not fully
            adequate. First, it is not necessarily clear that this approach would capture the
            difference between the ridiculous and the merely implausible. On a certain level,
            the
            English conjunctions schema could be thought to be more plausible than the "broken
            clock
            is right twice a day" incorrect word-length schema, insofar as it is much easier to
            imagine why someone would be interested in conjunctions than in looking at the result
            of
            multiplying word-length figures by the sine function. However, the English conjunctions
            schema is clearly bad in a way that the "broken clock is right twice a day" incorrect
            word-length schema isn't. Intuitively speaking, we might say that conjunctions are
            a
            reasonable area of interest, but given an interest in conjunctions, the English
            conjunctions schema is unlikely to be your choice. On the other hand, being interested
            in
            multiplying word-length figures by the sine function is bizarrely implausible, but
            if
            for some reason one wanted to do that, the "broken clock is right twice a day" incorrect
            word-length schema would work.
         </div>
         <div class="para e78">The "practical usability explanation" is especially problematic in the context of
            archival preservation. Part of the reason why long-term archival preservation of XML
            is
            a non-trivial task is precisely the fact that it is not always obvious what future
            generations of researchers will find interesting or useful. Furthermore, the
            establishment of practical usability will always to a certain extent be in the eye
            of
            the beholder. Schemas like our conspiracy-theorist schema&nbsp;could be of potential interest
            - Dan Brown, for instance, could testify to the wide public appeal of conspiracy
            theories. More seriously, debates about intuitive assessments of practical utility
            are
            unlikely to be a fundamentally productive line of discussion.
         </div>
         <div class="para e79">Another possible objection is that by definition XML markup is performed on text.
            This renders the tree-list schema and the command-list schema impossible insofar as
            it is a feature of the real world that tree parts and actions are not composed of
            combinations of characters. While this is a reasonable objection, the degree to which
            these assertions are based on potentially contestible real-world knowledge is problematic.
            It may be difficult to imagine a situation in which a sane person would assert that
            trees are composed out of characters in an ontologically real sense, but one can more
            easily imagine a lively argument about whether actions can be expressed with words
            in an ontologically real sense (e.g. performatives). Regardless, this line of reasoning
            is only applicable with difficulty in a hypothetical long-haul preserval scenario
            – assumptions about real-world phenomena have been known to change over time.
         </div>
         <div class="para e80">What criteria, then, can we use to distinguish ridiculous, implausible, and plausible
            schemas without reference to practical utility or related questions? Syntax could
            help; an intuitive
            observation about schemas (1) - (7) is that they are structurally flat, an observation
            which leads to the suggestion that more elaborate syntactic structure may be
            characteristic of plausible schemas. While this may be the case, it is also the case
            that equally absurd examples could be constructed to an arbitrary degree of syntactic
            nestedness, and not all flat schemas are absurd (i.e. Dublin Core). This illustrates
            that syntactic considerations are not sufficient to the task at hand. The rest of
            this
            paper develops a proposal that employs semantics to characterize plausible schemas,
            as
            opposed to syntactically valid but ridiculous or implausible schemas.
         </div>
      </div><a name="2SyntaxSemanticsMismatchesinXMLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e81">
         <div class="title e82">2. Syntax-Semantics Mismatches in XML</div>
         <div class="para e83">A prerequisite to any discussion of XML syntax versus XML semantics is to determine
            whether or not XML syntax and XML semantics are on some level equivalent. If a
            generalization about XML semantics could be restated making reference only to XML
            syntax, this would render any mention of semantics irrelevant. In this section, it
            is
            shown that there are at least two senses in which syntax and semantics are crucially
            distinct in XML. (A note on representation; in the field of semantics, angled brackets
            are are used to refer to words, while square brackets refer to what the words mean,
            or
            their denotation. Therefore, in this context, &lt;cat&gt; refers to an element
            that could be employed in a schema, while [[cat]] refers to the furry animal, and
            
            <div class="code e84">&lt;cat&gt;</div> refers to an XML representation.&nbsp;
         </div>
         <div class="para e85">First, XML syntax is strictly hierarchical, but XML semantics does not have to be.
            An
            example where both syntax and semantics are hierarchal can be seen in paragraph
            structure: &lt;sentence&gt; ∊ &lt;paragraph&gt; (in XML,
            
            <div class="code e86">&lt;paragraph&gt;&lt;sentence
               /&gt;&lt;paragraph&gt;
            </div>) and [[sentence]] ⊂ [[paragraph]] (a
            sentence is a subset of a paragraph). However, when elements refer to properties that
            are not inherently hierarchical, this is not the case. For instance,
            &lt;damage&gt; ∊ &lt;sentence&gt; but [[damage]] ⊄ [[sentence]] - i.e.,
            the element &lt;damage&gt; may be the parent element for
            &lt;sentence&gt;, but it does not make sense to say that the concept of damage
            is a subset of the concept of sentence. This can be formalized as follows: if the
            subset
            relationship holds between the denotations of two or more elements (like [[sentence]]
            and [[paragraph]]), let these elements be called semantically hierarchical. If not
            (like
            [[damage]] and [[sentence]]), then let these elements be called semantically
            non-hierarchical. The semantic hierarchy can be captured by arranging semantically
            hierarchical elements on the semantic levels s, s(1), s(2), ..., s(k) for k levels
            of
            specificity (proceeding from general to specific) - i.e., the semantic hierarchy
            consists of semantically hierarchical elements, arranged accordingly.
         </div>
         <div class="para e87">As an aside, it can be noted that proposals have been made for XML syntax to be
            non-strictly hierarchical in order to accommodate different kinds of structures in
            a
            document 
            <div class="citation e88" linkend="renear1993">Renear, et al. 1993</div>, which stands in
            contrast to earlier conceptions of a document as containing a single logical hierarchy
            of content objects 
            <div class="citation e89" linkend="derose1990">DeRose, et al. 1990</div>.
            Non-hierarchical syntax involves the use of different (concurrent) structures that
            may
            overlap with one another but share the same content 
            <div class="citation e90" linkend="chatti2007">Chatti, et al 2007</div>. &nbsp;Syntactic non-hierarchicality applies only to
            interactions between different syntactic levels of the schema (although, in extreme
            cases, such as the Dublin Core, there may only be one level of syntax at all), and
            does
            not obviate hierarchicality in the semantics. 
         </div>
         <div class="para e91">Syntax and semantics also impose independent constraints on the well-formedness of
            schemas (where well-formedness is understood as the property that characterizes
            plausible schemas). The independence of syntactic and semantic constraints are
            illustrated below; again, here the element 
            <div class="code e92">&lt;every&gt;</div> can only
            contain the concept of every-ness:
         </div>
         <div class="orderedlist e93" startingnumber="8">
            <div class="listitem e94">
               <div class="para e95">good syntax + good semantics: 
                  <div class="code e96">&lt;paragraph&gt;&lt;sentence
                     /&gt;&lt;/paragraph&gt;
                  </div>
               </div>
            </div>
            <div class="listitem e97">
               <div class="para e98">bad syntax + good semantics:
                  
                  <div class="code e99">&lt;paragraph&gt;&lt;sentence&gt;&lt;/paragraph&gt;&lt;/sentence&gt;</div>
               </div>
            </div>
            <div class="listitem e100">
               <div class="para e101">good syntax + bad semantics: 
                  <div class="code e102">&lt;paragraph&gt;&lt;every
                     /&gt;&lt;/paragraph&gt;
                  </div>
               </div>
            </div>
            <div class="listitem e103">
               <div class="para e104">bad syntax + bad semantics:
                  
                  <div class="code e105">&lt;paragraph&gt;&lt;every&gt;&lt;/paragraph&gt;&lt;/every&gt;</div>
               </div>
            </div>
         </div>
         <div class="para e106">These considerations demonstrate that XML syntax and semantics must be analyzed as
            separate domains. The restrictions that hold on valid XML syntax have been well
            documented 
            <div class="citation e107" linkend="W3C2008">W3C 2008</div>, whereas the restrictions
            that must hold on the semantics of plausible schemas are less well described.
         </div>
      </div><a name="3FormalSemanticsofXMLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e108">
         <div class="title e109">3. Formal Semantics of XML</div><a name="31SemanticTypesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e110">
            <div class="title e111">3.1 Semantic Types</div>
            <div class="para e112">In this section, we propose that attributes and elements in plausible XML schemas
               must be of type &lt;e, t&gt;, where the notation &lt;e, t&gt; is
               understood as indicating a function from individuals (&lt;e&gt;) onto truth
               values (&lt;t&gt;).
               <div class="popupBox e113">
                  <div class="popupLabel" onmouseover="$('#d1e219').show('1000');" onmouseout="$('#d1e219').hide('1000');">[ footnote ]</div>
                  <div id="d1e219" style="display: none;">
                     <div class="footnote">
                        <div class="para e114">The use of angled brackets to indicate
                           semantic types is common practice in the field of modern semantics. To avoid
                           inventing a new notation system just for this paper, we adopt the same
                           practice despite the risk of confusion with markup notation. In this paper,
                           &lt;e, t&gt; indicates semantic type, &lt;e&gt; indicates
                           and individual, and &lt;t&gt; indicates a truth
                           value.
                        </div>
                     </div>
                  </div>
               </div> This is the semantic type generally postulated to
               characterize common nouns and adjectives in English. For instance, [[dog]] can be
               thought of as the set of all things that are dogs - i.e., a function f from
               individuals (any and all conceivable entities in this world) onto truth values (1
               =
               true, 0 = false) such that f(x) = 1 iff [[x]] is a dog. One could object that it
               would be simpler to state this proposal in terms of nouns and adjectives - i.e., to
               propose that attributes and elements should be nouns and adjectives. However, it is
               preferable to state this in terms of semantics, because we need to keep our terms
               straight. "Nouns" and "adjectives" are terms taken from English syntax, which is not
               optimal when what we really want to talk about is XML semantics - i.e., neither
               English nor syntax. This proposal rules out absurd schemas (2) and (3) from the
               introduction, and captures the intuition that attributes and elements should be
               statements about things.
            </div>
            <div class="para e115">Beyond the intuitive appeal of this proposal, it can be derived in a bottom-up
               fashion, based only on the assumptions that (1) texts are made up of things, and (2)
               that markup says things about things. Assumption (1) shows that texts are made up
               of
               basic components of type &lt;e&gt;. Assumption (2) leads directly to a
               semantic type of &lt;e, t&gt; for elements and attributes; i.e., something
               is tagged 
               <div class="code e116">&lt;paragraph&gt;</div> only if it is true that it is a
               paragraph, modulo whatever definition of paragraph is appropriate in context. A
               formal definition of "tag abuse" can also fall out from assumption (2), i.e., tag
               abuse is the mapping of an individual onto a truth value of zero. &nbsp;In a situation
               where 
               <div class="code e117">&lt;ship&gt;</div> is being used to cause some arbitrary text
               (other than a ship name) to be rendered in italics 
               <div class="citation e118" linkend="piez2001">Piez
                  2001
               </div>, the user has misunderstood that the element
               &lt;ship&gt; is a function that assigns the value 1 to its contents, if and
               only if it is true that the denotation of the contents is a ship. 
            </div>
            <div class="para e119">Translated into the terms above, the element &lt;paragraph&gt; is a
               function from individual bits of text onto truth values such that
               &lt;paragraph&gt;(x) = 1 iff [[x]] is a paragraph. Assumptions (1) and (2)
               should be basic for all archival purposes. Denying assumption (2) could lead to the
               emergence of bizarre surrealist schemas, but it seems safe to conclude that ruling
               out such schemas is precisely the goal for developing archival standards. It is not
               clear what denying assumption (1) would even mean ontologically.
            </div>
            <div class="para e120">&nbsp;&nbsp; &nbsp;More complicated functions are of course conceivable, but they are the domain
               of the processing language rather than the XML itself. An example of this would be
               a
               function of the type &lt;&lt;e, t&gt;, &lt;e, t&gt;&gt; -
               i.e., a function that takes one element/attribute and returns another. For instance,
               one such function would take a nested element and return the element one level
               higher.
            </div>
            <div class="para e121">It should be noted that in the above proposal XML schemas are not assumed to be compositional
               semantically. To some extent, it is an open question whether or not a compositional
               minimal semantics for XML is a desirable feature. Compositional semantics would inevitably
               result in a proliferation of types, thereby obviating the proposed distinction between
               &lt;e, t&gt; elements that belong to XML and other elements that are the domain of the processing
               language. On the other hand, non-compositional semantics means that the concept of
               function admissible in XML must be wide enough to include input from outside the local
               domain of the element. For instance, the attribute 
               <div class="code e122">lang = "en"</div> must valued by referring to something beyond the string of characters "en". Similarly,
               an element containing many sub-elements would have to be evaluable in terms of its
               sub-elements. To a certain extent, it remains to be seen whether non-compositional
               semantics makes undesirable predictions. Absent such evidence, the more parsimonious
               option is not to include compositionality as an explicit requirement.
               
            </div>
         </div><a name="32SemanticCoherenceANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e123">
            <div class="title e124">3.2 Semantic Coherence</div>
            <div class="para e125">The requirement that attributes and elements in plausible XML schemas be of type
               &lt;e, t&gt; is necessary but not sufficient to the task of ruling in
               plausible schemas while ruling out implausible schemas. To illustrate the point,
               consider the XML in (12) and (13):
            </div>
            <div class="orderedlist e126" startingnumber="12">
               <div class="listitem e127">
                  <div class="para e128">
                     
                     <div class="code e129">&lt;title /&gt;&lt;creator /&gt;&lt;subject
                        /&gt;&lt;description /&gt;&lt;publisher /&gt;
                     </div>
                     
                  </div>
               </div>
               <div class="listitem e130">
                  <div class="para e131">
                     
                     <div class="code e132">&lt;title /&gt;&lt;giraffe /&gt;&lt;arsenic
                        /&gt;&lt;starvation /&gt;&lt;King of France
                        /&gt;
                     </div>
                     
                  </div>
               </div>
            </div>
            <div class="para e133">Example (12) is an excerpt from the well-known Dublin Core schema for marking up
               metadata, while schema (13) is nonsense that satisfies the requirement that
               attributes and elements be of semantic type &lt;e, t&gt;. How, then, to rule
               out (13) as compared to (12)? In this section, we attempt to develop the intuition
               that there exists a real-world object such that the traits [[title]], [[creator]],
               [[subject]], [[description]], and [[publisher]] can be predicated of it or its constituent
               parts with a truth
               value of 1 (i.e., there exists at least one object that has all of these traits),
               but there is no real-world object such that [[title]], [[giraffe]], [[arsenic]],
               [[starvation]], and [[King of France]] can be predicated of it with a truth value
               of
               1. As a reminder, the notation [[title]] should be understood as meaning roughly "something
               that is a title".
            </div>
            <div class="para e134">In order to formalize this insight, it is necessary to take a closer look at how
               entities of type &lt;e, t&gt; operate. The denotation of such an entity
               ([[x]] where x is of type &lt;e, t&gt;) is either 1 or 0 (corresponding to
               true or false). Such an entity must give a truth value based on an entity of type
               &lt;e&gt; - i.e., a chunk of text. The only restriction on this process is
               that it be a function, which for these purposes only means that some individual x
               cannot be assigned to both true and false - i.e., it cannot be simultaneously true
               and false that a chunk of text is a paragraph. Within this very wide scope, it is
               possible to distinguish multiple types of functions. Structural-type functions
               assign truth values based on whether or not the individual entity under evaluation
               meets certain structural criteria; i.e., x is a paragraph if and only if x is a
               paragraph. Predicative-type functions assign truth values based on a
               non-definitional but inherent property of the entity under evaluation; i.e., x is
               in
               German if and only if x is in German (as distinct from being a sentence, a
               paragraph, a word, etc.) Attributive-type functions assign truth values based on a
               non-definitional and non-inherent property of the entity under evaluation - i.e.,
               x
               is the title if and only if x is the title, a bit of information that requires
               specific real-world context to determine.
            </div>
            <div class="para e135">With this in mind, we can return to the main topic and provide a more precise
               characterization of semantic coherence. A schema S is said to be semantically
               coherent iff for each element or attribute {a1, a2, a3, ..., an} ∊ S there exists
               a
               set of entities (of type &lt;e&gt;) {x1, x2, x3, ..., xn} such that
               [[ak(xk)]] = 1 for all e ∊ S. The concrete interpretation of this will vary
               depending on whether the elements or attributes in question are structural,
               predicative, or attributive. &nbsp;This rules out example 13, because there are no
               real-world objects such that each element could assign those objects to a truth
               condition of 1 simultaneously (i.e. there is no thing that literally consists of or
               contains a
               title, a giraffe, arsenic, starvation, and the King of France, all at the same
               time.)
            </div>
         </div><a name="33SemanticHierarchiesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e136">
            <div class="title e137">3.3 Semantic Hierarchies</div>
            <div class="para e138">At least one more issue must be discussed in order to fully characterize plausible
               schemas. Compare (14) and (15):
            </div>
            <div class="orderedlist e139" startingnumber="14">
               <div class="listitem e140">
                  <div class="para e141">
                     
                     <div class="code e142">&lt;paragraph&gt;&lt;sentence/&gt;&lt;/paragraph&gt;</div>
                     
                  </div>
               </div>
               <div class="listitem e143">
                  <div class="para e144">
                     
                     <div class="code e145">&lt;sentence&gt;&lt;paragraph/&gt;&lt;/sentence&gt;</div>
                     
                  </div>
               </div>
            </div>
            <div class="para e146">(14) is obviously corresponds to a common schema while (15) is nonsense. Syntax
               cannot help here, nor does it suffice to appeal to the claim that (15) is not
               plausible because it is not plausible. The reason why (15) is not plausible is
               because syntax is conflicting with semantics. In order to get a precise handle on
               this, it is necessary to formalize the notion of semantic hierarchies.
            </div>
            <div class="para e147">The semantic representation of an XML tree may be considered to consist of the
               linearly arranged denotations of the elements and attributes present within an XML
               tree. In other words, &lt;element&gt; → [[element]] and
               &lt;attribute&gt; → [[attribute]]. As applied to (14) and (15), this yields
               the following table.
            </div>
            <div class="table e148" cellspacing="10px">
               <div class="thead e149">
                  <div class="tr e150">
                     <div class="th e151"></div>
                     <div class="th e152">Linear Representation</div>
                     <div class="th e153">Hierarchical Representation</div>
                  </div>
               </div>
               <div class="tbody e154">
                  <div class="tr e155">
                     <div class="th e156">Syntax of (14)</div>
                     <div class="td e157">
                        
                        <div class="code e158">&lt;paragraph&gt;&lt;sentence/&gt;&lt;/paragraph&gt;</div>
                        
                     </div>
                     <div class="td e159">
                        
                        <div class="code e160">&lt;sentence&gt; ∊ &lt;paragraph&gt;</div>
                        
                     </div>
                  </div>
                  <div class="tr e161">
                     <div class="th e162">Semantics of (14)</div>
                     <div class="td e163">[[paragraph]][[sentence]]</div>
                     <div class="td e164">[[sentence]] ⊂ [[paragraph]] </div>
                  </div>
                  <div class="tr e165">
                     <div class="th e166">Syntax of (15)</div>
                     <div class="td e167">
                        
                        <div class="code e168">&lt;sentence&gt;&lt;paragraph/&gt;&lt;/sentence&gt;</div>
                        
                     </div>
                     <div class="td e169">
                        
                        <div class="code e170">&lt;paragraph&gt; ∊ &lt;sentence&gt;</div>
                        
                     </div>
                  </div>
                  <div class="tr e171">
                     <div class="th e172">Semantics of (15)</div>
                     <div class="td e173">[[sentence]][[paragraph]]</div>
                     <div class="td e174">[[sentence]] ⊂ [[paragraph]]</div>
                  </div>
               </div>
            </div>
            <div class="para e175">Table I gives an indication of what the problem is with (15) - we can freely
               change the syntax of (14), but as much as we change the syntax, we cannot change
               what "paragraph" and "sentence" mean - in particular, we cannot change the fact that
               [[paragraph]] and [[sentence]] are semantically hierarchical. The only remaining
               step is to smooth over the notational discrepancy between hierarchical syntactic
               relationships and hierarchical semantic relationships.
            </div>
            <div class="para e176">Below is a formal characterization of semantic hierarchies as conceived more
               abstractly as ordering relationships: given a set of entities E = {e1, e2, e3, ...,
               en}, a hierarchy can be defined as an ordered k-tuple (ei, ej, ek) made up of
               elements of E. An XML schema S is then made up of both syntactic elements/attributes
               and their denotations: S = {&lt;e1&gt;, [[e1], &lt;e2&gt;, [[e2]],
               &lt;e3&gt;, [[e3]], &lt;e4&gt;, [[e4]], ..., &lt;en&gt;,
               [[en]]}. We can then state that any ordering that holds for a syntactic element
               &lt;ek&gt; in S must also hold for its semantic correspondent [[ek]]. If the
               above holds, we may then state that semantic hierarchies respect syntactic
               hierarchies- i.e., while the syntactic and semantic hierarchies don’t need to
               correspond, they can’t be contradictory. This rules out (15).
            </div>
         </div>
      </div><a name="4SomeVeryBasicFeaturesofArchiveStandardsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e177">
         <div class="title e178">4. Some Very Basic Features of Archive Standards</div>
         <div class="para e179">In this section, we summarize the above points and add some other criteria that must
            be met by plausible archive standards.
         </div>
         <div class="orderedlist e180">
            <div class="listitem e181">
               <div class="para e182">
                  <div class="emphasis e183">Syntax is arbitrarily nested</div>. If the most general level
                  is p, let the more specific levels be denoted by p, p(1), p(2) ..., p(k) for k
                  levels of specificity. It is not necessarily the case that one and only one
                  element correspond to each syntactic level. For instance, it is possible that
                  elements like &lt;sentence&gt; and &lt;metaphor&gt; are on the
                  same level.
               </div>
            </div>
            <div class="listitem e184">
               <div class="para e185">
                  
                  <div class="emphasis e186">Elements and attributes are of semantic type &lt;e,
                     t&gt;.
                  </div>
                  
               </div>
            </div>
            <div class="listitem e187">
               <div class="para e188">
                  
                  <div class="emphasis e189">Schemas must be semantically coherent.</div>
                  
               </div>
            </div>
            <div class="listitem e190">
               <div class="para e191">
                  
                  <div class="emphasis e192">Syntactic hierarchies must respect semantic hierarchies.</div>
                  
               </div>
            </div>
            <div class="listitem e193">
               <div class="para e194">
                  <div class="emphasis e195">Elements and attributes are assigned at the highest possible
                     level.
                  </div> This is an obvious insight that is not trivial to
                  formalize, the insight being that elements and attributes should not be
                  gratuitously repeated
                  <div class="popupBox e196">
                     <div class="popupLabel" onmouseover="$('#d1e376').show('1000');" onmouseout="$('#d1e376').hide('1000');">[ footnote ]</div>
                     <div id="d1e376" style="display: none;">
                        <div class="footnote">
                           <div class="para e197">This is similar to the insight that
                              "distributed properties" (as we classify them, predicative, and some
                              attributive, attributes and elements) are non-countable, i.e, 
                              <div class="quote e198">If
                                 an element type x marks a distributed property, then any two
                                 adjacent x elements may be joined, or one x element may be split:
                                 &lt;x&gt;abc&lt;/x&gt;&lt;x&gt;def&lt;/x&gt;
                                 means exactly the same thing as
                                 &lt;x&gt;abcdef&lt;/x&gt;.
                              </div>
                              
                              <div class="citation e199" linkend="sperbergmcqueen2000">Sperberg-McQueen, et al.
                                 2000
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>.Sometimes (in the case of
                  structural elements), this is because to do otherwise would be semantically
                  invalid (i.e.,
                  
                  <div class="code e200">&lt;paragraph&gt;&lt;paragraph&gt;&lt;/paragraph&gt;&lt;/paragraph&gt;</div>.)
                  For transitive predicative attributes or elements, it would be redundant (i.e., not
                  everything needs to be redundantly marked for language). Thus, for most elements
                  and attributes, it is sufficient to state that an element or attribute that maps
                  onto t = 1 (true) at level {p + k} maps onto t = 0 (untrue) at level {p + (k -
                  1)}. This will handle structural elements like &lt;paragraph&gt; and
                  predicative attributes like &lt;language&gt;. The situation is more
                  complex with regard to attributive elements and attributes like
                  &lt;metaphor&gt; or &lt;damage&gt;. One can imagine situations in
                  which these elements might occur on two structurally contiguous levels -
                  metaphors within metaphors or damage within damage. Ontologically, the situation
                  could be saved by positing that underlyingly, different metaphors or different
                  types of damage are being denoted. The details of how to formalize this is not
                  entirely clear but would likely capitalize on the intuition that metaphors
                  inside metaphors only work if the two metaphors are different.
               </div>
            </div>
         </div>
      </div><a name="5ConclusionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e201">
         <div class="title e202">5. Conclusion</div>
         <div class="para e203">Starting our exploration of XML semantics from the perspective of all syntactically
            valid schemas has allowed us to formalize some semantic traits shared by mostly
            widely-used schemas that are easy to overlook, but of great significance when assessing
            how useful a schema might be for archival purposes - and reverse-engineering the interpretation
            of schemas that have been used for archival purposes, but for which adequate documentation
            is lacking. This may also have implications for
            ongoing work towards machine-interpretation of XML semantics. If an XML document uses
            a
            schema that conforms to our proposed archive standards, stronger statements can be
            made
            about the relationship between the elements in that document. The fact that the
            syntactic hierarchy of elements is compatible with a real-world semantic hierarchy,
            in
            combination with the other generalizations that we have made about archive-appropriate
            XML semantics, facilitates the development of automatizable processes of analysis,
            and
            enables developers to bring to bear existing tools used for classifying the real
            world.
         </div>
      </div><a name="BibliographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e204">
         <div class="title e205">Bibliography</div>
         <div class="bibliomixed e206" xml:id="chatti2007"> Chatti, Noureddine; Suha Kaouk, Sylvie Calabretto and Jean
            Marie Pinon. "MultiX: an XML based formalism to encode multi-structured documents"
            In
            Proceedings of Extreme Markup Languages 2007.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e207" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://conferences.idealliance.org/extreme/html/2007/Chatti01/EML2007Chatti01.html</div>
            
         </div>
         <div class="bibliomixed e208" xml:id="derose1990">DeRose, S. J., Durand, D. G., Mylonas, E., and Renear A. H.
            (1990), 'What is Text, Really?', Journal of Computing in Higher Education, 1.2:
            3-26. doi: 
            <div class="biblioid doi e209">10.1007/BF02941632</div>
         </div>
         <div class="bibliomixed e210" xml:id="onlinetym">Online Etymology Dictionary. "Symbol". Accessed 15 April
            2010. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e211" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.etymonline.com/index.php?term=symbol</div>
         </div>
         <div class="bibliomixed e212" xml:id="piez2001"> Piez, Wendell. "Beyond the “descriptive vs. procedural”
            distinction." In Proceedings of Extreme Markup Languages 2001.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e213" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://conferences.idealliance.org/extreme/html/2001/Piez01/EML2001Piez01.html</div>
            
         </div>
         <div class="bibliomixed e214" xml:id="piez2002"> Piez, Wendell. "Human and Machine Sign Systems." In
            Proceedings of Extreme Markup Languages 2002.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e215" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://conferences.idealliance.org/extreme/html/2002/Piez01/EML2002Piez01.html</div>
            
         </div>
         <div class="bibliomixed e216" xml:id="renear1993">Renear, Allen; Elli Mylonas, and David Durand. "Refining
            our Notion of What Text Really Is: The Problem of Overlapping Hierarchies."
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e217" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.stg.brown.edu/resources/stg/monographs/ohco.html</div>
         </div>
         <div class="bibliomixed e218" xml:id="renear2002">Renear, Allen; David Dubin, and C.M. Sperberg-McQueen.
            "Towards a semantics for XML markup". Proceedings of the 2002 ACM symposium on Document
            engineering. doi: 
            <div class="biblioid doi e219">10.1145/585058.585081</div>
         </div>
         <div class="bibliomixed e220" xml:id="sperbergmcqueen2000">Sperberg-McQueen, C.M.; Claus Huitfeldt, Allen
            Renear. "Meaning and interpretation of markup." Markup Languages: Theory &amp;
            Practice 2.3 (2000): 215-234. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e221" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://cmsmcq.com/2000/mim.html</div>. doi: 
            <div class="biblioid doi e222">10.1162/109966200750363599</div>
         </div>
         <div class="bibliomixed e223" xml:id="teip4">Text Encoding Initiative: The XML Version of the TEI Guidelines:
            5 The TEI Header. Accessed 15 April 2010.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e224" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.tei-c.org/cms/Guidelines/P4/html/HD.html</div>
         </div>
         <div class="bibliomixed e225" xml:id="W3C2008">Extensible Markup Language (XML) 1.0 (Fifth Edition). W3C
            Recommendation 26 November 2008
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e226" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/2008/REC-xml-20081126/</div>
         </div>
      </div>
   </div>
</div>