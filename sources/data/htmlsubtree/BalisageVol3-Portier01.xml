<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#MethodologyfortheconstructionofmultistructureddocumentsANCHOR" name="MethodologyfortheconstructionofmultistructureddocumentsTOC">Methodology for the construction of multi-structured documents</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ExistingsolutionsformanagingmultistructureddocumentsANCHOR" name="ExistingsolutionsformanagingmultistructureddocumentsTOC">Existing solutions for managing multi-structured documents</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ApproachANCHOR" name="ApproachTOC">Approach</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AnhistoricalsolutionANCHOR" name="AnhistoricalsolutionTOC">An historical solution</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AdhocsolutionsANCHOR" name="AdhocsolutionsTOC">Ad-hoc solutions</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#XMLincompatiblemodelsANCHOR" name="XMLincompatiblemodelsTOC">XML incompatible models</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#TexMECSANCHOR" name="TexMECSTOC">TexMECS</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#LMNLANCHOR" name="LMNLTOC">LMNL</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#AnnotationgraphsANCHOR" name="AnnotationgraphsTOC">Annotation graphs</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#RDFgraphsANCHOR" name="RDFgraphsTOC">RDF graphs</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#XMLcompatiblemodelsANCHOR" name="XMLcompatiblemodelsTOC">XML compatible models</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MuLaXANCHOR" name="MuLaXTOC">MuLaX</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#GODDAGANCHOR" name="GODDAGTOC">GODDAG</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MCTANCHOR" name="MCTTOC">MCT</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MSXDANCHOR" name="MSXDTOC">MSXD</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#DelayNodesANCHOR" name="DelayNodesTOC">Delay Nodes</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MonetDB/XQueryANCHOR" name="MonetDB/XQueryTOC">MonetDB/XQuery</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MSDMMultiXANCHOR" name="MSDMMultiXTOC">MSDM, MultiX</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#SummaryANCHOR" name="SummaryTOC">Summary</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#MultiX%C2%B2amodelfortherepresentationofmultistructureddocumentsANCHOR" name="MultiX%C2%B2amodelfortherepresentationofmultistructureddocumentsTOC">MultiXÂ², a model for the representation of multi-structured documents</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AmethodologyfortheconstructionofmultistructureddocumentsANCHOR" name="AmethodologyfortheconstructionofmultistructureddocumentsTOC">A methodology for the construction of multi-structured documents</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#RestructuringstageANCHOR" name="RestructuringstageTOC">Restructuring stage</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#IllustrationANCHOR" name="IllustrationTOC">Illustration</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#FunctionsforrestructuringANCHOR" name="FunctionsforrestructuringTOC">Functions for restructuring</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#IntegrationoftheuserintherestructuringprocessANCHOR" name="IntegrationoftheuserintherestructuringprocessTOC">Integration of the user in the restructuring process</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#IllustrationANCHOR" name="IllustrationTOC">Illustration</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#FunctionsforuserintegrationANCHOR" name="FunctionsforuserintegrationTOC">Functions for user integration</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#RecommendationsystemfordocumentsauthorsANCHOR" name="RecommendationsystemfordocumentsauthorsTOC">Recommendation system for documents authors</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#IllustrationANCHOR" name="IllustrationTOC">Illustration</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#FunctionsforpromotingusersinteractionsANCHOR" name="FunctionsforpromotingusersinteractionsTOC">Functions for promoting users interactions</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#Peirce'sterminologyANCHOR" name="Peirce'sterminologyTOC">Peirce's terminology</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AprototypeimplementationofthemethodologyANCHOR" name="AprototypeimplementationofthemethodologyTOC">A prototype implementation of the methodology</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionsANCHOR" name="ConclusionsTOC">Conclusions</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">add</div>
         <div class="singletermTERMS">addTag</div>
         <div class="singletermTERMS">addText</div>
         <div class="singletermTERMS">ad libitum</div>
         <div class="singletermTERMS">August 11 - 14, 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">BS</div>
         <div class="singletermTERMS">base</div>
         <div class="singletermTERMS">build</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">Compatibility</div>
         <div class="singletermTERMS">Change management</div>
         <div class="singletermTERMS">Colorful XML: one hierarchy isn't enough</div>
         <div class="singletermTERMS">Calabretto</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">delText</div>
         <div class="singletermTERMS">documentary structures</div>
         <div class="singletermTERMS">Dynamical interpretant</div>
         <div class="singletermTERMS">dynamical interpretant</div>
         <div class="singletermTERMS">dynamical object</div>
         <div class="singletermTERMS">Digital libraries</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">Expressiveness</div>
         <div class="singletermTERMS">Efficient XQuery Support for Stand-Off Annotation</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">final interpretant</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
         <div class="singletermTERMS">Genericity</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">Haskell</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">if'</div>
         <div class="singletermTERMS">if' True</div>
         <div class="singletermTERMS">if' False</div>
         <div class="singletermTERMS">immediate object</div>
         <div class="singletermTERMS">immediate interpretant</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
         <div class="singletermTERMS">j â J</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">Letter to William James</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">Map</div>
         <div class="singletermTERMS">Map a b</div>
         <div class="singletermTERMS">moveTag</div>
         <div class="singletermTERMS">multi-structured documents</div>
         <div class="singletermTERMS">monad</div>
         <div class="singletermTERMS">Markup Overlap: A Review and a Horse</div>
         <div class="singletermTERMS">Multistructured XML textual documents</div>
         <div class="singletermTERMS">Making CONCUR work</div>
         <div class="singletermTERMS">MECS - a Multi-Element Code System</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">overlapping hierarchies</div>
         <div class="singletermTERMS">overlapping hierarchies</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">pure</div>
         <div class="singletermTERMS">pierre-edouard.portier@insa-lyon.fr</div>
         <div class="singletermTERMS">Pierre-Edouard</div>
         <div class="singletermTERMS">Portier</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
         <div class="singletermTERMS">Quality</div>
         <div class="singletermTERMS">Query mechanisms</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">stand-off markup</div>
         <div class="singletermTERMS">sylvie.calabretto@insa-lyon.fr</div>
         <div class="singletermTERMS">Sylvie</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">The essence of XML</div>
         <div class="singletermTERMS">Toward Textual Encoding Based on RDF</div>
         <div class="singletermTERMS">The Layered Markup and Annotation Language (LMNL)</div>
         <div class="singletermTERMS">Towards a Query Language for Annotation Graphs</div>
         <div class="singletermTERMS">The SGML handbook</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">XML</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="MethodologyfortheconstructionofmultistructureddocumentsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2" xml:id="HR-23632987-8973">
      <div class="title e1">Methodology for the construction of multi-structured documents</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2009</div>
            <div class="confdates e5">August 11 - 14, 2009</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">We present the multi-structured documents problem and offer an overview of existing
               solutions. We then notice that they do not consider the problem of constructing such
               documents. In this context, we use our experience with philosophers who are building
               a digital edition of the work of Jean-Toussaint Desanti, in order to present a methodology
               for the construction of multi-structured documents. This methodology is based on the
               MSDM model in order to represent such documents. Moreover each step of the methodology
               has been implemented in the Haskell functional programming language.
            </div>
         </div>
         <div class="author e8">
            <div class="personname e9">
               <div class="firstname e10">Pierre-Edouard</div>
               <div class="surname e11">Portier</div>
            </div>
            <div class="personblurb e12">
               <div class="para e13">Pierre-Edouard Portier is a computer science engineer. He has graduated in September
                  2007 from INSA-Lyon school with a Master degree in computer science. He is continuing
                  his studies at INSA-Lyon as a Ph.D student. He is working in the DRIM team of the
                  LIRIS laboratory under the supervision of Sylvie Calabretto.
               </div>
            </div>
            <div class="affiliation e14">
               <div class="orgname e15">UniversitÃ© de Lyon, CNRS, INSA-Lyon, LIRIS, UMR5205, F-69621</div>
            </div>
            <div class="email e16">pierre-edouard.portier@insa-lyon.fr</div>
         </div>
         <div class="author e17">
            <div class="personname e18">
               <div class="firstname e19">Sylvie</div>
               <div class="surname e20">Calabretto</div>
            </div>
            <div class="personblurb e21">
               <div class="para e22">Sylvie Calabretto : Doctor in Computer Sciences of the Â« Institut National des Sciences
                  AppliquÃ©es de Lyon Â» in 1993. Presently, Associate professor at the Institut National
                  des Sciences AppliquÃ©es de Lyon (INSA-Lyon) and Researcher at the Laboratory of Images
                  and Information Systems Engineering (LIRIS). Co-superviser of nine PhD dissertation.
                  Has published one collective book and about 100 papers on various computing subjects
                  among which Structured Document, Information Retrieval and Digital Libraries.
               </div>
            </div>
            <div class="affiliation e23">
               <div class="orgname e24">UniversitÃ© de Lyon, CNRS, INSA-Lyon, LIRIS, UMR5205, F-69621</div>
            </div>
            <div class="email e25">sylvie.calabretto@insa-lyon.fr</div>
         </div>
         <div class="legalnotice e26">
            <div class="para e27">Copyright Â© 2009 by the authors.  Used with
               permission.
            </div>
         </div>
         <div class="keywordset e28" role="author">
            <div class="keyword e29">Digital libraries</div>
            <div class="keyword e30">overlapping hierarchies</div>
            <div class="keyword e31">XML</div>
            <div class="keyword e32">Haskell</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e33">
         <div class="title e34">Introduction</div>
         <div class="para e35">We introduce a new problem: the construction of multi-structured documents. The multiple
            uses of a same document have led to a proliferation of documentary structures (physical,
            logical, semantic, â¦). The definition of multiple structures for a same document introduced
            the problem of 
            <div class="emphasis e36" role="ital">multi-structured documents</div> [
            <div class="xref e37" linkend="Multi"></div>]. It has to be analysed in his historical context where the most used formalisms
            for documents representation (first SGML then XML) implied tree structures. That is
            why this problem is often known as the 
            <div class="emphasis e38" role="ital">overlapping hierarchies</div> problem [
            <div class="xref e39" linkend="overlap"></div>].
         </div>
         <div class="para e40">By studying the construction of multi-structured documents we are close to the daily
            practices of users who are writing documents.  Our work is based on experience gained
            working with philosophers who are building a digital edition of the handwritten archives
            of French philosopher Jean-Toussaint Desanti (1914-2002). Desanti is known for his
            epistemological work on the development of the mathematical theory of real variables
            functions. Digital edition covers the whole editorial, scientific and critical process
            that leads to the publication of an electronic resource.  In the case of manuscripts,
            it mainly consists in the transcription and critical analysis of digital facsimiles.
            Exchanging with managers of other similar digital edition projects, we found that
            the construction of multi-structured documents was at the heart of their work. A multiplicity
            of structures is needed in order to access a document according to many points of
            view. As we can see, our work does not only consist in the conception of a model for
            the representation of multi-structured documents, but must of all in the development
            of a methodology that promotes the emergence of multiple structures in a multi-users
            context.
         </div>
         <div class="para e41">We illustrate our purpose with the 
            <div class="xref e42" linkend="deuxpages"></div> that represents a double page from some Desanti's notebook. On this image, the region
            named ZI represents a meaningful fragment of textual content that spans the two pages.
            So we face two concurrent hierarchies (that is to say two structures that cannot be
            represented through a single tree): the pages and the "regions of interest". We can
            also see equations (E1 and E2) that, even though they do not raise the technical issue
            of concurrent hierarchies, could belong to a third structure, the one of mathematical
            expressions. Thus, we not only have to offer a solution to the multiple hierarchies
            problem but also to conceive a methodology for the creation of multi-structured documents
            so as to assist the user in his modeling choices.
         </div>
         <div class="figure e43" xml:id="deuxpages" xreflabel="Figure 1">
            <div class="mediaobject e44">
               <div class="imageobject e45">
                  <div class="metaBox e46"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e77').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e77" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e46'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-001.jpg'
                           </span><span class="metaAttribute">format='jpg'
                           </span><span class="metaAttribute">width='95%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e47">
                  <div class="para e48">Two pages from some Desanti's notebook</div>
               </div>
            </div>
         </div>
         <div class="para e49">We propose a description of existing work for the representation of multi-structured
            documents. Then, we introduce with some details a peculiar model: MultiXÂ². Finally,
            we use this model to propose a methodology for the construction of multi-structured
            documents.
         </div>
      </div><a name="ExistingsolutionsformanagingmultistructureddocumentsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e50">
         <div class="title e51">Existing solutions for managing multi-structured documents</div><a name="ApproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e52">
            <div class="title e53">Approach</div>
            <div class="para e54">We divide into four classes the set of existing solutions for the
               representation of multi-structured documents. First, an historical
               solution: CONCUR, then ad-hoc solutions as proposed by the TEI (Text
               Encoding Initiative) consortium, next models that are not compatible with
               the XML language, finally those that are compatible with XML. This XML
               criterion, even though strictly technical, is very important since most
               communities working on the construction of documents and who could benefit
               from the new perspectives we introduce, are already using XML vocabularies
               and tools (they will, for example, follow the TEI recommendations).
               Finally, each solution is analysed according to six dimensions:
               
               <div class="itemizedlist e55">
                  <div class="listitem e56">
                     <div class="para e57">
                        <div class="emphasis e58" role="ital">Expressiveness</div> of the model determines if there is an explicitly
                        defined model for the static representation of multi-structured documents.
                     </div>
                  </div>
                  <div class="listitem e59">
                     <div class="para e60">
                        <div class="emphasis e61" role="ital">Genericity</div> of the model determines, when a model exists, if
                        it can be modified in order to manage problems outside of the initial scope of
                        multi-structured documents representation.
                     </div>
                  </div>
                  <div class="listitem e62">
                     <div class="para e63">
                        <div class="emphasis e64" role="ital">Quality</div> of the implementation takes account of the care taken to develop an
                        effective implementation
                     </div>
                  </div>
                  <div class="listitem e65">
                     <div class="para e66">
                        <div class="emphasis e67" role="ital">Compatibility</div> with XML tools determines if it is possible to integrate
                        the solution with the numerous existing XML tools used to manage XML
                        documents (especially typing tools such as XML Schemas, ...)
                     </div>
                  </div>
                  <div class="listitem e68">
                     <div class="para e69">
                        <div class="emphasis e70" role="ital">Query mechanisms</div> for multi-structured documents
                     </div>
                  </div>
                  <div class="listitem e71">
                     <div class="para e72">
                        <div class="emphasis e73" role="ital">Change management</div> in data or structures, determines if the model is
                        robust to change
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="AnhistoricalsolutionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e74">
            <div class="title e75">An historical solution</div>
            <div class="para e76">CONCUR [
               <div class="xref e77" linkend="concur"></div>] is an SGML option that allows multiple DTDs for the same
               content. In such an SGML document, every structure lives in a same file. In
               this file, a first structure is encoded in a standard way. For each
               additional structure, a prefix is added to opening tags, in order to
               determine which DTD defines this tag.
            </div>
            <div class="para e78">However, with the CONCUR option, we cannot establish relations
               between structures. Moreover, as stated in [
               <div class="xref e79" linkend="againstConcur"></div>], if two
               elements from different DTDs describe the same region, tags order is
               indeterminable. That is why this solution is rarely implemented, and even
               Charles Goldfarb [
               <div class="xref e80" linkend="againstConcur"></div>], the main architect of the SGML
               standard, recommends to avoid its use.
            </div>
            <div class="para e81">The CONCUR option answers most of the problems raised by multi-structured
               documents, but cannot establish relations between structures.
               However, as an SGML integrated option, it doesn't meet the genericity
               criterion. Moreover, there is no query mechanism. It should be noted, that
               since there is only one document, changes in structures or data are
               possible.
            </div>
         </div><a name="AdhocsolutionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e82">
            <div class="title e83">Ad-hoc solutions</div>
            <div class="para e84">The TEI (Text Encoding Initiative) [
               <div class="xref e85" linkend="Tei"></div>] is a consortium developing
               and maintaining a standard for the representation of electronic texts.
               These recommendations are expressed as an extensible and well documented
               XML Schema. Inside the recommendations, for each instance of the
               multi-structured document problem, a local solution is proposed. Moreover,
               in the last version of the recommendations, an entire chapter is devoted to a synthesis
               of
               the ad-hoc solutions. They are four [
               <div class="xref e86" linkend="Rose"></div>] [
               <div class="xref e87" linkend="Multi"></div>]:
            </div>
            <div class="para e88">It is possible to duplicate the content for each tree structures â¦ Poor
               solution that prevents evolutions of the document.
            </div>
            <div class="para e89">Empty tags can be used (line break, page break, etc.). But
               they prohibit us from using standard XML validation tools, or building a
               schema that specifies the structure with empty elements.
            </div>
            <div class="para e90">For two concurrent structures that do not form a tree, we can divide one of
               them into elements small enough to avoid overlapping with other
               structures. The original structure can be rebuilt through well-chosen
               attributes. As for the previous solutions, this one needs specific operations in
               order to rebuild the original structures and does not allow us to use XML
               typing tools.
            </div>
            <div class="para e91">Finally, we can isolate the content inside a so called 
               <div class="emphasis e92" role="ital">base</div> structure,
               and build the documentary structures on top of it. This solution is
               probably the most generic.
            </div>
         </div><a name="XMLincompatiblemodelsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e93">
            <div class="title e94">XML incompatible models</div><a name="TexMECSANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e95">
               <div class="title e96">TexMECS</div>
               <div class="para e97">Instead of using existing languages, new syntaxes can be defined. MECS
                  (Multi-Element Code System) [
                  <div class="xref e98" linkend="mecs"></div>] was the first language to allow
                  overlapping of structures. TexMECS [
                  <div class="xref e99" linkend="texmecs"></div>], based on MECS,
                  is much more expressive. It allows us to define complex structures where
                  an element can have multiple parents. The MECS model is expressive enough
                  to answer the classic problems raised by  multi-structured
                  documents, but is too complex in order to satisfy the genericity criterion.
                  Moreover, it does not come with query mechanisms.
               </div>
            </div><a name="LMNLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e100">
               <div class="title e101">LMNL</div>
               <div class="para e102">LMNL (Layered Markup and aNnotation Language) [
                  <div class="xref e103" linkend="lmnl"></div>] defines a
                  specific syntax based on a notion of interval that allows the encoding of
                  multiple structures with overlapping elements. This is only a syntactic
                  solution that does not propose query mechanisms. As for the previous
                  solution, since the structures are encoded inside a single document, change in
                  data or structures is possible. These two solutions are quite complex
                  and not compatible with the XML tools and remained at an experimental
                  stage.
               </div>
            </div><a name="AnnotationgraphsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e104">
               <div class="title e105">Annotation graphs</div>
               <div class="para e106">Annotation graphs [
                  <div class="xref e107" linkend="annotationGraphs"></div>] has been developed in order to
                  model linguistics phenomena (phonetic, prosody, morphology, syntax, ...).
                  If we consider these domains as distinct structures, then annotation graphs
                  are a valid solution to the multi-structured documents problem. As shown on
                  
                  <div class="xref e108" linkend="graphe_annotations"></div>, the same textual fragment can be annotated
                  by elements from different structures.
               </div>
               <div class="figure e109" xml:id="graphe_annotations" xreflabel="Figure 2">
                  <div class="mediaobject e110">
                     <div class="imageobject e111">
                        <div class="metaBox e112"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e190').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e190" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e112'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-002.jpg'
                                 </span><span class="metaAttribute">format='jpg'
                                 </span><span class="metaAttribute">width='95%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e113">
                        <div class="para e114">Annotation Graph</div>
                     </div>
                  </div>
               </div>
               <div class="para e115">Nodes granularity is the word, or even the character if necessary. Labels on edges
                  indicate the structure (eg S2:M for the words, S1:L for the lines).
                  Since structures share the same graph, their update is not a problem.
                  Moreover, a minimal query language has been developed for this kind of graph
                  [
                  <div class="xref e116" linkend="annotationGraphsQuery"></div>]. The underlying model being a graph, it is
                  expressive enough to answer the multi-structured documents problem. But, strongly
                  oriented toward linguistic, it lacks genericity.
               </div>
            </div><a name="RDFgraphsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e117">
               <div class="title e118">RDF graphs</div>
               <div class="para e119">The RDF (Resource Description Framework) graph formalism is able to
                  represent multi-structured documents [
                  <div class="xref e120" linkend="Rdf"></div>]. This method is similar to
                  the previous one, but relies on a generic graph model.
                  Standard query tools for RDF graphs (eg SPARQL) can be used, but complex
                  queries can be difficult to formulate. Although RDF is serializable in XML,
                  the use of standard XML tools is problematic because they work on tree
                  structures. Finally, change management is possible since structures and
                  data share the same graph.
               </div>
            </div>
         </div><a name="XMLcompatiblemodelsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e121">
            <div class="title e122">XML compatible models</div><a name="MuLaXANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e123">
               <div class="title e124">MuLaX</div>
               <div class="para e125">MuLaX [
                  <div class="xref e126" linkend="againstConcur"></div>] is the adaptation of the SGML CONCUR option to
                  the XML formalism. This is a documentary format that allows to unify XML
                  documents sharing the same content in a single document. In order to
                  differentiate annotations levels, the tags are prefixed by a structure
                  identifier. This solution lacks genericity since a specific editor is
                  needed in order to interpret the produced documents. As for the CONCUR
                  option, changes in structures or data are possible since there is one
                  single document. No query operators has been defined, but the authors
                  explain that it should be possible to build path expressions similar to
                  those found in XPath.
               </div>
            </div><a name="GODDAGANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e127">
               <div class="title e128">GODDAG</div>
               <div class="para e129">[
                  <div class="xref e130" linkend="GODDAG"></div>] presents a solution based on the GODDAGs (General Order
                  Descendant Directed Acyclic Graph) to represent multi-structured
                  documents. This graph model is a solution to the overlapping hierarchies
                  problem. In order to query those documents, the author developed an XPath
                  extension. This extension takes into account new kinds of relations between
                  elements of distinct structures. This model cannot manage generic relations
                  between structures. It is possible to import (or export) from (or to) the
                  XML formalism. With this model it is possible to manage change in
                  structures.
               </div>
            </div><a name="MCTANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e131">
               <div class="title e132">MCT</div>
               <div class="para e133">The MCT (Multi-Colored Trees) model [
                  <div class="xref e134" linkend="mct"></div>] is an extension of the XML
                  model that allows us to represent multiple trees sharing the same
                  content. It relies on the tree coloring technique. A color is associated with
                  each tree. A node may have multiple colors: the color of the main tree to which
                  it belongs and colors for other trees. 
                  <div class="xref e135" linkend="mctimg"></div> illustrates this model with an example of manuscript transcription. We see that three
                  of the units nodes share two colors: one for the semantic structure and another one
                  for the physical structure.
               </div>
               <div class="figure e136" xml:id="mctimg" xreflabel="Figure 3">
                  <div class="mediaobject e137">
                     <div class="imageobject e138">
                        <div class="metaBox e139"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e234').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e234" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e139'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-003.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='95%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e140">
                        <div class="para e141">Colored Trees</div>
                     </div>
                  </div>
               </div>
               <div class="para e142">The navigation in the multihierarchy is possible by means of the
                  multicolored nodes. To navigate between colors, the authors extend the
                  notion of step in XPath. An extension of
                  XQuery is also proposed for the creation of nodes.
                  Concerning updates, the authors explain that the extension of a
                  language such as XUpdate is possible by using the XPath extension that they propose.
                  The
                  underlying model is neither expressive nor generic enough since it imposes
                  an isomorphism of data segments (data segments must be of the same type:
                  word, character, etc.).
               </div>
            </div><a name="MSXDANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e143">
               <div class="title e144">MSXD</div>
               <div class="para e145">MSXD (Multi-Structured XML Documents) [
                  <div class="xref e146" linkend="MSXD"></div>] is a representation model
                  for multi-structured documents that comes along with an XQuery extension. It allows
                  users to annotate the structures. Moreover a draft of a multi-structured
                  documents schema is introduced. However the need to define a large number
                  of relations between structures makes the model difficult to use.
                  Furthermore, it is not possible to manage changes in data or structures.
               </div>
            </div><a name="DelayNodesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e147">
               <div class="title e148">Delay Nodes</div>
               <div class="para e149">Jacques LeMaÃ®tre [
                  <div class="xref e150" linkend="delay"></div>] proposed to add a new type of node to the
                  XDM model on which are based XPath and XQuery. Those nodes are a virtual
                  representation as an XQuery query of some of the child nodes of their
                  parent node (see 
                  <div class="xref e151" linkend="delayimg"></div>). The underlying multi-structured documents model is very similar to the one
                  of Multi Colored Trees (see 
                  <div class="xref e152" linkend="delaymodel"></div>) where documents
                  are considered as a set of XML trees. But no
                  XPath or XQuery extensions are necessary in order to navigate inside these
                  structures. However, with this approach, it is not possible to reach the
                  parents of a delay node but only to navigate among the descendants.
               </div>
               <div class="figure e153" xml:id="delayimg" xreflabel="Figure 4">
                  <div class="mediaobject e154">
                     <div class="imageobject e155">
                        <div class="metaBox e156"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e261').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e261" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e156'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-004.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='95%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e157">
                        <div class="para e158">Delay nodes</div>
                     </div>
                  </div>
               </div>
               <div class="figure e159" xml:id="delaymodel" xreflabel="Figure 5">
                  <div class="mediaobject e160">
                     <div class="imageobject e161">
                        <div class="metaBox e162"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e268').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e268" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e162'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-005.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='95%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e163">
                        <div class="para e164">Delay nodes underlying MSD model</div>
                     </div>
                  </div>
               </div>
            </div><a name="MonetDB/XQueryANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e165">
               <div class="title e166">MonetDB/XQuery</div>
               <div class="para e167">MonetDB/Xquery is a XML SGBD. It has an extension [
                  <div class="xref e168" linkend="Monet"></div>] for managing
                  multi-structured documents thanks to the 
                  <div class="emphasis e169" role="ital">stand-off markup</div> technique.
                  Optimized query operators has been developed, but no model is truly
                  defined, only an informal description is proposed (as for the TEI
                  solutions).
               </div>
            </div><a name="MSDMMultiXANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e170">
               <div class="title e171">MSDM, MultiX</div>
               <div class="para e172">MSDM [
                  <div class="xref e173" linkend="Multix"></div>] is a model used for the representation of
                  multi-structured documents written by N.Chatti. An instance of this model,
                  called MultiX, is expressed in the XML formalism. It belongs to the category of
                  
                  <div class="emphasis e174" role="ital">stand-off markup</div> solutions where content is isolated
                  in a base structure, and documentary structures are built by references
                  to the base structure.
               </div>
               <div class="para e175">In this model, a document is a graph 
                  <div class="code e176">D</div> composed of:
                  
                  <div class="itemizedlist e177">
                     <div class="listitem e178">
                        <div class="para e179">a set of nodes 
                           <div class="code e180">BS</div> also called the base structure
                        </div>
                     </div>
                     <div class="listitem e181">
                        <div class="para e182">a family 
                           <div class="code e183">(DS
                              <div class="subscript e184">j</div>) 
                              <div class="subscript e185">j â J</div>
                           </div> of trees also called 
                           <div class="emphasis e186" role="ital">documentary structures</div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e187">Moreover, 
                  <div class="code e188">â j â J</div>, there is a relationship 
                  <div class="code e189">R
                     <div class="subscript e190">j</div>
                  </div> that associates
                  each node of 
                  <div class="code e191">DS
                     <div class="subscript e192">j</div>
                  </div> with a subset of 
                  <div class="code e193">BS</div> ; for each leaf of 
                  <div class="code e194">DS
                     <div class="subscript e195">j</div>
                  </div>
                  this subset must be non empty. 
                  <div class="xref e196" linkend="modele"></div> illustrates each element
                  of the model.
               </div>
               <div class="figure e197" xml:id="modele" xreflabel="Figure 6">
                  <div class="mediaobject e198">
                     <div class="imageobject e199">
                        <div class="metaBox e200"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e346').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e346" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e200'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-006.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='70%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e201">
                        <div class="para e202">Illustration of the MSDM model</div>
                     </div>
                  </div>
               </div>
               <div class="para e203">Finally, it should be noted that only nodes from the base structure have an
                  associated content and depend on the data types (text, movies, etc.). In
                  the case of textual data, a string of characters, called fragment,
                  is associated with each node of the base structure.
               </div>
            </div>
         </div><a name="SummaryANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e204">
            <div class="title e205">Summary</div>
            <div class="para e206">
               <div class="xref e207" linkend="tableau"></div> summarises the analysis by affecting, as objectively as
               possible, a score from 0 to
               3 to each criterion (model expressivity, quality of implementation, use of
               standard XML tools, query mechanisms, management of changes in data and
               structures) and for each solution. For readability, maximum scores have
               been underlined.
            </div>
            <div class="figure e208" xml:id="tableau" xreflabel="Figure 7">
               <div class="mediaobject e209">
                  <div class="imageobject e210">
                     <div class="metaBox e211"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e361').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e361" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e211'
                              </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-007.jpg'
                              </span><span class="metaAttribute">format='jpg'
                              </span><span class="metaAttribute">width='95%'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
                  <div class="caption e212">
                     <div class="para e213">Rating of existing solutions to the multi-structured documents problem</div>
                  </div>
               </div>
            </div>
            <div class="para e214">We now introduce a new instance of MSDM, called MultiXÂ² that
               will allow us to represent multi-structured documents.
            </div>
         </div>
      </div><a name="MultiX%C2%B2amodelfortherepresentationofmultistructureddocumentsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e215">
         <div class="title e216">MultiXÂ², a model for the representation of multi-structured documents</div>
         <div class="para e217">MultiXÂ² is an instance of MSDM that favors the W3C recommendations (we
            make use of the XInclude Standard for linking documentary structures and
            the base structure) to the specific mechanisms used by MultiX. We chose MSDM as the
            representation model on which we built our methodology since, based on the stand-off
            markup technique, it was simple enough and yet well defined (moreover, it is referenced
            by the
            fifth edition of the TEI guidelines).
         </div>
         <div class="para e218">We illustrate this instance of the MSDM model on an example taken from the Jean-Toussaint
            Desanti's
            Archive (see 
            <div class="xref e219" linkend="deuxpages"></div>). We see two pages from a notebook with
            a region of text that overlaps the two pages. Moreover it should be
            noted that mathematical equations appear inside this philosophical text. We distinguish
            two structures. First, the physical structure of pages:
            
            <div class="programlisting e220" xml:space="preserve">
               &lt;s1&gt;
               &lt;page&gt;Autrement dit la distinction signe-signifie ...
               Remarque,
               &lt;/page&gt;
               &lt;page&gt;ce discours, ...
               par ex le discours 3 + 2 = 0 - 1 est-il un texte ? ...
               &lt;/page&gt;
               &lt;/s1&gt;
            </div>
            Then, a logical structure of regions of interest:
            
            <div class="programlisting e221" xml:space="preserve">
               &lt;s2&gt;
               &lt;p&gt;Autrement dit la distinction signe-signifie ...&lt;/p&gt;
               &lt;p&gt;Remarque, ce discours, ...&lt;/p&gt;
               &lt;p&gt;par ex le discours
               &lt;eq&gt;3 + 2 = 0 - 1&lt;/eq&gt; est-il un texte ? ...&lt;/p&gt;
               &lt;/s2&gt;
            </div>
            We build the base structure by identifying the shared fragments from the
            two documentary structures:
            
            <div class="programlisting e222" xml:space="preserve">
               &lt;seg xml:id="F1"&gt;Autrement dit la distinction signe-signifie ...
               &lt;/seg&gt;
               &lt;seg xml:id="F2"&gt;Remarque, &lt;/seg&gt;
               &lt;seg xml:id="F3"&gt;ce discours, ...&lt;/seg&gt;
               &lt;seg xml:id="F4"&gt;par ex le discours &lt;/seg&gt;
               &lt;seg xml:id="F5"&gt;3 + 2 = 0 - 1&lt;/seg&gt;
               &lt;seg xml:id="F6"&gt; est-il un texte ? ...&lt;/seg&gt;
               
            </div>
            We use the XInclude standard in order to replace the content inside
            documentary structures by references to the base structure. First, the
            physical structure:
            
            <div class="programlisting e223" xml:space="preserve">
               &lt;s1&gt;
               &lt;page&gt;
               &lt;xi:include href="base.xml" xpointer="element(F1/1)"/&gt;
               &lt;xi:include href="base.xml" xpointer="element(F2/1)"/&gt;
               &lt;/page&gt;
               &lt;page&gt;
               &lt;xi:include href="base.xml" xpointer="element(F3/1)"/&gt;
               &lt;xi:include href="base.xml" xpointer="element(F4/1)"/&gt;
               &lt;xi:include href="base.xml" xpointer="element(F5/1)"/&gt;
               &lt;xi:include href="base.xml" xpointer="element(F6/1)"/&gt;
               &lt;/page&gt;
               &lt;/s1&gt;
               
            </div>
            Then the logical structure:
            
            <div class="programlisting e224" xml:space="preserve">
               &lt;s2&gt;
               &lt;p&gt;
               &lt;xi:include href="base.xml" xpointer="element(F1/1)"/&gt;
               &lt;/p&gt;
               &lt;p&gt;
               &lt;xi:include href="base.xml" xpointer="element(F2/1)"/&gt;
               &lt;xi:include href="base.xml" xpointer="element(F3/1)"/&gt;
               &lt;/p&gt;
               &lt;p&gt;
               &lt;xi:include href="base.xml" xpointer="element(F4/1)"/&gt;
               &lt;eq&gt;
               &lt;xi:include href="base.xml" xpointer="element(F5/1)"/&gt;
               &lt;/eq&gt;
               &lt;xi:include href="base.xml" xpointer="element(F6/1)"/&gt;
               &lt;/p&gt;
               &lt;/s2&gt;
               
            </div>
         </div>
         <div class="para e225">We can use standard XML tools in order to validate the documentary
            structures. We build queries thanks to specific XQuery functions originally
            built for the MultiX formalism. Below, a query that finds regions of
            interest overlapping on two pages:
            
            <div class="programlisting e226" xml:space="preserve">
               let $physique := doc("physique.xml")
               let $logique := doc("logique.xml")
               for $page in $physique//page,
               $para in $logique//p
               where multix:share-fragments($page,$para) and
               not(multix:include-content-of($page,$para))
               return $para
               
            </div>
            And the result will be:
            
            <div class="programlisting e227" xml:space="preserve">
               &lt;p&gt;Remarque, ce discours, ...&lt;/p&gt;
               
            </div>
            The share-fragments(a,b) function checks if elements a and b have at least
            one fragment in common. The include-content(a,b) function checks if every
            fragment composing element b also compose element a.
         </div>
      </div><a name="AmethodologyfortheconstructionofmultistructureddocumentsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e228">
         <div class="title e229">A methodology for the construction of multi-structured documents</div>
         <div class="para e230">We will use the MSDM model in order to introduce the construction of
            multi-structured documents. We claim that the study of the construction of documentary
            structures is a way to approach the user interpretation of a document. For example,
            numerous critical edition
            projects begin with manuscripts images they then transcribe and annotate.
            During these operations, the documents will be manipulated by numerous users
            and under a multiplicity of perspectives that mostly depend on how the
            documents are used. However, within the limits of today systems dedicated to the
            creation of documents, most of these diversified perspectives will remain
            inaccessible, buried in users minds. We claim that, in the
            context of the creation and annotation of documents, most of these hidden
            perspectives can be revealed by the differentiation of structures. This
            differentiation is an operation that splits an annotation vocabulary into
            sub-vocabularies, thus adding a new structure to the document. Thereby, the
            methodology we now present promotes the construction of a multiplicity of
            structures that should reflect the perspectives adopted by the users while
            accessing the documents. This methodology consists of three categories of
            methods:
            
            <div class="itemizedlist e231">
               <div class="listitem e232">
                  <div class="para e233">detection of needed restructuring and automatic
                     differentiation of structures. As we will see, the overlapping hierarchies
                     problem becomes an element of this category of methods.
                  </div>
               </div>
               <div class="listitem e234">
                  <div class="para e235">execution of the dynamical interpretant of the confrontation of
                     a user with the results of automatic restructuring. 
                     <div class="emphasis e236" role="ital">Dynamical
                        interpretant
                     </div> is a term belonging to C.S. Peirce's terminology that will be
                     explained in a next section.
                  </div>
               </div>
               <div class="listitem e237">
                  <div class="para e238">creation of a social network of documents authors
                     in order to encourage argument about and sharing of annotation vocabularies
                  </div>
               </div>
            </div>
         </div><a name="RestructuringstageANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e239">
            <div class="title e240">Restructuring stage</div>
            <div class="para e241">We analyse the conditions under which it is necessary to build a new
               documentary structure and we define the underlying functions performing
               this task.
            </div><a name="IllustrationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e242">
               <div class="title e243">Illustration</div>
               <div class="para e244">For clarity, and since we know the field, we use an example taken from
                  critical electronic edition of manuscripts. We suppose that for the
                  transcription of a manuscript the researchers have on hand the elements defined by
                  the TEI.  From the previous
                  example: pages, region of interest and equations have been correctly tagged  until
                  a region overlaps two pages
                  (see dotted edges of 
                  <div class="xref e245" linkend="restructuration_necessaire"></div>).
               </div>
               <div class="figure e246" xml:id="restructuration_necessaire" xreflabel="Figure 8">
                  <div class="mediaobject e247">
                     <div class="imageobject e248">
                        <div class="metaBox e249"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e432').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e432" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e249'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-008.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='70%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e250">
                        <div class="para e251">Restructuring is necessary (a paragraph overlaps two pages)</div>
                     </div>
                  </div>
               </div>
               <div class="para e252">It is then necessary to distinguish two
                  structures. The creation of a new structure is a purely formal operation
                  (see 
                  <div class="xref e253" linkend="restructuration_automatique"></div>) consisting in the
                  transformation of a graph into two trees.
               </div>
               <div class="figure e254" xml:id="restructuration_automatique" xreflabel="Figure 9">
                  <div class="mediaobject e255">
                     <div class="imageobject e256">
                        <div class="metaBox e257"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e443').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e443" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e257'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-009.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='70%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e258">
                        <div class="para e259">Automatic restructuring (two structures are distinguished)</div>
                     </div>
                  </div>
               </div>
            </div><a name="FunctionsforrestructuringANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e260">
               <div class="title e261">Functions for restructuring</div>
               <div class="para e262">We now describe the functions that perform these restructuring operations.
                  We are using the Haskell pure and statically typed functional programming language
                  [
                  <div class="xref e263" linkend="Haskell"></div>]. As a pure language, Haskell keeps side effects under the control of a class of
                  type constructor called Monad, in practice this allows us to ensure that a valid document
                  will always be transformed into a valid document. Since our methodology introduces
                  numerous document transformations, this property is very interesting. All the
                  necessary notions for the understanding of the code will be provided. But not all
                  functions definitions will be given.
                  Moreover the main purpose of showing these functions is to give a proof of the
                  feasibility of our methodology.
               </div>
               <div class="para e264">We need two helper functions, 
                  <div class="code e265">if'</div> for boolean conditions and 
                  <div class="code e266">add</div> for
                  the addition of a new element at the end of a 
                  <div class="code e267">Map</div>. A 
                  <div class="code e268">Map a b</div> is a
                  structure of elements of type 
                  <div class="code e269">b</div> indexed by element of type 
                  <div class="code e270">a</div>.
                  From the signature of 
                  <div class="code e271">if'</div> we learn that the function takes
                  three arguments, the first argument being a Boolean value. 
                  <div class="code e272">if'
                     True
                  </div> is a two arguments function that evaluates its first argument (the second argument
                  will never be evaluated), while 
                  <div class="code e273">if' False</div> is a two arguments function that evaluates its second argument (the first argument
                  will never be evaluated).
                  
                  <div class="programlisting e274" xml:space="preserve">
                     -- This is a comment
                     -- A function is described by its type signature: the list of the types of its
                     -- arguments and of thereturned value separated by the symbol: '-&gt;'.
                     -- For example, the addIntegers function would have the signature:
                     addIntegers :: Int -&gt; Int -&gt; Int
                     -- and the definition:
                     addIntegers a b = a + b
                     -- Moreover, functions are curried, so (addInteger 2) is a function of type:
                     (addInteger 2) :: Int -&gt; Int
                     -- Finally, we will:
                     --   * use some primitive types :
                     --       - Bool (with the only two constructors True and False)
                     --       - Int
                     --   * use the list constructor:
                     --     [Int] is the type of a list of values of type Int
                     --   * define data types:
                     data Interval = Interval {
                     start :: Int
                     ,end  :: Int
                     }
                     -- now Interval is a function (also called a constructor) of type:
                     Interval :: Int -&gt; Int -&gt; Interval
                     -- start is a function of type:
                     start :: Interval -&gt; Int
                     -- end is a function of type:
                     end :: Interval -&gt; Int
                     
                     --   * define shortcuts for existing types:
                     type Tags = [Tags]
                     -- Tags is now a synonym for [Tags] (list of Tags)
                     
                     if' :: Bool -&gt; a -&gt; a -&gt; a
                     if' True x _ = x
                     if' False _ y = y
                     
                     add :: a -&gt; Map Int a -&gt; Map Int a
                     
                  </div>
               </div>
               <div class="para e275">We first define our main data types. A Tag is composed of an identifier
                  and a list of attributes. We also have a data structure associating
                  each tag identifier with a name and a list of default attributes. A
                  Taggee is the application of a Tag to an interval of characters of the
                  studied text. A Structure is a named map of taggees. A Document is the
                  association of a text and a map of structures.
                  
                  <div class="programlisting e276" xml:space="preserve">
                     data Interval = Interval {
                     start :: Int
                     ,end :: Int
                     }
                     
                     data Taggee = Taggee {
                     tag :: Tag
                     ,interval :: Interval
                     }
                     
                     data Structure = Structure {
                     name :: String
                     ,taggees :: Map Int Taggee
                     }
                     
                     type TagId = Int
                     
                     data Tag = Tag {
                     tagId :: TagId
                     ,atts :: Map Int String
                     }
                     
                     type Tags = [Tag]
                     
                     type Text = String
                     
                     data Doc = Doc {
                     text :: Text
                     ,structures :: Map Int Structure
                     }
                     
                  </div>
               </div>
               <div class="para e277">We also need functions for simple interval algebra.
                  
                  <div class="programlisting e278" xml:space="preserve">
                     overlaps   :: Interval -&gt; Interval -&gt; Bool
                     isIncluded :: Interval -&gt; Interval -&gt; Bool
                     includes i1 i2 = isIncluded i2 i1
                     inside     :: Int -&gt; Interval -&gt; Bool
                     ilength    :: Interval -&gt; Int
                     isort :: Interval -&gt; Interval -&gt; (Interval,Interval)
                     
                     -- The exclusive OR of interval overlapping :
                     overlapExclusion :: Interval -&gt; Interval -&gt; (Interval,Interval)
                     
                     -- less than:
                     ilt i1 i2 = (end i1) &lt; (start i2)
                     -- greater than :
                     igt i1 i2 = (start i1) &gt; (end i2)
                     
                     -- shifting an interval:
                     ioffset :: Interval -&gt; Int -&gt; Interval
                     startBefore :: Interval -&gt; Interval -&gt; Bool
                     equals :: Interval -&gt; Interval -&gt; Bool
                     isPrefixOf :: Interval -&gt; Interval -&gt; Bool
                     isSuffixOf :: Interval -&gt; Interval -&gt; Bool
                     
                  </div>
                  The 
                  <div class="code e279">addTag</div> function tries to add a tag to a structure, if the addition
                  does not imply overlapping then the modified structure is returned, else a
                  pair of structures is returned: the first structure is the original one
                  except that every instances of the added tag have been
                  transfered to the second structure. In a similar way, the $delTag$ function
                  removes the instance of a given tag from a selected interval and may imply
                  overlapping thus the type signature.
                  
                  <div class="programlisting e280" xml:space="preserve">
                     -- partition the map according to a predicate:
                     partition :: Ord k =&gt; (a -&gt; Bool ) -&gt; Map k a -&gt; (Map k a, Map k a)
                     elems     :: Map k a -&gt; [a]
                     
                     -- function application:
                     $ :: (a -&gt; b) -&gt; a -&gt; b
                     -- function composition:
                     . :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c
                     
                     -- map f xs is the list obtained by applying f to each element of xs:
                     -- map f [x1,x2,...,xn] == [f x1, f x2, ..., f xn]
                     map   :: (a -&gt; b) -&gt; [a] -&gt; [b]
                     -- foldl, applied to a binary operator, a starting value, and a list, reduces
                     -- the list using the binary operator, from left to right:
                     -- foldl f z [x1,x2,...,xn] == f (f (f (f z x1) x2) ...) xn
                     foldl :: (a -&gt; b -&gt; a) -&gt; a -&gt; [b] -&gt; a
                     
                     -- The Either type represents values with two
                     -- possibilities: a value of type Either a b is
                     -- either Left a or Right b
                     
                     addTag :: Taggee -&gt; Structure -&gt; Either (Structure,Structure) Structure
                     addTag t (Structure n s) =
                     let (s1,s2) = partition ( ( (tagId $ tag t)== ) . tagId . tag ) s in
                     if' ( foldl (||) False $ map (overlaps (interval t) . interval) $ elems s )
                     ( Left  ( Structure n $ add t s1, Structure n s2 ) )
                     ( Right ( Structure n $ add t s ) )
                     
                     delTag :: Interval -&gt; TagId -&gt; Structure -&gt; Either (Structure,Structure) Structure
                     
                  </div>
               </div>
               <div class="para e281">Finally, the user must be able to add or remove textual data. This is the
                  purpose of the 
                  <div class="code e282">addText</div> and 
                  <div class="code e283">delText</div> functions.
                  
                  <div class="programlisting e284" xml:space="preserve">
                     -- split a list in two:
                     splitAt :: Int -&gt; [a] -&gt; ([a], [a])
                     
                     fst  	  :: (a, b) -&gt; a
                     snd  	  :: (a, b) -&gt; b
                     
                     addText :: Int -&gt; String -&gt; Doc -&gt; Doc
                     addText i s d =
                     let t    = text d
                     split = splitAt (i-1) t
                     t'    = fst split ++ s ++ snd split
                     sts   = structures d
                     sts'  = map ( addCharInS i (length s) ) sts
                     in Doc t' sts'
                     
                     addCharInS :: Int -&gt; Int -&gt; Structure -&gt; Structure
                     addCharInS i size (Structure n s) =
                     Structure n $ map ( \t -&gt;
                     if' ( i `inside` (interval t) )
                     t{interval = Interval (start $ interval t) $
                     (end $ interval t) + size}
                     t ) s
                     
                     delText :: Int -&gt; Int -&gt; Doc -&gt; Doc
                     
                  </div>
               </div>
            </div>
         </div><a name="IntegrationoftheuserintherestructuringprocessANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e285">
            <div class="title e286">Integration of the user in the restructuring process</div><a name="IllustrationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e287">
               <div class="title e288">Illustration</div>
               <div class="para e289">The automatic restructuring introduced above can be the occasion for a
                  user to make modeling choices. For example, he can ask for the
                  creation of a new mathematical structure for the equations and rename the
                  structures (see 
                  <div class="xref e290" linkend="restructuration_interpretant"></div>).
               </div>
               <div class="figure e291" xml:id="restructuration_interpretant" xreflabel="Figure 10">
                  <div class="mediaobject e292">
                     <div class="imageobject e293">
                        <div class="metaBox e294"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e523').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e523" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e294'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-010.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='70%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="caption e295">
                        <div class="para e296">Intervention of a user (Three structures are named and distinguished)</div>
                     </div>
                  </div>
               </div>
            </div><a name="FunctionsforuserintegrationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e297">
               <div class="title e298">Functions for user integration</div>
               <div class="para e299">
                  <div class="code e300">moveTag</div> is the main function offered to the user for reacting to the automatic
                  restructuring, it allows him to move all the instances of a tag from one
                  structure to another. The function may fail if it introduces
                  overlapping hierarchies.
                  
                  <div class="programlisting e301" xml:space="preserve">
                     -- case analysis for the Either type
                     either :: (a -&gt; c) -&gt; (b -&gt; c) -&gt; Either a b -&gt; c
                     
                     -- the constant function
                     const :: a -&gt; b -&gt; a
                     
                     -- foldr, applied to a binary operator, a starting value, and a list, reduces
                     -- the list using the binary operator, from right to left:
                     -- foldr f z [x1,x2,...,xn] == f x1 (f x2 (... (f xn z)))
                     foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b
                     
                     moveTag :: TagId -&gt; Structure -&gt; Structure -&gt; Maybe (Structure, Structure)
                     
                     moveTag id s1 s2 =
                     let (ts',ts'') = partition ( (==id) . tagId . tag ) ( taggees s1 )
                     f :: Taggee -&gt; Either (Structure, Structure) Structure -&gt;
                     Either (Structure, Structure) Structure
                     f t ( Right s )       = addTag t s
                     f t ( Left (s1, s2) ) = Left (s1, s2) in
                     
                     if' ( null ts' || null ts'' ) Nothing $
                     either ( const Nothing )
                     ( Just . (,) ( Structure (name s1) ts' ) ) $
                     foldr f (Right s2) $ elems ts''
                     
                  </div>
                  
               </div>
            </div>
         </div><a name="RecommendationsystemfordocumentsauthorsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e302">
            <div class="title e303">Recommendation system for documents authors</div>
            <div class="para e304">We now try to involve even more the author of a document in the process of
               maintaining a coherent multiplicity of structures. This is why we promote the
               emergence of a social network of documents authors. The recommendation
               mechanism that allows us to build this network define two users
               as closed, insofar as they are editing specific documents, if the implied
               tags trees of their structures are similar. We first give an example of
               this process and then define the structures and functions used to implement
               it.
            </div><a name="IllustrationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e305">
               <div class="title e306">Illustration</div>
               <div class="para e307">We imagine three users who create documents containing
                  mathematical notations. For each of them, a mathematical structure emerged
                  from their operations of annotation (as described in the previous sections).
                  Users 1 and 2 have already decided to merge their tag hierarchies. The tag
                  hierarchies are given below:
                  
                  <div class="informaltable e308">
                     <div class="metaBox e309"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e548').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e548" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='center'
                              </span><span class="metaAttribute">class='e309'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="metaBox e310"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e549').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e549" class="metaSource" style="display:none;">                
                           &lt;col<span class="metaAttribute">align='center'
                              </span><span class="metaAttribute">class='e310'
                              </span><span class="metaAttribute">span='1'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                     <div class="thead e311">
                        <div class="tr e312">
                           <div class="th e313">Users 1 and 2</div>
                           <div class="th e314">User 3</div>
                        </div>
                     </div>
                     <div class="tr e315">
                        <div class="td e316">
                           
                           <div class="itemizedlist e317">
                              <div class="listitem e318">
                                 <div class="para e319">theorem</div>
                                 <div class="itemizedlist e320">
                                    <div class="listitem e321">
                                       <div class="para e322">statement</div>
                                    </div>
                                    <div class="listitem e323">
                                       <div class="para e324">proof</div>
                                    </div>
                                 </div>
                              </div>
                              <div class="listitem e325">
                                 <div class="para e326">lemma</div>
                                 <div class="itemizedlist e327">
                                    <div class="listitem e328">
                                       <div class="para e329">statement</div>
                                    </div>
                                    <div class="listitem e330">
                                       <div class="para e331">proof</div>
                                    </div>
                                 </div>
                              </div>
                              <div class="listitem e332">
                                 <div class="para e333">cocycle</div>
                              </div>
                              <div class="listitem e334">
                                 <div class="para e335">cobordism</div>
                              </div>
                           </div>
                           
                        </div>
                        <div class="td e336">
                           
                           <div class="itemizedlist e337">
                              <div class="listitem e338">
                                 <div class="para e339">proposition</div>
                                 <div class="itemizedlist e340">
                                    <div class="listitem e341">
                                       <div class="para e342">proof</div>
                                    </div>
                                    <div class="listitem e343">
                                       <div class="para e344">operators</div>
                                    </div>
                                 </div>
                              </div>
                              <div class="listitem e345">
                                 <div class="para e346">cohomology</div>
                                 <div class="itemizedlist e347">
                                    <div class="listitem e348">
                                       <div class="para e349">cocycle</div>
                                    </div>
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                  </div>
                  If these two hierarchies were detected as similar enough, each user would
                  be proposed to ask the other users the authorization to merge their
                  hierarchies. Thus, communities of users appear, centered on their
                  annotation practices. In this previous example, users seem to
                  work on the same kind of documents, but the perspective of user 3 may be formal logic
                  whereas users 1 and 2 refer to a more traditional vocabulary for the
                  description of proofs. Since the tips the
                  users receive while annotating a document come from the hierarchy of tags
                  associated with the current structure, once the merge is accepted, the users may align
                  their
                  annotation vocabularies or at least question their practices.
               </div>
            </div><a name="FunctionsforpromotingusersinteractionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e350">
               <div class="title e351">Functions for promoting users interactions</div>
               <div class="para e352">We define a new data type (TagStruct) in order to link each tag used for
                  the annotation of a document with its possible descendants. Thus, while a user is
                  annotating a document we can give him hints about the
                  next tag to choose, based on this new structure and its current position in the text.
                  We also
                  update the Structure data type to link to the corresponding
                  implied tag structure. For this linking to be possible, we maintain a map
                  (of type TagStructs) of the implied tag structures.
                  
                  <div class="programlisting e353" xml:space="preserve">
                     type TagStruct = Map TagId [TagId]
                     type TagStructId = Int
                     type TagStructs = Map TagStructId TagStruct
                     
                     data Structure = Structure {
                     name :: String
                     ,taggees :: Map Int Taggee
                     ,tagStructId :: TagStructId
                     } deriving (Show)
                     
                  </div>
                  We have to modify the addTag function in order to update the linked structures of
                  tags:
                  
                  <div class="programlisting e354" xml:space="preserve">
                     addTag :: Taggee -&gt; Structure -&gt; TagStructs -&gt; Either (Structure,Structure, TagStructs)
                     (Structure, TagStructs)
                     addTag t (Structure n s tagStructId) tagStructs =
                     let tId = tagId $ tag t
                     (s1,s2) = partition ( (tId==) . tagId . tag ) s
                     s' = Structure n (add t s) tagStructId
                     (tagStructIdS2, newTagStructs) = addTagStruct tagStructs in
                     if' (
                     foldl (||) False $
                     map (overlaps (interval t) . interval) $
                     elems s
                     )
                     (
                     Left ( Structure n (add t s1) tagStructId,
                     Structure "" s2 tagStructIdS2,
                     delTagFromTagStruct tId tagStructId newTagStructs )
                     ) $
                     Right ( s', addTagToTagStruct tId (parentId t s') tagStructId tagStructs )
                     
                     addTagStruct :: TagStructs -&gt; (TagStructId, TagStructs)
                     
                     delTagFromTagStruct :: TagId -&gt; TagStructId -&gt; TagStructs -&gt; TagStructs
                     
                     addTagToTagStruct :: TagId -&gt; Maybe TagId -&gt; TagStructId -&gt; TagStructs -&gt; TagStructs
                     
                     parentId :: Taggee -&gt; Structure -&gt; Maybe TagId
                     parentId t s = maybe Nothing (Just . tagId . tag) $ parent t s
                     
                     parent :: Taggee -&gt; Structure -&gt; Maybe Taggee
                     
                  </div>
                  Note that Haskell is a 
                  <div class="emphasis e355" role="ital">pure</div> functional programming language and as such does not allow side effects. That is
                  why, in the previous functions when we had to manage some kind of shared data structure
                  of type TagStructs, we passed it between functions by the way of an extra parameter.
                  Haskell has a data type design pattern called 
                  <div class="emphasis e356" role="ital">monad</div> that offers a much nicer solution, but we kept with the basics so that the link between
                  the two previous sections remained obvious.
                  
               </div>
               <div class="para e357">We finally have to compute the distance between every pair of implied tag
                  structures. We choose a very straightforward editing distance equals to the
                  number of "add" and "delete" operations needed to transform one set of tags
                  into another. It does not take into account the structure of the tags and
                  has for only purpose to guide the user towards other possibly similar
                  tagging practices. In our current implementation, the distances computation is a
                  daily batch process.
                  
                  <div class="programlisting e358" xml:space="preserve">
                     type Recommendations = Map TagStructId (Map TagStructId Int)
                     
                     distance :: TagStruct -&gt; TagStruct -&gt; Int
                     distance ts1 ts2 =
                     let k1 = keys ts1
                     k2 = keys ts2
                     intersize = length $ intersect k1 k2 in
                     (length k1 - intersize) + (length k2 - intersize)
                     
                     distances :: TagStructs -&gt; Recommendations
                     distances tss = mapWithKey (\k ts -&gt; map (distance ts) $ delete k tss) tss
                     
                  </div>
               </div>
            </div>
         </div><a name="Peirce'sterminologyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e359">
            <div class="title e360">Peirce's terminology</div>
            <div class="para e361">We now present the theoretical ideas that gave us the
               opportunity to develop our methodology. Indeed, in order to explore the
               dynamical aspects of multi-structured documents creation, and not only the
               static problem of representing such documents, we needed new tools that
               could allow us to think of a maintained multiplicity of structures. We
               found them in C.S. Peirce. The
               introduction of the 
               <div class="emphasis e362" role="ital">dynamical interpretant</div> as part of the notion of sign
               received our full attention. In order to define this notion, we quote
               Peirce [
               <div class="xref e363" linkend="peirce1"></div>]:
            </div>
            <div class="popupBox e364">
               <div class="popupLabel" onmouseover="$('#d1e640').show('1000');" onmouseout="$('#d1e640').hide('1000');">[ blockquote ]</div>
               <div id="d1e640" style="display: none;">
                  <div class="blockquote">
                     <div class="para e365">â¦suppose I awake in the morning before my wife, and that afterwards she
                        wakes up and inquires, "What sort of a day is it?" This is a sign, whose
                        Object, as expressed, is the weather at that time, but whose Dynamical
                        Object is the impression which I have presumably derived from peeping
                        between the window-curtains. Whose Interpretant, as expressed, is the
                        quality of the weather, but whose Dynamical Interpretant, is my answering
                        her question. But beyond that, there is a third Interpretant. The Immediate
                        Interpretant is what the Question expresses, all that it immediately
                        expresses, which I have imperfectly restated above. The Dynamical
                        Interpretant is the actual effect that it has upon me, its interpreter. But
                        the Significance of it, the Ultimate, or Final, Interpretant is her purpose
                        in asking it, what effect its answer will have as to her plans for the
                        ensuing day. I reply, let us suppose: "It is a stormy day." Here is another
                        sign. Its Immediate Object is the notion of the present weather so far as
                        this is common to her mind and mine - not the character of it, but the
                        identity of it. The Dynamical Object is the identity of the actual or Real
                        meteorological conditions at the moment. The Immediate Interpretant is the
                        schema in her imagination, i.e. the vague Image or what there is in common
                        to the different Images of a stormy day. The Dynamical Interpretant is the
                        disappointment or whatever actual effect it at once has upon her. The Final
                        Interpretant is the sum of the Lessons of the reply, Moral, Scientific,
                        etc.
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e366">Elsewhere [
               <div class="xref e367" linkend="peirce2"></div>], we find this definition of the sign: 
               <div class="quote e368">By a sign I mean any thing
                  which is in any way, direct or indirect, so influenced by any thing (which
                  I term its object) and which in turn influence a mind that this mind is
                  thereby influenced by the Object ; and I term that which is called forth in
                  the mind the Interpretant of the sign.
               </div>
            </div>
            <div class="para e369">That being said, we take as a sign the presentation to the user of a
               restructuring, and try to analyze it thanks to Peirce's categories :
               
               <div class="itemizedlist e370">
                  <div class="listitem e371">
                     <div class="para e372">
                        <div class="emphasis e373" role="ital">immediate object</div>: the actual presentation of an automatic
                        restructuring
                     </div>
                  </div>
                  <div class="listitem e374">
                     <div class="para e375">
                        <div class="emphasis e376" role="ital">dynamical object</div>: the impression the user may have derived from
                        looking at the automatic restructuring presentation
                     </div>
                  </div>
                  <div class="listitem e377">
                     <div class="para e378">
                        <div class="emphasis e379" role="ital">immediate interpretant</div>: validity of the restructuring
                     </div>
                  </div>
                  <div class="listitem e380">
                     <div class="para e381">
                        <div class="emphasis e382" role="ital">dynamical interpretant</div>: user answer to the restructuring
                        presentation in terms of the operations (and the ways to combine them)
                        offered by the computer
                     </div>
                  </div>
                  <div class="listitem e383">
                     <div class="para e384">
                        <div class="emphasis e385" role="ital">final interpretant</div>: effect of the operations engaged by the
                        user
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e386">We can replay this analysis but this time taking as a sign the previous dynamical
               interpretant (we are allowed to take this step by the very nature of the
               sign: every sign is linking to another one 
               <div class="emphasis e387" role="ital">ad libitum</div>:
               
               <div class="itemizedlist e388">
                  <div class="listitem e389">
                     <div class="para e390">
                        <div class="emphasis e391" role="ital">immediate object</div>: the multiple structures of the document
                     </div>
                  </div>
                  <div class="listitem e392">
                     <div class="para e393">
                        <div class="emphasis e394" role="ital">dynamical object</div>: the operations to be applied on the
                        multi-structured document
                     </div>
                  </div>
                  <div class="listitem e395">
                     <div class="para e396">
                        <div class="emphasis e397" role="ital">immediate interpretant</div>: execution of the operations
                     </div>
                  </div>
                  <div class="listitem e398">
                     <div class="para e399">
                        <div class="emphasis e400" role="ital">dynamical interpretant</div>: effect of this particular choice of
                        operations in this particular context
                     </div>
                  </div>
                  <div class="listitem e401">
                     <div class="para e402">
                        <div class="emphasis e403" role="ital">final interpretant</div>: effect the presentation of the computer
                        analysis  of the user interactions will have on the user
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e404">First of all, the linked nature of the sign gave us the idea of introducing the user
               at
               the heart of the restructuring process. Moreover, being able to see the dynamical
               interpretant as a producer of new signs gave us the idea of the
               construction of a social network of documents authors, the documentary
               structures being used as a social glue.
            </div>
         </div>
      </div><a name="AprototypeimplementationofthemethodologyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e405">
         <div class="title e406">A prototype implementation of the methodology</div>
         <div class="para e407">We provide all the functions introduced above as a Web service that follows
            the REST [
            <div class="xref e408" linkend="Rest"></div>] design pattern. In the context of this paper we cannot
            fully describe this Web service. We only give as an example the HTTP
            operation used for tagging a new "equation" in the mathematical structure
            of a notebook. All we have to do is send a POST request to the resource
            identified by the URL 
            <div class="emphasis e409" role="ital">http://desanti.org/cahiers/148/structures/math/taggees</div> with a body of:
            
            <div class="programlisting e410" xml:space="preserve">
               &lt;taggee&gt;
               &lt;tag name="equation" /&gt;
               &lt;interval start="14" end="26" /&gt;
               &lt;/taggee&gt;
               &lt;/programlisting&gt;
               
            </div>
         </div>
         <div class="para e411">
            <div class="xref e412" linkend="prototype"></div> is a screenshot of the client application running inside a Web browser. The region
            Z3 is a hierarchy
            of all the documents of the archive, it gives the researchers the synoptic
            view they need. The region Z1 is a draggable navigator obtained by clicking
            on an element of the hierarchy Z3, it allows to navigate among the images
            of the pages of a collection. The region Z4 is an editor for the
            transcription. The region Z5 is the set of recommendations for tag
            hierarchies similar to the one implied by the current documentary
            structure. Region Z2 is the comparison frame obtained when the user click
            on one of the recommendations, it allows him to decide if he wants to merge
            his tags structure with the one suggested.
         </div>
         <div class="figure e413" xml:id="prototype" xreflabel="Figure 11">
            <div class="mediaobject e414">
               <div class="imageobject e415">
                  <div class="metaBox e416"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e728').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e728" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e416'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Portier01/Portier01-011.jpg'
                           </span><span class="metaAttribute">format='jpg'
                           </span><span class="metaAttribute">width='95%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e417">
                  <div class="para e418">Prototype</div>
               </div>
            </div>
         </div>
      </div><a name="ConclusionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e419">
         <div class="title e420">Conclusions</div>
         <div class="para e421">We have identified a new problem: how to 
            <div class="emphasis e422" role="ital">build</div> multi-structured
            documents? This allowed us to take over the old issue of multi-structured
            documents as we pulled away from its technical formulation and bring
            ourselves closer to the daily practices of those building documents. We have shown
            that, although the enforcement of tree structures was for a long time
            considered as the crux of the problem, we could place it at the heart of a
            new solution where the emergence of overlapping hierarchies triggers the
            creation of a new structure that has to be validated by the user. In fact, our methodology
            places the users in a central position and we managed to lighten the cognitive load
            that results from the interactions with the system by bordering the reflexive activities
            on small and well defined periods. Thus we
            managed to provide a methodology that addresses the needs of humanities
            researchers by promoting and maintaining a multiplicity of stuctures.
            Moreover, we developed a prototype that implements the algebraic operations
            described in the article.  These operations are provided through a Web
            interface using the HTTP protocol in accordance with the REST design
            pattern.
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e423">
         <div class="title e424">References</div>
         <div class="bibliomixed e425" xml:id="Rose" xreflabel="Rose2004">Steven J. DeRose, 
            <div class="emphasis e426" role="ital">Markup Overlap: A Review and a Horse</div> in "Extreme Markup Languages" 2004, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e427" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.mulberrytech.com/Extreme/Proceedings/html/2004/DeRose01/EML2004DeRose01.html</div>
         </div>
         <div class="bibliomixed e428" xml:id="Multi" xreflabel="Bruno2007">Emmanuel Bruno, Sylvie Calabretto and Elisabeth Murisasco, 
            <div class="emphasis e429" role="ital">Documents textuels multi structurÃ©s : un Ã©tat de l'art.</div> in "Revue i3" 2007, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e430" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://liris.cnrs.fr/publis/?id=2708</div>
         </div>
         <div class="bibliomixed e431" xml:id="Multix" xreflabel="Chatti2007">Noureddine Chatti, Souha Kaouk, Sylvie Calabretto and Jean-Marie Pinon, 
            <div class="emphasis e432" role="ital">MultiX: an XML-based formalism to encode multi-structured documents</div> in "Proceedings of Extreme Markup Languages'2007"
         </div>
         <div class="bibliomixed e433" xml:id="Rest" xreflabel="Fielding2000">Roy  T. Fielding, 
            <div class="emphasis e434" role="ital">Architectural styles and the design of network-based software architectures</div>, 2000 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e435" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://portal.acm.org/citation.cfm?id=932295</div>
         </div>
         <div class="bibliomixed e436" xml:id="Haskell" xreflabel="PeytonJones2002">Simon Peyton Jones, 
            <div class="emphasis e437" role="ital">Haskell 98 Language and Libraries: The Revised Report</div>, 2002 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e438" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://haskell.org/definition/haskell98-report.pdf</div>
         </div>
         <div class="bibliomixed e439" xml:id="Tei" xreflabel="Burnard2007">Lou Burnard and Syd Bauman, 
            <div class="emphasis e440" role="ital">TEI P5: Guidelines for Electronic Text Encoding and Interchange</div>, 2007 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e441" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.tei-c.org/release/doc/tei-p5-doc/en/html/index.html</div>
         </div>
         <div class="bibliomixed e442" xml:id="Schema" xreflabel="Simeon2003">Jerome Simeon and Philip Wadler, 
            <div class="emphasis e443" role="ital">The essence of XML</div>, 2003 in "POPL '03: Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles
            of programming languages", doi: 
            <div class="biblioid doi e444">10.1145/604131.604132</div>
         </div>
         <div class="bibliomixed e445" xml:id="Annotation" xreflabel="Bird1999">Steven Bird and Mark Liberman, 
            <div class="emphasis e446" role="ital">Annotation Graphs as a Framework for Multidimensional Linguistic Data Analysis</div>, 1999 in "Towards Standards and Tools for Discourse Tagging: Proceedings of the Workshop",
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e447" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://citeseer.ist.psu.edu/bird99annotation.html</div>
         </div>
         <div class="bibliomixed e448" xml:id="Rdf" xreflabel="Tummarello2005">Giovanni Tummarello, Christian Morbidoni and E. Pierazzo, 
            <div class="emphasis e449" role="ital">Toward Textual Encoding Based on RDF</div>, in "From Author to Reader: Challenges for the Digital Content Chain: Proceedings
            of the 9th ICCC International Conference on Electronic Publishing held at Katholieke
            Universiteit Leuven - ELPUB 2005, Leuven-Heverlee, Belgium, June 8-10, 2005. Proceedings",
            p. 57-63
         </div>
         <div class="bibliomixed e450" xml:id="Monet" xreflabel="Alink2006">Wouter Alink, R. A. F. Bhoedjang, Arjen P. de Vries and Peter A. Boncz, 
            <div class="emphasis e451" role="ital">Efficient XQuery Support for Stand-Off Annotation</div>, in "Proceedings of the 3rd International Workshop on XQuery Implementation, Experience
            and Perspectives, in cooperation with ACM SIGMOD, June 30, 2006, Chicago, USA. 2006",
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e452" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.ximep-2006.org/papers/Paper-Alink-Boncz.pdf</div>
         </div>
         <div class="bibliomixed e453" xml:id="MSXD" xreflabel="Bruno2006">E. Bruno and E. Murisasco, 
            <div class="emphasis e454" role="ital">Multistructured XML textual documents</div>, 2006, in "GESTS International Transactions on Computer Science and Engineering",
            vol. 34 n. 1, p. 200-211
         </div>
         <div class="bibliomixed e455" xml:id="GODDAG" xreflabel="Sperberg-McQueen2000">C. M. Sperberg-McQueen and Claus Huitfeldt, 
            <div class="emphasis e456" role="ital">GODDAG: A Data Structure for Overlapping Hierarchies</div>, in "Digital Documents: Systems and Principles, 8th International Conference on Digital
            Documents and Electronic Publishing, DDEP 2000, 5th International Workshop on the
            Principles of Digital Document Processing, PODDP 2000, Munich, Germany, September
            13-15, 2000, Revised Papers", vol. 2023, p. 139-160
         </div>
         <div class="bibliomixed e457" xml:id="againstConcur" xreflabel="Hilbert2005">Mirco Hilbert, Andreas Witt and Oliver Schonefeld, 
            <div class="emphasis e458" role="ital">Making CONCUR work</div>, 2005, in "Extreme Markup Languages"
         </div>
         <div class="bibliomixed e459" xml:id="mecs" xreflabel="Huitfeldt1998">Claus Huitfeldt, 
            <div class="emphasis e460" role="ital">MECS - a Multi-Element Code System</div>, 1998, in "Working Papers from the Wittgenstein Archives at the University of Bergen",
            vol. 3
         </div>
         <div class="bibliomixed e461" xml:id="texmecs" xreflabel="Huitfeldt2003">Claus Huitfeldt and Michael Sperberg-McQueen, 
            <div class="emphasis e462" role="ital">TexMECS: An experimental markup meta-language for complex documents</div>, 2003, in "Working paper of the project Markup Languages for Complex Documents (MLCD),
            University of Bergen", 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e463" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://decentius.aksis.uib.no/mlcd/2003/Papers/texmecs.html</div>
         </div>
         <div class="bibliomixed e464" xml:id="lmnl" xreflabel="Tennison2002">Jeni Tennison and Wendell Piez, 
            <div class="emphasis e465" role="ital">The Layered Markup and Annotation Language (LMNL)</div>, 2002, in "Extreme Markup Languages", 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e466" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.mulberrytech.com/Extreme/Proceedings/html/2002/Tennison02/EML2002Tennison02.html</div>
         </div>
         <div class="bibliomixed e467" xml:id="annotationGraphs" xreflabel="Maeda2002">Kazuaki Maeda, Steven Bird, Xiaoyi Ma and Haejoong Lee, 
            <div class="emphasis e468" role="ital">Creating Annotation Tools with the Annotation Graph Toolkit</div>, 2002, in "Proceedings of the Third International Conference on Language Resources
            and Evaluation", 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e469" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://arxiv.org/abs/cs/0204005</div>
         </div>
         <div class="bibliomixed e470" xml:id="annotationGraphsQuery" xreflabel="Bird2000">Steven Bird, Peter Buneman and Wang-chiew Tan, 
            <div class="emphasis e471" role="ital">Towards a Query Language for Annotation Graphs</div>, 2000, in "Proceedings of the Second International Conference on Language Resources
            and Evaluation", p. 807-814
         </div>
         <div class="bibliomixed e472" xml:id="mct" xreflabel="Jagadish2004">H. V. Jagadish, Laks V. S. Lakshmanan, Monica Scannapieco, Divesh Srivastava, and
            Nuwee Wiwatwattana, 
            <div class="emphasis e473" role="ital">Colorful XML: one hierarchy isn't enough</div>, 2004, in "SIGMOD '04: Proceedings of the 2004 ACM SIGMOD international conference
            on Management of data", p. 251-262, doi: 
            <div class="biblioid doi e474">10.1145/1007568.1007598</div>
         </div>
         <div class="bibliomixed e475" xml:id="delay" xreflabel="LeMaitre2006">Jacques Le MaÃ®tre, 
            <div class="emphasis e476" role="ital">Describing multistructured XML documents by means of delay nodes</div>, 2006, in "DocEng '06: Proceedings of the 2006 ACM symposium on Document engineering",
            New York, NY, USA, p. 155-164, doi: 
            <div class="biblioid doi e477">10.1145/1166160.1166200</div>
         </div>
         <div class="bibliomixed e478" xml:id="overlap" xreflabel="Iacob2005">Ionut E. Iacob and Alex Dekhtyar, 
            <div class="emphasis e479" role="ital">Processing XML documents with overlapping hierarchies</div>, 2005, in "JCDL '05: Proceedings of the 5th ACM/IEEE-CS joint conference on Digital
            libraries", New York, NY, USA, p. 409-409, doi: 
            <div class="biblioid doi e480">10.1145/1065385.1065513</div>
         </div>
         <div class="bibliomixed e481" xml:id="concur" xreflabel="Goldfarb1990">Charles F. Goldfarb, 
            <div class="emphasis e482" role="ital">The SGML handbook</div>, 1990, Oxford University Press, Inc.
         </div>
         <div class="bibliomixed e483" xml:id="peirce1" xreflabel="Peirce1909">Charles Sanders Peirce, 
            <div class="emphasis e484" role="ital">Letter to William James</div>, in "Collected Papers of Charles Sanders Peirce, Volume 8, Arthur W. Burks. Cambridge,
            Mass.: Harvard University Press", para. 314, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e485" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.helsinki.fi/science/commens/terms/dynamicalinterpretant.html</div>
         </div>
         <div class="bibliomixed e486" xml:id="peirce2" xreflabel="Peirce">Charles Sanders Peirce, 
            <div class="emphasis e487" role="ital">Logic: Regarded as a Study of the general nature of Signs</div>, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e488" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.cspeirce.com/menu/library/rsources/76defs/76defs.htm</div>
         </div>
      </div>
   </div>
</div>