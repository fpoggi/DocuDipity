<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#MethodologyForProvidingNationalInformationExchangeModel(NIEM)ModelUnderstanding%0AtoXMLandNIEMNovicesANCHOR" name="MethodologyForProvidingNationalInformationExchangeModel(NIEM)ModelUnderstanding%0AtoXMLandNIEMNovicesTOC">Methodology For Providing National Information Exchange Model (NIEM) Model Understanding
               to XML and NIEM Novices </a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ChallengesANCHOR" name="ChallengesTOC">Challenges</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NIEMDirectoryStructureANCHOR" name="NIEMDirectoryStructureTOC">NIEM Directory Structure</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NIEMDirectoryStructureANCHOR" name="NIEMDirectoryStructureTOC">NIEM Directory Structure</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NIEMFlexibilityANCHOR" name="NIEMFlexibilityTOC">NIEM Flexibility</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NIEMandSubstitutionGroupsANCHOR" name="NIEMandSubstitutionGroupsTOC">NIEM and Substitution Groups</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NIEMandReferencingANCHOR" name="NIEMandReferencingTOC">NIEM and Referencing</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NamespacesANCHOR" name="NamespacesTOC">Namespaces</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NillableElementsANCHOR" name="NillableElementsTOC">Nillable Elements</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ApproachANCHOR" name="ApproachTOC">Approach</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DefaultXMLTemplateANCHOR" name="DefaultXMLTemplateTOC">Default XML Template</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#HeadersandFootersANCHOR" name="HeadersandFootersTOC">Headers and Footers</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#CommentsANCHOR" name="CommentsTOC">Comments</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DealingwithAttributesANCHOR" name="DealingwithAttributesTOC">Dealing with Attributes</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MajorSectionsANCHOR" name="MajorSectionsTOC">Major Sections</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NavigationBar/BookmarksANCHOR" name="NavigationBar/BookmarksTOC">Navigation Bar/Bookmarks</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#CrossReferencesANCHOR" name="CrossReferencesTOC">Cross-References</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DataDictionaryANCHOR" name="DataDictionaryTOC">Data Dictionary</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BenefitsANCHOR" name="BenefitsTOC">Benefits</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionANCHOR" name="ConclusionTOC">Conclusion</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibliographyANCHOR" name="BibliographyTOC">Bibliography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">August 5 - 8, 2014</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2014</div>
         <div class="singletermTERMS">Betty</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">crazy</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">Data models</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">Electronic Commerce Connection, Inc.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">https://www.niem.gov/</div>
         <div class="singletermTERMS">Harvey</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">Information consumers</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">NOTE:</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">think out of the box</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
         <div class="singletermTERMS">yes</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="MethodologyForProvidingNationalInformationExchangeModel(NIEM)ModelUnderstanding%0AtoXMLandNIEMNovicesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3">
      <div class="title e1">Methodology For Providing National Information Exchange Model (NIEM) Model Understanding
         to XML and NIEM Novices 
      </div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2014</div>
            <div class="confdates e5">August 5 - 8, 2014</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">NIEM is a U.S. government initiative to enable the sharing of data. NIEM consists
               of many domains. The NIEM model relies heavily on the use of references to create
               relationships between data. It also relies on different namespaces for each domain.
               Many large government projects have mandated that NIEM be used for exchange of data
               between the government agencies, states and other trading partners. NIEM data models
               are very complex. One of the challenges with using NIEM is how to provide a
               mechanism to present a complex data model in a way that will provide  business
               analysts, SMEs,  programmers and testers the ability to understand the complexity
               of
               elements, relationships and bi-directional linkages between pieces of information
               that can be understood by both technical and non-technical individuals. 
            </div>
            <div class="para e8">Most of the projects have software development lifecycle (SDLC) artifacts, i.e.,
               UML models, data dictionaries, business analysis documents etc. However, these
               artifacts do not provide the clarity of schema design needed from a NIEM and XML
               perspective. This paper will describe a '
               <div class="emphasis e9" role="bold">crazy</div>'
               mechanism (out of the norm) for providing an understandable artifact of the a very
               large NIEM schema that that was provided to possibly thousands of diverse trading
               partners for very large federal and state government program 
            </div>
         </div>
         <div class="author e10">
            <div class="personname e11">
               <div class="firstname e12">Betty </div>
               <div class="surname e13">Harvey</div>
            </div>
            <div class="personblurb e14">
               <div class="para e15"> As President of Electronic Commerce Connection, Inc. since 1995, Ms. Harvey
                  has led many federal government and commercial enterprises in planning and
                  executing their migration to the use of structured information for their
                  critical functions.  She has helped develop strategic XML solutions for her
                  clients. Ms. Harvey has been instrumental in developing industry XML standards.
                  She is the co-author of "Professional ebXML Foundations" published by Wrox. Ms.
                  Harvey founded the Washington, DC Area SGML/XML Users Group. Ms. Harvey is a
                  member of "The XML Guild" and was a coauthor of the book "Advanced XML
                  Applications From the Experts at The XML Guild" published by Thomson. 
               </div>
            </div>
            <div class="affiliation e16">
               <div class="orgname e17">
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e18" xlink:actuate="onRequest" xlink:href="http://www.eccnet.com" xlink:show="new" xlink:type="simple">Electronic Commerce Connection,
                     Inc.
                  </div>
               </div>
            </div>
         </div>
         <div class="legalnotice e19">
            <div class="para e20">Copyright © 2014 Electronic Commerce Connection, Inc.</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e21">
         <div class="title e22">Introduction</div>
         <div class="para e23">Every large project has to create and maintain documentation that conveys information
            about every aspect of that project. These include but are not limited to:
         </div>
         <div class="itemizedlist e24">
            <div class="listitem e25">
               <div class="para e26">
                  <div class="emphasis e27" role="bold">Data models</div>
               </div>
            </div>
            <div class="listitem e28">
               <div class="para e29">
                  <div class="emphasis e30" role="bold">Information consumers</div>
               </div>
            </div>
            <div class="listitem e31">
               <div class="para e32">Data flows</div>
            </div>
            <div class="listitem e33">
               <div class="para e34">Information transformations</div>
            </div>
            <div class="listitem e35">
               <div class="para e36">Information storage</div>
            </div>
            <div class="listitem e37">
               <div class="para e38">Etc.</div>
            </div>
         </div>
         <div class="para e39">In a recent large project we were faced with all of these issues.  The data model
            that
            was used was a customized National Information Exchange Model (NIEM) data model. 
            The
            NIEM data model is very complex.  NIEM uses redirection and references that on the
            surface makes the data model hard to understand and navigate.  We were faced with
            the
            prospect of trying to convey the data model to literally hundreds, possibly thousands,
            of business analysts and developers (mostly JAVA) in an efficient and understandable
            way.  The consumers of the data model were unknown to us.  Their skill level and
            understanding of NIEM were unknown, although we suspected that this understanding
            was
            low, especially where NIEM was concerned.
         </div>
         <div class="para e40">This paper will describe an approach that I developed for conveying the complexities
            of the data model.  Although, at first I thought it was a 'crazy' idea, it proved
            to be
            very useful and much more efficient in understanding the data model. 
         </div>
      </div><a name="ChallengesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e41">
         <div class="title e42">Challenges</div>
         <div class="para e43">NIEM is an XML vocabulary for describing information. NEIM creates profiles based
            on
            specific business domains. NIEM was designed as an exchange model. The XML schemas
            and
            information artifacts are packaged into what NIEM calls an Information Exchange Package
            Documentation (IEPD). The directory structure of an IEPD is complex. At the leaf of
            every directory are one or more schemas that is referenced by another schema.
            Individuals that have worked with XML are able to pick up a W3C Schema, DTD or RelaxNG
            schema and obtain an understanding of the schema. The fragmentation and referencing
            used
            in NIEM makes it virtually impossible to gain knowledge by reading the schemas. 
         </div>
         <div class="para e44">The project that this paper concerns was and continues to be a very large project.
            There are hundreds of organizations (federal government, state governments, local
            governments and commercial) that were required to use the IEPD to exchange information
            between the various organizations.
         </div>
         <div class="para e45">There are also hundreds, maybe thousands of consumers of the information. The actual
            consumers of the IEPD were unknown at the project level, except at a high level. We
            knew
            that the types of consumers would be:
         </div>
         <div class="itemizedlist e46">
            <div class="listitem e47">
               <div class="para e48">Business Analysts</div>
            </div>
            <div class="listitem e49">
               <div class="para e50">Programmers (JAVA, C++, possibly COBOL)</div>
            </div>
            <div class="listitem e51">
               <div class="para e52">Technical Writers</div>
            </div>
            <div class="listitem e53">
               <div class="para e54">Relational Database Developers/Administrators</div>
            </div>
            <div class="listitem e55">
               <div class="para e56">Testers</div>
            </div>
            <div class="listitem e57">
               <div class="para e58">XML Professionals (XQuery, XSLT, Transformations)</div>
            </div>
         </div>
         <div class="para e59">We were faced with the challenge of how to provide documentation that would convey
            information about 460+ elements in a meaningful way to prospective consumers. Even
            with
            a constraint schema, most of the elements were optional and used based on specific
            scenarios of the data. 
         </div><a name="NIEMDirectoryStructureANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e60">
            <div class="title e61">NIEM Directory Structure</div>
            <div class="para e62">The structure of the schema is rigidly controlled by NIEM and the IEPD
               specification. Below is an example of an IEPD that was used to support this
               methodology. 
            </div>
            <div class="figure e63">
               <div class="title e64">IEPD Directory Structure</div>
               <div class="mediaobject e65">
                  <div class="imageobject e66">
                     <div class="metaBox e67"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e104').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e104" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e67'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-001.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="NIEMDirectoryStructureANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e68">
            <div class="title e69">NIEM Directory Structure</div>
            <div class="para e70">The IEPD in the above directory structure contains a total of 30 schemas.
               
            </div>
         </div><a name="NIEMFlexibilityANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e71">
            <div class="title e72">NIEM Flexibility</div>
            <div class="para e73">NIEM by default has no constraints. What this means is that the structure is
               somewhat rigorous but all the elements, except the root element are optional. Most
               organizations cannot sustain a data model without constraints. NIEM has a concept
               of
               'unconstrained' and 'constrained' data model. If an organization decides to
               constrain its data model it must maintain 2 copies of the schema (constrained and
               unconstrained) and provide both in the IEPD. 
            </div>
         </div><a name="NIEMandSubstitutionGroupsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e74">
            <div class="title e75">NIEM and Substitution Groups</div>
            <div class="para e76">NIEM uses substitution groups instead for choices in the schema. Substitution
               groups are choices. The element that is included in the root model is not valid in
               the XML instance but can be substituted by other elements. The use of substitution
               groups is useful but can be very confusing to both business analysts and
               programmers. Also, many web services software could not consume the schemas with
               included substitution groups.  We were never able to determine the exact reason but
               my hypothesis is that many of the substitution groups are cyclical and the software
               cannot handle the recursion. Substitution groups and software consumption of
               schema's that contain substitution groups is possibly a subject for another paper
               and not part of this paper!
            </div>
         </div><a name="NIEMandReferencingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e77">
            <div class="title e78">NIEM and Referencing</div>
            <div class="para e79">Although NIEM is an XML exchange model, in actuality you can envision it more
               as a relational database model. Instead of a true hierarchical model where
               relationships can be construed by ancestor or descendant components, NIEM uses XML
               ID/IDREF constructs to provide relationships between different components. For
               example, in the model we were working with there were several major structures that
               belonged to a person. In other models you might embed all the information related
               a
               person with the person information. In NIEM, these components are separate and the
               information is 'tied' together by using a reference element:
            </div>
            <div class="programlisting e80" xml:space="preserve">   
               &lt;md-ee:PrimaryTaxFiler&gt;
               &lt;md-core:TINIdentification&gt;
               &lt;nc:IdentificationID&gt;326603914&lt;/nc:IdentificationID&gt;
               &lt;/md-core:TINIdentification&gt;
               &lt;md-core:RoleOfPersonReference s:ref="Dad"/&gt;
               &lt;/md-ee:PrimaryTaxFiler&gt;
            </div>
            <div class="para e81">In the above example, this piece of information is referring back to the 'Dad'
               person. One of the sample XML documents that were provided as part of the
               documentation package for the IEPD had over 70 reference elements.
            </div>
         </div><a name="NamespacesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e82">
            <div class="title e83">Namespaces</div>
            <div class="para e84">In the IEPD that was developed, there were a total of 15 namespaces. The more
               namespaces that you have, the more complicated the developing processes against the
               XML can be. Using 15 namespaces became challenging, not only for us but for
               developers with exchange partners. The 15 namespace prefixes that are used in the
               IEPD are: exch, ext, fips_6-4, i, i2, iso_3166, nc, niem-xsd, s, scr, usps, and 3
               custom namespaces used by the project.
            </div>
         </div><a name="NillableElementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e85">
            <div class="title e86">Nillable Elements</div>
            <div class="para e87">Nillable elements are elements that are allowed to be empty. This is true even
               when the element has required children elements. Nillable elements are slightly
               different than true empty elements.  Elements can be defined as having no content,
               or empty.  For example, HTML elements &lt;br/&gt; and &lt;hr/&gt; elements are empty
               because they are using to define either a line break or a horizontal rule.  Content
               would be meaningless for these elements.  Whereas, nillable elements are designed
               to
               have content but the schema says they can be empty. 
            </div>
            <div class="para e88">NIEM elements, by default, allow elements to be nillable.  The NIEM specification
               was the first XML vocabulary that I have used that has actually used the 'nillable'
               capability of the XML schema.  The use of nillable elements caused problems with
               both understanding the model and with software.   Let's say you have the following
               model for a Person.  In this model, the &lt;PersonName&gt; is required.  The
               &lt;PersonName&gt; requires a &lt;FirstName&gt; and &lt;LastName&gt;.  &lt;MiddleName&gt; is
               optional.
            </div>
            <div class="figure e89">
               <div class="title e90">Person Name is Nillable</div>
               <div class="mediaobject e91">
                  <div class="imageobject e92">
                     <div class="metaBox e93"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e147').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e147" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e93'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-002.png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e94">Normally you would look at this model and see that the following XML tagging is
               valid:
            </div>
            <div class="programlisting e95" xml:space="preserve">
               &lt;Person&gt;
               &lt;PersonName&gt;
               &lt;FirstName&gt;Fannie&lt;/FirstName&gt;
               &lt;MiddleName&gt;Mae&lt;/MiddleName&gt;
               &lt;LastName&gt;Ryan&lt;/LastName&gt;
               &lt;/PersonName&gt;
               &lt;/Person&gt;
               
               Or
               
               &lt;Person&gt;
               &lt;PersonName&gt;
               &lt;FirstName&gt;Fannie&lt;/FirstName&gt;
               &lt;LastName&gt;Ryan&lt;/LastName&gt;
               &lt;/PersonName&gt;
               &lt;/Person&gt;
               
            </div>
            <div class="para e96">However, when the "nillable='true'" attribute is set on the element declaration
               than the entire element is allowed to be null.  By default, most NIEM elements are
               set as nillable.  Therefore, the following is allowed for a Person described
               above:
            </div>
            <div class="programlisting e97" xml:space="preserve">
               &lt;Person&gt;
               &lt;PersonName xsi:nil="true"/&gt;
               &lt;/Person&gt;
               
            </div>
         </div>
      </div><a name="ApproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e98">
         <div class="title e99">Approach</div>
         <div class="para e100">Considering the challenges that we had and the reality that we weren't in a position
            where we could adequately document and convey the challenges of the complex model,
            it
            was necessary to '
            <div class="emphasis e101" role="ital">think out of the box</div>'.  The model was
            complex and different components were required for different scenarios.  These various
            scenarios were provided as XML documents as part of the IEPD documentation.  Also,
            Schematron was developed to ensure that the XML validated against the various scenarios.
            
         </div>
         <div class="para e102">We understood that looking at the XML itself would only only provide a limited
            understanding of what the data actually means.  The sample documents were heavily
            commented but traversing and understanding 3,000 + lines of XML would be difficult.
            In
            order to achieve success, the exchange partners had to understand the underlying XML
            to
            ensure that the exchange of information between partners was understandable.
         </div>
         <div class="para e103">I came up with an approach that would take the XML, turn it into PDF that looked like
            the XML, including 'pointy brackets' using XSLT and XSL-FO.  The approach provided
            the
            following functionality:  
         </div>
         <div class="itemizedlist e104">
            <div class="listitem e105">
               <div class="para e106">The XML was kept intact.</div>
            </div>
            <div class="listitem e107">
               <div class="para e108">Cross-references were 'live' hyperlinks.  This allowed the reader to see how
                  the cross-references worked.
               </div>
            </div>
            <div class="listitem e109">
               <div class="para e110">A navigation bar was added to allow traversing the model and visualizing the
                  structure of the XML.
               </div>
            </div>
            <div class="listitem e111">
               <div class="para e112">Comments were included in the text and highlighted as comments.</div>
            </div>
            <div class="listitem e113">
               <div class="para e114">A table was included at the end of the XML to show all the cross-references,
                  by element and by ID.
               </div>
            </div>
            <div class="listitem e115">
               <div class="para e116">A data dictionary of all the elements was included at the end of the PDF file.
                  This provided documentation in a single file. 
               </div>
            </div>
         </div><a name="DefaultXMLTemplateANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e117">
            <div class="title e118">Default XML Template</div>
            <div class="para e119">Surprisingly, it is relatively easy to display the XML as  XML, including pointy
               brackets and attributes.  The default template took care of the bulk of the
               conversion.  Below is the code for the default template:
            </div>
            <div class="programlisting e120" xml:space="preserve">
               &lt;xsl:template match="*"&gt;
               &lt;xsl:if test="@xsi:nil='true'"&gt;
               &lt;fo:block&gt;Element allowed to be nil (empty).&lt;/fo:block&gt;
               &lt;/xsl:if&gt;
               &lt;fo:block margin-left="15pt" margin-top="2pt" linefeed-treatment="preserve"&gt;
               &lt;xsl:choose&gt;
               &lt;xsl:when test="@s:id"&gt;
               &lt;xsl:attribute name="id"&gt;
               &lt;xsl:value-of select="@s:id"/&gt;
               &lt;/xsl:attribute&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:when test="contains(substring-after(name(), 'md-ee'), 'Eligibility')"&gt;
               &lt;xsl:attribute name="id"&gt;
               &lt;xsl:value-of select="substring-after(name(), 'md-ee:')"/&gt;
               &lt;/xsl:attribute&gt;
               &lt;/xsl:when&gt;
               &lt;xsl:otherwise/&gt;
               &lt;/xsl:choose&gt;
               &lt;fo:inline color="maroon" font-weight="bold"&gt; &amp;lt;&lt;xsl:value-of select="name()"
               /&gt;&lt;xsl:if test="@*"&gt;&lt;xsl:call-template name="createAttributes"
               /&gt;&lt;/xsl:if&gt;
               &lt;xsl:if test="@xsi:nil"&gt; xsi:nil="&lt;xsl:value-of select="@xsi:nil"/&gt;&lt;/xsl:if&gt;
               &lt;xsl:if test="@xsi:nil"&gt;/&lt;/xsl:if&gt;&amp;gt;&lt;fo:inline color="black"&gt;&lt;xsl:apply-templates/&gt;&lt;/fo:inline&gt;&lt;/fo:inline&gt;
               &lt;xsl:if test="@s:metadata"&gt;
               &lt;xsl:call-template name="createMetadata"/&gt;
               &lt;/xsl:if&gt;
               &lt;xsl:choose&gt;
               &lt;xsl:when test="@xsi:nil='true'"&gt;&lt;/xsl:when&gt;
               &lt;xsl:otherwise&gt; &lt;fo:inline color="maroon" font-weight="bold"&gt; &amp;lt;/&lt;xsl:value-of select="name()"
               /&gt;&amp;gt;&lt;/fo:inline&gt;&lt;/xsl:otherwise&gt;
               &lt;/xsl:choose&gt;
               &lt;/fo:block&gt;
               &lt;/xsl:template&gt;
               
               
            </div>
            <div class="para e121">Below is the resulting PDF output from the default template.</div>
            <div class="figure e122">
               <div class="title e123">Resulting Display from PDF File</div>
               <div class="mediaobject e124">
                  <div class="imageobject e125">
                     <div class="metaBox e126"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e201').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e201" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e126'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-003.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="HeadersandFootersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e127">
            <div class="title e128">Headers and Footers</div>
            <div class="para e129">I felt it was important to provide both headers and footers in the PDF file.  The
               headers provided information about which element you were viewing.  The footer
               contained page numbers.  Both the recto (right-hand) and verso (left-hand) pages
               were formatted appropriately.   The header information shows the hierarchy of the
               elements on the page. 
            </div>
            <div class="para e130">
               <div class="emphasis e131" role="bold">NOTE:</div>  Part of the header is redacted.
            </div>
            <div class="figure e132">
               <div class="title e133">Example Header</div>
               <div class="mediaobject e134">
                  <div class="imageobject e135">
                     <div class="metaBox e136"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e216').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e216" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e136'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-004.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="figure e137">
               <div class="title e138">Footer Example</div>
               <div class="mediaobject e139">
                  <div class="imageobject e140">
                     <div class="metaBox e141"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e222').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e222" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e141'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-005.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="CommentsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e142">
            <div class="title e143">Comments</div>
            <div class="para e144">The sample XML documents had many comments.  These were used to convey important
               information and insight into the model for the users of the XML. It was important
               that these comments be included in the resulting PDF.  In the XML instance the
               scenario was described as an XML comment.  Below is an example of a comment that is
               in the XML instance. 
            </div>
            <div class="figure e145">
               <div class="title e146">Comment Example</div>
               <div class="mediaobject e147">
                  <div class="imageobject e148">
                     <div class="metaBox e149"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e233').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e233" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e149'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-006.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="DealingwithAttributesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e150">
            <div class="title e151">Dealing with Attributes</div>
            <div class="para e152">There are only 3 attributes that are used in the XML.  The default template called
               another template to create the attributes.
            </div>
            <div class="programlisting e153" xml:space="preserve">
               &lt;xsl:template name="createAttributes"&gt;
               &lt;xsl:if test="@s:id"&gt;&amp;#160;s:id="&lt;xsl:value-of select="@s:id"/&gt;"&lt;/xsl:if&gt;
               &lt;xsl:if test="@s:ref"&gt;&amp;#160;s:ref="&lt;xsl:value-of select="@s:ref"/&gt;"&lt;/xsl:if&gt;
               &lt;xsl:if test="@s:metadata"&gt;&amp;#160;s:metadata="&lt;xsl:value-of select="@s:metadata"
               /&gt;"&lt;/xsl:if&gt;
               &lt;/xsl:template&gt;
               
            </div>
            <div class="figure e154">
               <div class="title e155">Example of Attribute Output</div>
               <div class="mediaobject e156">
                  <div class="imageobject e157">
                     <div class="metaBox e158"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e246').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e246" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e158'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-007.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="MajorSectionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e159">
            <div class="title e160">Major Sections</div>
            <div class="para e161">I wanted the ability to differentiate the different sections.  A separate template
               was made for major sections.  This provided the ability to have titles and have the
               sections start on new pages.  This enabled better readability of the XML.  Below is
               an example of a template for a person section.  
            </div>
            <div class="figure e162">
               <div class="title e163">Person Major Section</div>
               <div class="mediaobject e164">
                  <div class="imageobject e165">
                     <div class="metaBox e166"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e257').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e257" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e166'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-008.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="NavigationBar/BookmarksANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e167">
            <div class="title e168">Navigation Bar/Bookmarks</div>
            <div class="para e169">A navigation bar was created to allow the reader to navigate the hierarchy.   It
               included expanding and collapsing of the hierarchy.  The navigation bar proved to
               be
               one of the most useful features of the PDF.  Business Analysts do not have XML tools
               and to our surprise, neither do programmers.  Navigating the schema in a graphical
               representation with tools such as Oxygen, XML Spy and Stylus Studio are really
               beneficial.  With NIEM it is almost essential.  To our surprise we found that most
               organizations to not provide XML tools to their programmers.  They only have access
               to tools available in JAVA toolkits.  Most programmers were using SOAPUI for
               development and testing.  Therefore, the navigation bar became quite useful.  
            </div>
            <div class="figure e170">
               <div class="title e171">Snippet of Navigation Bar</div>
               <div class="mediaobject e172">
                  <div class="imageobject e173">
                     <div class="metaBox e174"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e268').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e268" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e174'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-009.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="CrossReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e175">
            <div class="title e176">Cross-References</div>
            <div class="para e177">As stated previously NIEM relies heavily on cross-references.  In one sample there
               were over 70 cross-references.  In the PDF, cross-references are 'hot'.  This
               enables the user to link to the location where the information is located.  We used
               'meaningful' identifiers in the samples, just to make it easier to understand and
               navigate the XML.  However, in practice the id's are normally not human ingestible.
               As a standard all blue text in the PDF are active links.
            </div>
            <div class="para e178">The PDF created a table of cross-references which provided just another look at
               how the cross-references actually worked.
            </div>
            <div class="figure e179">
               <div class="title e180">Active Cross-references</div>
               <div class="mediaobject e181">
                  <div class="imageobject e182">
                     <div class="metaBox e183"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e282').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e282" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e183'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-010.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="figure e184">
               <div class="title e185">Cross-Reference Table</div>
               <div class="mediaobject e186">
                  <div class="imageobject e187">
                     <div class="metaBox e188"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e288').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e288" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e188'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-011.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e189">The last column of the table is a hyperlink to the location in the PDF where the
               id attribute is located. 
            </div>
         </div><a name="DataDictionaryANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e190">
            <div class="title e191">Data Dictionary</div>
            <div class="para e192">The final component in the PDF included a Data Dictionary of the schema.  The NIEM
               specification requires that all elements are documented.  The XSLT traversed the
               schema and created a data dictionary that contained all the elements, sorted
               alphabetically, and their definition.  This provided a mechanism for the user to
               quickly find the definition for an element.  In most cases the elements were
               self-describing, i.e., &lt;PersonAmericanIndianOrAlaskaNativeIndicator&gt;, but there
               were elements that were named ambiguously.
            </div>
            <div class="para e193">The navigation bar provided an expansion to link to an individual alphabetic
               location. 
            </div>
            <div class="figure e194">
               <div class="title e195">Data Dictionary Navigation Bar</div>
               <div class="mediaobject e196">
                  <div class="imageobject e197">
                     <div class="metaBox e198"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e303').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e303" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e198'
                              </span><span class="metaAttribute">fileref='../../../vol13/graphics/Harvey01/Harvey01-012.jpg'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div><a name="BenefitsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e199">
         <div class="title e200">Benefits</div>
         <div class="para e201">I believe that the benefits to this approach are many.  The users very quickly became
            dependent on the PDF to help them understand the model.   Most developers and testers
            used the PDF version of the XML as a guideline instead of the native XML sample that
            was
            provided to them.  Before the PDF was developed internal testers had many questions
            and
            misunderstandings of the model.  Although the PDF didn't completely alleviate questions,
            the amount of questions were reduced in number. 
         </div>
         <div class="para e202">The PDF file was understandable to any discipline in the business and development
            process.  The result of the PDF was:
         </div>
         <div class="itemizedlist e203">
            <div class="listitem e204">
               <div class="para e205">Quicker understanding of data model</div>
            </div>
            <div class="listitem e206">
               <div class="para e207">More accurate understanding of data model</div>
            </div>
            <div class="listitem e208">
               <div class="para e209">Faster development</div>
            </div>
            <div class="listitem e210">
               <div class="para e211">Easier validation and testing by independent testers</div>
            </div>
            <div class="listitem e212">
               <div class="para e213">Less coding errors</div>
            </div>
         </div>
         <div class="para e214">Although there isn't any way to quantitatively evaluate the cost-savings, I believe
            that the PDF did result in cost savings through the entire life-cycle.
         </div>
      </div><a name="ConclusionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e215">
         <div class="title e216">Conclusion</div>
         <div class="para e217">Although this approach may seem a little 'extreme', I believe that it is very
            beneficial to providing information on complex data models.  It proved invaluable
            for
            our project.  I also believe that this approach would be useful to any complex XML
            project.  It provides clarity of the model that may not be available otherwise.  The
            XML
            schema (especially NIEM) can only provide so much information about how to knit the
            data
            together.   
         </div>
         <div class="para e218">It also amazes me how many organizations do not provide XML tools to their developers
            and other individuals working with XML.  The cost benefits they would reap by providing
            adequate tools would far outweigh the cost of the software.  Without these tools
            navigating and understanding complex models are difficult at best.  I don't have a
            scientific analysis of how many of the programmers on this project did not have adequate
            XML tools but I guess that at least 75% did not.
         </div>
         <div class="para e219">If faced with the same challenges in the future, would I take this same approach.
            Unequivocally 
            <div class="emphasis e220" role="bold">yes</div>!
         </div>
      </div><a name="BibliographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e221">
         <div class="title e222">Bibliography</div>
         <div class="bibliomixed e223">NIEM Website: 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e224" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">https://www.niem.gov/</div>
         </div>
      </div>
   </div>
</div>