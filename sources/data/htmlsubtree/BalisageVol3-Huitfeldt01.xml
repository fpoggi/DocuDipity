<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#MarkupMeaningandMereologyANCHOR" name="MarkupMeaningandMereologyTOC">Markup Meaning and Mereology</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheCalculusofIndividualsANCHOR" name="TheCalculusofIndividualsTOC">The Calculus of Individuals</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheCalculusappliedtoXMLANCHOR" name="TheCalculusappliedtoXMLTOC">The Calculus applied to XML</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TheelementasindividualapproachANCHOR" name="TheelementasindividualapproachTOC">The element-as-individual approach</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ThetagsandPCDATAapproachANCHOR" name="ThetagsandPCDATAapproachTOC">The tags and PCDATA approach</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ThecharacteratomapproachANCHOR" name="ThecharacteratomapproachTOC">The character-atom approach</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#TheapproachANCHOR" name="TheapproachTOC">The approach</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ExamplesANCHOR" name="ExamplesTOC">Examples</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#StatementsandinferencesANCHOR" name="StatementsandinferencesTOC">Statements and inferences</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ConclusionANCHOR" name="ConclusionTOC">Conclusion</a></div>
               </div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#PropertyPropagation%E2%80%94aSketchANCHOR" name="PropertyPropagation%E2%80%94aSketchTOC">Property Propagation — a Sketch</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DissectiveandantidissectivepropertiesANCHOR" name="DissectiveandantidissectivepropertiesTOC">Dissective and anti-dissective properties</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ExpansiveandantiexpansivepropertiesANCHOR" name="ExpansiveandantiexpansivepropertiesTOC">Expansive and anti-expansive properties</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#CollectiveandanticollectivepropertiesANCHOR" name="CollectiveandanticollectivepropertiesTOC">Collective and anti-collective properties</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TheHTMLtitleelementANCHOR" name="TheHTMLtitleelementTOC">The HTML title element</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TheTEIspspeakerandstageelementsANCHOR" name="TheTEIspspeakerandstageelementsTOC">The TEI sp, speaker and stage elements</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TheTEIdocTitledocDateanddocAuthorelementsANCHOR" name="TheTEIdocTitledocDateanddocAuthorelementsTOC">The TEI docTitle, docDate and docAuthor elements</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ProblemsANCHOR" name="ProblemsTOC">Problems</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#EmptyelementsANCHOR" name="EmptyelementsTOC">Empty elements</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#MilestoneelementsANCHOR" name="MilestoneelementsTOC">Milestone elements</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#OtheremptyelementsANCHOR" name="OtheremptyelementsTOC">Other empty elements</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#CoextensiveelementsANCHOR" name="CoextensiveelementsTOC">Coextensive elements</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionandFutureWorkANCHOR" name="ConclusionandFutureWorkTOC">Conclusion and Future Work</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">A&nbsp;</div>
         <div class="singletermTERMS">A rose is a rose.</div>
         <div class="singletermTERMS">A&nbsp;</div>
         <div class="singletermTERMS">assigned properties</div>
         <div class="singletermTERMS">anti-dissective</div>
         <div class="singletermTERMS">anti-expansive</div>
         <div class="singletermTERMS">anti-collective</div>
         <div class="singletermTERMS">agglomerative</div>
         <div class="singletermTERMS">all</div>
         <div class="singletermTERMS">atomistic</div>
         <div class="singletermTERMS">anti-dissective</div>
         <div class="singletermTERMS">Analysis</div>
         <div class="singletermTERMS">Axiomathes</div>
         <div class="singletermTERMS">August 11 - 14, 2009</div>
         <div class="singletermTERMS">Associate professor</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">being</div>
         <div class="singletermTERMS">Balisage Series on Markup Technologies</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">Caesar's nose and the state of Utah</div>
         <div class="singletermTERMS">cohesive</div>
         <div class="singletermTERMS">caution.</div>
         <div class="singletermTERMS">complement</div>
         <div class="singletermTERMS">collective</div>
         <div class="singletermTERMS">cumulative</div>
         <div class="singletermTERMS">content objects</div>
         <div class="singletermTERMS">Content Identity</div>
         <div class="singletermTERMS">Containment and dominance in Goddag structures</div>
         <div class="singletermTERMS">character occurrences</div>
         <div class="singletermTERMS">character</div>
         <div class="singletermTERMS">character occurrence</div>
         <div class="singletermTERMS">collective</div>
         <div class="singletermTERMS">Computer Standards and Interfaces</div>
         <div class="singletermTERMS">claus.huitfeldt@fof.uib.no</div>
         <div class="singletermTERMS">cmsmcq@blackmesatech.com</div>
         <div class="singletermTERMS">Claus</div>
         <div class="singletermTERMS">C. M.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">discrete from</div>
         <div class="singletermTERMS">discrete</div>
         <div class="singletermTERMS">down</div>
         <div class="singletermTERMS">dissective</div>
         <div class="singletermTERMS">df</div>
         <div class="singletermTERMS">discrete</div>
         <div class="singletermTERMS">difference</div>
         <div class="singletermTERMS">document order</div>
         <div class="singletermTERMS">dissective</div>
         <div class="singletermTERMS">Digital Humanities 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">empty string</div>
         <div class="singletermTERMS">element</div>
         <div class="singletermTERMS">element type</div>
         <div class="singletermTERMS">expansive</div>
         <div class="singletermTERMS">extension</div>
         <div class="singletermTERMS">elements</div>
         <div class="singletermTERMS">elemental string</div>
         <div class="singletermTERMS">expansive</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
         <div class="singletermTERMS">Grand Theory of Everything,</div>
         <div class="singletermTERMS">graphics</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">Hamlet</div>
         <div class="singletermTERMS">having</div>
         <div class="singletermTERMS">Huitfeldt</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">incomprehensible</div>
         <div class="singletermTERMS">integral</div>
         <div class="singletermTERMS">iff</div>
         <div class="singletermTERMS">if and only if</div>
         <div class="singletermTERMS">immediate proper part</div>
         <div class="singletermTERMS">image</div>
         <div class="singletermTERMS">individuals</div>
         <div class="singletermTERMS">identity</div>
         <div class="singletermTERMS">individuals are unordered</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">label</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">mereological</div>
         <div class="singletermTERMS">Markup overlap: A review and a horse.</div>
         <div class="singletermTERMS">Mereology</div>
         <div class="singletermTERMS">molecular string</div>
         <div class="singletermTERMS">molecule</div>
         <div class="singletermTERMS">Mind</div>
         <div class="singletermTERMS">Marcoux</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">NA(x, y)</div>
         <div class="singletermTERMS">NA</div>
         <div class="singletermTERMS">N(x, y)</div>
         <div class="singletermTERMS">nearly all</div>
         <div class="singletermTERMS">nucleative</div>
         <div class="singletermTERMS">Nominalist things</div>
         <div class="singletermTERMS">negate</div>
         <div class="singletermTERMS">nil</div>
         <div class="singletermTERMS">not</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">overlapping with</div>
         <div class="singletermTERMS">overlap</div>
         <div class="singletermTERMS">ose&nbsp;i</div>
         <div class="singletermTERMS">ose i</div>
         <div class="singletermTERMS">overlap</div>
         <div class="singletermTERMS">occurs before</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">PA(x, y)</div>
         <div class="singletermTERMS">PA</div>
         <div class="singletermTERMS">P(x, y)</div>
         <div class="singletermTERMS">part of</div>
         <div class="singletermTERMS">proper part of</div>
         <div class="singletermTERMS">part</div>
         <div class="singletermTERMS">proper part.</div>
         <div class="singletermTERMS">part of,</div>
         <div class="singletermTERMS">proper part,</div>
         <div class="singletermTERMS">pervasive</div>
         <div class="singletermTERMS">part</div>
         <div class="singletermTERMS">proper part</div>
         <div class="singletermTERMS">product</div>
         <div class="singletermTERMS">predicates</div>
         <div class="singletermTERMS">parts</div>
         <div class="singletermTERMS">property</div>
         <div class="singletermTERMS">Proceedings of Extreme Markup Languages 2004</div>
         <div class="singletermTERMS">Problems and Projects</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
         <div class="singletermTERMS">qualia</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">reduce</div>
         <div class="singletermTERMS">rose</div>
         <div class="singletermTERMS">rose is</div>
         <div class="singletermTERMS">real</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">semantics</div>
         <div class="singletermTERMS">some</div>
         <div class="singletermTERMS">separate</div>
         <div class="singletermTERMS">sum</div>
         <div class="singletermTERMS">strings</div>
         <div class="singletermTERMS">Stanford Encyclopedia of Philosophy</div>
         <div class="singletermTERMS">Sperberg-McQueen</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">thing</div>
         <div class="singletermTERMS">temporal</div>
         <div class="singletermTERMS">the land mass of Japan</div>
         <div class="singletermTERMS">the rest of the world</div>
         <div class="singletermTERMS">to XML</div>
         <div class="singletermTERMS">Trojan Horse</div>
         <div class="singletermTERMS">The Calculus of Individuals and Its Uses</div>
         <div class="singletermTERMS">tags and PCDATA strings</div>
         <div class="singletermTERMS">type</div>
         <div class="singletermTERMS">types</div>
         <div class="singletermTERMS">The structure of appearance</div>
         <div class="singletermTERMS">The Journal of Symbolic Logic</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">universe</div>
         <div class="singletermTERMS">upwards</div>
         <div class="singletermTERMS">universal</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">XML document</div>
         <div class="singletermTERMS">x is an immediate proper part of y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
         <div class="singletermTERMS">yves.marcoux@umontreal.ca</div>
         <div class="singletermTERMS">Yves</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="MarkupMeaningandMereologyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2">
      <div class="title e1">Markup Meaning and Mereology</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2009</div>
            <div class="confdates e5">August 11 - 14, 2009</div>
         </div>
         <div class="abstract e6">
            <div class="para e7"> When marking up a document we chop it up into elements. Elements are parts of the
               document, some of which contain further elements, i.e., have parts of their own. Thus,
               the
               part-whole relation is central to the way markup works.
            </div>
            <div class="para e8">Mereology is precisely the theory of part-whole relationships, but has not yet found
               much application in markup theory. In this paper we provide a sketch of how mereology,
               in
               the form more specifically of Nelson Goodman's Calculus of Individuals, might be applied
               to
               markup.
            </div>
            <div class="para e9">We discuss ways of identifying the individuals of marked-up documents and of referencing
               these individuals, and we sketch some ways of applying the calculus to the problem
               of
               propagation of properties in documents. 
            </div>
         </div>
         <div class="author e10">
            <div class="personname e11">
               <div class="firstname e12">Claus</div>
               <div class="surname e13">Huitfeldt</div>
            </div>
            <div class="personblurb e14">
               <div class="para e15">Claus Huitfeldt is Associate Professor at the Department of Philosophy of the
                  University of Bergen. His research interests are within philosophy of language, philosophy
                  of technology, text theory, editorial philology and markup theory. He was founding
                  Director (1990-2000) of the Wittgenstein Archives at the University of Bergen, for
                  which
                  he developed the text encoding system MECS as well as the editorial methods for the
                  publication of Wittgenstein's Nachlass - The Bergen Electronic Edition (Oxford University
                  Press, 2000). He was active in the Text Encoding Initiative (TEI) since 1991, and
                  was
                  centrally involved in the foundation of the TEI Consortium. Huitfeldt was Research
                  Director (2000-2002) of Aksis (Section for Culture, Language and Information Technology
                  at
                  the Bergen University Research Foundation). 
               </div>
            </div>
            <div class="affiliation e16">
               <div class="jobtitle e17">Associate professor</div>
               <div class="orgname e18">University of Bergen, Norway</div>
            </div>
            <div class="email e19">claus.huitfeldt@fof.uib.no</div>
         </div>
         <div class="author e20">
            <div class="personname e21">
               <div class="firstname e22">C. M.</div>
               <div class="surname e23">Sperberg-McQueen</div>
            </div>
            <div class="personblurb e24">
               <div class="para e25">Sperberg-McQueen, C. M. is an independent consultant for Black Mesa Technologies LLC.
                  He currently serves as an editor of the W3C XML Schema Definition Language (XSD)
                  1.1.
               </div>
            </div>
            <div class="affiliation e26">
               <div class="orgname e27">Black Mesa Technologies LLC</div>
            </div>
            <div class="email e28">cmsmcq@blackmesatech.com</div>
         </div>
         <div class="author e29">
            <div class="personname e30">
               <div class="firstname e31">Yves</div>
               <div class="surname e32">Marcoux</div>
            </div>
            <div class="personblurb e33">
               <div class="para e34">Yves Marcoux is a faculty member at EBSI, University of Montréal, since 1991. He is
                  mainly involved in teaching and research activities in the field of document informatics.
                  Prior to his appointment at EBSI, he has worked for 10 years in systems maintenance
                  and
                  development, in Canada, the U.S., and Europe. He obtained his Ph.D. in theoretical
                  computer science from University of Montréal in 1991. His main research interests
                  are
                  document semantics, structured document implementation methodologies, and information
                  retrieval in structured documents. Through GRDS, his research group at EBSI, he has
                  been
                  principal architect for the Governmental Framework for Integrated Document Management,
                  a
                  project funded by the National Archives of Québec and by the Québec Treasury Board.
               </div>
            </div>
            <div class="affiliation e35">
               <div class="jobtitle e36">Associate professor</div>
               <div class="orgname e37">Université a Montréal, Canada</div>
            </div>
            <div class="email e38">yves.marcoux@umontreal.ca</div>
         </div>
         <div class="legalnotice e39">
            <div class="para e40">Copyright © 2009 by the authors.  Used with
               			permission.
            </div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e41" xml:id="intro">
         <div class="title e42">Introduction</div>
         <div class="para e43">XML documents consist of marked elements, which may in turn contain sequences of marked
            elements, etc. This hierarchy of elements is conveniently represented as a tree in
            which each
            node stands for an element, in which each arc between elements stand for a parent-child
            relationship, and in which the children of each node are ordered sequentially in accordance
            with their document order.
         </div>
         <div class="para e44">While it is commonly the case that the generic identifier of an element is understood
            to
            ascribe a property to the element's content, that elements represented by nodes dominated
            by
            that element's node in the document tree are also understood to be contained by it,
            and that
            these nodes are understood to inherit the properties ascribed to their ancestor elements,
            none
            of this is always or necessarily the case. 
         </div>
         <div class="para e45">As we have pointed out elsewhere [
            <div class="xref e46" linkend="bielefeld"></div>], the parent-child
            relationship may be taken to indicate either a containment relationship, or a dominance
            relationship. Frequently these relationships coincide, and no harm is caused by not
            distinguishing them. When they do not coincide, however, the result may easily be
            confusing. 
         </div>
         <div class="para e47">One view of the structure of XML documents emphasizing the part-whole relationship
            is
            this: A document contains elements, i.e., parts. Some of these parts contain further
            elements,
            i.e., have parts of their own. The generic identifiers of elements ascribe properties
            to their
            own content and/or to the content of elements related to them by part-whole relationships.
            
         </div>
         <div class="para e48">Mereology is precisely the theory of part-whole relationships. Even so, mereology
            does not
            seem to have found much application in markup theory until now. It may therefore be
            interesting to investigate whether the application of mereology may give insights
            relevant to
            the understanding of interpretation and processing of marked-up documents. 
         </div>
         <div class="para e49">It is sometimes said that XML provides a formal syntax for document representation,
            but no
            formal semantics for the interpretation or processing of this syntax. If mereology
            can be
            brought to bear on the ascription and propagation of properties and relations between
            parts of
            marked-up documents, it may help in providing a general approach to markup semantics.
            For
            example, the work presented here may turn out to be of direct relevance for the work
            on formal
            tag set descriptions and intertextual semantics specifications presented in [
            <div class="xref e50" linkend="balisage2009"></div>] and [
            <div class="xref e51" linkend="dh2009"></div>].
         </div>
         <div class="para e52">Before we proceed, some words on the limitations of this paper are in place. First,
            although our focus is on XML, and although we mention other markup languages in passing,
            we
            believe that mereology deserves to be studied in relation to markup languages in general
            (such
            as XML, SGML, TexMecs, LMNL, and others) rather than XML only. We think so partly
            because
            application of mereology may be equally or more profitable when it comes to some non-XML
            markup systems, and partly because such broader studies might inspire modifications
            of
            — or alternatives to — any or all of these. We hope to come back to
            applications of mereology to markup more generally in future work. 
         </div>
         <div class="para e53">Second, the concept 
            <div class="quote e54">XML document</div> as used in this paper refers almost
            exclusively to XML in its serialized form. We do not explicitly attempt to apply mereology
            to
            XML documents considered as graphs of xPath nodes, Infoset items, or the like. 
         </div>
         <div class="para e55">Finally, we limit ourselves to an attempt to apply the so-called Calculus of Individuals,
            a mereological system worked out by Nelson Goodman [
            <div class="xref e56" linkend="Goodman1977"></div>] (initially
            in cooperation with Henry S. Leonard [
            <div class="xref e57" linkend="LeonardandGoodman1940"></div>]). As a further
            simplification, and in order to ensure focus, we will ignore XML attributes, entities,
            declarations, comments, processing instructions, and marked sections; in short, we
            will regard
            XML documents as consisting of elements and their content only . 
         </div>
      </div><a name="TheCalculusofIndividualsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e58" xml:id="coi">
         <div class="title e59">The Calculus of Individuals</div>
         <div class="para e60">The origins of mereology go back to ancient Greece, but it was taken up as a formal
            study
            and developed mathematically only early in the 20th century. Today, it is a well developed
            formal discipline, and there are a number of different mereological systems. The term
            mereology is sometimes used to refer to these formal calculi in particular, sometimes
            to
            formal as well as non-formalized theories of part-whole relationships in general [
            <div class="xref e61" linkend="Libardi1994"></div>, pp. 13–15].
         </div>
         <div class="para e62">Early developments of formal mereology were largely motivated by scepticism towards
            set
            theory and the calculus of classes, and a desire to translate or 
            <div class="quote e63">reduce</div> all
            talk of abstract classes and their members to talk of concrete individuals and their
            parts.
            Mereology therefore came to be associated with a particular ontological stance, nominalism,
            and to be shunned by most adherents of other ontological views.
            <div class="popupBox e64">
               <div class="popupLabel" onmouseover="$('#d1e114').show('1000');" onmouseout="$('#d1e114').hide('1000');">[ footnote ]</div>
               <div id="d1e114" style="display: none;">
                  <div class="footnote">
                     <div class="para e65">Goodman, whose work we will take as our basis here, was a well known nominalist,
                        however of a peculiar kind. For Goodman, nominalism did not consist in the rejection
                        of
                        abstract entities, or even of universals, but in the refusal to admit anything but
                        individuals as values of variables.
                     </div>
                     <div class="para e66">He strongly repudiated all talk of classes as 
                        <div class="quote e67">incomprehensible</div> [
                        <div class="xref e68" linkend="Goodman1977"></div>, pp.&nbsp;25-26, 
                        <div class="xref e69" linkend="Goodman1972"></div>,
                        p.&nbsp;156] and therefore philosophically suspect. He also worked hard to establish a
                        foundation for mathematics replacing set theory with the calculus of individuals.
                        But at
                        the same time he had no qualms taking abstract objects such as 
                        <div class="quote e70">qualia</div> as
                        basic constituents of his own ontology [
                        <div class="xref e71" linkend="Goodman1977"></div>, chapters IV
                        ff].
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e72">Such ontological considerations may or may not motivate, but do not in any way need
            to
            concern, our attempt to apply mereology to markup languages, however: later work in
            the field
            is generally taken to demonstrate that mereology and set theory may live merrily together,
            that in fact the one may be seen as an extension of the other, and that the adoption
            of
            mereology does not by itself commit one to any particular ontological stance.
            <div class="popupBox e73">
               <div class="popupLabel" onmouseover="$('#d1e133').show('1000');" onmouseout="$('#d1e133').hide('1000');">[ footnote ]</div>
               <div id="d1e133" style="display: none;">
                  <div class="footnote">
                     <div class="para e74">
                        <div class="quote e75">...there is no necessary internal link between mereology and the philosophical
                           position of nominalism. We may simply think of the former as a theory concerned with
                           the
                           analysis of parthood relations among whatever entities are allowed into the domain
                           of
                           discourse (including sets and other abstract entities, if one will).
                        </div> [
                        <div class="xref e76" linkend="CasatiVarzi1999"></div>]
                     </div>
                  </div>
               </div>
            </div>
            
         </div>
         <div class="para e77">The part-whole relationships that mereology studies are relationships between entities
            that are, in Goodman's terminology, called 
            <div class="emphasis e78">individuals</div>. Generally
            speaking an individual may be any 
            <div class="quote e79">thing</div> in a very wide sense of the word
            — a concrete, an abstract, a universal or a particular — i.e., any object
            or entity of which something can be predicated. This is admittedly still pretty general,
            and
            more specific talk may be in order: As examples of individuals we may take stones,
            tables,
            chairs, animals and other medium-sized everyday objects; but if we like we may also
            populate
            our world with individuals such as molecules, atoms, electrons, quarks; or planets,
            stars and
            galaxies; or for that matter persons, visual after-images, mental images or sense
            data. If we
            believe in abstract objects we may include numbers, geometrical objects, concepts,
            etc., and
            according to some applications of mereology there may also be 
            <div class="quote e80">temporal</div>
            individuals such as processes, events, and snippets of time. 
         </div>
         <div class="para e81"> Individuals need not be contiguous, neither in space nor in time. This is one of
            the
            principles of the Calculus of Individuals which has provoked some discussion. In its
            defence
            one may point to the fact that we actually do employ the notion of at least some such
            disconnected wholes in everyday language. Thus, to treat 
            <div class="quote e82">the land mass of Japan</div>
            (or any geographic entity which includes two or more islands) as an individual may
            seem
            unobjectionable. However, according to another principle, the sum of any two individuals
            is
            always also an individual. This seems to force us to accept as individuals, i.e.,
            
            <div class="quote e83">wholes</div>, sums of randomly scattered parts such as 
            <div class="quote e84">Caesar's nose and the
               state of Utah
            </div> [
            <div class="xref e85" linkend="Goodman1972"></div>, p. 37].
            <div class="popupBox e86">
               <div class="popupLabel" onmouseover="$('#d1e166').show('1000');" onmouseout="$('#d1e166').hide('1000');">[ footnote ]</div>
               <div id="d1e166" style="display: none;">
                  <div class="footnote">
                     <div class="para e87">For an entertaining collection of other candidate sum individuals, see [
                        <div class="xref e88" linkend="Fitzgerald"></div>].
                     </div>
                  </div>
               </div>
            </div> Goodman bites that bullet, while much of the ensuing debate has been concerned
            with attempts to find ways of distinguishing such scattered and arbitrary sums from
            more
            
            <div class="quote e89">cohesive</div> or 
            <div class="quote e90">integral</div> individuals as wholes consisting of parts
            in a more intuitively satisfactory sense. 
         </div>
         <div class="para e91">A formal mereological theory takes conventional first-order predicate logic as its
            basis.
            We will use conventional modern logical notation for quantifiers, operators, predicates,
            variables and constants. More specifically, we will use (x) for universal and
            (∃x) for existential quantification over x; ¬ for negation, →
            for implication, ∨ for inclusive disjunction, ∧ for conjunction, ⇔ for
            equivalence, and = for identity. We use the small roman letters a, b, c... for constants,
            x,
            y, z... for variables, and upper roman letters A, B, C... for predicates. We will
            occasionally
            use the conventional abbreviation 
            <div class="quote e92">iff</div> for 
            <div class="quote e93">if and only if</div>.
         </div>
         <div class="para e94">The extension which mereology makes to this basis is very modest: In fact the extension
            consists in adding only one single primitive relation to the first-order system. This
            specifically 
            <div class="quote e95">mereological</div>, primitive relation may be chosen from among the
            relations 
            <div class="quote e96">part of</div>, 
            <div class="quote e97">proper part of</div>, 
            <div class="quote e98">discrete from</div>
            or 
            <div class="quote e99">overlapping with</div>. As each of these relations may be defined in terms of any
            of the others, it does not matter much which one we chose as our undefined primitive.
            <div class="popupBox e100">
               <div class="popupLabel" onmouseover="$('#d1e205').show('1000');" onmouseout="$('#d1e205').hide('1000');">[ footnote ]</div>
               <div id="d1e205" style="display: none;">
                  <div class="footnote">
                     <div class="para e101">Equivalent systems (or rather, systems with only minimal and trivial differences)
                        may
                        be built whichever we choose as the primitive relation.
                     </div>
                  </div>
               </div>
            </div> With a hopefully obvious appeal to markup theorists, we will follow [
            <div class="xref e102" linkend="Goodman1977"></div>] in choosing 
            <div class="quote e103">overlap</div> for our primitive relation.
            <div class="popupBox e104">
               <div class="popupLabel" onmouseover="$('#d1e214').show('1000');" onmouseout="$('#d1e214').hide('1000');">[ footnote ]</div>
               <div id="d1e214" style="display: none;">
                  <div class="footnote">
                     <div class="para e105"> In [
                        <div class="xref e106" linkend="LeonardandGoodman1940"></div>], Leonard and Goodman chose
                        
                        <div class="quote e107">discrete from</div> as the primitive relation. A more common practice seems to
                        be the choice of 
                        <div class="quote e108">part</div> or 
                        <div class="quote e109">proper part.</div>
                     </div>
                  </div>
               </div>
            </div>
            
         </div>
         <div class="para e110">Variables are taken to range over individuals only, and predicates are taken to ascribe
            properties of or relations between individuals. 
         </div>
         <div class="para e111">From a mereological point of view, two individuals 
            <div class="emphasis e112">overlap</div> iff they
            have some content in common. One consequence of this definition may briefly confuse
            markup
            specialists: since in an XML document a child element and its parent element have
            some content
            in common (everything contained by the child is also contained by the parent), it
            follows that
            in the sense introduced here the child and the parent 
            <div class="emphasis e113">overlap</div>. That is,
            the term 
            <div class="emphasis e114">overlap</div>, as used in the calculus of individuals, includes proper
            nesting or normal part/whole relations. 
         </div>
         <div class="para e115">Thus, if we think of XML elements as individuals consisting of stretches of consecutive
            character occurrences, and if we consider the following four cases (strictly speaking,
            the
            first line is not well formed XML and is included only for purposes of illustration):
            
            <div class="programlisting e116" xml:space="preserve">            &lt;s&gt;  &lt;q&gt;   &lt;/s&gt; &lt;/q&gt;
               &lt;s&gt;  &lt;q&gt;   &lt;/q&gt; &lt;/s&gt;
               &lt;q&gt;  &lt;s&gt;   &lt;/s&gt; &lt;/q&gt;
               &lt;s&gt;  &lt;/s&gt;  &lt;q&gt;  &lt;/q&gt;
            </div>
            the first three cases exhibit an overlap between elements 
            <div class="code e117">s</div> and 
            <div class="code e118">q</div>.
            Only in the last case do the two elements not overlap, i.e., they are discrete. In
            contrast,
            markup theorists would probably consider only the first case to be one of overlap.
         </div>
         <div class="para e119">The 
            <div class="emphasis e120">overlap</div> operator is written 
            <div class="code e121">∘</div>. The following
            condition on 
            <div class="code e122">∘</div> captures the intuitive notion of “having some content in
            common,” and we thus take it as an axiom:
            <div class="popupBox e123">
               <div class="popupLabel" onmouseover="$('#d1e265').show('1000');" onmouseout="$('#d1e265').hide('1000');">[ footnote ]</div>
               <div id="d1e265" style="display: none;">
                  <div class="footnote">
                     <div class="para e124">Numbers in the left margin give references to theorem and definition numbers in [
                        <div class="xref e125" linkend="Goodman1977"></div>]. Note that Goodman used a notation slightly different from
                        ours, but that we have retained Goodman's use of implicit universal quantification.
                     </div>
                  </div>
               </div>
            </div>
            
            <div class="programlisting e126" xml:space="preserve">2.41  x ∘ y  ⇔ (∃z)(w)((w ∘ z) → ((w ∘ x) ∧ (w ∘ y)))</div>
            Any relation satisfying this condition is necessarily reflexive and symmetric (but
            not
            necessarily transitive).
         </div>
         <div class="para e127">We now state further relation and operator definitions, theorems and axioms. Note
            that not
            all of them belong to all variants of mereological systems; they do, however, belong
            to ours.
         </div>
         <div class="para e128">As already mentioned, the relations 
            <div class="quote e129">part of,</div>
            
            <div class="quote e130">proper part,</div> and 
            <div class="quote e131">discrete</div> may all be defined in terms of the
            overlap relation.
         </div>
         <div class="para e132">Iff x is a 
            <div class="emphasis e133">part</div> of y, then everything that overlaps x also overlaps
            y:
            
            <div class="programlisting e134" xml:space="preserve">D2.042 x &lt; y =
               <div class="subscript e135">df</div> (z)((z ∘ x) → (z ∘ y))
            </div>
            The part relation is reflexive, anti-symmetric and transitive. 
         </div>
         <div class="para e136"> Iff x is a 
            <div class="emphasis e137">proper part</div> of y, then x is a part of y but y is not a
            part of x:
            
            <div class="programlisting e138" xml:space="preserve">D2.043 x ≪ y =
               <div class="subscript e139">df</div> (x &lt; y) ∧ ¬(y &lt; x)
            </div>
            The proper part relation is irreflexive, anti-symmetric and transitive.
         </div>
         <div class="para e140"> Iff x and y are 
            <div class="emphasis e141">discrete</div>, then they have no part in common, i.e.,
            they do not overlap
            <div class="popupBox e142">
               <div class="popupLabel" onmouseover="$('#d1e314').show('1000');" onmouseout="$('#d1e314').hide('1000');">[ footnote ]</div>
               <div id="d1e314" style="display: none;">
                  <div class="footnote">
                     <div class="para e143">Leonard and Goodman use for the 
                        <div class="quote e144">discrete from</div> relation a symbol we have
                        not been able to locate in Unicode; we use here a fairly close approximation, the
                        symbol
                        “&nbsp;
                        <div class="code e145">ʅ</div>&nbsp;”, which usually means
                        
                        <div class="quote e146">caution.</div>
                     </div>
                  </div>
               </div>
            </div>:
            
            <div class="programlisting e147" xml:space="preserve">D2.041 x ʅ y =
               <div class="subscript e148">df</div> ¬(x o y) 
            </div> The
            discrete relation is irreflexive and symmetric (and thus, non-transitive).
         </div>
         <div class="para e149"> It is worth noting that 
            <div class="emphasis e150">identity</div> can be defined in terms of the
            primitive relation:
            
            <div class="programlisting e151" xml:space="preserve">D2.044 x = y =
               <div class="subscript e152">df</div>  (z)((z o x) ⇔ (z o y))
            </div>
            
         </div>
         <div class="para e153">The 
            <div class="emphasis e154">product</div> of x and y is the individual which exactly contains their
            common part: 
            <div class="programlisting e155" xml:space="preserve">D2.045 x · y =
               <div class="subscript e156">df</div> (℩z)(w)((w &lt; z) ⇔ ((w &lt; x) ∧ (w &lt; y)))
            </div>
            
            
         </div>
         <div class="para e157">The 
            <div class="emphasis e158">sum</div> of x and y is the individual which contains exactly and
            exhaustively both of them, or, in other words, the individual which overlaps all and
            only
            those individuals which overlap any of them: 
            <div class="programlisting e159" xml:space="preserve">D2.047 x + y =
               <div class="subscript e160">df</div> (℩z)(w)((w ∘ z) ⇔ ((w ∘ x) ∨ (w ∘ y)))
            </div>
            
            
         </div>
         <div class="para e161"> The 
            <div class="emphasis e162">negate</div> of an individual includes everything which does not
            overlap with that individual (i.e., what is often called its 
            <div class="quote e163">complement</div>, or
            
            <div class="quote e164">the rest of the world</div>): 
            <div class="programlisting e165" xml:space="preserve">D2.046 –x =
               <div class="subscript e166">df</div> (℩z)(y)((y ʅ x) ⇔ (y &lt; z))
            </div>
            
            
         </div>
         <div class="para e167">The 
            <div class="emphasis e168">difference</div> between x and y is what remains of x after we
            eliminate the parts it has in common with y:
            
            <div class="programlisting e169" xml:space="preserve">x – y =
               <div class="subscript e170">df</div> (x · –y)
            </div>
            
         </div>
         <div class="para e171"> There is considerable controversy in the literature over the 
            <div class="emphasis e172">nil</div>
            individual. The 
            <div class="emphasis e173" role="ital">nil</div> individual is the mereological analogue
            of the empty class. If accepted, it is part of any individual. Most mereological systems
            reject its existence, and we will do the same in this paper.
            <div class="popupBox e174">
               <div class="popupLabel" onmouseover="$('#d1e408').show('1000');" onmouseout="$('#d1e408').hide('1000');">[ footnote ]</div>
               <div id="d1e408" style="display: none;">
                  <div class="footnote">
                     <div class="para e175">This may be seen simply as a reflection of the fact that most mereologists have been
                        nominalists (in Goodman's sense). But the topic also has other far-reaching repercussions
                        — see [
                        <div class="xref e176" linkend="Varzi"></div>].
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e177">There is less controversy over the existence of the 
            <div class="emphasis e178">universal</div>
            individual, i.e., the one individual of which every other is a part — the
            
            <div class="quote e179">world</div> or the 
            <div class="quote e180">universe</div> as an individual. In our case, we are
            not applying the Calculus of Individuals as a 
            <div class="quote e181">Grand Theory of Everything,</div> but
            limit its application to domains consisting of a single document, to collections (not
            to say
            sets or classes) of documents, or perhaps to documents and whatever else we may need
            to take
            into consideration to make sense of what these documents say. So we, too, will endorse
            the
            existence of a universal individual, customarily denoted by the letter 
            <div class="quote e182">W</div>:
            
            <div class="programlisting e183" xml:space="preserve">W =
               <div class="subscript e184">df</div> (℩x)(y)(y &lt; x)
            </div>
            
         </div>
         <div class="para e185">Note that, because there is no 
            <div class="emphasis e186" role="ital">nil</div> individual:
         </div>
         <div class="itemizedlist e187">
            <div class="listitem e188">
               <div class="para e189">the product of 
                  <div class="code e190">x</div> and 
                  <div class="code e191">y</div> can possibly exist only if
                  
                  <div class="code e192">x</div> and 
                  <div class="code e193">y</div> overlap,
               </div>
            </div>
            <div class="listitem e194">
               <div class="para e195">the difference between 
                  <div class="code e196">x</div> and 
                  <div class="code e197">y</div> can possibly exist only if
                  
                  <div class="code e198">x</div> is not a part of 
                  <div class="code e199">y</div>, and
               </div>
            </div>
            <div class="listitem e200">
               <div class="para e201">W (the universe) does not have a negate.</div>
            </div>
         </div>
         <div class="para e202">However, the following statements hold, either as axioms or theorems, depending on
            how one
            elaborates the system:
         </div>
         <div class="itemizedlist e203">
            <div class="listitem e204">
               <div class="para e205">
                  <div class="code e206">(x)(y)(∃z)(z = x + y)</div>, i.e., the sum of any
                  two individual exists (that is, is an individual),
               </div>
            </div>
            <div class="listitem e207">
               <div class="para e208">
                  <div class="code e209">(x)(y)((x ∘ y) ⇔ (∃z)(z = x
                     · y))
                  </div>, i.e., the product of any two individuals exists iff they
                  overlap,
               </div>
            </div>
            <div class="listitem e210">
               <div class="para e211">
                  <div class="code e212">(x)(¬(x = W) ⇔ (∃z)(z = –x))</div>,
                  i.e., the negate of an individual exists iff the individual is not the universe,
                  and
               </div>
            </div>
            <div class="listitem e213">
               <div class="para e214">
                  <div class="code e215">(x)(y)((¬x &lt; y) ⇔ (∃z)(z = x
                     – y))
                  </div>, i.e., the difference between any individual 
                  <div class="code e216">x</div> and any
                  individual 
                  <div class="code e217">y</div> exists iff 
                  <div class="code e218">x</div> is not a part of
                  
                  <div class="code e219">y</div>.
               </div>
            </div>
         </div>
         <div class="para e220">Do all individuals have parts, or are there some individuals which are not further
            divisible into parts? Whether we take the one or the other position may have wide-reaching
            consequences for other properties of a mereological system, and the literature abounds
            with
            discussion on the subject. Given our domain of application, however, we believe that
            any
            system will have to be 
            <div class="emphasis e221">atomistic</div> — on none of our analyses will
            documents have parts below character-level, or at least we foresee no need to talk
            about parts
            of characters.
            
            So we may simply add the axiom of atomicity to our system right away:
            
            <div class="programlisting e222" xml:space="preserve">(x)(∃y)((y &lt; x) ∧ ¬(∃z)(z ≪ y)) </div>
            [
            <div class="xref e223" linkend="CasatiVarzi1999"></div>, p.&nbsp;61] 
         </div>
      </div><a name="TheCalculusappliedtoXMLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e224" xml:id="coi-xml">
         <div class="title e225">The Calculus applied to XML</div>
         <div class="para e226">What might it mean to apply the Calculus of Individuals to XML documents (or, for
            short,
            
            <div class="quote e227">to XML</div>) and what purpose might such an application of the calculus serve? A
            preliminary answer to the first question is that an application of the Calculus of
            Individuals
            to XML would require us to decide which entities to count as individuals, to decide
            which of
            these are to count as atomic individuals, as well as which properties they can have
            and which
            relations hold between them. Given the Calculus of Individual's rules of composition,
            different decisions on these issues will bring us to recognize the existence of individuals
            which may or may not coincide with established ways of viewing the structure of XML
            documents.
            Identifying rules which replicate such conventional views is, if possible, in itself
            of
            interest. Identifying rules which provide alternative views of XML documents may be
            of even
            greater interest, at least if they also suggest alternate and useful ways of analysing
            the
            parts of a document, of addressing them, and of how to ascribe properties of and relations
            between parts of a document. 
         </div>
         <div class="para e228">A preliminary answer to the second question has thus already been suggested: We suspect
            that an application of the Calculus of Individuals to XML might suggest ways of identifying
            and addressing parts of a document which in some cases, or for some purposes, would
            be more
            convenient or more powerful than existing methods such as SAX, DOM or xPath. We also
            suspect
            that some application of the Calculus of Individuals to XML might suggest ways of
            dealing with
            what is sometimes called the 
            <div class="quote e229">semantics</div> of XML, i.e., how to understand XML
            documents in terms of properties ascribed to and relations indicated between the various
            parts
            of them indicated by the markup. 
         </div>
         <div class="para e230"> In what follows we have nothing but tentative answers to the general questions just
            posed. Trying to answer the first question, we will present different ways of applying
            the
            Calculus of Individuals to XML. We will also explore some of their implications for
            answers to
            the second question. The explorative nature of our work should be emphasized: We do
            not want
            to suggest that these are the only, or the best, ways of applying the Calculus of
            Individuals
            to XML, nor do we suggest that we have identified all or even the most important implications
            of the approaches that we consider. 
         </div>
         <div class="para e231">Therefore, each of the following sections begins by suggesting a different answer
            to the
            question 
            <div class="quote e232">Which are the individuals of a marked-up document?</div> First, we consider
            the possibility that the individuals simply are XML elements. Next, we go down one
            step in
            level of granularity and identify tags and character strings as individuals. Finally,
            we
            proceed to a still finer level of granularity in order to see what happens if we recognize
            individual characters as atomic individuals, and distinguish between different kinds
            of
            individuals built from these atoms. 
         </div><a name="TheelementasindividualapproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e233" xml:id="coi1">
            <div class="title e234">The element-as-individual approach</div>
            <div class="para e235">What to count as individuals is a matter of choice, a choice which must be made on
               the
               basis of such criteria as naturalness, convenience, expressiveness, simplicity, etc.
               We
               begin by simply assuming a one-to-one matching between the 
               <div class="emphasis e236">elements</div> of
               an XML document and the individuals of our calculus. On this assumption, consider
               the
               following simple XML document:
               
               <div class="programlisting e237" xml:space="preserve">(1) &lt;para&gt;A &lt;quote&gt;rose&lt;/quote&gt; is &lt;emph&gt;a&lt;/emph&gt; rose.&lt;/para&gt;</div>
               
            </div>
            <div class="para e238">If each element is an individual, then (1) itself, as well as the elements
               
               <div class="programlisting e239" xml:space="preserve">(2) &lt;quote&gt;rose&lt;/quote&gt;
                  (3) &lt;emph&gt;a&lt;/emph&gt;
               </div>
               are individuals. Now, the sum of any two individuals must (by our mereological axioms)
               be an
               individual. Thus, the sum of (2) and (3) must be an individual and, by our hypothesis,
               an
               XML element. No matter what model we have in mind for XML elements and documents,
               it is hard
               to imagine a way in which the sum of (2) and (3) could be an XML element — it
               would be at best two!
            </div>
            <div class="para e240">In fact, the goal we have set ourselves here turns out to be self-defeating: It is
               not
               possible to identify XML elements with individuals, without accepting as individuals
               parts
               of the document which are not XML elements. In other words, if all XML elements are
               individuals, then some XML documents necessarily give rise to individuals which are
               not XML elements.
               <div class="popupBox e241">
                  <div class="popupLabel" onmouseover="$('#d1e564').show('1000');" onmouseout="$('#d1e564').hide('1000');">[ footnote ]</div>
                  <div id="d1e564" style="display: none;">
                     <div class="footnote">
                        <div class="para e242">In practice, we may read 
                           <div class="quote e243">nearly all</div> for 
                           <div class="quote e244">some</div> here.
                           Examples of exceptions would be documents consisting of only one element, or in which
                           each element has at most one child element. Examples:
                           
                           <div class="programlisting e245" xml:space="preserve">&lt;s&gt;...&lt;/s&gt;
                              &lt;s&gt;&lt;t&gt;...&lt;/t&gt;&lt;/s&gt;
                              &lt;s&gt;&lt;t&gt;&lt;u&gt;...&lt;/u&gt;&lt;/t&gt;&lt;/s&gt;
                           </div>
                           and so on. Only in such cases may there in fact be a one-to-one correlation between
                           elements and individuals.
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e246">An obvious fix would be to retain the decision that every element is an individual,
               but
               allow for composite individuals having more than one element as their parts. This
               would
               solve the problem of sums, but others would remain (e.g., what elements can the difference
               (1) – (2) be the sum of?). Even taking the closure of elements under sum and
               difference would still not solve a granularity issue in handling text content: Take,
               for
               example, the strings 
               <div class="quote e247">
                  
                  <div class="code e248">A&nbsp;</div>
                  
               </div>, 
               <div class="quote e249">
                  
                  <div class="code e250">&nbsp;is&nbsp;</div>
                  
               </div>, and 
               <div class="quote e251">
                  
                  <div class="code e252">&nbsp;rose.</div>
                  
               </div>; any given individual would contain either all three or none. There would be no way
               to 
               <div class="quote e253">separate</div> those strings.
            </div>
            <div class="para e254">Another issue is that the definition of parthood implies nothing about the ordering
               of
               parts, resulting in the fact that 
               <div class="emphasis e255" role="ital">individuals are
                  unordered
               </div>. Thus, there is no way in our approach to say, for example, that (2)
               
               <div class="emphasis e256" role="ital">occurs before</div> (3).
            </div>
            <div class="para e257">The Calculus of Individuals offers in itself no way of defining ordered pairs 
               <div class="popupBox e258">
                  <div class="popupLabel" onmouseover="$('#d1e611').show('1000');" onmouseout="$('#d1e611').hide('1000');">[ footnote ]</div>
                  <div id="d1e611" style="display: none;">
                     <div class="footnote">
                        <div class="para e259">
                           <div class="xref e260" linkend="Goodman1972"></div>, p.&nbsp;164. But see also 
                           <div class="xref e261" linkend="Pitkanen"></div> p.&nbsp;268
                        </div>
                     </div>
                  </div>
               </div> — and thus, relations — as individuals. However, relations
               can be represented by 
               <div class="emphasis e262" role="ital">predicates</div> on individuals. Thus, we
               can order (either totally or partially) our individuals by defining an appropriate
               binary
               predicate corresponding to the desired relation.
            </div>
            <div class="para e263">If we think of individuals as corresponding to objects in an XML data model, and if
               that
               model allows serializations in which no two distinct elements or characters start
               at the
               same offset in a serialization
               <div class="popupBox e264">
                  <div class="popupLabel" onmouseover="$('#d1e623').show('1000');" onmouseout="$('#d1e623').hide('1000');">[ footnote ]</div>
                  <div id="d1e623" style="display: none;">
                     <div class="footnote">
                        <div class="para e265">This is the case if we think of XML documents and elements as consisting of
                           stretches of consecutive character occurrences (remember we exclude entity declarations
                           and references from our discussion), and also with the xPath data model. It is 
                           <div class="emphasis e266" role="ital">not</div> necessarily the case with the Infoset data model.
                        </div>
                     </div>
                  </div>
               </div> (we will need to deal with characters in later sections), then we can induce a
               total ordering of the individuals that correspond to elements and characters, based
               on the
               total order among the offsets of their XML counterparts in the serialization. We call
               that
               order relation 
               <div class="emphasis e267" role="ital">document order</div>.
            </div>
            <div class="para e268">Throughout this paper, we assume that document order exists and is well
               defined.
            </div>
            <div class="para e269">So far we have assumed that XML elements containing no sub-elements have no parts,
               i.e.,
               that they are atoms in our system. A solution may perhaps be to recognize a more generous
               set of individuals. But before we proceed to investigate this, we pause to make a
               couple of
               observations on other characteristics of the element-as-individual approach.
            </div>
            <div class="itemizedlist e270">
               <div class="listitem e271">
                  <div class="para e272">The lack of a fine enough granularity prevents a satisfactory treatment of strings,
                     let alone 
                     <div class="emphasis e273" role="ital">parts</div> of strings. 
                  </div>
                  <div class="para e274">However we could regard a string as a property of an individual. Thus, although we
                     cannot strictly speaking say that in (1) the string 
                     <div class="quote e275">rose</div> is a part of the
                     string 
                     <div class="quote e276">A rose is a rose.</div>, we could say that an individual having the
                     string 
                     <div class="quote e277">rose</div> as a property is part of an individual having the string
                     
                     <div class="quote e278">A rose is a rose.</div> as a property. Note that the strings 
                     <div class="quote e279">rose
                        is
                     </div> or 
                     <div class="quote e280">ose&nbsp;i</div> would not be properties of any individual,
                     and thus not a 
                     <div class="quote e281">part</div> of the document even in this extended sense. 
                  </div>
               </div>
               <div class="listitem e282">
                  <div class="para e283">Building a tree structure in which each node is an individual (i.e., an element),
                     in
                     which each arc represents a whole-part relationship, and in which the children of
                     each
                     node are ordered in document order, produces a tree which is almost identical to the
                     XML
                     tree for the same document, except for PCDATA leaf nodes of mixed content elements,
                     which would be lost.
                     <div class="popupBox e284">
                        <div class="popupLabel" onmouseover="$('#d1e675').show('1000');" onmouseout="$('#d1e675').hide('1000');">[ footnote ]</div>
                        <div id="d1e675" style="display: none;">
                           <div class="footnote">
                              <div class="para e285">This
                                 might be considered, by some, an interesting observation, since some markup
                                 theorists have argued against the use of mixed content, either generally or for
                                 specific applications or uses of markup.
                              </div>
                           </div>
                        </div>
                     </div> (However empty element leaf nodes would appear in the tree.)
                  </div>
               </div>
            </div>
         </div><a name="ThetagsandPCDATAapproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e286" xml:id="coi2">
            <div class="title e287">The tags and PCDATA approach</div>
            <div class="para e288">Moving one step down in level of granularity, we might take 
               <div class="emphasis e289">tags and PCDATA
                  strings
               </div> delimited by tags as atomic individuals. Thus (1) would contain the
               following 11 atomic individuals:
               
               <div class="programlisting e290" xml:space="preserve">&lt;para&gt;
                  A 
                  &lt;quote&gt;
                  rose 
                  &lt;/quote&gt;
                  is 
                  &lt;emph&gt;
                  a
                  &lt;/emph&gt;
                  rose.
                  &lt;/para&gt;
               </div>
               From these, we might compose composite individuals such as, for example:
               
               <div class="programlisting e291" xml:space="preserve">&lt;para&gt;
                  &lt;para&gt;A 
                  &lt;para&gt;A &lt;quote&gt;
                  &lt;para&gt;A &lt;quote&gt;rose 
                  A rose
                  A  rose.
                  rose a
                  &lt;para&gt;A &lt;quote&gt;
                  A &lt;quote&gt;rose &lt;/quote&gt; is &lt;emph&gt;
                  rose &lt;/quote&gt;  rose.&lt;/para&gt;
               </div>
               As a matter of fact, (1) would give rise to no less than 2
               <div class="superscript e292">11</div>-1 =
               2047 individuals on this account (-1 because there is no 
               <div class="emphasis e293" role="ital">nil</div> individual) — in the interest of the reader we do not list all of
               them here. Only a handful of these individuals would be well-balanced XML fragments,
               of
               course.
            </div>
            <div class="para e294">A total order relation on the atomic individuals based on document order could be
               defined, as in the preceding section. Note that in this case, the sequence of ordered
               atomic
               individuals is isomorphic to the sequence of events identified by a SAX-like XML
               tokenizer.
            </div>
            <div class="para e295"> Observe that although many of the  individuals
               could be identified or referenced using xPath or similar XML-aware mechanisms, many
               of them
               could not. In particular, tag atoms could not (or, at least, it is unclear how and
               in what
               sense they could). However, the interest of being able to refer to tags individually
               is not
               obvious. Also, since strings are atoms, it is still impossible to handle parts of
               strings:
               
               <div class="quote e296">ose i</div> is still not an individual. Therefore, we do not pursue this avenue
               any
               further.
               
            </div>
         </div><a name="ThecharacteratomapproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e297" xml:id="coi3">
            <div class="title e298">The character-atom approach</div><a name="TheapproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e299">
               <div class="title e300">The approach</div>
               <div class="para e301">Finally, and moving one further step down in the level of granularity, we take
                  
                  <div class="emphasis e302">character occurrences</div> as the atomic individuals in our application
                  of the calculus. For the sake of conciseness, we will use 
                  <div class="emphasis e303" role="ital">character</div> as a synonym for 
                  <div class="emphasis e304" role="ital">character
                     occurrence
                  </div>, except where confusion might
                  arise.
                  
               </div>
               <div class="para e305">The 
                  <div class="emphasis e306" role="ital">type</div> of a character occurrence is represented in
                  our system by a property of that character occurrence. So any atom (i.e., character
                  occurrence) has the property of being an 
                  <div class="quote e307">a</div>, or a 
                  <div class="quote e308">b</div>, or a
                  
                  <div class="quote e309">c</div>, etc., thus populating our vocabulary with one predicate for each of
                  the characters of the writing system at hand.
                  <div class="popupBox e310">
                     <div class="popupLabel" onmouseover="$('#d1e745').show('1000');" onmouseout="$('#d1e745').hide('1000');">[ footnote ]</div>
                     <div id="d1e745" style="display: none;">
                        <div class="footnote">
                           <div class="para e311">We might allow a character occurrence to have more than one such property. For
                              example, it could have the property of being an 
                              <div class="quote e312">a</div>, as well as that of
                              being of some other type. Exploiting this option might be interesting in trying to
                              account for multiple readings or interpretations in transcription, such as in [
                              <div class="xref e313" linkend="dh2009"></div>]. For the time being, however, we will assume that the ascription
                              of one such character-type-property to a particular character excludes the ascription
                              of any other character-type-property to that character. 
                           </div>
                        </div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e314">We define a total order relation on atoms, based on document order, represented by
                  the
                  predicate 
                  <div class="code e315">PA(x, y)</div>, true iff 
                  <div class="code e316">x</div> precedes 
                  <div class="code e317">y</div> in
                  document order (“P” stands for “precedes” and “A” indicates it is a predicate on atoms).
                  The transitive reduction of 
                  <div class="code e318">PA</div> is represented by the predicate 
                  <div class="code e319">NA(x,
                     y)
                  </div>, true iff 
                  <div class="code e320">x</div> immediately precedes 
                  <div class="code e321">y</div> in document order
                  (“N” stands for “next” and “A” indicates it is a predicate on
                  atoms).
               </div>
               <div class="para e322">Since characters are atomic individuals, all individuals which can be composed on
                  the
                  basis of the characters of a document are also individuals, i.e., composite individuals.
                  Composite individuals of special interest for our purposes are
                  
                  <div class="emphasis e323">strings</div>. We define strings as individuals which are either atoms, or
                  the sum of atoms consecutive in 
                  <div class="code e324">NA</div> order. A string that consists of only one
                  character is (also) an atom. There is no such thing as an 
                  <div class="quote e325">empty string</div>
                  (which would have to be the 
                  <div class="emphasis e326" role="ital">nil</div> individual). Note that
                  strings constitute a tiny fraction of all existing individuals.
               </div>
               <div class="para e327">Some strings are of particular interest to us. We define a 
                  <div class="emphasis e328">molecular
                     string
                  </div> (or 
                  <div class="emphasis e329" role="ital">molecule</div>) as a string that is
                  delimited on both sides (in the serialization underlying document order) by a tag,
                  with no
                  other tag intervening in between. A total ordering of molecular strings, represented
                  by
                  the predicate 
                  <div class="code e330">P(x, y)</div>, is trivially derived from the ordering of atoms
                  (itself based on document order). The transitive reduction of 
                  <div class="code e331">P</div> is
                  represented by the predicate 
                  <div class="code e332">N(x, y)</div>. (“P” stands for “precedes” and “N” for
                  “next”.)
                  
               </div>
               <div class="para e333"> We define an 
                  <div class="emphasis e334">elemental string</div> as a string delimited by the
                  matching tags of an XML element (there may be intervening tags). We do not rely on
                  any
                  ordering of elemental strings.
                  
               </div>
               <div class="para e335">For any given string 
                  <div class="code e336">x</div>, we define (for convenience only) the
                  
                  <div class="emphasis e337">label</div> of 
                  <div class="code e338">x</div> as the sequence of the types of the atoms
                  composing 
                  <div class="code e339">x</div>, in 
                  <div class="code e340">NA</div> order. That is, for example, a string is
                  labelled 
                  <div class="quote e341">rose</div> (or has the label 
                  <div class="quote e342">rose</div>) iff it is the sum of
                  atoms of types 
                  <div class="quote e343">r</div>, 
                  <div class="quote e344">o</div>, 
                  <div class="quote e345">s</div>, and 
                  <div class="quote e346">e</div>,
                  and those atoms are 
                  <div class="code e347">NA</div>-ordered so that the one of type 
                  <div class="quote e348">r</div> comes
                  first, the one of type 
                  <div class="quote e349">o</div> comes second, etc.
               </div>
               <div class="para e350">While it might have been plausible to treat tags as a special kind of strings, and
                  build elements and nodes with their ordering and parent-child relationship in a way
                  similar to that suggested in the tags and PCDATA approach above, instead, we shall
                  regard
                  tags simply as delimiting certain string individuals, and ascribing properties to
                  (or
                  relations between) those individuals.
               </div>
               <div class="para e351"> We can now read (1) as follows: 
                  <div class="itemizedlist e352">
                     <div class="listitem e353">
                        <div class="para e354">There are 17 atomic individuals. Their ordered sequence of types is:
                           
                           <div class="quote e355">A</div>, 
                           <div class="quote e356">&nbsp;</div>, 
                           <div class="quote e357">r</div>, 
                           <div class="quote e358">o</div>,
                           
                           <div class="quote e359">s</div>, 
                           <div class="quote e360">e</div>, 
                           <div class="quote e361">&nbsp;</div>, 
                           <div class="quote e362">i</div>,
                           
                           <div class="quote e363">s</div>, 
                           <div class="quote e364">&nbsp;</div>, 
                           <div class="quote e365">a</div>,
                           
                           <div class="quote e366">&nbsp;</div>, 
                           <div class="quote e367">r</div>, 
                           <div class="quote e368">o</div>, 
                           <div class="quote e369">s</div>,
                           
                           <div class="quote e370">e</div>, and 
                           <div class="quote e371">.</div>.
                           
                           
                        </div>
                     </div>
                     <div class="listitem e372">
                        <div class="para e373">There are five molecular string individuals. Their ordered sequence of labels
                           is: 
                           <div class="quote e374">A&nbsp;</div>, 
                           <div class="quote e375">rose</div>,
                           
                           <div class="quote e376">&nbsp;is&nbsp;</div>, 
                           <div class="quote e377">a</div>, and
                           
                           <div class="quote e378">&nbsp;rose.</div>. 
                           
                           
                        </div>
                     </div>
                     <div class="listitem e379">
                        <div class="para e380">There are three elemental string individuals, labelled 
                           <div class="quote e381">A rose is a
                              rose.
                           </div>, 
                           <div class="quote e382">rose</div> and
                           
                           <div class="quote e383">a</div>.
                           
                        </div>
                     </div>
                     <div class="listitem e384">
                        <div class="para e385">The elemental string labelled 
                           <div class="quote e386">A rose is a rose.</div> has the property
                           indicated by the generic identifier &lt;para&gt;. 
                           <div class="itemizedlist e387">
                              <div class="listitem e388">
                                 <div class="para e389">Note that this does not imply that any of its parts, such as the molecular
                                    strings labelled 
                                    <div class="quote e390">A&nbsp;</div>, 
                                    <div class="quote e391">rose</div>, etc., has
                                    this property.
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e392">
                        <div class="para e393">The elemental string labelled 
                           <div class="quote e394">rose</div> has the property indicated by
                           the generic identifier &lt;quote&gt;.
                        </div>
                     </div>
                     <div class="listitem e395">
                        <div class="para e396">The elemental string labelled 
                           <div class="quote e397">a</div> has the property indicated by the
                           generic identifier &lt;emph&gt;. 
                           <div class="itemizedlist e398">
                              <div class="listitem e399">
                                 <div class="para e400">Here we have an example of an atom which is also a molecule and an
                                    elemental string.
                                    
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e401">We introduce the following predicates: 
                  
                  <div class="table e402">
                     <div class="thead e403">
                        <div class="tr e404">
                           <div class="th e405">Predicate </div>
                           <div class="th e406">Meaning</div>
                           <div class="th e407">Range of x and y</div>
                        </div>
                     </div>
                     <div class="tbody e408">
                        <div class="tr e409">
                           <div class="td e410"></div>
                        </div>
                        <div class="tr e411">
                           <div class="td e412">NA(x,y) </div>
                           <div class="td e413">next after x is y (or, x immediately precedes y)</div>
                           <div class="td e414">atoms</div>
                        </div>
                        <div class="tr e415">
                           <div class="td e416"> PA(x,y) </div>
                           <div class="td e417">x precedes y</div>
                           <div class="td e418">atoms</div>
                        </div>
                        <div class="tr e419">
                           <div class="td e420">N(x,y) </div>
                           <div class="td e421">next after x is y (or, x immediately precedes y)</div>
                           <div class="td e422">molecules</div>
                        </div>
                        <div class="tr e423">
                           <div class="td e424"> P(x,y) </div>
                           <div class="td e425">x precedes y</div>
                           <div class="td e426">molecules</div>
                        </div>
                        <div class="tr e427">
                           <div class="td e428">A(x) </div>
                           <div class="td e429">x is atomic</div>
                           <div class="td e430">any</div>
                        </div>
                        <div class="tr e431">
                           <div class="td e432">M(x) </div>
                           <div class="td e433">x is molecular</div>
                           <div class="td e434">any</div>
                        </div>
                        <div class="tr e435">
                           <div class="td e436">E(x) </div>
                           <div class="td e437">x is elemental</div>
                           <div class="td e438">any</div>
                        </div>
                        <div class="tr e439">
                           <div class="td e440">ccc(x) </div>
                           <div class="td e441">x has the property assigned by ccc (where ccc is an XML generic identifier) </div>
                           <div class="td e442">any</div>
                        </div>
                        <div class="tr e443">
                           <div class="td e444">T("c",x) </div>
                           <div class="td e445">x is of type c (where c is a character type) </div>
                           <div class="td e446">atoms</div>
                        </div>
                        <div class="tr e447">
                           <div class="td e448">L("ccc",x)</div>
                           <div class="td e449">x is labelled ccc (where ccc is a sequence of character types)</div>
                           <div class="td e450">any</div>
                        </div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e451">The last two predicates (T and L) are to be regarded as notational convenience features.
                  <div class="popupBox e452">
                     <div class="popupLabel" onmouseover="$('#d1e1093').show('1000');" onmouseout="$('#d1e1093').hide('1000');">[ footnote ]</div>
                     <div id="d1e1093" style="display: none;">
                        <div class="footnote">
                           <div class="para e453">In a 
                              <div class="quote e454">real</div>system, character type indications enclosed within quotes
                              and occurring within two-place predicates, like T(
                              <div class="quote e455">A</div>,i01) here, should
                              be replaced with one-place predicates using for example Unicode names for character
                              values, like T.x0041(i01). Character types are properties, not individuals, and so
                              should not really appear as variables in the calculus. One unattractive consequence
                              of
                              the shorthand notation used here is that assignment of whitespace characters comes
                              out
                              as T(
                              <div class="quote e456">&nbsp;</div>,i2), which is both imprecise and perhaps somewhat
                              confusing.
                           </div>
                           <div class="para e457">As mentioned, saying that an individual is labelled with a string is merely a
                              shorthand for saying that it consists of a sequence of atoms each with certain
                              character types as their values. So expressions like
                              L(
                              <div class="quote e458">&nbsp;is&nbsp;</div>,i20) in the example below are really
                              shorthands for more complex expressions referring to the atomic parts of the
                              individual i20 and their next and type properties. Assuming that i20=i07+i08+i09+i10,
                              what L(
                              <div class="quote e459">&nbsp;is&nbsp;</div>,i20) says should be construed as
                              something like NA(i07,i08) ∧ NA(i08,i09) ∧ NA(i09,i10) ∧
                              T.x0020(i07) ∧ T.x0069(i08)∧ T.x0073(i09)∧
                              T.x0020(i10).
                           </div>
                        </div>
                     </div>
                  </div> We are ignoring potential problems of name conflicts in this presentation
                  (which would arise e.g. in the case of a document containing XML generic identifiers
                  
                  <div class="quote e460">A</div>, 
                  <div class="quote e461">M</div> or 
                  <div class="quote e462">E</div>). 
               </div>
            </div><a name="ExamplesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e463">
               <div class="title e464">Examples</div>
               <div class="para e465">We assign the identifiers i01, i02, i03, etc. 
                  <div class="popupBox e466">
                     <div class="popupLabel" onmouseover="$('#d1e1128').show('1000');" onmouseout="$('#d1e1128').hide('1000');">[ footnote ]</div>
                     <div id="d1e1128" style="display: none;">
                        <div class="footnote">
                           <div class="para e467">In a working system one would probably use more  meaningful
                              identifiers. The only requirement on identifiers is that they should identify
                              individuals uniquely.
                           </div>
                        </div>
                     </div>
                  </div> to individuals of (1) and state some facts about them as follows:
                  
                  <div class="table e468">
                     <div class="tr e469">
                        <div class="td e470">T("A",i01)</div>
                        <div class="td e471">A(i01)</div>
                        <div class="td e472">NA(i01,i02)</div>
                     </div>
                     <div class="tr e473">
                        <div class="td e474">T(" ",i02)</div>
                        <div class="td e475">A(i02)</div>
                        <div class="td e476">NA(i02,i03)</div>
                     </div>
                     <div class="tr e477">
                        <div class="td e478"></div>
                        <div class="td e479"></div>
                        <div class="td e480"></div>
                     </div>
                     <div class="tr e481">
                        <div class="td e482">T("r",i03)</div>
                        <div class="td e483">A(i03)</div>
                        <div class="td e484">NA(i03,i04)</div>
                     </div>
                     <div class="tr e485">
                        <div class="td e486">T("o",i04)</div>
                        <div class="td e487">A(i04)</div>
                        <div class="td e488">NA(i04,i05)</div>
                     </div>
                     <div class="tr e489">
                        <div class="td e490">T("s",i05)</div>
                        <div class="td e491">A(i05)</div>
                        <div class="td e492">NA(i05,i06)</div>
                     </div>
                     <div class="tr e493">
                        <div class="td e494">T("e",i06)</div>
                        <div class="td e495">A(i06)</div>
                        <div class="td e496">NA(i06,i07)</div>
                     </div>
                     <div class="tr e497">
                        <div class="td e498"></div>
                        <div class="td e499"></div>
                        <div class="td e500"></div>
                     </div>
                     <div class="tr e501">
                        <div class="td e502">T(" ",i07)</div>
                        <div class="td e503">A(i07)</div>
                        <div class="td e504">NA(i07,i08)</div>
                     </div>
                     <div class="tr e505">
                        <div class="td e506">T("i",i08)</div>
                        <div class="td e507">A(i08)</div>
                        <div class="td e508">NA(i08,i09)</div>
                     </div>
                     <div class="tr e509">
                        <div class="td e510">T("s",i09)</div>
                        <div class="td e511">A(i09)</div>
                        <div class="td e512">NA(i09,i10)</div>
                     </div>
                     <div class="tr e513">
                        <div class="td e514">T(" ",i10)</div>
                        <div class="td e515">A(i10)</div>
                        <div class="td e516">NA(i10,i11)</div>
                     </div>
                     <div class="tr e517">
                        <div class="td e518"></div>
                        <div class="td e519"></div>
                        <div class="td e520"></div>
                     </div>
                     <div class="tr e521">
                        <div class="td e522">T("a",i11)</div>
                        <div class="td e523">A(i11)</div>
                        <div class="td e524">NA(i11,i12)</div>
                     </div>
                     <div class="tr e525">
                        <div class="td e526"></div>
                        <div class="td e527"></div>
                        <div class="td e528"></div>
                     </div>
                     <div class="tr e529">
                        <div class="td e530">T(" ",i12)</div>
                        <div class="td e531">A(i12)</div>
                        <div class="td e532">NA(i12,i13)</div>
                     </div>
                     <div class="tr e533">
                        <div class="td e534">T("r",i13)</div>
                        <div class="td e535">A(i13)</div>
                        <div class="td e536">NA(i13,i14)</div>
                     </div>
                     <div class="tr e537">
                        <div class="td e538">T("o",i14)</div>
                        <div class="td e539">A(i14)</div>
                        <div class="td e540">NA(i14,i15)</div>
                     </div>
                     <div class="tr e541">
                        <div class="td e542">T("s",i15)</div>
                        <div class="td e543">A(i15)</div>
                        <div class="td e544">NA(i15,i16)</div>
                     </div>
                     <div class="tr e545">
                        <div class="td e546">T("e",i16)</div>
                        <div class="td e547">A(i16)</div>
                        <div class="td e548">NA(i16,i17)</div>
                     </div>
                     <div class="tr e549">
                        <div class="td e550">T(".",i17)</div>
                        <div class="td e551">A(i17)</div>
                        <div class="td e552"></div>
                     </div>
                     <div class="tr e553">
                        <div class="td e554"></div>
                        <div class="td e555"></div>
                        <div class="td e556"></div>
                     </div>
                     <div class="tr e557">
                        <div class="td e558">i18=i01+i02</div>
                        <div class="td e559">M(i18)</div>
                        <div class="td e560">N(i18,i19)</div>
                     </div>
                     <div class="tr e561">
                        <div class="td e562">i19=i03+i04+i05+i06</div>
                        <div class="td e563">M(i19)</div>
                        <div class="td e564">N(i19,i20)</div>
                     </div>
                     <div class="tr e565">
                        <div class="td e566">i20=i07+i08+i09+i10</div>
                        <div class="td e567">M(i20)</div>
                        <div class="td e568">N(i20,i11)</div>
                     </div>
                     <div class="tr e569">
                        <div class="td e570"></div>
                        <div class="td e571">M(i11)</div>
                        <div class="td e572">N(i11,i21)</div>
                     </div>
                     <div class="tr e573">
                        <div class="td e574">i21=i12+i13+i14+i15+i16+i17</div>
                        <div class="td e575">M(i21)</div>
                        <div class="td e576"></div>
                     </div>
                     <div class="tr e577">
                        <div class="td e578">i22=i18+i19+i20+i11+i21</div>
                        <div class="td e579"></div>
                        <div class="td e580"></div>
                     </div>
                     <div class="tr e581">
                        <div class="td e582"></div>
                        <div class="td e583"></div>
                        <div class="td e584"></div>
                     </div>
                     <div class="tr e585">
                        <div class="td e586">L("A ",i18)</div>
                        <div class="td e587"></div>
                        <div class="td e588"></div>
                     </div>
                     <div class="tr e589">
                        <div class="td e590">L("rose",i19)</div>
                        <div class="td e591">E(i19)</div>
                        <div class="td e592">quote(i19)</div>
                     </div>
                     <div class="tr e593">
                        <div class="td e594">L(" is ",i20)</div>
                        <div class="td e595"></div>
                        <div class="td e596"></div>
                     </div>
                     <div class="tr e597">
                        <div class="td e598">T("a",i11)</div>
                        <div class="td e599">E(i11)</div>
                        <div class="td e600">emph(i11)</div>
                     </div>
                     <div class="tr e601">
                        <div class="td e602">L("rose.",i21)</div>
                        <div class="td e603"></div>
                        <div class="td e604"></div>
                     </div>
                     <div class="tr e605">
                        <div class="td e606">L("A rose is a rose.",i22)</div>
                        <div class="td e607">E(i22)</div>
                        <div class="td e608">para(i22)</div>
                     </div>
                  </div>                  
                  
                  
               </div>
               <div class="para e609">The same information may be presented more conspicuously in the following table,
                  listing for each individual its identifier, its type, its label, the kind of individual
                  it
                  is (A for atoms, M for molecular and E for elemental strings), its assigned properties
                  (i.e., properties assigned by an XML generic identifier), its next atom or molecular
                  string and its immediate proper parts. 
                  <div class="popupBox e610">
                     <div class="popupLabel" onmouseover="$('#d1e1357').show('1000');" onmouseout="$('#d1e1357').hide('1000');">[ footnote ]</div>
                     <div id="d1e1357" style="display: none;">
                        <div class="footnote">
                           <div class="para e611">At least as long as we are limiting ourselves to XML the notion 
                              <div class="quote e612">immediate
                                 proper part
                              </div> can be given a straightforward and natural definition: 
                              <div class="quote e613">x
                                 is an immediate proper part of y
                              </div> =
                              <div class="subscript e614">df</div> (x ≪ y) ∧
                              ¬(∃z)((x ≪ z) ∧ (z ≪ y))
                           </div>
                        </div>
                     </div>
                  </div> 
                  
                  <div class="table e615">
                     <div class="tr e616">
                        <div class="th e617">Id</div>
                        <div class="th e618">Type</div>
                        <div class="th e619">Label</div>
                        <div class="th e620">Kind</div>
                        <div class="th e621">Assigned property</div>
                        <div class="th e622">Next atom</div>
                        <div class="th e623">Next molecule</div>
                        <div class="th e624">Immediate parts</div>
                     </div>
                     <div class="tr e625">
                        <div class="td e626">i01</div>
                        <div class="td e627">"A"</div>
                        <div class="td e628"></div>
                        <div class="td e629">A</div>
                        <div class="td e630"></div>
                        <div class="td e631">i02</div>
                        <div class="td e632"></div>
                        <div class="td e633"></div>
                     </div>
                     <div class="tr e634">
                        <div class="td e635">i02</div>
                        <div class="td e636">" "</div>
                        <div class="td e637"></div>
                        <div class="td e638">A</div>
                        <div class="td e639"></div>
                        <div class="td e640">i03</div>
                        <div class="td e641"></div>
                        <div class="td e642"></div>
                     </div>
                     <div class="tr e643">
                        <div class="td e644">i03</div>
                        <div class="td e645">"r"</div>
                        <div class="td e646"></div>
                        <div class="td e647">A</div>
                        <div class="td e648"></div>
                        <div class="td e649">i04</div>
                        <div class="td e650"></div>
                        <div class="td e651"></div>
                     </div>
                     <div class="tr e652">
                        <div class="td e653">i04</div>
                        <div class="td e654">"o"</div>
                        <div class="td e655"></div>
                        <div class="td e656">A</div>
                        <div class="td e657"></div>
                        <div class="td e658">i05</div>
                        <div class="td e659"></div>
                        <div class="td e660"></div>
                     </div>
                     <div class="tr e661">
                        <div class="td e662">i05</div>
                        <div class="td e663">"o"</div>
                        <div class="td e664"></div>
                        <div class="td e665">A</div>
                        <div class="td e666"></div>
                        <div class="td e667">i06</div>
                        <div class="td e668"></div>
                        <div class="td e669"></div>
                     </div>
                     <div class="tr e670">
                        <div class="td e671">i06</div>
                        <div class="td e672">"e"</div>
                        <div class="td e673"></div>
                        <div class="td e674">A</div>
                        <div class="td e675"></div>
                        <div class="td e676">i07</div>
                        <div class="td e677"></div>
                        <div class="td e678"></div>
                     </div>
                     <div class="tr e679">
                        <div class="td e680">i07</div>
                        <div class="td e681">" "</div>
                        <div class="td e682"></div>
                        <div class="td e683">A</div>
                        <div class="td e684"></div>
                        <div class="td e685">i08</div>
                        <div class="td e686"></div>
                        <div class="td e687"></div>
                     </div>
                     <div class="tr e688">
                        <div class="td e689">i08</div>
                        <div class="td e690">"i"</div>
                        <div class="td e691"></div>
                        <div class="td e692">A</div>
                        <div class="td e693"></div>
                        <div class="td e694">i09</div>
                        <div class="td e695"></div>
                        <div class="td e696"></div>
                     </div>
                     <div class="tr e697">
                        <div class="td e698">i09</div>
                        <div class="td e699">"s"</div>
                        <div class="td e700"></div>
                        <div class="td e701">A</div>
                        <div class="td e702"></div>
                        <div class="td e703">i10</div>
                        <div class="td e704"></div>
                        <div class="td e705"></div>
                     </div>
                     <div class="tr e706">
                        <div class="td e707">i10</div>
                        <div class="td e708">" "</div>
                        <div class="td e709"></div>
                        <div class="td e710">A</div>
                        <div class="td e711"></div>
                        <div class="td e712">i11</div>
                        <div class="td e713"></div>
                        <div class="td e714"></div>
                     </div>
                     <div class="tr e715">
                        <div class="td e716">i11</div>
                        <div class="td e717">"a"</div>
                        <div class="td e718">"a"</div>
                        <div class="td e719">A M E</div>
                        <div class="td e720">emph</div>
                        <div class="td e721">i12</div>
                        <div class="td e722">i21</div>
                        <div class="td e723"></div>
                     </div>
                     <div class="tr e724">
                        <div class="td e725">i12</div>
                        <div class="td e726">" "</div>
                        <div class="td e727"></div>
                        <div class="td e728">A</div>
                        <div class="td e729"></div>
                        <div class="td e730">i13</div>
                        <div class="td e731"></div>
                        <div class="td e732"></div>
                     </div>
                     <div class="tr e733">
                        <div class="td e734">i13</div>
                        <div class="td e735">"r"</div>
                        <div class="td e736"></div>
                        <div class="td e737">A</div>
                        <div class="td e738"></div>
                        <div class="td e739">i14</div>
                        <div class="td e740"></div>
                        <div class="td e741"></div>
                     </div>
                     <div class="tr e742">
                        <div class="td e743">i14</div>
                        <div class="td e744">"o"</div>
                        <div class="td e745"></div>
                        <div class="td e746">A</div>
                        <div class="td e747"></div>
                        <div class="td e748">i15</div>
                        <div class="td e749"></div>
                        <div class="td e750"></div>
                     </div>
                     <div class="tr e751">
                        <div class="td e752">i15</div>
                        <div class="td e753">"s"</div>
                        <div class="td e754"></div>
                        <div class="td e755">A</div>
                        <div class="td e756"></div>
                        <div class="td e757">i16</div>
                        <div class="td e758"></div>
                        <div class="td e759"></div>
                     </div>
                     <div class="tr e760">
                        <div class="td e761">i16</div>
                        <div class="td e762">"e"</div>
                        <div class="td e763"></div>
                        <div class="td e764">A</div>
                        <div class="td e765"></div>
                        <div class="td e766">i17</div>
                        <div class="td e767"></div>
                        <div class="td e768"></div>
                     </div>
                     <div class="tr e769">
                        <div class="td e770">i17</div>
                        <div class="td e771">"."</div>
                        <div class="td e772"></div>
                        <div class="td e773">A</div>
                        <div class="td e774"></div>
                        <div class="td e775"></div>
                        <div class="td e776"></div>
                        <div class="td e777"></div>
                     </div>
                     <div class="tr e778">
                        <div class="td e779">i18</div>
                        <div class="td e780"></div>
                        <div class="td e781">"A "</div>
                        <div class="td e782">    M</div>
                        <div class="td e783"></div>
                        <div class="td e784"></div>
                        <div class="td e785">i19</div>
                        <div class="td e786">i01, i02</div>
                     </div>
                     <div class="tr e787">
                        <div class="td e788">i19</div>
                        <div class="td e789"></div>
                        <div class="td e790">"rose"</div>
                        <div class="td e791">    M E</div>
                        <div class="td e792">quote</div>
                        <div class="td e793"></div>
                        <div class="td e794">i20</div>
                        <div class="td e795">i03, i04, i05, i06</div>
                     </div>
                     <div class="tr e796">
                        <div class="td e797">i20</div>
                        <div class="td e798"></div>
                        <div class="td e799">" is "</div>
                        <div class="td e800">    M</div>
                        <div class="td e801"></div>
                        <div class="td e802"></div>
                        <div class="td e803">i11</div>
                        <div class="td e804">i07, i08, i09, i10</div>
                     </div>
                     <div class="tr e805">
                        <div class="td e806">i21</div>
                        <div class="td e807"></div>
                        <div class="td e808">"rose."</div>
                        <div class="td e809">    M</div>
                        <div class="td e810"></div>
                        <div class="td e811"></div>
                        <div class="td e812"></div>
                        <div class="td e813">i12, i13, i14, i15, i16, i17</div>
                     </div>
                     <div class="tr e814">
                        <div class="td e815">i22</div>
                        <div class="td e816"></div>
                        <div class="td e817">"A rose is a rose."</div>
                        <div class="td e818">         E</div>
                        <div class="td e819">para</div>
                        <div class="td e820"></div>
                        <div class="td e821"></div>
                        <div class="td e822">i18, i19, i20, i11, i21</div>
                     </div>
                  </div>
                  
                  
               </div>
               <div class="para e823">The elemental strings i22, i19 and i11 correspond to the XML elements (1)-(3) in a
                  fairly straightforward way, and can now be identified for example as follows:
                  
                  <div class="programlisting e824" xml:space="preserve">i22 = (℩x)(para(x) ∧ E(x))
                     i19 = (℩x)(quote(x) ∧ E(x))
                     i11 = (℩x)(emph(x) ∧ E(x))
                  </div>
               </div>
               <div class="para e825">The non-elemental molecules i18, i20 and i21 can be identified for example as follows:
                  
                  <div class="programlisting e826" xml:space="preserve">i18 = (℩x)(∃y)(quote(y) ∧ N(x,y))
                     i20 = (℩x)(∃y)(emph(y) ∧ N(x,y))
                     i21 = (℩x)(M(x) ∧ ¬(∃y)N(x,y))
                  </div>
               </div>
               <div class="para e827">Although in this particular case the denoting expressions identifying individuals
                  are
                  fairly simple, identifying individuals by means of denoting expressions may in general
                  become rather tedious. For example, in any document with more than one individual
                  assigned
                  the property quote, the denoting expression identifying individual i19 above would
                  return
                  the sum of all those individuals.
               </div>
               <div class="para e828">So although we have shown that all atoms, molecular and elemental strings
                  of (1) can be identified by our relatively straightforward
                  application of the Calculus, some of the above examples draw on the simplicity of
                  the
                  example and are rather ad hoc. Therefore, before we proceed to discuss how the Calculus
                  can be used to make statements and make inferences about a document, we introduce
                  a
                  slightly more complicated (and also more realistic) example. 
               </div>
               <div class="para e829">Consider the following XML document:
                  
                  <div class="programlisting e830" xml:space="preserve">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                     &lt;doc&gt; 
                     A rule:
                     &lt;list&gt;
                     &lt;item&gt;First:&lt;/item&gt;
                     &lt;item&gt;
                     &lt;list&gt;
                     &lt;item&gt;think,&lt;/item&gt;
                     &lt;item&gt;decide.&lt;/item&gt;
                     &lt;/list&gt;
                     &lt;/item&gt;
                     &lt;item&gt;Then:&lt;/item&gt;
                     &lt;item&gt;
                     &lt;list&gt;
                     &lt;item&gt;act,&lt;/item&gt;
                     &lt;item&gt;regret.&lt;/item&gt;
                     &lt;/list&gt;
                     &lt;/item&gt;
                     &lt;/list&gt;
                     &lt;/doc&gt;
                  </div>
               </div>
               <div class="para e831">Once again we provide identifiers for individuals of the document and present their
                  properties and relations in tabular form, but this time we include only the molecular
                  and
                  elemental individuals: 
                  <div class="popupBox e832">
                     <div class="popupLabel" onmouseover="$('#d1e1705').show('1000');" onmouseout="$('#d1e1705').hide('1000');">[ footnote ]</div>
                     <div id="d1e1705" style="display: none;">
                        <div class="footnote">
                           <div class="para e833">We have made life even more comfortable for ourselves by leaving out the
                              blankspace molecular atoms which occur between each of the molecules listed in the
                              table.
                           </div>
                        </div>
                     </div>
                  </div>
                  
                  <div class="table e834">
                     <div class="tr e835">
                        <div class="th e836">Id</div>
                        <div class="th e837">Label</div>
                        <div class="th e838">Kind</div>
                        <div class="th e839">Assigned property</div>
                        <div class="th e840">Next molecule</div>
                        <div class="th e841">Immediate parts</div>
                     </div>
                     <div class="tr e842">
                        <div class="td e843">i01</div>
                        <div class="td e844">A rule: </div>
                        <div class="td e845">M</div>
                        <div class="td e846"></div>
                        <div class="td e847">i02</div>
                        <div class="td e848"></div>
                     </div>
                     <div class="tr e849">
                        <div class="td e850">i02</div>
                        <div class="td e851">First:</div>
                        <div class="td e852">M E</div>
                        <div class="td e853">item</div>
                        <div class="td e854">i03</div>
                        <div class="td e855"></div>
                     </div>
                     <div class="tr e856">
                        <div class="td e857">i03</div>
                        <div class="td e858">think,</div>
                        <div class="td e859">M E</div>
                        <div class="td e860">item</div>
                        <div class="td e861">i04</div>
                        <div class="td e862"></div>
                     </div>
                     <div class="tr e863">
                        <div class="td e864">i04</div>
                        <div class="td e865">decide.</div>
                        <div class="td e866">M E</div>
                        <div class="td e867">item</div>
                        <div class="td e868">i05</div>
                        <div class="td e869"></div>
                     </div>
                     <div class="tr e870">
                        <div class="td e871">i05</div>
                        <div class="td e872">Then:</div>
                        <div class="td e873">M E</div>
                        <div class="td e874">item</div>
                        <div class="td e875">i06</div>
                        <div class="td e876"></div>
                     </div>
                     <div class="tr e877">
                        <div class="td e878">i06</div>
                        <div class="td e879">act,</div>
                        <div class="td e880">M E</div>
                        <div class="td e881">item</div>
                        <div class="td e882">i07</div>
                        <div class="td e883"></div>
                     </div>
                     <div class="tr e884">
                        <div class="td e885">i07</div>
                        <div class="td e886">regret.</div>
                        <div class="td e887">M E</div>
                        <div class="td e888">item</div>
                        <div class="td e889"></div>
                        <div class="td e890"></div>
                     </div>
                     <div class="tr e891">
                        <div class="td e892">i08</div>
                        <div class="td e893"></div>
                        <div class="td e894">E</div>
                        <div class="td e895">list, item</div>
                        <div class="td e896"></div>
                        <div class="td e897">i03, i04</div>
                     </div>
                     <div class="tr e898">
                        <div class="td e899">i09</div>
                        <div class="td e900"></div>
                        <div class="td e901">E</div>
                        <div class="td e902">list, item</div>
                        <div class="td e903"></div>
                        <div class="td e904">i06, i07</div>
                     </div>
                     <div class="tr e905">
                        <div class="td e906">i10</div>
                        <div class="td e907"></div>
                        <div class="td e908">E</div>
                        <div class="td e909">list</div>
                        <div class="td e910"></div>
                        <div class="td e911">i02, i08, i05, i09</div>
                     </div>
                     <div class="tr e912">
                        <div class="td e913">i11</div>
                        <div class="td e914"></div>
                        <div class="td e915">E</div>
                        <div class="td e916">doc</div>
                        <div class="td e917"></div>
                        <div class="td e918">i01, i10</div>
                     </div>
                  </div>
                  
                  
               </div>
               <div class="para e919">Note that the individuals i08 and i09 are each represented as one individual with
                  two
                  assigned properties, rather than as two individuals each with one property. The difference
                  between this representation and the conventional XML representation can be illustrated
                  by
                  juxtaposing a conventional XML tree of the document (to the left) and what we might
                  call a
                  mereological graph (to the right):
                  <div class="popupBox e920">
                     <div class="popupLabel" onmouseover="$('#d1e1853').show('1000');" onmouseout="$('#d1e1853').hide('1000');">[ footnote ]</div>
                     <div id="d1e1853" style="display: none;">
                        <div class="footnote">
                           <div class="para e921">It should be noted that the mereological graph here has been construed so as to
                              highlight the differences from XML discussed in this particular example, and that
                              other important differences do not come out with this kind of visualization.
                           </div>
                           <div class="para e922"> For example, the nodes of the XML graph are commonly understood to represent XML
                              elements, which in this case have been decorated with their generic identifiers. The
                              nodes of the mereological graph, however, represent individuals and are decorated
                              with
                              what we have here called there assigned properties. Moreover, the nodes visible in
                              the
                              mereological graph represent only a tiny fraction of the individuals of the document.
                              
                           </div>
                           <div class="para e923">The arcs of the XML graph are commonly understood to represent containment and/or
                              dominance relations between elements. In the mereological graph, they represent
                              exclusively part-whole relationships. Again, the number of part-whole relationships
                              depicted in the graph represent only a fraction of the part-whole relationships
                              between the individuals of the document.
                           </div>
                        </div>
                     </div>
                  </div>
                  
                  <div class="mediaobject e924">
                     <div class="imageobject e925">
                        <div class="metaBox e926"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1863').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1863" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e926'
                                 </span><span class="metaAttribute">fileref='../../../vol3/graphics/Huitfeldt01/Huitfeldt01-001.jpg'
                                 </span><span class="metaAttribute">format='jpg'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e927">Because of our decision not to count tags as part of the document, all coextensive
                  XML
                  elements will be represented as one elemental individual. The nesting order of these
                  elements in the XML document will not be preserved in this representation. 
                  <div class="popupBox e928">
                     <div class="popupLabel" onmouseover="$('#d1e1868').show('1000');" onmouseout="$('#d1e1868').hide('1000');">[ footnote ]</div>
                     <div id="d1e1868" style="display: none;">
                        <div class="footnote">
                           <div class="para e929">It might of course seem that the nesting order is preserved by the order in which
                              the assigned properties are mentioned in the table. However the table represents an
                              unordered set of statements, so the order is insignificant. More on nesting order
                              of
                              coextensive elements further below.
                           </div>
                        </div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e930">As before, we can use denoting expressions to refer to any part of the document, for
                  example:
                  
                  <div class="programlisting e931" xml:space="preserve">i01 = (℩x)¬(∃y)N(y,x)
                     i02 = (℩x)(item(x) ∧ ¬(∃y)(item(y) ∧ P(y,x)))
                     i03 = (℩x)(∃y)(∃z)(w)(v)
                     ((x ≪ y) ∧ list(y) ∧ 
                     (y ≪ z) ∧ list(z) ∧
                     (N(w,x) → ¬(w ≪ y)) ∧ 
                     (N(v,w) → ¬(v ≪ z))) 
                     i09 = (℩x)(∃y)(∃z)
                     (list(x) ∧ (x ≪ y) ∧ list(y) ∧
                     list(z) ∧ (z ≪ y) ∧ ¬(x = z) ∧ P(x,z))
                  </div>
                  
               </div>
            </div><a name="StatementsandinferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e932">
               <div class="title e933">Statements and inferences</div>
               <div class="para e934">We can also use the Calculus to make statements about the document —
                  unquantified, such as (1)–(4), or quantified, such as (5)–(8):
                  
                  <div class="programlisting e935" xml:space="preserve">(1) list(i09)
                     (2) item(i09)
                     (3) i07 ≪ i09
                     (4) i09 ≪ i10
                     (5) (x)(y)((list(x) ∧ item(x) ∧ (y ≪ x)) → item(y))
                     (6) (x)(y)((list(x) ∧ item(x) ∧ (x ≪ y)) → (list(y) ∨ doc(y)))
                     (7) (x)(item(x) → (∃y)((x ≪ y)  ∧ list(y)))
                     (8) (x)(item(x) → (∃y)(∃z)
                     (item(y) ∧ list(z)  ∧ (x ≪ z) ∧ (y ≪ z)  ∧ ¬(x = y)))
                  </div>
                  In order to avoid unnecessary misunderstanding, it should be pointed out that
                  (1)–(8) are descriptive statements about this particular document. (In other
                  context, such as for example situations where we wanted to express general constraints
                  on
                  document structure, we might of course also want to state facts about document
                  
                  <div class="emphasis e936">types</div>, but that is not our issue here.) 
               </div>
               <div class="para e937">From the statements we can make inferences, such as for example:
                  
                  <div class="programlisting e938" xml:space="preserve">
                     (9) item(i07)
                     [From (1), (2), (3) and (5).]
                     (10) list(i10) ∨ doc(i10)
                     [From (1), (2), (4) and (6).]
                     (11) (∃y)((i09 ≪ y) ∧ list(y))
                     [From (2) and (7).]
                     (12) (∃y)(∃z)(item(y) ∧ list(z) ∧ (i07 ≪ z) ∧ (y ≪ z) ∧ ¬(i07 = y))
                     [From (8) and (9).]
                  </div>
                  
               </div>
            </div><a name="ConclusionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e939">
               <div class="title e940">Conclusion</div>
               <div class="para e941">We have shown that strings composed of characters defined as atomic individuals can
                  be
                  identified and referenced by denoting expressions, that the Calculus can be used to
                  describe the part-whole relationships and ordering relations between parts of the
                  document
                  as well as the properties ascribed by generic identifiers. We have also shown that
                  this
                  application of the Calculus can be used for making statements about documents and
                  for
                  drawing inferences from these statements.
               </div>
               <div class="para e942">The approach chosen here has at least two obvious problems, or shortcomings; one
                  concerns the representation of coextensive elements, one relates to the representation
                  of
                  empty elements. Before we discuss these problems, however, we would like to assess
                  one of
                  its possible merits. In the next section, we will therefore sketch how this application
                  of
                  the Calculus can be used for the formulation of rules for propagation of properties
                  among
                  the parts of a document.
               </div>
            </div>
         </div>
      </div><a name="PropertyPropagation%E2%80%94aSketchANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e943" xml:id="propagation">
         <div class="title e944">Property Propagation — a Sketch</div>
         <div class="para e945">We have assumed that the generic identifier of an element may be seen as assigning
            a
            property to the PCDATA content of that element, and not to any proper part of that
            PCDATA
            content. But sometimes, the meaning of the markup is such that that property is not
            assigned
            (or not only assigned) to the contents of the element itself, but also to all or some
            of its
            descendants, or to all or some of its ancestors, or to one or more of its siblings,
            or to only
            specific other elements. Furthermore, what is assigned to the element or elements
            in question
            may be not a monadic property, but a relation of them to other elements in the same
            document,
            or even to document elements or other entities outside that document. Thus, the propagation
            of
            properties ascribed by the generic identifier of an element may follow a large diversity
            of
            patterns.
         </div>
         <div class="para e946">Using examples from the TEI and HTML encoding schemes, we will show that some of these
            patterns can conveniently be described by means of our application of the Calculus.
            We will
            first address some of the general distribution patterns identified by Nelson Goodman,
            which
            seem to represent important aspects of the intended semantics of certain TEI or HTML
            element
            types. We will then proceed to more complicated examples.
         </div><a name="DissectiveandantidissectivepropertiesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e947">
            <div class="title e948">Dissective and anti-dissective properties</div>
            <div class="para e949">As mentioned, in our application of the Calculus so far we have assumed that the
               property designated by the generic identifier of an XML element is assigned exclusively
               to
               the individual delimited by the start and end tags of the element, and not to its
               parts.
               This seems plausible enough for a number of element types, such as paragraphs, list
               items
               and titles. For example, a part of a paragraph, a list item or a title is not in general
               itself a paragraph, a list item or a title.
            </div>
            <div class="para e950">TEI element types such as &lt;hi&gt; (highlighting)
               <div class="popupBox e951">
                  <div class="popupLabel" onmouseover="$('#d1e1914').show('1000');" onmouseout="$('#d1e1914').hide('1000');">[ footnote ]</div>
                  <div id="d1e1914" style="display: none;">
                     <div class="footnote">
                        <div class="para e952">In the following we will often use the expression 
                           <div class="quote e953">element</div> or
                           
                           <div class="quote e954">element type</div> as short for 
                           <div class="quote e955">
                              <div class="emphasis e956">property</div> ascribed
                              to an element by its generic identifier
                           </div>.
                        </div>
                     </div>
                  </div>
               </div> or &lt;add&gt; (added), however, do not seem to follow this rule. Every
               part of a highlighted or added element is itself presumably highlighted or added.
               Other
               examples may be &lt;del&gt; (deleted) and &lt;foreign&gt;. The HTML element
               type &lt;i&gt; (italics) may provide an even clearer example here — every
               part of an italicized element is itself in italics. 
            </div>
            <div class="para e957">According to Goodman, 
               <div class="quote e958">a ... predicate is ... 
                  <div class="emphasis e959">dissective</div> if
                  it is satisfied by every part of every individual that satisfies it
               </div> [
               <div class="xref e960" linkend="Goodman1972"></div>, p.&nbsp;38]. A dissective one-place predicate is defined as
               follows:
               
               <div class="programlisting e961" xml:space="preserve">F is dissective iff (x)(y)((F(x) ∧ (y &lt; x)) → F(y))</div>
               
            </div>
            <div class="para e962">Consider the following document fragment:
               
               <div class="programlisting e963" xml:space="preserve">
                  &lt;s&gt;We
                  &lt;add&gt;, as all 
                  &lt;del&gt;purely &lt;hi&gt;human&lt;/hi&gt; and&lt;/del&gt; 
                  finite beings,
                  &lt;/add&gt; 
                  are all fallible.&lt;/s&gt;
               </div>
               As earlier, we represent the properties of this fragment in tabular form. From now
               on,
               however, in stead of indicating 
               <div class="quote e964">assigned properties</div> for each individual we
               will list relevant statements (some of which may be inferences from statements about
               the
               properties of other individuals): 
               
               <div class="table e965">
                  <div class="tr e966">
                     <div class="th e967">Id</div>
                     <div class="th e968">Label</div>
                     <div class="th e969">Kind</div>
                     <div class="th e970">Statements</div>
                     <div class="th e971">Next</div>
                     <div class="th e972">Parts</div>
                  </div>
                  <div class="tr e973">
                     <div class="td e974">i01</div>
                     <div class="td e975">We</div>
                     <div class="td e976">M</div>
                     <div class="td e977"></div>
                     <div class="td e978">i02</div>
                     <div class="td e979"></div>
                  </div>
                  <div class="tr e980">
                     <div class="td e981">i02</div>
                     <div class="td e982">, as all </div>
                     <div class="td e983">M</div>
                     <div class="td e984"></div>
                     <div class="td e985">i03</div>
                     <div class="td e986"></div>
                  </div>
                  <div class="tr e987">
                     <div class="td e988">i03</div>
                     <div class="td e989">purely </div>
                     <div class="td e990">M</div>
                     <div class="td e991"></div>
                     <div class="td e992">i04</div>
                     <div class="td e993"></div>
                  </div>
                  <div class="tr e994">
                     <div class="td e995">i04</div>
                     <div class="td e996">human</div>
                     <div class="td e997">M E</div>
                     <div class="td e998">hi(i04)</div>
                     <div class="td e999">i05</div>
                     <div class="td e1000"></div>
                  </div>
                  <div class="tr e1001">
                     <div class="td e1002">i05</div>
                     <div class="td e1003"> and</div>
                     <div class="td e1004">M</div>
                     <div class="td e1005"></div>
                     <div class="td e1006">i06</div>
                     <div class="td e1007"></div>
                  </div>
                  <div class="tr e1008">
                     <div class="td e1009">i06</div>
                     <div class="td e1010"> finite beings,</div>
                     <div class="td e1011">M</div>
                     <div class="td e1012"></div>
                     <div class="td e1013">i07</div>
                     <div class="td e1014"></div>
                  </div>
                  <div class="tr e1015">
                     <div class="td e1016">i07</div>
                     <div class="td e1017"> are all fallible.</div>
                     <div class="td e1018">M</div>
                     <div class="td e1019"></div>
                     <div class="td e1020"></div>
                     <div class="td e1021"></div>
                  </div>
                  <div class="tr e1022">
                     <div class="td e1023">i08</div>
                     <div class="td e1024"></div>
                     <div class="td e1025">E</div>
                     <div class="td e1026">del(i08)</div>
                     <div class="td e1027"></div>
                     <div class="td e1028">i03, i04, i05</div>
                  </div>
                  <div class="tr e1029">
                     <div class="td e1030">i09</div>
                     <div class="td e1031"></div>
                     <div class="td e1032">E</div>
                     <div class="td e1033">add(i09)</div>
                     <div class="td e1034"></div>
                     <div class="td e1035">i02, i08, i06</div>
                  </div>
                  <div class="tr e1036">
                     <div class="td e1037">i10</div>
                     <div class="td e1038"></div>
                     <div class="td e1039">E</div>
                     <div class="td e1040">s(i10)</div>
                     <div class="td e1041"></div>
                     <div class="td e1042">i01, i08, i09, i07</div>
                  </div>
               </div>
               
               However, if we add the following statements
               to the effect that the properties add, del and hi are dissective:
               
               <div class="programlisting e1043" xml:space="preserve">(x)(y)((add(x) ∧ (y &lt; x)) → add(y))
                  (x)(y)((del(x) ∧ (y &lt; x)) → del(y))    
                  (x)(y)((hi(x) ∧ (y &lt; x)) → hi(y))
               </div>
               — then, we can infer additional properties, with the following result:
               
               <div class="table e1044">
                  <div class="tr e1045">
                     <div class="th e1046">Id</div>
                     <div class="th e1047">Label</div>
                     <div class="th e1048">Kind</div>
                     <div class="th e1049">Statements</div>
                     <div class="th e1050">Next</div>
                     <div class="th e1051">Parts</div>
                  </div>
                  <div class="tr e1052">
                     <div class="td e1053">i01</div>
                     <div class="td e1054">We</div>
                     <div class="td e1055">M</div>
                     <div class="td e1056"></div>
                     <div class="td e1057">i02</div>
                     <div class="td e1058"></div>
                  </div>
                  <div class="tr e1059">
                     <div class="td e1060">i02</div>
                     <div class="td e1061">, as all </div>
                     <div class="td e1062">M</div>
                     <div class="td e1063">del(i02) </div>
                     <div class="td e1064">i03</div>
                     <div class="td e1065"></div>
                  </div>
                  <div class="tr e1066">
                     <div class="td e1067">i03</div>
                     <div class="td e1068">purely </div>
                     <div class="td e1069">M</div>
                     <div class="td e1070">del(i03), add(i03)</div>
                     <div class="td e1071">i04</div>
                     <div class="td e1072"></div>
                  </div>
                  <div class="tr e1073">
                     <div class="td e1074">i04</div>
                     <div class="td e1075">human</div>
                     <div class="td e1076">M E</div>
                     <div class="td e1077">hi(i04), del(i04), add(i04)</div>
                     <div class="td e1078">i05</div>
                     <div class="td e1079"></div>
                  </div>
                  <div class="tr e1080">
                     <div class="td e1081">i05</div>
                     <div class="td e1082"> and</div>
                     <div class="td e1083">M</div>
                     <div class="td e1084">del(i05), add(i05)</div>
                     <div class="td e1085">i06</div>
                     <div class="td e1086"></div>
                  </div>
                  <div class="tr e1087">
                     <div class="td e1088">i06</div>
                     <div class="td e1089"> finite beings,</div>
                     <div class="td e1090">M</div>
                     <div class="td e1091">del(i06) </div>
                     <div class="td e1092">i07</div>
                     <div class="td e1093"></div>
                  </div>
                  <div class="tr e1094">
                     <div class="td e1095">i07</div>
                     <div class="td e1096"> are all fallible.</div>
                     <div class="td e1097">M</div>
                     <div class="td e1098"></div>
                     <div class="td e1099"></div>
                     <div class="td e1100"></div>
                  </div>
                  <div class="tr e1101">
                     <div class="td e1102">i08</div>
                     <div class="td e1103"></div>
                     <div class="td e1104">E</div>
                     <div class="td e1105">del(i08), add(i08)</div>
                     <div class="td e1106"></div>
                     <div class="td e1107">i03, i04, i05</div>
                  </div>
                  <div class="tr e1108">
                     <div class="td e1109">i09</div>
                     <div class="td e1110"></div>
                     <div class="td e1111">E</div>
                     <div class="td e1112">add(i09)</div>
                     <div class="td e1113"></div>
                     <div class="td e1114">i02, i08, i06</div>
                  </div>
                  <div class="tr e1115">
                     <div class="td e1116">i10</div>
                     <div class="td e1117"></div>
                     <div class="td e1118">E</div>
                     <div class="td e1119">s(i10)</div>
                     <div class="td e1120"></div>
                     <div class="td e1121">i01, i08, i09, i07</div>
                  </div>
               </div>
               
               (Note that this is the first example so far of non-elemental individuals
               carrying assigned properties.) 
            </div>
            <div class="para e1122">Goodman observes that 
               <div class="quote e1123">In practice, we are usually concerned only with
                  disectiveness under some special or systematic limitations...
               </div> [
               <div class="xref e1124" linkend="Goodman1972"></div>, p.&nbsp;38]. This seems to be the case here, too: While the
               TEI elements &lt;hi&gt;, &lt;add&gt; and &lt;del&gt; and the HTML
               element &lt;i&gt; seem to apply all the way down to every atomic part of an
               individual, an element type like &lt;foreign&gt; hardly applies below word-level. 
            </div>
            <div class="para e1125">Furthermore, there seem to be exceptions even in the case of &lt;hi&gt;,
               &lt;add&gt; and &lt;del&gt;: In a transcription, a &lt;note&gt;
               (note) element is normally not intended to inherit the property in question. A more
               generally usable formula for disectiveness may therefore be this:
               
               <div class="programlisting e1126" xml:space="preserve">(x)(y)(z)((F(x) ∧ (y &lt; x) ∧ 
                  ¬((z &lt; x) ∧ (y &lt; z) ∧ (G(z) ∨ H(z) ∨ ...))) 
                  → F(y))
               </div>
               where G, H,... indicate exceptions. 
            </div>
            <div class="para e1127">Let us define an 
               <div class="emphasis e1128">anti-dissective</div> one-place predicate as follows: 
               <div class="popupBox e1129">
                  <div class="popupLabel" onmouseover="$('#d1e2224').show('1000');" onmouseout="$('#d1e2224').hide('1000');">[ footnote ]</div>
                  <div id="d1e2224" style="display: none;">
                     <div class="footnote">
                        <div class="para e1130">The term 
                           <div class="quote e1131">anti-dissective</div> (and its definition) is ours, not Goodman's.
                           The same goes for the terms 
                           <div class="quote e1132">anti-expansive</div> and
                           
                           <div class="quote e1133">anti-collective</div> in the following paragraphs.
                        </div>
                     </div>
                  </div>
               </div>
               
               <div class="programlisting e1134" xml:space="preserve">F is anti-dissective iff (x)(y)((F(x) ∧ (y ≪ x)) → ¬F(y))</div>
               
            </div>
            <div class="para e1135">The TEI element &lt;docDate&gt; (document date) and the TEI and HTML
               &lt;body&gt; may serve as examples of anti-dissective properties, — no
               part of a &lt;docDate&gt; or a &lt;body&gt; element is itself a
               &lt;body&gt; or a &lt;docDate&gt;. The HTML &lt;p&gt; (paragraph)
               element is also clearly anti-dissective.
            </div>
            <div class="para e1136"> The TEI &lt;p&gt; element presents a complication. It would seem to be
               anti-dissective, but unlike HTML, TEI allows &lt;p&gt;s nested within
               &lt;p&gt;s. So
               
               <div class="programlisting e1137" xml:space="preserve">(x)(y)((p(x) ∧ (y ≪ x)) → ¬p(y))</div>
               is true in HTML, but not in TEI. The TEI &lt;p&gt; element can therefore not be said
               to be either dissective or anti-dissective.
               <div class="popupBox e1138">
                  <div class="popupLabel" onmouseover="$('#d1e2247').show('1000');" onmouseout="$('#d1e2247').hide('1000');">[ footnote ]</div>
                  <div id="d1e2247" style="display: none;">
                     <div class="footnote">
                        <div class="para e1139">A reflection upon this fact may also make us change our judgement of the HTML
                           &lt;p&gt; element: Perhaps it is just a result of the content model of
                           &lt;p&gt; in HTML that it seems anti-dissective. Anyhow, since nested
                           &lt;p&gt;s simply do not occur in HTML, it does not matter much whether we
                           classify the property as non-dissective or anti-dissective.
                           
                           
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
         </div><a name="ExpansiveandantiexpansivepropertiesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1140">
            <div class="title e1141">Expansive and anti-expansive properties</div>
            <div class="para e1142">
               <div class="quote e1143">A one-place predicate is 
                  <div class="emphasis e1144">expansive</div> if it is satisfied by
                  everything that has a part satisfying it. 
               </div>[
               <div class="xref e1145" linkend="Goodman1972"></div>,
               p.&nbsp;38]. An expansive one-place predicate can be defined as follows:
               
               <div class="programlisting e1146" xml:space="preserve">F is expansive iff (x)(y)((F(x) ∧ (x &lt; y)) → F(y))</div>
               In more conventional XML terms, while dissective predicates propagate 
               <div class="quote e1147">down</div>
               the document tree, expansive predicates propagate 
               <div class="quote e1148">upwards</div> in the tree, from
               children to their parents. This might be thought to be unusual, and actually it is
               difficult
               to find examples of such properties in the TEI and HTML encoding schemes. Element
               types such
               as &lt;docDate&gt; and &lt;docAuthor&gt; may, as we shall see later, be said
               to ascribe properties to individuals of which they are a part, but that does not make
               these
               individuals themselves &lt;docDate&gt;s or &lt;docAuthor&gt;s. (Even so, it
               easy to think of expansive properties: — for example, the property of
               
               <div class="emphasis e1149">containing the word 
                  <div class="quote e1150">Hamlet</div>
               </div> would clearly be
               expansive.) 
            </div>
            <div class="para e1151">Let us define an anti-expansive property as follows:
               
               <div class="programlisting e1152" xml:space="preserve">F is anti-expansive iff (x)(y)((F(x) ∧ (x ≪ y)) → ¬F(y))</div>
               The TEI element &lt;foreign&gt; may be an example of a property which is
               anti-dissective, at least up to a certain level, and at least insofar as it seems
               reasonable
               to assume that if something is marked as foreign, then it is marked off from something
               which
               is 
               <div class="emphasis e1153">not</div> in a foreign language.
               
               
            </div>
         </div><a name="CollectiveandanticollectivepropertiesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1154">
            <div class="title e1155">Collective and anti-collective properties</div>
            <div class="para e1156">
               <div class="quote e1157">That a one-place predicate is 
                  <div class="emphasis e1158">collective</div> means that it is
                  satisfied by the sum of every two individuals (distinct or not) that satisfy it
                  severally
               </div> [
               <div class="xref e1159" linkend="Goodman1972"></div>, p.&nbsp;39]. A collective one-place
               predicate can be defined as follows:
               
               <div class="programlisting e1160" xml:space="preserve">F is collective iff (x)(y)((F(x) ∧ F(y)) → F(x + y))</div>
               Dissective elements like the TEI elements &lt;hi&gt;, &lt;add&gt;,
               &lt;del&gt; and &lt;foreign&gt; and the HTML element &lt;i&gt; seem
               also to be collective: any sum of strings in italics would seem itself to be in italics,
               etc. There probably are examples of expansive and non-dissective or anti-dissective
               properties in TEI or HTML, but so far we have not found any.
            </div>
            <div class="para e1161">Let us define an anti-collective property as follows:
               
               <div class="programlisting e1162" xml:space="preserve">F is anti-colletive iff (x)(y)((F(x) ∧ F(y) ∧ (x ʅ y)) → ¬F(x + y))</div>
               Both the TEI and the HTML &lt;div&gt; (division) element types seem to be
               anti-collective: no sum of &lt;div&gt;s is itself a &lt;div&gt;.
            </div>
         </div><a name="TheHTMLtitleelementANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1163">
            <div class="title e1164">The HTML title element</div>
            <div class="para e1165">So far, we have been concerned only with one-place predicates.
               <div class="popupBox e1166">
                  <div class="popupLabel" onmouseover="$('#d1e2315').show('1000');" onmouseout="$('#d1e2315').hide('1000');">[ footnote ]</div>
                  <div id="d1e2315" style="display: none;">
                     <div class="footnote">
                        <div class="para e1167">We have simply tried to find examples of the patterns Goodman terms
                           
                           <div class="quote e1168">dissective</div>, 
                           <div class="quote e1169">expansive</div> and 
                           <div class="quote e1170">collective</div>, and
                           added the corresponding patterns 
                           <div class="quote e1171">anti-dissective</div> etc. Goodman also
                           identifies patterns he terms 
                           <div class="quote e1172">nucleative</div>, 
                           <div class="quote e1173">pervasive</div>,
                           
                           <div class="quote e1174">cumulative</div> and 
                           <div class="quote e1175">agglomerative</div> [
                           <div class="xref e1176" linkend="Goodman1972"></div>, p.&nbsp;39–40]. We do not discuss these here,
                           as we have not found any interesting application of them for the present purposes.
                           In
                           particular, a nucleative property is a property such that
                           
                           <div class="programlisting e1177" xml:space="preserve">F is nucleative iff (F(x) ∧ F(y)) → F(x · y)</div>
                           Since XML has no elements which overlap without the one being a part of the other,
                           the
                           product of two element strings is always a part of one of them. Therefore, although
                           the
                           pattern does not have any interesting applications to XML — it may have for
                           markup systems such as xConcur, TexMecs, Goddag, LMNL and others which allow overlapping
                           elements.
                        </div>
                     </div>
                  </div>
               </div> Many TEI and HTML elements ascribe properties according to more complicated
               patterns which can more conveniently be accounted for by representing them as relations,
               or
               predicates with two or more places. 
            </div>
            <div class="para e1178"> We begin with a simple example of an element expressing a two-place predicate, the
               HTML
               title element. From: 
               <div class="programlisting e1179" xml:space="preserve">&lt;!DOCTYPE html SYSTEM "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
                  &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
                  &lt;head&gt;
                  &lt;title&gt;Simple HTML&lt;/title&gt;
                  &lt;/head&gt;
                  &lt;body&gt;
                  &lt;p&gt;First para&lt;/p&gt;
                  &lt;p&gt;Second para&lt;/p&gt;
                  &lt;/body&gt;
                  &lt;/html&gt;
               </div> we get: 
               
               <div class="table e1180">
                  <div class="tr e1181">
                     <div class="th e1182">Id</div>
                     <div class="th e1183">Label</div>
                     <div class="th e1184">Kind</div>
                     <div class="th e1185">Statements</div>
                     <div class="th e1186">Next</div>
                     <div class="th e1187">Parts</div>
                  </div>
                  <div class="tr e1188">
                     <div class="td e1189">i01</div>
                     <div class="td e1190">Simple HTML</div>
                     <div class="td e1191">M E</div>
                     <div class="td e1192">head(i01), title(i01)</div>
                     <div class="td e1193">i02</div>
                     <div class="td e1194"></div>
                  </div>
                  <div class="tr e1195">
                     <div class="td e1196">i02</div>
                     <div class="td e1197">First para</div>
                     <div class="td e1198">M E</div>
                     <div class="td e1199">p(i02)</div>
                     <div class="td e1200">i03</div>
                     <div class="td e1201"></div>
                  </div>
                  <div class="tr e1202">
                     <div class="td e1203">i03</div>
                     <div class="td e1204">Second para</div>
                     <div class="td e1205">ME </div>
                     <div class="td e1206">p(i03)</div>
                     <div class="td e1207"></div>
                     <div class="td e1208"></div>
                  </div>
                  <div class="tr e1209">
                     <div class="td e1210">i04</div>
                     <div class="td e1211"></div>
                     <div class="td e1212">E</div>
                     <div class="td e1213">body(i04)</div>
                     <div class="td e1214"></div>
                     <div class="td e1215">i02, i03</div>
                  </div>
                  <div class="tr e1216">
                     <div class="td e1217">i05</div>
                     <div class="td e1218"></div>
                     <div class="td e1219">E</div>
                     <div class="td e1220">html(i05)</div>
                     <div class="td e1221"></div>
                     <div class="td e1222">i01, i04</div>
                  </div>
               </div>
               
               
            </div>
            <div class="para e1223"> We state the propagation rule that:
               
               <div class="programlisting e1224" xml:space="preserve">(x)(y)((title(x) ∧ (x &lt; y) ∧ html(y)) → hasTitle(y,x))</div>
               and get for the last line of the previous table: 
               
               <div class="table e1225">
                  <div class="tr e1226">
                     <div class="th e1227">Id</div>
                     <div class="th e1228">Label</div>
                     <div class="th e1229">Kind</div>
                     <div class="th e1230">Statements</div>
                     <div class="th e1231">Next</div>
                     <div class="th e1232">Parts</div>
                  </div>
                  <div class="tr e1233">
                     <div class="td e1234">i05</div>
                     <div class="td e1235"></div>
                     <div class="td e1236">E</div>
                     <div class="td e1237">html(i05), hasTitle(i05,i01)</div>
                     <div class="td e1238"></div>
                     <div class="td e1239">i01, i04</div>
                  </div>
               </div>
               
               
            </div>
            <div class="para e1240">The fact that the propagation rule can be made so simple in this case is partly due
               to
               the fact that we are assuming that the document is valid, and that the relative structural
               positions of the elements are constant. For example, there is no need to state that
               the
               title element has to be the child of a head element which in turn is directly succeeded
               by a
               body element etc. 
            </div>
         </div><a name="TheTEIspspeakerandstageelementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1241">
            <div class="title e1242">The TEI sp, speaker and stage elements</div>
            <div class="para e1243">While it is quite legitimate to assume document validity when stating propagation
               rules,
               these rules tend to become more complex when more elements are involved, and/or the
               rules
               for the structural positions of the elements concerned are more complex. 
            </div>
            <div class="para e1244">The relation between the TEI elements &lt;sp&gt; (speech),
               &lt;speaker&gt; and &lt;stage&gt; (stage direction) is that a
               &lt;sp&gt; may contain a &lt;speaker&gt;, and if it does, the
               &lt;speaker&gt; element contains the name of the speaker of the rest of the
               &lt;sp&gt; element, except for any &lt;stage&gt;s (stage directions) it
               might contain. From: 
            </div>
            <div class="para e1245">
               
               <div class="programlisting e1246" xml:space="preserve">&lt;sp&gt;
                  &lt;speaker&gt;Peer&lt;/speaker&gt; 
                  Why 
                  &lt;stage&gt;(hesitating)&lt;/stage&gt; 
                  swear?
                  &lt;/sp&gt;
                  
               </div> we get: 
               
               <div class="table e1247">
                  <div class="tr e1248">
                     <div class="th e1249">Id</div>
                     <div class="th e1250">Label</div>
                     <div class="th e1251">Kind</div>
                     <div class="th e1252">Statements</div>
                     <div class="th e1253">Next</div>
                     <div class="th e1254">Parts</div>
                  </div>
                  <div class="tr e1255">
                     <div class="td e1256">i01</div>
                     <div class="td e1257">Peer</div>
                     <div class="td e1258">M E</div>
                     <div class="td e1259">speaker(i01)</div>
                     <div class="td e1260">i02</div>
                     <div class="td e1261"></div>
                  </div>
                  <div class="tr e1262">
                     <div class="td e1263">i02</div>
                     <div class="td e1264">Why</div>
                     <div class="td e1265">M</div>
                     <div class="td e1266"></div>
                     <div class="td e1267">i03</div>
                     <div class="td e1268"></div>
                  </div>
                  <div class="tr e1269">
                     <div class="td e1270">i03</div>
                     <div class="td e1271">(hesitating)</div>
                     <div class="td e1272">M E</div>
                     <div class="td e1273">stage(i03)</div>
                     <div class="td e1274">i04</div>
                     <div class="td e1275"></div>
                  </div>
                  <div class="tr e1276">
                     <div class="td e1277">i04</div>
                     <div class="td e1278">swear?</div>
                     <div class="td e1279">M</div>
                     <div class="td e1280"></div>
                     <div class="td e1281"></div>
                     <div class="td e1282"></div>
                  </div>
                  <div class="tr e1283">
                     <div class="td e1284">i05</div>
                     <div class="td e1285"></div>
                     <div class="td e1286">E</div>
                     <div class="td e1287">sp(i05)</div>
                     <div class="td e1288"></div>
                     <div class="td e1289">i01, i02, i03, i04</div>
                  </div>
               </div>
               
               We state the following propagation rule:
               
               <div class="programlisting e1290" xml:space="preserve">(x)(y)((speaker(x) ∧ (x &lt; y) ∧ sp(y)) → 
                  (z)(((z &lt; y) ∧ ¬(speaker(z) ∨ stage(z))) → saidBy(z,x)))
               </div>
               and get:
               
               <div class="table e1291">
                  <div class="tr e1292">
                     <div class="th e1293">Id</div>
                     <div class="th e1294">Label</div>
                     <div class="th e1295">Kind</div>
                     <div class="th e1296">Statements</div>
                     <div class="th e1297">Next</div>
                     <div class="th e1298">Parts</div>
                  </div>
                  <div class="tr e1299">
                     <div class="td e1300">i01</div>
                     <div class="td e1301">Peer</div>
                     <div class="td e1302">M E</div>
                     <div class="td e1303">speaker(i01)</div>
                     <div class="td e1304">i02</div>
                     <div class="td e1305"></div>
                  </div>
                  <div class="tr e1306">
                     <div class="td e1307">i02</div>
                     <div class="td e1308">Why</div>
                     <div class="td e1309">M</div>
                     <div class="td e1310">saidBy(i02,i01)</div>
                     <div class="td e1311">i03</div>
                     <div class="td e1312"></div>
                  </div>
                  <div class="tr e1313">
                     <div class="td e1314">i03</div>
                     <div class="td e1315">(hesitating)</div>
                     <div class="td e1316">M E</div>
                     <div class="td e1317">stage(i03)</div>
                     <div class="td e1318">i04</div>
                     <div class="td e1319"></div>
                  </div>
                  <div class="tr e1320">
                     <div class="td e1321">i04</div>
                     <div class="td e1322">swear?</div>
                     <div class="td e1323">M</div>
                     <div class="td e1324">saidBy(i04,i01)</div>
                     <div class="td e1325"></div>
                     <div class="td e1326"></div>
                  </div>
                  <div class="tr e1327">
                     <div class="td e1328">i05</div>
                     <div class="td e1329"></div>
                     <div class="td e1330">E</div>
                     <div class="td e1331">sp(i05)</div>
                     <div class="td e1332"></div>
                     <div class="td e1333">i01, i02, i03, i04</div>
                  </div>
               </div>
               
               
            </div>
         </div><a name="TheTEIdocTitledocDateanddocAuthorelementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1334">
            <div class="title e1335">The TEI docTitle, docDate and docAuthor elements</div>
            <div class="para e1336"> The TEI &lt;docTitle&gt; (document title) element may occur directly within
               &lt;titlePage&gt; or &lt;front&gt; (front matter); &lt;titlePage&gt;
               may occur directly within &lt;front&gt; or &lt;back&gt; (back matter), and
               &lt;front&gt; and &lt;back&gt; may occur directly within
               &lt;text&gt;. &lt;docTitle&gt; behaves very much like the HTML
               &lt;title&gt; element:
               
               <div class="programlisting e1337" xml:space="preserve">(x)(y)((docTitle(x) ∧ (x &lt; y) ∧ text(y)) → hasTitle(y,x))</div>
               &lt;docTitle&gt; assigns the property of 
               <div class="emphasis e1338">being</div> a document title
               to its own content, and the property of 
               <div class="emphasis e1339">having</div> that title to the
               individual which carries the property of being a text, and of which it is itself a
               part.
               Thus, while no other parts of the elemental text individual have any of these properties,
               all its parts have the property of being the 
               <div class="emphasis e1340">part</div> of an individual
               which carries the title in question. 
            </div>
            <div class="para e1341">The &lt;docDate&gt; (document date) element, in turn, behaves very much like the
               &lt;docTitle&gt; element. Although it may occur in a larger variety of positions, it
               assigns the property of 
               <div class="emphasis e1342">being</div> (or identifying) the date of the document
               to its own content, and the property of 
               <div class="emphasis e1343">having</div> that date to the
               individual which carries the property of being a text, and of which it is itself a
               part. 
            </div>
            <div class="para e1344">We may assume, however, that the document date carries over to most or all the parts
               of
               the text, i.e., that all the parts of the element have the property of having that
               date,
               too.
               
               If we are dealing with a transcription of an authorial document which according to
               the
               &lt;docDate&gt; element dates from a particular year, it may be the case that we
               also know that all parts of the document marked by &lt;add&gt; contain corrections
               in that document made by another person several years later, and that all
               &lt;note&gt;s are editorial notes supplied even later than that, by the creator of
               the electronic version. A propagation rule to this effect may be expressed for example
               as
               follows:
               
               <div class="programlisting e1345" xml:space="preserve">(x)(y)(z)(w)((docDate(x) ∧ (x &lt; y) ∧ text(y)) →
                  (((z &lt; y) ∧ ¬((z &lt; w) ∧ (add(w) ∨ note(w)))) →
                  (hasDate(y,x) ∧ hasDate(z,x))))
               </div>
               Note, however, that in some situations the TEI &lt;docDate&gt; element gives the date of
               the 
               first edition of the text, while the text actually transcribed by the document comes
               from a later edition. In such situations 
               the semantics of the element is rather different, and the property of having the date
               given may possibly not propagate to elements below &lt;text&gt; level at all.
               
            </div>
            <div class="para e1346">The &lt;docAuthor&gt; (document author) element, again, behaves much like the
               &lt;docDate&gt; element. It assigns the property of 
               <div class="emphasis e1347">being</div> the
               name of the author of the document to its own content, and the property of
               
               <div class="emphasis e1348">having</div> the author of that name to the text of which it is a part. 
            </div>
            <div class="para e1349">In the example just discussed, we may again assume that the property, in this case
               the
               property of having the author in question, is not carried over to later additions
               and notes.
               Other element types, such as &lt;q&gt; (quote) &lt;cit&gt; (citation), would
               for more or less obvious reasons also have to be considered for exclusion. However,
               there is
               a further complication: If a person is considered the author of a document, he is
               normally
               also considered the author of parts of that document, such as its chapters, sections
               and
               paragraphs. Perhaps authorship may also be attributed to sentences or phrases, but
               certainly
               not to individual words or letters. Again we are faced with a property which propagates
               down
               to a certain level, but where it is unclear exactly where that level ends. And as
               is so
               often the case with markup, it does not help us much to become clear about the level
               at
               which the propagation ends, be it subparagraphs, sentences or phrases, if it turns
               out that
               the elements at that level have not been marked up. 
            </div>
         </div>
      </div><a name="ProblemsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1350">
         <div class="title e1351">Problems</div>
         <div class="para e1352"> We have mentioned that there are at least two serious problems with our application
            of
            the Calculus. One problem, which has already been identified, relates to the representation
            of
            coextensive elements. The other problem, which relates to the representation of empty
            elements, has only been mentioned in passing. We believe this is the least serious
            of the two,
            and we will therefore discuss that first.
         </div><a name="EmptyelementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1353">
            <div class="title e1354">Empty elements</div>
            <div class="para e1355">For the purposes of this discussion, we may conveniently distinguish between milestone
               elements and other empty elements
            </div><a name="MilestoneelementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1356">
               <div class="title e1357">Milestone elements</div>
               <div class="para e1358">Milestones are empty elements which ascribe properties to parts of a document, but
                  which for various reasons are represented by empty elements. The reason why some textual
                  phenomena are represented by milestones rather than ordinary elements is often a need
                  to
                  overcome the XML constraint that element structure must be hierarchical.
               </div>
               <div class="para e1359">Typically, a milestone may be seen as assigning a property to the following parts
                  of
                  the document, up to the next milestone element of the same type, up to the occurrence
                  of
                  an element of some specific other type, or to the end of the document. We think we
                  have
                  already demonstrated that our application of the Calculus to XML documents can handle
                  such
                  property assignment.
               </div>
               <div class="para e1360"> We believe that many of the other mechanisms proposed to handle so-called overlapping
                  hierarchies in XML (for example, 
                  <div class="quote e1361">Trojan Horse</div> milestones, [
                  <div class="xref e1362" linkend="DeRose"></div>] and fragmented or virtual elements [
                  <div class="xref e1363" linkend="teip4"></div>]) can be
                  handled in similar ways, and therefore do not constitute a serious problem for our
                  application of the Calculus. 
                  
               </div>
            </div><a name="OtheremptyelementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1364">
               <div class="title e1365">Other empty elements</div>
               <div class="para e1366">Empty elements which are not milestones typically stand for and/or ascribe properties
                  to some part of the document which cannot straightforwardly be represented as a character
                  or string of characters. These empty elements are more difficult to deal with, because
                  according to our application of the Calculus something which cannot be said to consist
                  of
                  character atoms simply cannot be an individual. And if it is no individual there seems
                  to
                  be nothing to which properties can be ascribed; only individuals can have properties.
                  
               </div>
               <div class="para e1367">The TEI elements &lt;ptr&gt; (pointer), &lt;anchor&gt; (anchor point),
                  &lt;index&gt; (index entry) and &lt;divGen&gt; (automatically generated
                  text division) are some examples. Either they indicate a point in the document, i.e.,
                  they
                  have no 
                  <div class="quote e1368">extension</div> in the terms of our application of the Calculus and would
                  seem to have to be located in a position between two atoms. Or they do not indicate
                  any
                  point or extension in the document, but rather an instruction to generate strings
                  with
                  certain properties at the position they are located. In some cases, the problems outlined
                  here can be solved by replacing the empty element in question with a character string,
                  taken for example from an attribute value of the element in question. In cases where
                  the
                  element occupies or points to a location between characters, we might find a practical
                  workaround by letting it apply or point instead to the atom immediately before or
                  after
                  the relevant location in our model of the document. 
               </div>
               <div class="para e1369">A slightly different kind of problem is presented by the TEI &lt;graphic&gt;
                  (inline graphic, illustration, or figure) and HTML &lt;graphic&gt; elements. The
                  basic meaning of these elements is easy enough to catch: The occurrence of the element
                  indicates that an illustration or a figure occurs at a specific location in the document.
                  Therefore, a more appropriate solution to this as well as to the previously mentioned
                  examples is probably to lift the requirement that all atoms should have a character
                  type
                  as a property. A graphics element, for example, might simply be represented in our
                  model
                  by a 
                  <div class="quote e1370">graphics</div> atom. 
               </div>
               <div class="para e1371">More generally, this would be a model in which a document consists not of a sequence
                  of character atoms, but of a sequence of some more generic kind of atoms. We might,
                  for
                  example, agree to call them atomic 
                  <div class="quote e1372">content objects</div>, and concede that such
                  atoms may or may not have a character property, an 
                  <div class="quote e1373">image</div> property etc.
                  Although we have not investigated the matter, we believe that such a modification
                  would
                  not drastically change the application of the Calculus described above.
               </div>
            </div>
         </div><a name="CoextensiveelementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1374">
            <div class="title e1375">Coextensive elements</div>
            <div class="para e1376">We have already exemplified and briefly discussed the problem with coextensive elements:
               If two or more nested elements have exactly the same content, i.e., share exactly
               the same
               leaf nodes in the XML tree, they will be represented in our application of the Calculus
               as
               one individual sharing all the properties ascribed by the nested XML elements. What
               kind of
               problem this is, and whether and how it can be solved, depends on the wider requirements
               and
               aims for our application of the Calculus to markup. Under certain requirements or
               perspectives, it may cease to be a problem.
            </div>
            <div class="para e1377">If our aim is to establish a representation from which the serialized form of an XML
               document can be regenerated, we obviously have a problem: It is by no means obvious
               if or
               how this could be done. Likewise, if our aim is to establish a representation from
               which the
               XML DOM, the XDM or the XML Infoset representation can be generated, or which is isomorphic
               to and/or contains (all) the information given in any of those, then it is perhaps
               even more
               obvious that we have a problem.
            </div>
            <div class="para e1378">We have two responses to this: On the one hand, the value of the approach presented
               here
               does not depend on such capabilities. The value of the approach to property propagation,
               for
               example, may be simply as an ancillary representation of some of the features of marked-up
               documents, a representation which is not intended to capture 
               <div class="quote e1379">all</div> the
               information present in XML documents but rather to assist in the processing of such
               documents. Therefore, the problem discussed here is a problem only to the extent that
               it
               impedes our work to realize this more modest aim. So far, we have not found any indication
               that it does.
            </div>
            <div class="para e1380">On the other hand, we might want to use this representation in order to modify the
               XML
               documents so represented, and in that case we would clearly need to reserialize them
               to XML
               or generate an XML-conformant document model of them. For such purposes, we believe
               that
               information about the XML nesting order of coextensive elements could easily be stored
               in
               some ancillary data structure which would make reserialization etc possible. It should
               also
               be mentioned that, although again we have not investigated the matter, it is not
               unreasonable to assume that a representation of documents in the way proposed for
               our
               application of the Calculus might be a convenient step in the process of converting
               XML
               documents to certain other markup systems, such as TexMecs or LMNL.
            </div>
            <div class="para e1381">Finally, if our aim is to offer an alternative representation based on a different
               understanding of the structure and semantics of marked-up documents, then we have
               a problem
               only if it can convincingly be argued that our representation is in some respect inferior
               to
               these standard ways of modelling documents. We think such a discussion is premature
               unless
               and until the application sketched here is developed further, but at least two lines
               of
               argument seem to present themselves as possible responses to the challenge. 
            </div>
            <div class="para e1382">First, one might argue that the problem is with XML, and not with the approach discussed
               here. For example, if a TEI &lt;p&gt; (paragraph) and &lt;s&gt; (s-unit,
               sentence) element are coextensive, XML forces us to decide whether we are dealing
               with a
               paragraph containing a sentence, or a sentence containing a paragraph, and leaves
               us no
               other option. But we might just as well (or rather) want to say that we are dealing
               with one
               object which has two properties: that of being a paragraph and that of being a sentence.
               The
               part-whole relationship which seems forced upon us by XML is an artifact of the
               serialization, a result of one of the limitations of embedded markup.[
               <div class="xref e1383" linkend="Raymond"></div>] 
            </div>
            <div class="para e1384">Second, we might concede that the representation of coextensive elements as conceived
               in
               the present approach is a problem, and try to solve it by amending our mereological
               system.
               Part of the solution may be found in allowing more generous set of atoms, as discussed
               above
               in connection with the problem of empty elements. Another part of the solution might
               be to
               replace the Calculus of Individuals with some other formal mereological system. For
               example,
               there seems to be mereological systems which allow for the idea that one individual
               may be
               part of another even in cases where we cannot identify any part which they do not
               share. For
               options along these lines, see the discussion of supplementation and closure principles
               in
               
               <div class="xref e1385" linkend="CasatiVarzi1999"></div>&nbsp;p.&nbsp;38&nbsp;f.f. 
            </div>
         </div>
      </div><a name="ConclusionandFutureWorkANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e1386">
         <div class="title e1387">Conclusion and Future Work</div>
         <div class="para e1388"> We have considered some possible applications of the Calculus of Individuals to XML,
            whereof the so-called character-atom approach has seemed the most promising so far.
            Strings
            composed of characters defined as atomic individuals can be identified and referenced
            by
            denoting expressions. The part-whole relationships and ordering relations between
            parts of the
            document as well as the properties ascribed by generic identifiers can be described.
            Statements about the individuals of documents and their properties can be made, and
            inferences
            can be drawn from these statements. 
         </div>
         <div class="para e1389"> We have shown, by means of examples from the TEI and HTML encoding schemes, how this
            application of the Calculus can be used for the formulation of rules describing the
            propagation of properties among the parts of a document. 
         </div>
         <div class="para e1390"> We have identified problems or shortcomings concerning the representation of empty
            elements and coextensive elements, and suggested that these problems may be overcome
            partly by
            allowing a more generous set of atoms, and partly by replacing the Calculus of Individuals
            with some other formal mereological system. 
         </div>
         <div class="para e1391"> In order to assess whether the application of formal mereology to markup semantics
            is
            worth while, we believe that continued work is required along several lines: The application
            to XML should be extended beyond the limitations of the approach presented here to
            include XML
            the full range of XML mechanisms, such as attributes, entities, declarations, comments,
            processing instructions, and marked sections. While the approach presented here is
            limited to
            the consideration of XML documents in serialized form, i.e. as character streams,
            attempts
            should be made at applying formal mereology to XML documents considered as graphs
            of xPath
            nodes, Infoset items, and the like. 
         </div>
         <div class="para e1392"> Furthermore, and as already mentioned, mereological systems beyond the Calculus of
            Individuals should be considered in order to overcome some of the problems encountered
            in the
            approach presented her. Last, but not least: The application of formal mereological
            systems
            should be extended to other markup systems such as SGML, TexMecs, LMNL, Goddag and
            others.
            
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e1393">
         <div class="title e1394">References</div>
         <div class="bibliomixed e1395" xml:id="CasatiVarzi1999" xreflabel="Casati and Varzi 1999">Casati, Roberto and
            Varzi, Achille C. 
            <div class="emphasis e1396">Parts and Places. The Structures of Spatial
               Representation
            </div>. MIT Press, 1999. 
         </div>
         <div class="bibliomixed e1397" xml:id="DeRose" xreflabel="DeRose 2004">DeRose, Steven J. 2004. 
            <div class="quote e1398">Markup
               overlap: A review and a horse.
            </div> In 
            <div class="emphasis e1399">Proceedings of Extreme Markup Languages
               2004
            </div>.
         </div>
         <div class="bibliomixed e1400" xml:id="Fitzgerald" xreflabel="Fitzgerald 2003">Fitzgerald, Henry.
            
            <div class="quote e1401">Nominalist things</div>. 
            <div class="emphasis e1402">Analysis</div> 63.2, OUP, April 2003, pp
            170-71. doi: 
            <div class="biblioid doi e1403">10.1093/analys/63.2.170, 10.1111/1467-8284.00030</div>.
         </div>
         <div class="bibliomixed e1404" xml:id="Goodman1972" xreflabel="Goodman 1972">Goodman, Nelson. 
            <div class="emphasis e1405">Problems
               and Projects
            </div>. Hackett, Indianapolis 1972. 
         </div>
         <div class="bibliomixed e1406" xml:id="Goodman1977" xreflabel="Goodman 1977">Goodman, Nelson. 
            <div class="emphasis e1407">The
               structure of appearance
            </div>. Third edition. Boston: Reidel, 1977
         </div>
         <div class="bibliomixed e1408" xml:id="LeonardandGoodman1940" xreflabel="Leonard and Goodman 1940">Leonard, Henry
            S. and Goodman, Nelson. 
            <div class="quote e1409">The Calculus of Individuals and Its Uses</div>, 
            <div class="emphasis e1410">The
               Journal of Symbolic Logic
            </div> Vol 5, No. 2, pp 45-55, June 1940. doi: 
            <div class="biblioid doi e1411">10.2307/2266169</div>.
         </div>
         <div class="bibliomixed e1412" xml:id="Libardi1994" xreflabel="Libardi 1994">Libardi, Massimo. 
            <div class="quote e1413">Applications
               and limits of mereology. From the theory of parts to the theory of wholes
            </div>,
            
            <div class="emphasis e1414">Axiomathes</div>, n.1, aprile 1994, pp. 13-54. 
         </div>
         <div class="bibliomixed e1415" xml:id="balisage2009" xreflabel="Marcoux et al. 2009"> Marcoux, Yves, Michael
            Sperberg-McQueen, and Claus Huitfeldt. 
            <div class="quote e1416">Formal and informal meaning from documents
               through skeleton sentences: Complementing formal tag-set descriptions with intertextual
               semantics and vice-versa.
            </div> Presented at Balisage: The Markup Conference 2009,
            Montréal, Canada, August 11 - 14, 2009. In Proceedings of Balisage: The Markup Conference
            2009. 
            <div class="emphasis e1417">Balisage Series on Markup Technologies</div>, vol. 3 (2009).
            doi: 
            <div class="biblioid doi e1418">10.4242/BalisageVol3.Sperberg-McQueen01</div>.
         </div>
         <div class="bibliomixed e1419" xml:id="Pitkanen" xreflabel="Pitkänen ">Risto Pitkänen.
            
            <div class="quote e1420">Content Identity</div>. 
            <div class="emphasis e1421">Mind</div>.1976;
            LXXXV:&nbsp;262–268. doi: 
            <div class="biblioid doi e1422">10.1093/mind/LXXXV.338.262</div>.
         </div>
         <div class="bibliomixed e1423" xml:id="bielefeld" xreflabel="Sperberg-McQueen and Huitfeldt 2008">Sperberg-McQueen, C. M., and Claus Huitfeldt. 
            <div class="quote e1424">Containment and dominance in Goddag
               structures
            </div>. Talk given at Conference on Text Technology, Bielefeld, March 2008.
            Forthcoming. 
            
         </div>
         <div class="bibliomixed e1425" xml:id="Raymond" xreflabel="Raymond et al. 1996">Raymond, Darrell, Frank Wm. Tompa
            and Derick Wood. 
            <div class="quote e1426">From Data Representation to Data Model: Meta-Semantic Issues in the
               Evolution of SGML
            </div>, 
            <div class="emphasis e1427">Computer Standards and Interfaces</div> 18 p.
            25-36 (1996). doi: 
            <div class="biblioid doi e1428">10.1016/0920-5489(96)00033-5</div>.
         </div>
         <div class="bibliomixed e1429" xml:id="dh2009" xreflabel="Sperberg-McQueen et al. 2009a">Sperberg-McQueen, C. M.,
            Claus Huitfeldt and Yves Marcoux. 
            <div class="quote e1430">What is transcription? (Part 2)</div>. Talk given
            at 
            <div class="emphasis e1431">Digital Humanities 2009</div>, Maryland, June 2009. Forthcoming. 
         </div>
         <div class="bibliomixed e1432" xml:id="teip4" xreflabel="TEI P4">The TEI Consortium / The Association for
            Computers and the Humanities (ACH); The Association for Computational Linguistics
            (ACL); The
            Association for Literary and Linguistic Computing (ALLC). 
            <div class="emphasis e1433" role="ital">TEI P4:
               Guidelines for Electronic Text Encoding and Interchange XML-compatible edition
            </div>.
            Ed. C. M. Sperberg-McQueen and Lou Burnard; XML conversion by Syd Bauman, Lou Burnard,
            Steven
            DeRose, and Sebastian Rahtz. Oxford, Providence, Charlottesville, Bergen: TEI Consortium,
            December 2001. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1434" xlink:actuate="onRequest" xlink:href="http://www.tei-c.org/release/doc/tei-p4-doc/html/" xlink:show="new" xlink:type="simple">http://www.tei-c.org/release/doc/tei-p4-doc/html/</div>
            
         </div>
         <div class="bibliomixed e1435" xml:id="Varzi" xreflabel="Varzi 2003">Varzi, Achille. 
            <div class="quote e1436">Mereology</div>.
            
            <div class="emphasis e1437">Stanford Encyclopedia of Philosophy</div>.
            http://plato.stanford.edu/entries/mereology/ First published Tue May 13, 2003; substantive
            revision Thu May 14, 2009. 
         </div>
      </div>
   </div>
</div>