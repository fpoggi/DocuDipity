<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.2"><title class="po-block e1 e1"><textual class="po-textual">SGF - An integrated model for multiple annotations and its application in a linguistic
    domain</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2008</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 12 - 15, 2008</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">Seamless integration of various, often heterogeneous linguistic resources (in terms of
        their output formats) and merging of the respective annotation layers are crucial tasks for
        linguistic research. After a decade of concentration on the development of formats in order
        to structure single annotations for specific linguistic issues, a variety of specifications
        to store multiple annotations over the same primary data has been developed in the last
        years. Among these approaches three main architectures can be identified: Prolog-based
        architectures, XML-related approaches and graph-based models that follow the XML syntax.
        However, these architectures are not free of disadvantages when used in real world
        applications. In the </textual><emphasis class="po-inline e8 e8" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual"> project the XML-based </textual><emphasis class="po-inline e9 e9" role="ital"><textual class="po-textual">Sekimo Generic Format</textual></emphasis><textual class="po-textual"> (SGF) was developed for the purpose of
        storing multiple annotations on the same primary data and examine relationships between
        elements of different annotation layers without prepended conversion. SGF is based on the
        design principles of graph-based approaches but makes use of the XML-inherent tree
        structures whenever possible to reduce processing costs. Analysing data stored in SGF can be
        done via standard XML-related specifications such as XPath, XSLT or XQuery and is done in
        our project in the linguistic application domain of anaphora resolution.</textual></para></abstract><author class="po-record e10 e10"><personname class="po-record e11 e11"><firstname class="po-field e12 e12"><textual class="po-textual">Maik</textual></firstname><surname class="po-field e13 e13"><textual class="po-textual">Stührenberg</textual></surname></personname><personblurb class="po-container e14 e14"><para class="po-block e15 e15"><textual class="po-textual">Maik Stührenberg studied Computational Linguistics at Bielefeld University. He worked
          four years as research assistant at Giessen University in different text-technological
          projects (both funded by the German government and the German Research Foundation). He now
          works as a research assistant at Bielefeld University together with Andreas Witt, Dieter
          Metzing and Daniela Goecke in the </textual><emphasis class="po-inline e16 e16" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual"> project of the
          Research Group </textual><emphasis class="po-inline e17 e17" role="ital"><textual class="po-textual">Text-technological modelling of
          information</textual></emphasis><textual class="po-textual"> funded by the German Research Foundation. His main research
          interests include specifications for structuring multiple annotated data and query
          languages and query processing. </textual></para></personblurb></author><author class="po-record e18 e18"><personname class="po-record e19 e19"><firstname class="po-field e20 e20"><textual class="po-textual">Daniela</textual></firstname><surname class="po-field e21 e21"><textual class="po-textual">Goecke</textual></surname></personname><personblurb class="po-container e22 e22"><para class="po-block e23 e23"><textual class="po-textual">Daniela Goecke studied Computational Linguistics at Bielefeld University. She finished
          her master thesis in cooperation with IBM Scientific Center Heidelberg and worked four
          years at Philips Speech Processing Aachen. She now works as a research assistant at
          Bielefeld University together with Andreas Witt, Dieter Metzing and Maik Stührenberg in
          the </textual><emphasis class="po-inline e24 e24" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual"> project of the Research Group 437 </textual><emphasis class="po-inline e25 e25" role="ital"><textual class="po-textual">Text-technological modelling of information</textual></emphasis><textual class="po-textual"> funded by the German
          Research Foundation. Her main research topics are the unification of text-technological
          resources and anaphora resolution. </textual></para></personblurb></author><legalnotice class="po-container e26 e26"><para class="po-block e27 e27"><textual class="po-textual">Copyright © 2008 by the authors.  Used with
permission.</textual></para></legalnotice><keywordset class="po-table e28 e28" role="author"><keyword class="po-field e29 e29"><textual class="po-textual">Concurrent Markup</textual></keyword></keywordset></info><note class="po-container e30 e30"><para class="po-block e31 e31"><textual class="po-textual"> The work presented in this paper is part of the project A2 (</textual><emphasis class="po-inline e32 e32" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual">) of the Research Group 437 </textual><emphasis class="po-inline e33 e33" role="ital"><textual class="po-textual">Text-technological
        modelling of information</textual></emphasis><textual class="po-textual"> funded by the German Research Foundation.</textual><footnote class="po-popup e34 e34"><para class="po-block e35 e35"><textual class="po-textual">More information about the project can be obtained at </textual><link class="po-inline e36 e36" xlink:actuate="onRequest" xlink:href="http://www.text-technology.de/Sekimo" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.text-technology.de/Sekimo</textual></link><textual class="po-textual">. </textual></para></footnote></para></note><section class="po-hcontainer e37 e37" xml:id="sec.introduction"><title class="po-block e38 e38"><textual class="po-textual">Introduction</textual></title><para class="po-block e39 e39"><textual class="po-textual">There is a large amount of machine-readable structured linguistic documents (often XML
      annotated) available to the public as well as several NLP tools which allow for the analysis
      of linguistic data. Besides corpora annotated for several linguistic phenomena, external
      knowledge bases like lexical nets (</textual><emphasis class="po-inline e40 e40" role="ital"><textual class="po-textual">WordNet</textual></emphasis><textual class="po-textual">, cf. </textual><xref class="po-milestone e41 e41" linkend="Fellbaum1998"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">
      </textual><emphasis class="po-inline e42 e42" role="ital"><textual class="po-textual">GermaNet</textual></emphasis><textual class="po-textual">, cf. </textual><xref class="po-milestone e43 e43" linkend="Hamp1997"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) are an important
      source for linguistic studies. However, these resources are often heterogeneous in respect to
      both, the underlying schema of the output format and the functionality provided. Furthermore,
      their use for (semi-) automatic annotation can lead to the problem as to how to represent
      multi-dimensional, possibly overlapping markup - which often occurs when different linguistic
      annotation levels are unified (e.g. syllables vs. morphemes). Different methods for the
      annotation of multiple information levels have been developed: separation of multiple
      annotation levels in separate files, fragmentation or milestones (cf. </textual><xref class="po-milestone e44 e44" linkend="Sperberg-McQueen2002a"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). In the </textual><emphasis class="po-inline e45 e45" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual"> project
      different approaches for the integration of heterogeneous linguistic resources were developed
      and applied in the domain of anaphora resolution. For the task of anaphora resolution
      different types of information are necessary: POS, syntactic knowledge, world knowledge (e.g.
      in terms of an ontology) and the like. Therefore various linguistic resources such as parsers,
      dictionaries, wordnets or ontologies have to be combined. However, in most cases the output
      format of a linguistic resource A is not suitable as input format for a linguistic resource B,
      which means that a cascaded application of several resources is not possible. After
      experiences with a Prolog fact base approach (cf. </textual><xref class="po-milestone e46 e46" linkend="sec.prolog"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) we have
      developed an XML-based abstract representation format similar to the standoff annotation model
      described by </textual><xref class="po-milestone e47 e47" linkend="Thompson1997"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> which encodes the same textual data in separate
      files according to different document grammars addressing different relevant phenomena.</textual></para><para class="po-block e48 e48"><textual class="po-textual">Information structuring can always be split up into a conceptual process and a technical
      realization. We follow the discussion in </textual><xref class="po-milestone e49 e49" linkend="Buchkapitel"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and use the term
        </textual><emphasis class="po-inline e50 e50" role="ital"><textual class="po-textual">level</textual></emphasis><textual class="po-textual"> to refer to the information modelling concept (e.g.,
      morphological structure, phrase structure) and the term </textual><emphasis class="po-inline e51 e51" role="ital"><textual class="po-textual">layer</textual></emphasis><textual class="po-textual">
      for the technical realization, i.e. the XML markup. Levels and layers can be in different
      relations (1:1 relation, 1:n, m:1 or n:m) which can lead to overlapping markup in the layer
      structure. The annotation format described in </textual><xref class="po-milestone e52 e52" linkend="Witt2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> solves this issue and
      ensures a 1:1 relation. For clarification issues we prefer the term </textual><emphasis class="po-inline e53 e53" role="ital"><textual class="po-textual">multi-rooted trees</textual></emphasis><textual class="po-textual"> in favor of </textual><emphasis class="po-inline e54 e54" role="ital"><textual class="po-textual">multiple
      annotations</textual></emphasis><textual class="po-textual"> when talking about the architecture used in our project because the
      different levels of annotation are stored in a single representation.</textual></para><para class="po-block e55 e55"><textual class="po-textual">The remainder of this paper is structured as follows: At first we will give an overview of
      different approaches for integrating multiple annotated data, followed by a description of the
      Sekimo Generic Format (SGF) sketched out in </textual><xref class="po-milestone e56 e56" linkend="sec.sgf"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. In </textual><xref class="po-milestone e57 e57" linkend="sec.application"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> we will demonstrate how the SGF is used in the application
      domain of anaphora resolution. Finally, the paper closes with </textual><xref class="po-milestone e58 e58" linkend="sec.conclusion"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> in which possible extensions and future work are
    discussed.</textual></para></section><section class="po-hcontainer e59 e59" xml:id="sec.approaches"><title class="po-block e60 e60"><textual class="po-textual">Different approaches to multiple annotated markup</textual></title><para class="po-block e61 e61"><textual class="po-textual">There is a variety of approaches for dealing with multiple annotated data (or multiple
      hierarchies) already available. </textual><xref class="po-milestone e62 e62" linkend="DeRose2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> summarizes some solutions
      (including both XML-based and non-XML-based approaches) with their respective strengths and
      weaknesses. We propose to group a selection of the available solutions into three categories: </textual><orderedlist class="po-table e63 e63"><listitem class="po-container e64 e64"><para class="po-block e65 e65"><textual class="po-textual">Prolog-based architectures.</textual></para></listitem><listitem class="po-container e66 e66"><para class="po-block e67 e67"><textual class="po-textual">XML-related architectures.</textual></para></listitem><listitem class="po-container e68 e68"><para class="po-block e69 e69"><textual class="po-textual">Graph-based architectures that follow the XML syntax.</textual></para></listitem></orderedlist></para><para class="po-block e70 e70"><textual class="po-textual">The reason for this grouping is partially due to a chronological ordering (e.g. the roots
      of the Prolog-based architectures go back more than ten years) and partially because of the
      underlying technical foundation (e.g. the separation of XML-based and non-XML-based
      architectures). The last point is crucial with respect to the support in terms of tools (e.g.
      parsers, transformation processors, query tools) when it comes to the </textual><emphasis class="po-inline e71 e71" role="ital"><textual class="po-textual">application</textual></emphasis><textual class="po-textual"> of a specific architecture (cf. </textual><xref class="po-milestone e72 e72" linkend="sec.application"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><section class="po-hcontainer e73 e73" xml:id="sec.prolog"><title class="po-block e74 e74"><textual class="po-textual">Prolog-based architectures</textual></title><para class="po-block e75 e75"><textual class="po-textual">In </textual><xref class="po-milestone e76 e76" linkend="Sperberg-McQueen2000"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e77 e77" linkend="Sperberg-McQueen2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> an
        abstract representation format to represent meaning and interpretation of markup based on a
        Prolog fact base was introduced. </textual><xref class="po-milestone e78 e78" linkend="Witt2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> extended this architecture for
        dealing with multiple annotated data. In this extension textual data and annotation are
        split up in order to avoid overlapping markup (cf. </textual><xref class="po-milestone e79 e79" linkend="Bayerl2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for a
        further discussion). The elements, attributes and text nodes of the annotation layers are
        stored as Prolog predicates which contain the following information (for details refer to
          </textual><xref class="po-milestone e80 e80" linkend="Witt2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">):</textual></para><itemizedlist class="po-table e81 e81"><listitem class="po-container e82 e82"><para class="po-block e83 e83"><textual class="po-textual">The type of node (element, attribute or text) as the name of the predicate.</textual></para></listitem><listitem class="po-container e84 e84"><para class="po-block e85 e85"><textual class="po-textual">The name of the annotation layer.</textual></para></listitem><listitem class="po-container e86 e86"><para class="po-block e87 e87"><textual class="po-textual">The absolute start and end positions of the annotated text sequence.</textual></para></listitem><listitem class="po-container e88 e88"><para class="po-block e89 e89"><textual class="po-textual">The position of the node in the document tree.</textual></para></listitem><listitem class="po-container e90 e90"><para class="po-block e91 e91"><textual class="po-textual">The name of the element or attribute.</textual></para></listitem><listitem class="po-container e92 e92"><para class="po-block e93 e93"><textual class="po-textual">The value of an attribute.</textual></para></listitem></itemizedlist><para class="po-block e94 e94"><textual class="po-textual">Each character in the text base (the </textual><emphasis class="po-inline e95 e95" role="ital"><textual class="po-textual">primary data</textual></emphasis><textual class="po-textual">) can
        be addressed by its offset (its position) as shown in </textual><xref class="po-milestone e96 e96" linkend="numbering"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. A single
        character has a start and end position and a step size of 1.</textual></para><figure class="po-container e97 e97" xml:id="numbering"><title class="po-block e98 e98"><textual class="po-textual">Addressing character positions</textual></title><programlisting class="po-block e99 e99" xml:space="preserve"><textual class="po-textual">
  T  h  i  s     i  s     a     s  e  n  t  e  n  c  e  .
00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19</textual></programlisting></figure><para class="po-block e100 e100"><textual class="po-textual">On the basis of the Prolog fact base format, possible relationships between element
        instances of different annotation levels can be examined via Prolog predicates (cf. </textual><xref class="po-milestone e101 e101" linkend="Durusau2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e102 e102" linkend="Witt2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). As further option, a unified
        version can be created and exported back to XML where overlaps are handled by using
        milestones or fragments.</textual></para><para class="po-block e103 e103"><textual class="po-textual">Although the conversion itself can be done very quickly (two implementations are
        available, one programmed in Python, another one in Perl), the fact remains that a
        conversion from XML to Prolog is necessary both for markup unification and for analysing
        relations between different annotation levels. The need for information about the position
        of each single character of the primary data - which is demanded for reconstructing the
        primary data - and the distributed storing of element and attribute information results in
        rather large Prolog fact bases: for the largest single text stored in our corpus a single
        annotation layer of 1.7 MB in size is converted to a 6.4 MB-size Prolog fact base, the
        combined three annotation layers that are used in our project (logical document structure,
        POS, anaphoric relations) result in a 14.3 MB-size Prolog fact base.</textual></para></section><section class="po-hcontainer e104 e104" xml:id="sec.nonxml"><title class="po-block e105 e105"><textual class="po-textual">XML-related architectures</textual></title><para class="po-block e106 e106"><textual class="po-textual">Several XML-related but non-XML-based approaches for storing multiple annotated data
        have been developed in recent years, including the Layered Markup and Annotation Language
        (LMNL, cf. </textual><xref class="po-milestone e107 e107" linkend="Tennison2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e108 e108" linkend="Cowan2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), TexMECS (cf. </textual><xref class="po-milestone e109 e109" linkend="Huitfeldt2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and Generalized Ordered-Descendant Direct Acyclic Graphs
        (GODDAG, cf. </textual><xref class="po-milestone e110 e110" linkend="Sperberg-McQueen2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) Multi-colored Trees (MCT, cf. </textual><xref class="po-milestone e111 e111" linkend="Jagadish2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) or Delay Nodes (cf. </textual><xref class="po-milestone e112 e112" linkend="LeMaitre2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). XCONCUR,
        formerly known as MuLaX (cf. </textual><xref class="po-milestone e113 e113" linkend="Hilbert2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e114 e114" linkend="Hilbert2005a"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) has been recently accompanied by XCONCUR-CL (cf. </textual><xref class="po-milestone e115 e115" linkend="Schonefeld2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e116 e116" linkend="Witt2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) as a constraint-based validation language. </textual></para><para class="po-block e117 e117"><textual class="po-textual">Although some of these approaches (e.g. LMNL, TexMECS, XCONCUR) support inline
        annotation of multiple annotation layers, these documents can get very complex when dealing
        with a large number of annotation layers. As a drawback, both, design and implementation of
        most of these architectures, rely on the work of only a few people. Therefore,
        specifications such as XCONCUR roughly remain in the state of experimental markup languages
        lacking the support of the large number of tools that is available for XML-based
      solutions.</textual></para></section><section class="po-hcontainer e118 e118" xml:id="sec.graph"><title class="po-block e119 e119"><textual class="po-textual">Graph-based architectures</textual></title><para class="po-block e120 e120"><textual class="po-textual">A variety of graph-based architectures that use the XML syntax has been developed in
        recent years. Starting with the Annotation Graph (AG) model presented by </textual><xref class="po-milestone e121 e121" linkend="Bird1999"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e122 e122" linkend="Bird2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, architectures such as the </textual><emphasis class="po-inline e123 e123" role="ital"><textual class="po-textual">NITE Object Model</textual></emphasis><textual class="po-textual"> (cf. </textual><xref class="po-milestone e124 e124" linkend="Carletta2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) in
        conjunction with </textual><emphasis class="po-inline e125 e125" role="ital"><textual class="po-textual">NITE-XML</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e126 e126" role="ital"><textual class="po-textual">ATLAS</textual></emphasis><textual class="po-textual"> (cf. </textual><xref class="po-milestone e127 e127" linkend="Bird2000"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">; </textual><xref class="po-milestone e128 e128" linkend="Laprun2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and the
        ATLAS Interchange Format (AIF), the Linguistic Annotation Framework pivot format (cf. </textual><xref class="po-milestone e129 e129" linkend="Ide2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and the similar </textual><emphasis class="po-inline e130 e130" role="ital"><textual class="po-textual">Potsdam Austauschformat für
          Linguistische Annotationen</textual></emphasis><textual class="po-textual"> (PAULA, cf. </textual><xref class="po-milestone e131 e131" linkend="Dipper2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), the
        Graph-based Format for Linguistic Annotation (GraF, cf. </textual><xref class="po-milestone e132 e132" linkend="Ide2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) or the
        Graph Exchange Language (GXL, cf. </textual><xref class="po-milestone e133 e133" linkend="Holt2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, firstly used in the
        graph-based linguistic database HyGraphDB</textual><footnote class="po-popup e134 e134"><para class="po-block e135 e135"><textual class="po-textual">The HyGraphDB (cf. </textual><xref class="po-milestone e136 e136" linkend="Gleim2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) has been developed as part of the X1
            project of the collaborative research centre (CRC) 673 </textual><emphasis class="po-inline e137 e137" role="ital"><textual class="po-textual">Alignment
              in Communication</textual></emphasis><textual class="po-textual"> and of the </textual><emphasis class="po-inline e138 e138" role="ital"><textual class="po-textual">Indogram</textual></emphasis><textual class="po-textual">
            project of the Research Group 437 </textual><emphasis class="po-inline e139 e139" role="ital"><textual class="po-textual">Text-technological modelling of
              information</textual></emphasis><textual class="po-textual">.</textual></para></footnote><textual class="po-textual"> to represent linguistic data structures) were published. </textual></para><para class="po-block e140 e140"><textual class="po-textual">In principle, these graph-based formats allow the annotation of nearly every possible
        linguistic annotation. However, as these formats tend to split even single annotation layers
        into separate files (such as a markable/token file which delimits text spans used in
        annotation, a structure file for storing relations between annotation elements and a feature
        file which stores the former annotation), they are often used only as interchange formats.
        In addition, the higher complexity of computing graph structures in contrast to tree
        structures in combination with the fact that at least most single annotation layers can be
        structured in trees, leads to a certain inefficiency (cf. </textual><xref class="po-milestone e141 e141" linkend="Dipper2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> who
        transform a standoff annotation into a an inline representation for efficient querying).
        Because our main focus was the development of a tool allowing for the comparison of
        different annotations we decided to implement an additional standoff format: The </textual><emphasis class="po-inline e142 e142" role="ital"><textual class="po-textual">Sekimo Generic Format</textual></emphasis><textual class="po-textual">, SGF.</textual></para></section></section><section class="po-hcontainer e143 e143" xml:id="sec.sgf"><title class="po-block e144 e144"><textual class="po-textual">The Sekimo Generic Format</textual></title><para class="po-block e145 e145"><textual class="po-textual">After the experiences made with the Prolog fact base format the decision was made to
      develop a similar representation based on XML. The initial goal was to use a native XML
      database as storage backend, however, during the development of the Sekimo Generic Format
      (SGF) several implementations were tested, including the use on a per-file basis, different
      native XML databases (e.g. eXist</textual><footnote class="po-popup e146 e146"><para class="po-block e147 e147"><textual class="po-textual">
          </textual><link class="po-inline e148 e148" xlink:actuate="onRequest" xlink:href="http://www.exist-db.org" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.exist-db.org</textual></link><textual class="po-textual">
        </textual></para></footnote><textual class="po-textual">, Berkeley DB XML</textual><footnote class="po-popup e149 e149"><para class="po-block e150 e150"><textual class="po-textual">
          </textual><link class="po-inline e151 e151" xlink:actuate="onRequest" xlink:href="http://www.oracle.com/database/berkeley-db/xml/index.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.oracle.com/database/berkeley-db/xml/index.html</textual></link><textual class="po-textual">
        </textual></para></footnote><textual class="po-textual">, Qizx/db</textual><footnote class="po-popup e152 e152"><para class="po-block e153 e153"><textual class="po-textual">
          </textual><link class="po-inline e154 e154" xlink:actuate="onRequest" xlink:href="http://www.xmlmind.com/qizx/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.xmlmind.com/qizx/</textual></link><textual class="po-textual">
        </textual></para></footnote><textual class="po-textual">, IBM DB2 Express-C 9.5</textual><footnote class="po-popup e155 e155"><para class="po-block e156 e156"><textual class="po-textual">
          </textual><link class="po-inline e157 e157" xlink:actuate="onRequest" xlink:href="http://www-306.ibm.com/software/data/db2/9/edition-express-c.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www-306.ibm.com/software/data/db2/9/edition-express-c.html</textual></link><textual class="po-textual">
        </textual></para></footnote><textual class="po-textual">), and a relational database (MySQL</textual><footnote class="po-popup e158 e158"><para class="po-block e159 e159"><textual class="po-textual">
          </textual><link class="po-inline e160 e160" xlink:actuate="onRequest" xlink:href="http://www.mysql.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.mysql.com/</textual></link><textual class="po-textual">
        </textual></para></footnote><textual class="po-textual">, cf. </textual><xref class="po-milestone e161 e161" linkend="sec.serengeti"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). In the following sections we will present
      SGF in detail. The annotation layers shown in </textual><xref class="po-milestone e162 e162" linkend="lst.phrase"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e163 e163" linkend="lst.syll"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> will serve for demonstration purposes. In </textual><xref class="po-milestone e164 e164" linkend="sec.application"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> we will show a real world example from the domain of anaphora
      resolution.</textual></para><figure class="po-container e165 e165" xml:id="lst.phrase"><title class="po-block e166 e166"><textual class="po-textual">Phrase structure annotation</textual></title><programlisting class="po-block e167 e167" xml:space="preserve"><textual class="po-textual">&lt;s xmlns="http://www.text-technology.de/sekimo/phrase"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.text-technology.de/phrase phrase.xsd"&gt;
  &lt;np&gt;
    &lt;pron&gt;This&lt;/pron&gt;
  &lt;/np&gt;
  &lt;vp&gt;
    &lt;v&gt;is&lt;/v&gt;
    &lt;np&gt;
      &lt;det&gt;a&lt;/det&gt;
      &lt;n&gt;sentence&lt;/n&gt;
    &lt;/np&gt;
  &lt;/vp&gt;.
&lt;/s&gt;</textual></programlisting></figure><figure class="po-container e168 e168" xml:id="lst.syll"><title class="po-block e169 e169"><textual class="po-textual">Syllable annotation</textual></title><programlisting class="po-block e170 e170" xml:space="preserve"><textual class="po-textual">&lt;syll xmlns="http://www.text-technology.de/sekimo/syll"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.text-technology.de/syll syll.xsd"&gt;
  &lt;s&gt;This&lt;/s&gt;
  &lt;s&gt;is&lt;/s&gt;
  &lt;s&gt;a&lt;/s&gt;
  &lt;s&gt;sen&lt;/s&gt;
  &lt;s&gt;tence&lt;/s&gt;.
&lt;/syll&gt;</textual></programlisting></figure><section class="po-hcontainer e171 e171" xml:id="sec.concept"><title class="po-block e172 e172"><textual class="po-textual">The concept of SGF</textual></title><para class="po-block e173 e173"><textual class="po-textual">SGF was developed for storing multiple annotated linguistic corpus data and examining
        relationships between elements derived from different annotation layers. The format consists
        of a base layer, providing the structure of an SGF instance and global attributes that are
        imported by the different annotation layers (cf. </textual><xref class="po-milestone e174 e174" linkend="sec.base"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). The use of
        metadata in SGF is described in </textual><xref class="po-milestone e175 e175" linkend="sec.meta"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> while </textual><xref class="po-milestone e176 e176" linkend="sec.adding_layers"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e177 e177" linkend="sec.disjoint"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e178 e178" linkend="sec.validation"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> deal with different aspects of the format. Finally, we will
        discuss processing and querying of SGF annotated data in </textual><xref class="po-milestone e179 e179" linkend="sec.query"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and
        conclude with possible caveats of the format in </textual><xref class="po-milestone e180 e180" linkend="sec.caveats"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><figure class="po-container e181 e181" xml:id="fig.root"><title class="po-block e182 e182"><textual class="po-textual">Diagram of the </textual><code class="po-atom e183 e183"><textual class="po-textual">corpus</textual></code><textual class="po-textual"> root element</textual></title><mediaobject class="po-container e184 e184"><imageobject class="po-container e185 e185"><imagedata class="po-meta e186 e186" fileref="../../../vol1/graphics/Stuehrenberg01/Stuehrenberg01-001.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e187 e187"><textual class="po-textual">SGF can be used in two different ways as shown in </textual><xref class="po-milestone e188 e188" linkend="fig.root"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">: </textual><orderedlist class="po-table e189 e189"><listitem class="po-container e190 e190"><para class="po-block e191 e191"><textual class="po-textual">As a container format that contains optional meta data (cf. </textual><xref class="po-milestone e192 e192" linkend="sec.meta"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and the corpus data, i.e. the whole corpus is saved as a
              single SGF instance. This is the appropriate way when using SGF for storing small and
              medium sized corpora in conjunction with a native XML database (cf. </textual><xref class="po-milestone e193 e193" linkend="lst.sgf"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para></listitem><listitem class="po-container e194 e194"><para class="po-block e195 e195"><textual class="po-textual">On a per-file basis or when dealing with larger corpora a meta SGF file is used
              containing (again optional) metadata for and references to the actual corpus files
              (cf. </textual><xref class="po-milestone e196 e196" linkend="lst.sgf_meta"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para></listitem></orderedlist><textual class="po-textual">
      </textual></para><figure class="po-container e197 e197" xml:id="lst.sgf"><title class="po-block e198 e198"><textual class="po-textual">Storing a whole corpus in a single SGF instance</textual></title><programlisting class="po-block e199 e199" xml:space="preserve"><textual class="po-textual">&lt;corpus xmlns="http://www.text-technology.de/sekimo"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:base="http://www.text-technology.de/sekimo"
  xsi:schemaLocation="http://www.text-technology.de/sekimo root.xsd"&gt;
  &lt;corpusData xml:id="c1" type="text" sgfVersion="1.0"&gt;
    &lt;!-- [...] --&gt;
  &lt;/corpusData&gt;
  &lt;corpusData xml:id="c2" type="text" sgfVersion="1.0"&gt;
    &lt;!-- [...] --&gt;
  &lt;/corpusData&gt;
&lt;/corpus&gt;</textual></programlisting></figure><figure class="po-container e200 e200" xml:id="lst.sgf_meta"><title class="po-block e201 e201"><textual class="po-textual">Splitting up a whole corpus into multiple SGF instances (SGF meta file use)</textual></title><programlisting class="po-block e202 e202" xml:space="preserve"><textual class="po-textual">&lt;base:corpus xmlns="http://www.text-technology.de/sekimo"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:base="http://www.text-technology.de/sekimo"
  xsi:schemaLocation="http://www.text-technology.de/sekimo ../xsd/root.xsd"&gt;
  &lt;base:corpusDataRef xml:id="c1" uri="c1.xml" mime-type="text/xml"
   encoding="UTF-8"/&gt;
  &lt;base:corpusDataRef xml:id="c2" uri="c2.xml" mime-type="text/xml"
   encoding="UTF-8"/&gt;
  &lt;base:corpusDataRef xml:id="c3" uri="c3.xml" mime-type="text/xml"
   encoding="UTF-8"/&gt;
&lt;/base:corpus&gt;</textual></programlisting></figure><para class="po-block e203 e203"><textual class="po-textual">In both cases the root element is the </textual><code class="po-atom e204 e204"><textual class="po-textual">corpus</textual></code><textual class="po-textual"> element; underneath this a
          </textual><code class="po-atom e205 e205"><textual class="po-textual">corpusDataRef</textual></code><textual class="po-textual"> element or a </textual><code class="po-atom e206 e206"><textual class="po-textual">corpusData</textual></code><textual class="po-textual"> element can be inserted.
        The empty </textual><code class="po-atom e207 e207"><textual class="po-textual">corpusDataRef</textual></code><textual class="po-textual"> element allows for referring to an external file
        containing a corpus entry via its </textual><code class="po-atom e208 e208"><textual class="po-textual">uri</textual></code><textual class="po-textual"> attribute and for specifying the external
        data in terms of encoding and mime-types (respective attributes of the same name). In this
        case the root element of the corpus entry instances that are referenced by the SGF meta file
        should be the </textual><code class="po-atom e209 e209"><textual class="po-textual">corpusData</textual></code><textual class="po-textual"> element (cf. </textual><xref class="po-milestone e210 e210" linkend="sec.base"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para></section><section class="po-hcontainer e211 e211" xml:id="sec.base"><title class="po-block e212 e212"><textual class="po-textual">The base layer</textual></title><para class="po-block e213 e213"><textual class="po-textual">The </textual><code class="po-atom e214 e214"><textual class="po-textual">corpusData</textual></code><textual class="po-textual"> element is used for storing a single corpus entry containing
        optional metadata (cf. </textual><xref class="po-milestone e215 e215" linkend="sec.meta"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), the primary data, the segmentation of
        the primary data, and zero or more respective annotation layer(s) (cf. </textual><xref class="po-milestone e216 e216" linkend="sec.adding_layers"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). An example base layer is shown in </textual><xref class="po-milestone e217 e217" linkend="lst.base"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. The </textual><code class="po-atom e218 e218"><textual class="po-textual">xml:id</textual></code><textual class="po-textual"> attribute is obligatory while the </textual><code class="po-atom e219 e219"><textual class="po-textual">sgfVersion</textual></code><textual class="po-textual">
        attribute is optional (with a default value of </textual><emphasis class="po-inline e220 e220" role="ital"><textual class="po-textual">1.0</textual></emphasis><textual class="po-textual">)</textual></para><figure class="po-container e221 e221" xml:id="fig.corpusdata"><title class="po-block e222 e222"><textual class="po-textual">Diagram of the </textual><code class="po-atom e223 e223"><textual class="po-textual">corpusData</textual></code><textual class="po-textual"> element</textual></title><mediaobject class="po-container e224 e224"><imageobject class="po-container e225 e225"><imagedata class="po-meta e226 e226" fileref="../../../vol1/graphics/Stuehrenberg01/Stuehrenberg01-002.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><figure class="po-container e227 e227" xml:id="lst.base"><title class="po-block e228 e228"><textual class="po-textual">The SGF base layer</textual></title><programlisting class="po-block e229 e229" xml:space="preserve"><textual class="po-textual">
&lt;corpusData xmlns="http://www.text-technology.de/sekimo"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:base="http://www.text-technology.de/sekimo"
  xsi:schemaLocation="http://www.text-technology.de/sekimo root.xsd"
  xml:id="c1" type="text" sgfVersion="1.0"&gt;
  &lt;primaryData start="0" end="19" xml:lang="en"&gt;
    &lt;textualContent&gt;This is a sentence.&lt;/textualContent&gt;
    &lt;checksum algorithm="md5"&gt;d15ba5f31fa7c797c093931328581664&lt;/checksum&gt;
  &lt;/primaryData&gt;
&lt;/corpusData&gt;</textual></programlisting></figure><para class="po-block e230 e230"><textual class="po-textual">The </textual><code class="po-atom e231 e231"><textual class="po-textual">corpusData</textual></code><textual class="po-textual"> element holds the </textual><code class="po-atom e232 e232"><textual class="po-textual">type</textual></code><textual class="po-textual"> attribute which can be
        either set to the value </textual><emphasis class="po-inline e233 e233" role="ital"><textual class="po-textual">text</textual></emphasis><textual class="po-textual"> or </textual><emphasis class="po-inline e234 e234" role="ital"><textual class="po-textual">multimodal</textual></emphasis><textual class="po-textual"> while the </textual><code class="po-atom e235 e235"><textual class="po-textual">primaryData</textual></code><textual class="po-textual"> child element contains either
        the textual primary data (i.e. the text that is used as basis for annotation) as text node
        of the </textual><code class="po-atom e236 e236"><textual class="po-textual">textualContent</textual></code><textual class="po-textual"> element or a reference to a file containing the primary
        data (in case of larger texts or non-textual primary data) via a </textual><code class="po-atom e237 e237"><textual class="po-textual">location</textual></code><textual class="po-textual"> child
        element (not shown in the example listing). In the latter case an optional checksum of the
        input file can be provided in the corresponding element to preserve integrity of primary
        data when dealing with multiple annotation resources. Note, that we do not handle any byte
        offset problems derived by different encodings (e.g. Latin 1 vs. UTF-16), therefore, the use
        of the </textual><code class="po-atom e238 e238"><textual class="po-textual">encoding</textual></code><textual class="po-textual"> attribute is highly recommended.</textual><footnote class="po-popup e239 e239"><para class="po-block e240 e240"><textual class="po-textual">Relying on character offsets can be a source of trouble. For that reason one has to
            assure that whitespace differences between the textual primary data and annotation
            layers are normalized. Different whitespace normalizer tools were developed as part of
            our project.</textual></para></footnote></para><para class="po-block e241 e241"><textual class="po-textual">When using SGF for storing multimodal annotations, multiple </textual><code class="po-atom e242 e242"><textual class="po-textual">primaryData</textual></code><textual class="po-textual">
        elements are allowed. In this case, the attribute </textual><code class="po-atom e243 e243"><textual class="po-textual">role</textual></code><textual class="po-textual"> has to be provided which
        marks exactly one primary data file as "master" while the other primary
        data files are marked as "slaves". The master primary data file sets the
        timeline, the slave files can be aligned to the master file via an optional
        </textual><code class="po-atom e244 e244"><textual class="po-textual">offset</textual></code><textual class="po-textual"> attribute.</textual></para></section><section class="po-hcontainer e245 e245" xml:id="sec.meta"><title class="po-block e246 e246"><textual class="po-textual">Metadata</textual></title><para class="po-block e247 e247"><textual class="po-textual">Metadata can be used in several locations in an SGF instance: as child element of the
          </textual><code class="po-atom e248 e248"><textual class="po-textual">corpus</textual></code><textual class="po-textual"> element (for information regarding the whole corpus), underneath a
          </textual><code class="po-atom e249 e249"><textual class="po-textual">corpusData</textual></code><textual class="po-textual"> entry (denoting metadata related to a single corpus entry and its
        annotation layer(s)), or as child of an annotation level. In the underlying XML schema
        description of the base layer the </textual><code class="po-atom e250 e250"><textual class="po-textual">meta</textual></code><textual class="po-textual"> element is declared wrapper element for
        elements derived from a different namespace while the </textual><code class="po-atom e251 e251"><textual class="po-textual">processContents</textual></code><textual class="po-textual"> attribute
        is set to </textual><emphasis class="po-inline e252 e252" role="ital"><textual class="po-textual">lax</textual></emphasis><textual class="po-textual">, i.e. if an optional XML schema description
        for the referenced namespace is available it should be used for validation. In our case we
        use OLAC metadata (cf. </textual><xref class="po-milestone e253 e253" linkend="Simons2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) which has turned out to be an adequate
        solution for a variety of linguistic data. </textual><xref class="po-milestone e254 e254" linkend="lst.layers"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows an SGF
        instance containing OLAC metadata.</textual></para></section><section class="po-hcontainer e255 e255" xml:id="sec.adding_layers"><title class="po-block e256 e256"><textual class="po-textual">Adding layers</textual></title><para class="po-block e257 e257"><textual class="po-textual">Several annotations of the primary data can be stored inside a </textual><code class="po-atom e258 e258"><textual class="po-textual">corpusData</textual></code><textual class="po-textual">
        element. Whenever an annotation layer is added, two steps have to be undertaken:</textual><orderedlist class="po-table e259 e259"><listitem class="po-container e260 e260"><para class="po-block e261 e261"><textual class="po-textual">The segments which delimit the annotated parts of the primary data are
            defined.</textual></para></listitem><listitem class="po-container e262 e262"><para class="po-block e263 e263"><textual class="po-textual">A converted representation of the original annotation is stored.</textual></para></listitem></orderedlist></para><para class="po-block e264 e264"><textual class="po-textual">The </textual><code class="po-atom e265 e265"><textual class="po-textual">segments</textual></code><textual class="po-textual"> element consists of at least one </textual><code class="po-atom e266 e266"><textual class="po-textual">segment</textual></code><textual class="po-textual">. Each
        segment is defined by its start and end position in the character stream - similar to the
        Prolog fact base format discussed in </textual><xref class="po-milestone e267 e267" linkend="sec.prolog"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (for an alternative
        definition of segments cf. </textual><xref class="po-milestone e268 e268" linkend="sec.disjoint"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). We use simple numeric attributes
        (defined as </textual><code class="po-atom e269 e269"><textual class="po-textual">nonNegativInteger</textual></code><textual class="po-textual"> data type in the underlying XML Schema, cf. </textual><xref class="po-milestone e270 e270" linkend="sec.validation"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e271 e271" linkend="XMLSchema2004b"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) for defining the start
        and end position - in contrast to the PAULA format (</textual><xref class="po-milestone e272 e272" linkend="Dipper2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), which
        uses XLink (</textual><xref class="po-milestone e273 e273" linkend="DeRose2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and the XPointer framework (</textual><xref class="po-milestone e274 e274" linkend="Grosso2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) to identify text spans. Because single characters have a step size
        of 1 (cf. </textual><xref class="po-milestone e275 e275" linkend="numbering"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), empty elements use the same value for start and end
        position. An optional segment </textual><code class="po-atom e276 e276"><textual class="po-textual">type</textual></code><textual class="po-textual"> attribute can be used to provide more
        information about the segment (available values are </textual><emphasis class="po-inline e277 e277" role="ital"><textual class="po-textual">empty</textual></emphasis><textual class="po-textual">,
          </textual><emphasis class="po-inline e278 e278" role="ital"><textual class="po-textual">char</textual></emphasis><textual class="po-textual"> for character data, </textual><emphasis class="po-inline e279 e279" role="ital"><textual class="po-textual">ws</textual></emphasis><textual class="po-textual"> for whitespace characters, </textual><emphasis class="po-inline e280 e280" role="ital"><textual class="po-textual">pun</textual></emphasis><textual class="po-textual"> for
        punctuation characters, </textual><emphasis class="po-inline e281 e281" role="ital"><textual class="po-textual">dur</textual></emphasis><textual class="po-textual"> for duration in case of
        multimodal primary data and </textual><emphasis class="po-inline e282 e282" role="ital"><textual class="po-textual">seg</textual></emphasis><textual class="po-textual"> for referring to already
        defined segments, cf. </textual><xref class="po-milestone e283 e283" linkend="sec.disjoint"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><para class="po-block e284 e284"><xref class="po-milestone e285 e285" linkend="lst.layers"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the SGF representation of the two annotation layers
        given in </textual><xref class="po-milestone e286 e286" linkend="lst.phrase"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e287 e287" linkend="lst.syll"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Note that a segment
        has to be defined only once, even if it is used in different annotation layers - in contrast
        to some other graph-based approaches (cf. </textual><xref class="po-milestone e288 e288" linkend="sec.graph"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) which define the same
        character span separately for each annotation layer. This results in a smaller amount of
        segments that has to be defined even for a large number of annotation layers.</textual></para><para class="po-block e289 e289"><textual class="po-textual">The annotation of the primary data is stored in the corresponding element. Following the
        terminological distinction between levels and layers (cf. </textual><xref class="po-milestone e290 e290" linkend="sec.introduction"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), each </textual><code class="po-atom e291 e291"><textual class="po-textual">level</textual></code><textual class="po-textual"> element contains - in addition to optional metadata - exactly
        one </textual><code class="po-atom e292 e292"><textual class="po-textual">layer</textual></code><textual class="po-textual"> element consisting of the markup representation of the corresponding
        annotation level. An </textual><code class="po-atom e293 e293"><textual class="po-textual">annotation</textual></code><textual class="po-textual"> element may contain more than one
        </textual><code class="po-atom e294 e294"><textual class="po-textual">level</textual></code><textual class="po-textual"> element, this mechanism can be used for subsuming annotation levels (e.g.
        when the corresponding elements are declared in the same document grammar). The
        </textual><code class="po-atom e295 e295"><textual class="po-textual">layer</textual></code><textual class="po-textual"> element is a wrapper element containing elements derived from a different
        namespace, similar to the meta element (cf. </textual><xref class="po-milestone e296 e296" linkend="sec.meta"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). However, while the
        value of the </textual><code class="po-atom e297 e297"><textual class="po-textual">processContents</textual></code><textual class="po-textual"> attribute of the latter is set to </textual><emphasis class="po-inline e298 e298" role="ital"><textual class="po-textual">lax</textual></emphasis><textual class="po-textual">, the value of the respective attribute of the
        </textual><code class="po-atom e299 e299"><textual class="po-textual">layer</textual></code><textual class="po-textual"> element is set to </textual><emphasis class="po-inline e300 e300" role="ital"><textual class="po-textual">strict</textual></emphasis><textual class="po-textual">, resulting in
        the fact that an XML schema has to be provided for each annotation layer (cf. </textual><xref class="po-milestone e301 e301" linkend="sec.validation"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><figure class="po-container e302 e302" xml:id="fig.level"><title class="po-block e303 e303"><textual class="po-textual">Diagram of the </textual><code class="po-atom e304 e304"><textual class="po-textual">level</textual></code><textual class="po-textual"> element</textual></title><mediaobject class="po-container e305 e305"><imageobject class="po-container e306 e306"><imagedata class="po-meta e307 e307" fileref="../../../vol1/graphics/Stuehrenberg01/Stuehrenberg01-003.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><figure class="po-container e308 e308" xml:id="lst.layers"><title class="po-block e309 e309"><textual class="po-textual">SGF instance containing two annotation layers</textual></title><programlisting class="po-block e310 e310" xml:space="preserve"><textual class="po-textual">&lt;corpus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.text-technology.de/sekimo root.xsd"
  xmlns="http://www.text-technology.de/sekimo"
  xmlns:base="http://www.text-technology.de/sekimo"&gt;
  &lt;corpusData xml:id="c1" type="text"&gt;
    &lt;primaryData start="0" end="19" xml:lang="en"&gt;
      &lt;textualContent&gt;This is a sentence.&lt;/textualContent&gt;
      &lt;checksum algorithm="md5"&gt;d15ba5f31fa7c797c093931328581664&lt;/checksum&gt;
    &lt;/primaryData&gt;
    &lt;segments&gt;
      &lt;segment xml:id="seg0" type="char" start="0" end="19" /&gt;
      &lt;segment xml:id="seg1" type="char" start="0" end="4" /&gt;
      &lt;segment xml:id="seg2" type="char" start="5" end="18" /&gt;
      &lt;!--[...]--&gt;
    &lt;/segments&gt;
    &lt;annotation&gt;
      &lt;level xml:id="al1" priority="1"&gt;
        &lt;meta&gt;
          &lt;olac:olac xmlns:olac="http://www.language-archives.org/OLAC/1.0/"
            xmlns="http://purl.org/dc/elements/1.1/"
            xmlns:dcterms="http://purl.org/dc/terms/"
            xsi:schemaLocation="http://www.language-archives.org/OLAC/1.0/
            meta/olac.xsd"&gt;
            &lt;format&gt;text/xml&lt;/format&gt;
            &lt;dcterms:isFormatOf&gt;sentence.txt&lt;/dcterms:isFormatOf&gt;
            &lt;description&gt;Phrase structure annotation.&lt;/description&gt;
          &lt;/olac:olac&gt;
        &lt;/meta&gt;
        &lt;layer xmlns:phrase="http://www.text-technology.de/sekimo/phrase"
          xsi:schemaLocation="http://www.text-technology.de/sekimo/phrase
          phrase.xsd"&gt;
          &lt;phrase:s base:segment="seg0" xml:lang="en"&gt;
            &lt;phrase:np base:segment="seg1"&gt;
              &lt;phrase:pron base:segment="seg1" /&gt;
            &lt;/phrase:np&gt;
            &lt;phrase:vp base:segment="seg2"&gt;
              &lt;phrase:v base:segment="seg3" /&gt;
              &lt;phrase:np base:segment="seg4"&gt;
                &lt;phrase:det base:segment="seg5" /&gt;
                &lt;phrase:n base:segment="seg6" /&gt;
              &lt;/phrase:np&gt;
            &lt;/phrase:vp&gt;
          &lt;/phrase:s&gt;
        &lt;/layer&gt;
      &lt;/level&gt;
    &lt;/annotation&gt;
    &lt;annotation&gt;
      &lt;level xml:id="al2" priority="1"&gt;
        &lt;meta&gt;
          &lt;olac:olac xmlns:olac="http://www.language-archives.org/OLAC/1.0/"
            xmlns="http://purl.org/dc/elements/1.1/"
            xmlns:dcterms="http://purl.org/dc/terms/"
            xsi:schemaLocation="http://www.language-archives.org/OLAC/1.0/
            meta/olac.xsd"&gt;
            &lt;description&gt;Syllable annotation.&lt;/description&gt;
          &lt;/olac:olac&gt;
        &lt;/meta&gt;
        &lt;layer xmlns:syll="http://www.text-technology.de/sekimo/syll"
          xsi:schemaLocation="http://www.text-technology.de/sekimo/syll
          syll.xsd"&gt;
          &lt;syll:syll base:segment="seg0"&gt;
            &lt;syll:s base:segment="seg1" /&gt;
            &lt;syll:s base:segment="seg3" /&gt;
            &lt;syll:s base:segment="seg5" /&gt;
            &lt;syll:s base:segment="seg7" /&gt;
            &lt;syll:s base:segment="seg8" /&gt;
          &lt;/syll:syll&gt;
        &lt;/layer&gt;
      &lt;/level&gt;
    &lt;/annotation&gt;
  &lt;/corpusData&gt;
&lt;/corpus&gt;</textual></programlisting></figure><para class="po-block e311 e311"><textual class="po-textual">As one can observe in </textual><xref class="po-milestone e312 e312" linkend="fig.sgf.id"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, SGF heavily makes use of XML's
        inherent ID/IDREF(S) mechanism to connect segments of the primary data with single or
        multiple annotation layers (displayed as solid red lines).</textual></para><figure class="po-container e313 e313" xml:id="fig.sgf.id"><title class="po-block e314 e314"><textual class="po-textual">Use of XML's ID/IREF(S) mechanism in SGF</textual></title><mediaobject class="po-container e315 e315"><imageobject class="po-container e316 e316"><imagedata class="po-meta e317 e317" fileref="../../../vol1/graphics/Stuehrenberg01/Stuehrenberg01-004.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e318 e318"><textual class="po-textual">When comparing the two annotation layers with the namespace prefixes </textual><code class="po-atom e319 e319"><textual class="po-textual">phrase</textual></code><textual class="po-textual">
        and </textual><code class="po-atom e320 e320"><textual class="po-textual">syll</textual></code><textual class="po-textual"> with their respective original representation given in </textual><xref class="po-milestone e321 e321" linkend="lst.phrase"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e322 e322" linkend="lst.syll"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, a second design goal of SGF is made
        visible: to conserve as much of the former annotation format as possible. Still, a
        conversion has to be made consisting of the following steps:</textual><itemizedlist class="po-table e323 e323"><listitem class="po-container e324 e324"><para class="po-block e325 e325"><textual class="po-textual">Elements with a mixed content model are converted into container elements.</textual></para></listitem><listitem class="po-container e326 e326"><para class="po-block e327 e327"><textual class="po-textual">Elements containing text nodes are converted into empty elements.</textual></para></listitem><listitem class="po-container e328 e328"><para class="po-block e329 e329"><textual class="po-textual">The </textual><code class="po-atom e330 e330"><textual class="po-textual">base:segment</textual></code><textual class="po-textual"> attribute is added to former non-empty elements as
              an obligatory attribute (and as an optional attribute for empty elements).</textual></para></listitem></itemizedlist><textual class="po-textual"> The same conversion rules are applied to the underlying XSD (cf. </textual><xref class="po-milestone e331 e331" linkend="sec.validation"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). As shown in </textual><xref class="po-milestone e332 e332" linkend="lst.layers"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> the hierarchy of
        elements and all attributes remain intact, i.e. there is no need for additional files such
        as structure files which are needed for the graph-based annotation formats discussed in
          </textual><xref class="po-milestone e333 e333" linkend="sec.graph"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. However, this statement is only true as long as the
        XML-inherent tree structures are adequate.</textual><footnote class="po-popup e334 e334"><para class="po-block e335 e335"><textual class="po-textual">Of course it is possible to use graph-based annotation layers as well, however, the
            advantages of SGF over the formats discussed in </textual><xref class="po-milestone e336 e336" linkend="sec.graph"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> would be
            minimized in such cases (cf. </textual><xref class="po-milestone e337 e337" linkend="sec.query"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para></footnote><textual class="po-textual"> An XSLT implementation is available for converting arbitrary inline annotation
        layers into their respective SGF representation while a second XSLT script merges different
        annotation layers according to the same primary data into a single SGF instance. Therefore,
        it is possible to add additional </textual><code class="po-atom e338 e338"><textual class="po-textual">annotation</textual></code><textual class="po-textual"> elements to an already existing SGF
        instance at any time (as long as the primary data is not changed). Work has begun on a
        second implementation (written in Java).</textual></para></section><section class="po-hcontainer e339 e339" xml:id="sec.disjoint"><title class="po-block e340 e340"><textual class="po-textual">Disjoints and continuous segments</textual></title><para class="po-block e341 e341"><textual class="po-textual">Often segments consist of other segments making it possible to create new segments not
        only by defining their start and end positions but by referring to already defined segments
        using the </textual><code class="po-atom e342 e342"><textual class="po-textual">segments</textual></code><textual class="po-textual"> attribute, too (cf. </textual><xref class="po-milestone e343 e343" linkend="lst.segments"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). In
        order to distinguish if these newly established segments include all segments starting from
        the first referred segment up to the last referred one, or define a disjoint span, the
        attribute </textual><code class="po-atom e344 e344"><textual class="po-textual">mode</textual></code><textual class="po-textual"> has to be set to the value </textual><emphasis class="po-inline e345 e345" role="ital"><textual class="po-textual">continuous</textual></emphasis><textual class="po-textual"> or </textual><emphasis class="po-inline e346 e346" role="ital"><textual class="po-textual">disjoint</textual></emphasis><textual class="po-textual">, respectively. The
        example in </textual><xref class="po-milestone e347 e347" linkend="lst.segments"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows a disjoint span.</textual></para><figure class="po-container e348 e348" xml:id="lst.segments"><title class="po-block e349 e349"><textual class="po-textual">Definition of a disjoint segment by referring to already established
          ones</textual></title><programlisting class="po-block e350 e350" xml:space="preserve"><textual class="po-textual">&lt;segment xml:id="seg6" type="seg" segments="seg1 seg3" mode="disjoint"/&gt;;</textual></programlisting></figure><para class="po-block e351 e351"><textual class="po-textual">Note that this feature of SGF could be used for conversion between SGF instances and
        architectures mentioned in </textual><xref class="po-milestone e352 e352" linkend="sec.nonxml"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, however, up to now it has been of
        theoretical use only.</textual></para></section><section class="po-hcontainer e353 e353" xml:id="sec.validation"><title class="po-block e354 e354"><textual class="po-textual">Validation</textual></title><para class="po-block e355 e355"><textual class="po-textual">An important aspect when dealing with multiple annotated data is the question of
        validating this data. In case of overlaps it is strictly impossible to provide a document
        grammar that is feasible for validating the unification of different annotation layers -
        even without the amount of work that has to be done for producing such a document grammar.
        Therefore, we propose that each annotation level is validated separately - in addition to
        the SGF instance as a whole - with a transformed version of its original document grammar.
        This conversion follows the conversion of the annotation layer described in </textual><xref class="po-milestone e356 e356" linkend="sec.adding_layers"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><para class="po-block e357 e357"><textual class="po-textual">We decided to use W3C XML Schema Description Language (XSD) (cf. </textual><xref class="po-milestone e358 e358" linkend="XMLSchema2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) as the underlying schema language for SGF for different
        reasons. As already stated, SGF relies heavily on two aspects: </textual><itemizedlist class="po-table e359 e359"><listitem class="po-container e360 e360"><para class="po-block e361 e361"><textual class="po-textual">ID/IDREF(S) mechanism, and</textual></para></listitem><listitem class="po-container e362 e362"><para class="po-block e363 e363"><textual class="po-textual">Namespace support.</textual></para></listitem></itemizedlist><textual class="po-textual"> While ID/IDREF(S) is already present in XML Document Type Definitions, DTDs
        lack real support for XML namespaces. Furthermore, SGF makes use of XML Schema data types
          (</textual><xref class="po-milestone e364 e364" linkend="XMLSchema2004b"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and when external document grammars (for annotation
        layers and metadata) are imported, the control of the processing of the imported document
        grammars is crucial (cf. </textual><xref class="po-milestone e365 e365" linkend="sec.serengeti"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for the discussion of the Serengeti
        log functionality and the role of XML Schema's </textual><code class="po-atom e366 e366"><textual class="po-textual">processContents</textual></code><textual class="po-textual"> attribute).
        Because of this we had to choose one of the XML schema languages available. XSD was
        favoured over RELAX NG (</textual><xref class="po-milestone e367 e367" linkend="RELAX2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) because of the better software support,
        e.g. with Saxon-SA</textual><footnote class="po-popup e368 e368"><para class="po-block e369 e369"><textual class="po-textual">
            </textual><link class="po-inline e370 e370" xlink:actuate="onRequest" xlink:href="http://www.saxonica.com" xlink:show="new" xlink:title="Saxonica Homepage" xlink:type="simple"><textual class="po-textual">http://www.saxonica.com</textual></link><textual class="po-textual">
          </textual></para></footnote><textual class="po-textual"> a schema-aware XSLT and XQuery engine is available which allows for the use of
        the id() and idref() functions for the task of comparing different annotation layers (cf.
          </textual><xref class="po-milestone e371 e371" linkend="sec.sgf_analysis"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Of course it would be possible to use simple string
        comparisons, however, XML IDs are usually indexed by the XSLT processor (for Saxon cf. 
        </textual><link class="po-inline e372 e372" xlink:actuate="onRequest" xlink:href="http://saxon.wiki.sourceforge.net/indexing" xlink:show="new" xlink:title="Saxon Wiki - Indexing" xlink:type="simple"><textual class="po-textual">http://saxon.wiki.sourceforge.net/indexing</textual></link><textual class="po-textual">)
        and are for this reason - in most cases - much more efficient than the equivalent XPath
        expression using a string comparison predicate (cf. </textual><xref class="po-milestone e373 e373" linkend="Kay2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 802-804.).
        This helps reducing processing costs when dealing with larger SGF instances, however, the
        downside is that the validation of each XSD associated takes some time (approximately one to
        two seconds in our case). </textual></para><para class="po-block e374 e374"><textual class="po-textual">Apart from XSD validation, embedded Schematron (</textual><xref class="po-milestone e375 e375" linkend="Schematron"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) asserts
        are used as additional constraints, for example for refusing end positions of segments that
        are less than start positions (cf. </textual><xref class="po-milestone e376 e376" linkend="Robertson2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). In the upcoming version
        1.1 of XML Schema, the </textual><code class="po-atom e377 e377"><textual class="po-textual">assert</textual></code><textual class="po-textual"> element will be used for fulfilling this task
          (</textual><xref class="po-milestone e378 e378" linkend="XMLSchema2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para></section><section class="po-hcontainer e379 e379" xml:id="sec.query"><title class="po-block e380 e380"><textual class="po-textual">Querying</textual></title><para class="po-block e381 e381"><textual class="po-textual">One of the goals during the development of SGF has been the possibility of analyzing the
        relationships between elements of different layers. In contrast to the work described by
          </textual><xref class="po-milestone e382 e382" linkend="Alink2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e383 e383" linkend="Alink2006a"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, which involves new standoff
        XPath axis steps, or the linguistic query language LPath, which extends the XPath 1.0 syntax
        and which was introduced by </textual><xref class="po-milestone e384 e384" linkend="Bird2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, SGF uses unchanged XML-related
        specifications for querying data. Up to now we have employed XSLT 2.0, XPath 2.0 and XQuery
        1.0 queries for typical tasks carried out in our project (cf. </textual><xref class="po-milestone e385 e385" linkend="sec.application"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual><xref class="po-milestone e386 e386" linkend="Bird2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e387 e387" linkend="Dipper2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">
        suggest different example queries to evaluate their architectures. By now, Q1
        ("Find all sentences that include the word 'kam'"), Q2 ("Find all
        sentences that do not include the word 'kam'"), Q3 ("Find all NPs. Return
        the reference to that NP") and Q7 ("Find all pairs of anaphors and direct
        antecedents in which the anaphor is a personal pronoun") described in </textual><xref class="po-milestone e388 e388" linkend="Dipper2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> were implemented.
        </textual><footnote class="po-popup e389 e389"><para class="po-block e390 e390"><textual class="po-textual">The other queries were not appropriate for the corpus under investigation.</textual></para></footnote><textual class="po-textual">

        </textual><xref class="po-milestone e391 e391" linkend="lst.xquery.q7"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows Q7 for our
        corpus.</textual></para><figure class="po-container e392 e392" xml:id="lst.xquery.q7"><title class="po-block e393 e393"><textual class="po-textual">XQuery Q7 adapted for the corpus under investigation</textual></title><programlisting class="po-block e394 e394" xml:space="preserve"><textual class="po-textual">
declare boundary-space strip;
declare namespace base="http://www.text-technology.de/sekimo";
declare namespace doc="http://www.text-technology.de/sekimo/doc";
declare namespace cnx="http://www.text-technology.de/cnx";
declare namespace chs="http://www.text-technology.de/sekimo/chs";
declare variable $doc := "ling-deu-003-sgf-noWS.xml";
&lt;resultset file="{$doc}"&gt;
{
let $d := doc($doc)
for $s in $d//chs:semRel/chs:cospecLink[id(@phorIDRef)/
id(@base:segment)/idref(@xml:id)/..[name()='cnx:token'
and @pos='PRON' and contains(@morpho,'Pers')]]
return
  &lt;relation&gt;
  {$s/@*}
  {&lt;anapher&gt;
    {$s/id(@phorIDRef)/id(@headRef)/data(@text)}
    &lt;/anapher&gt;,
    &lt;antecedent&gt;
    {$s/id(@antecedentIDRefs)/id(@headRef)/data(@text)}
    &lt;/antecedent&gt;}
  &lt;/relation&gt;
}
&lt;/resultset&gt;</textual></programlisting></figure><para class="po-block e395 e395"><textual class="po-textual">In addition, we have implemented Q8 ("Find all pairs of anaphors and
        antecedents and their respective parent(s) on the logical document layer"), for
        which it is necessary for the XQuery processor to traverse back to the segments, compare
        several </textual><code class="po-atom e396 e396"><textual class="po-textual">segment</textual></code><textual class="po-textual"> elements and then to find the corresponding annotations. Most
        of the queries perform comparable to the respective inline queries referred to in </textual><xref class="po-milestone e397 e397" linkend="Dipper2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, but in general they are difficult to compare since our corpus (six
        German scientific articles and eight German newspaper articles, containing 3,084 sentences,
        56,203 tokens, 11,740 markables, 4,323 anaphoric relations, three annotation levels: logical
        document structure, POS, anaphoric relations) is different both in terms of size and
        annotation levels. Apart from Q7, most parts of the queries can be performed inline (which
        is a benefit of SGF over other architectures discussed in </textual><xref class="po-milestone e398 e398" linkend="sec.graph"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">),
        which allows us to abstain from converting SGF instances to inline representation prior to
        analyzing the relations (which was one of the motivations in developing SGF) as proposed by
          </textual><xref class="po-milestone e399 e399" linkend="Dipper2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><para class="po-block e400 e400"><textual class="po-textual">For a first evaluation we have chosen both the aforementioned complete corpus and our
        largest single text, a German scientific article comprising 157 paragraphs, 696 sentences,
        12,345 token, 2,550 markables and 1,358 anaphoric relations (14,985 segments in total),
        annotated on the three annotation levels described above. All values are average results
        after five executions on two different machines: </textual><orderedlist class="po-table e401 e401"><listitem class="po-container e402 e402"><para class="po-block e403 e403"><textual class="po-textual">PC1: a Sun Fire V20z equipped with dual single core AMD Opteron 248 clocked at 2,2
              GHz and 6 GB RAM running on Sun Solaris 10 (64bit) with Saxon-SA 9.0.0.1J on Java
              1.5.0_15 (2 GB RAM allocated for Java VM) and SWI-Prolog 5.6.21 (128 MB allocated as
              local stack limit).</textual></para></listitem><listitem class="po-container e404 e404"><para class="po-block e405 e405"><textual class="po-textual">PC2: a standard PC equipped with a Intel dual core Core2Duo E6600 clocked at 2,99
              GHz with 3.12 GB RAM running on Microsoft Windows XP SP3 (32bit) with Saxon-SA
              9.0.0.1J on Java 1.6.0_06 (1 GB RAM allocated for Java VM) and SWI-Prolog 5.6.57 (128
              MB allocated as local stack limit).</textual></para></listitem></orderedlist><textual class="po-textual"> Included in the XQuery results is the validation of five XSD files (</textual><emphasis class="po-inline e406 e406" role="ital"><textual class="po-textual">-val</textual></emphasis><textual class="po-textual"> parameter) and the output of an XML file (</textual><emphasis class="po-inline e407 e407" role="ital"><textual class="po-textual">-o</textual></emphasis><textual class="po-textual"> parameter) with a </textual><code class="po-atom e408 e408"><textual class="po-textual">resultset</textual></code><textual class="po-textual"> root element and the
        corresponding query results underneath. For comparison, we evaluated the same queries for
        the Prolog fact base architecture used in the first project phase (cf. </textual><xref class="po-milestone e409 e409" linkend="sec.prolog"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) on the same two machines. For the latter the amount of time for
        consulting the Prolog fact base containing the annotated data (14.3 MB in size, 3.37 sec on
        PC1; 2.94 sec on PC2) and the Prolog query file (4.3 KB in size, 0.0 sec on both machines)
        is not included in the results. The query results are output to a separate text file.</textual></para><table border="1" class="po-container e410 e410" xml:id="tab.results"><caption class="po-container e411 e411"><para class="po-block e412 e412"><textual class="po-textual">Evaluation results (in seconds). Average of five executions.</textual></para></caption><thead class="po-container e413 e413"><tr class="po-table e414 e414"><th class="po-field e415 e415"><textual class="po-textual">Query</textual></th><th class="po-field e416 e416"><textual class="po-textual">Prolog query results for single text (PC1 / PC2)</textual></th><th class="po-field e417 e417"><textual class="po-textual">XQuery results for single text (PC1 / PC2)</textual></th><th class="po-field e418 e418"><textual class="po-textual">XQuery results for whole corpus (PC1 / PC2)</textual></th></tr></thead><tbody class="po-table e419 e419"><tr class="po-table e420 e420"><td class="po-block e421 e421"><textual class="po-textual">Q1</textual></td><td class="po-block e422 e422"><textual class="po-textual">0.22 / 0.054</textual></td><td class="po-block e423 e423"><textual class="po-textual">4.612 / 1.244</textual></td><td class="po-block e424 e424"><textual class="po-textual">9.609 / 4.162</textual></td></tr><tr class="po-table e425 e425"><td class="po-block e426 e426"><textual class="po-textual">Q2</textual></td><td class="po-block e427 e427"><textual class="po-textual">13.502 / 4.554</textual></td><td class="po-block e428 e428"><textual class="po-textual">5.161 / 1.234</textual></td><td class="po-block e429 e429"><textual class="po-textual">9.390 / 4.357</textual></td></tr><tr class="po-table e430 e430"><td class="po-block e431 e431"><textual class="po-textual">Q3</textual></td><td class="po-block e432 e432"><textual class="po-textual">0.084 / 0.03</textual></td><td class="po-block e433 e433"><textual class="po-textual">4.035 / 1.219</textual></td><td class="po-block e434 e434"><textual class="po-textual">9.556 / 4.084</textual></td></tr><tr class="po-table e435 e435"><td class="po-block e436 e436"><textual class="po-textual">Q7</textual></td><td class="po-block e437 e437"><textual class="po-textual">30.66 / 7.798</textual></td><td class="po-block e438 e438"><textual class="po-textual">5.764 / 1.481</textual></td><td class="po-block e439 e439"><textual class="po-textual">11.669 / 5.35</textual></td></tr><tr class="po-table e440 e440"><td class="po-block e441 e441"><textual class="po-textual">Q8</textual></td><td class="po-block e442 e442"><textual class="po-textual">84.16 / 24.738</textual></td><td class="po-block e443 e443"><textual class="po-textual">15.379 / 11.134</textual></td><td class="po-block e444 e444"><textual class="po-textual">152.683 / 114.525</textual></td></tr></tbody></table><para class="po-block e445 e445"><textual class="po-textual">Note that in contrast to the graph-based architectures described in </textual><xref class="po-milestone e446 e446" linkend="sec.graph"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, the XQueries and their evaluation results depend on the annotation
        layers that are imported into the SGF base layer. This means that especially Q1, Q2 and Q3
        are very fast because they can be performed inline in our corpus (i.e. both sentence and
        token information are descendants of the same annotation element - and the
        </textual><code class="po-atom e447 e447"><textual class="po-textual">token</textual></code><textual class="po-textual"> element contains its textual content in its </textual><code class="po-atom e448 e448"><textual class="po-textual">text</textual></code><textual class="po-textual"> attribute).
        For Q7, information derived from different annotation layers has to be taken into account,
        however, since only the id() function is used, the results are satisfactory as well. Q8 is
        the single XQuery that requires the identification of the respective </textual><code class="po-atom e449 e449"><textual class="po-textual">segment</textual></code><textual class="po-textual">
        element and the use of the idref() function afterwards in order to get the corresponding
        annotations. For these reasons, the advantage when using SGF over comparable architectures
        rises or drops depending on the imported annotation layers. To further reduce processing
        costs it is possible to use merged inline annotation layers (e.g. a logical document layer
        and a POS layer) as a combined, single SGF layer and use separate SGF layers only when
        overlaps occur. In this case the XML-inherent hierarchies can be used for (inline) analyzing
        of wide parts of the annotated data while a reversion to SGF's use of the ID/IDREF mechanism
        should only be made if not avoidable.</textual></para><para class="po-block e450 e450"><textual class="po-textual">The performance figures for the Prolog fact base format show higher performance for
        simple queries but lower performance for more complex ones. These figures result from the
        fact that our corpus annotation makes heavy use of attributes, which leads to distributed
        information. We believe that a re-implemented Prolog fact base format could both reduce file
        size and speed up the querying.</textual></para></section><section class="po-hcontainer e451 e451" xml:id="sec.caveats"><title class="po-block e452 e452"><textual class="po-textual">Caveats and problems</textual></title><para class="po-block e453 e453"><textual class="po-textual">Up to now, several former inline annotation layers have been converted into SGF and the
        format as such is quite stable (although minor changes may occur). Apart from the huge
        amount of markup that is necessary to do this kind of analysis, problems may arise when the
        annotation layers that are stored in SGF are exported back into their original inline
        representation. This is especially true when the annotation layers contain empty elements,
        for which it is impossible to provide the exact position in the original document tree (of
        course the </textual><code class="po-atom e454 e454"><textual class="po-textual">base:segment</textual></code><textual class="po-textual"> attribute can be used for these elements as well; when
        a large number of empty elements appears in a row, the values of all their respective
          </textual><code class="po-atom e455 e455"><textual class="po-textual">base:segment</textual></code><textual class="po-textual"> attributes would be identical). Although our largest SGF
        instance is at 6 MB including optional whitespace segments (4.8 MB without optional
        whitespace segments), it is still smaller than the respective Prolog fact base
        representation at 14.3 MB, cf. </textual><xref class="po-milestone e456 e456" linkend="sec.prolog"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><para class="po-block e457 e457"><textual class="po-textual">When it comes to queries, SGF relies on the imported annotation layers. For this reason,
        there is no standard set of queries available and the execution time cannot be easily
        predicted.</textual></para></section></section><section class="po-hcontainer e458 e458" xml:id="sec.application"><title class="po-block e459 e459"><textual class="po-textual">Application of SGF</textual></title><para class="po-block e460 e460"><textual class="po-textual">Various application domains require the analysis of different information resources in
      order to answer a specific question. </textual><xref class="po-milestone e461 e461" linkend="Alink2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e462 e462" linkend="Alink2006a"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, for example, describe the analysis of multiple markup in the domain of digital forensics.
      In our project, we focus on linguistic phenomena, especially on anaphora resolution. Anaphora
      occurs when the interpretation of a linguistic unit (the anaphor) is dependent on the
      interpretation of another element in the previous context (the antecedent). The anaphor is
      often an abbreviated or reformulated reference to its antecedent and thus provides for the
      progression of discourse topics and discourse coherence. Anaphoric relations can be
      categorized according different axes (cf. </textual><xref class="po-milestone e463 e463" linkend="Mitkov2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for an overview): Type
      of anaphora (pronoun, NP, adverb, etc.), type of antecedent (e.g. nominal vs. abstract entity)
      and type of relation. In this paper, we will focus on nominal anaphora with nominal
      antecedents only. According the relation type, anaphoric relations may either express
      reference identity between the anaphor and its antecedent (</textual><xref class="po-milestone e464 e464" linkend="ex.1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) or the
      respective expressions are related via associative links (</textual><xref class="po-milestone e465 e465" linkend="ex.2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><orderedlist class="po-table e466 e466"><listitem class="po-container e467 e467"><para class="po-block e468 e468" xml:id="ex.1" xreflabel="Example 1"><textual class="po-textual">I met a man yesterday. He told me a story.
          (example taken from </textual><xref class="po-milestone e469 e469" linkend="Clark1977"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 414)</textual></para></listitem><listitem class="po-container e470 e470"><para class="po-block e471 e471" xml:id="ex.2" xreflabel="Example 2"><textual class="po-textual">I looked into the room. The ceiling was very high.
          (example taken from </textual><xref class="po-milestone e472 e472" linkend="Clark1977"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 415)</textual></para></listitem></orderedlist><para class="po-block e473 e473"><textual class="po-textual">In order to resolve anaphoric relations, different kinds of information have to be taken
      into account that are provided by different resources: POS tagger, Chunker, Parser, word net
      and ontologies. These resources provide information on gender or number agreement, noun
      phrases, grammatical function, lexico-semantic relations and domain or world knowledge. The
      resolution of the anaphoric relation given in </textual><xref class="po-milestone e474 e474" linkend="ex.1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> is dependent on agreement
      information of the pronoun </textual><emphasis class="po-inline e475 e475" role="ital"><textual class="po-textual">he</textual></emphasis><textual class="po-textual"> whereas the resolution of </textual><xref class="po-milestone e476 e476" linkend="ex.2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> requires the knowledge that a room typically has a ceiling which is
      provided in terminological nets such as </textual><emphasis class="po-inline e477 e477" role="ital"><textual class="po-textual">WordNet</textual></emphasis><textual class="po-textual"> (</textual><xref class="po-milestone e478 e478" linkend="Fellbaum1998"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) or other ontological resources.</textual><footnote class="po-popup e479 e479"><para class="po-block e480 e480"><textual class="po-textual">
          </textual><link class="po-inline e481 e481" xlink:actuate="onRequest" xlink:href="http://wordnet.princeton.edu/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://wordnet.princeton.edu/</textual></link><textual class="po-textual">
        </textual></para></footnote></para><para class="po-block e482 e482"><textual class="po-textual">We apply SGF for the integration of different resources and access to these data. In terms
      of levels and layers, each resource provides information for a specific level and this
      information is stored in a respective layer: A POS tagger provides information on part of
      speech tags and respective markup is generated in the tool's output file whereas access to a
      word net provides information on semantic relatedness of words in terms of distance between
      word's synsets. This information has to be stored and accessed for the anaphora resolution
      process. </textual><xref class="po-milestone e483 e483" linkend="fig.resource"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> exemplifies the integration: Each resource is applied
      and the resulting markup is stored independently from the primary data. On the basis of the
      information stored in SGF it is possible to query the data, to create new markup
      layers, or to create inline versions of the markup and the primary data.</textual></para><para class="po-block e484 e484"><textual class="po-textual">
      </textual><textual class="po-textual">
      </textual><figure class="po-container e485 e485" xml:id="fig.resource"><title class="po-block e486 e486"><textual class="po-textual">Application of multiple resources</textual></title><mediaobject class="po-container e487 e487"><imageobject class="po-container e488 e488"><imagedata class="po-meta e489 e489" fileref="../../../vol1/graphics/Stuehrenberg01/Stuehrenberg01-005.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><textual class="po-textual">
    </textual></para><section class="po-hcontainer e490 e490" xml:id="sec.sgf_analysis"><title class="po-block e491 e491"><textual class="po-textual">Analysing annotations</textual></title><para class="po-block e492 e492"><textual class="po-textual">In the application domain of anaphora resolution, a raw text document is taken as input
        and annotation layers are created for different levels. All layers are converted to SGF and
        can be analyzed afterwards. For the task of anaphora resolution, a set of antecedent
        candidates is created for each anaphoric element via an XSLT script (cf. </textual><xref class="po-milestone e493 e493" linkend="lst.xslt"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, an example candidate list is shown in </textual><xref class="po-milestone e494 e494" linkend="lst.candidates"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). The candidate list consists of several </textual><code class="po-atom e495 e495"><textual class="po-textual">semRel</textual></code><textual class="po-textual"> elements each containing one
          </textual><code class="po-atom e496 e496"><textual class="po-textual">anaphor</textual></code><textual class="po-textual"> element and several </textual><code class="po-atom e497 e497"><textual class="po-textual">antecedentCandidate</textual></code><textual class="po-textual"> elements.
        Information on the relation type between anaphor and correct antecedent is stored as
        attribute information in the </textual><code class="po-atom e498 e498"><textual class="po-textual">semRel</textual></code><textual class="po-textual"> element. The </textual><code class="po-atom e499 e499"><textual class="po-textual">anaphor</textual></code><textual class="po-textual"> element
        describes properties of the anaphoric element whereas the </textual><code class="po-atom e500 e500"><textual class="po-textual">antecedentCandidate</textual></code><textual class="po-textual"> elements describe
        information on the antecedent candidates. In both cases this information is stored in terms
        of attributes. Number or gender agreement can be computed from the </textual><code class="po-atom e501 e501"><textual class="po-textual">morpho</textual></code><textual class="po-textual">
        attribute. Additional information is given for
        part of speech (</textual><code class="po-atom e502 e502"><textual class="po-textual">pos</textual></code><textual class="po-textual">), grammatical function (</textual><code class="po-atom e503 e503"><textual class="po-textual">syntax</textual></code><textual class="po-textual">), dependency
        structure (</textual><code class="po-atom e504 e504"><textual class="po-textual">dependHead</textual></code><textual class="po-textual">), position of element in the whole document (</textual><code class="po-atom e505 e505"><textual class="po-textual">position</textual></code><textual class="po-textual">), the parent element on the logical document layer (</textual><code class="po-atom e506 e506"><textual class="po-textual">docParent</textual></code><textual class="po-textual">) as
        well as for the head noun both in surface form (</textual><code class="po-atom e507 e507"><textual class="po-textual">text</textual></code><textual class="po-textual">) and lemma
        (</textual><code class="po-atom e508 e508"><textual class="po-textual">lemma</textual></code><textual class="po-textual">). Together with other pieces of information a score for the most
        probable antecedent candidate can be computed (cf. </textual><xref class="po-milestone e509 e509" linkend="Goecke2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for a similar approach). For the
        anaphora resolution system each anaphor-candidate-pair is interpreted as a feature vector
        which is used for training a classifier. Information on the correct antecedent candidate is
        necessary in order to classify positive and negative training examples (cf. </textual><xref class="po-milestone e510 e510" linkend="Soon2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e511 e511" linkend="Strube2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e512 e512" linkend="Yang2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><para class="po-block e513 e513"><textual class="po-textual">The annotated example sentence in </textual><xref class="po-milestone e514 e514" linkend="lst.example"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> is an extract of a
        German newspaper article that is part of our corpus. The content of the text excerpt is as
        follows: </textual></para><para class="po-block e515 e515"><blockquote class="po-container e516 e516"><para class="po-block e517 e517"><textual class="po-textual">Lurup ist ein sozialer Brennpunkt der Hansestadt, ein Vorort mit Einzelhäusern, aber
            auch vielen Wohnblocks im Westen der Stadt.</textual></para></blockquote><textual class="po-textual"> which is translated into: </textual><blockquote class="po-container e518 e518"><para class="po-block e519 e519"><textual class="po-textual">Lurup is a social ghetto of the hanseatic city (Hansestadt), an outskirt with single
            unit houses but also many apartment blocks in the west of the city (Stadt).</textual></para></blockquote><textual class="po-textual">
      </textual></para><para class="po-block e520 e520"><textual class="po-textual">In </textual><xref class="po-milestone e521 e521" linkend="lst.example"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> all levels that are used in the </textual><emphasis class="po-inline e522 e522" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual"> project can be observed: the logical document structure (namespace
        prefix </textual><code class="po-atom e523 e523"><textual class="po-textual">doc</textual></code><textual class="po-textual">), the output of the commercial Parser/Tagger </textual><emphasis class="po-inline e524 e524" role="ital"><textual class="po-textual">Machinese Syntax</textual></emphasis><textual class="po-textual"> by Connexor Oy (namespace prefix </textual><code class="po-atom e525 e525"><textual class="po-textual">cnx</textual></code><textual class="po-textual">), the
        discourse entity level and the semantic relations level (namespace prefix </textual><code class="po-atom e526 e526"><textual class="po-textual">chs</textual></code><textual class="po-textual">).
        The segment </textual><code class="po-atom e527 e527"><textual class="po-textual">seg1</textual></code><textual class="po-textual"> delimits the whole text, while </textual><code class="po-atom e528 e528"><textual class="po-textual">seg2</textual></code><textual class="po-textual"> delimits a
        paragraph (containing a single sentence, cf. the </textual><code class="po-atom e529 e529"><textual class="po-textual">doc:text</textual></code><textual class="po-textual"> and
        </textual><code class="po-atom e530 e530"><textual class="po-textual">doc:para</textual></code><textual class="po-textual"> elements in the logical document layer and the
        </textual><code class="po-atom e531 e531"><textual class="po-textual">cnx:sentece</textual></code><textual class="po-textual"> element in the </textual><code class="po-atom e532 e532"><textual class="po-textual">cnx</textual></code><textual class="po-textual"> layer). The segments identified by
          </textual><code class="po-atom e533 e533"><textual class="po-textual">seg1589</textual></code><textual class="po-textual"> and </textual><code class="po-atom e534 e534"><textual class="po-textual">seg1620</textual></code><textual class="po-textual"> mark the two token (and respective discourse
        entities) "Hansestadt" and "Stadt". There is a
        cospecification relation (to be more specific: a hypernym relation) between these two
        discourse entities which is stored in the </textual><code class="po-atom e535 e535"><textual class="po-textual">chs:cospecLink</textual></code><textual class="po-textual"> element located in the
          </textual><code class="po-atom e536 e536"><textual class="po-textual">chs</textual></code><textual class="po-textual"> layer.</textual></para><figure class="po-container e537 e537" xml:id="lst.example"><title class="po-block e538 e538"><textual class="po-textual">SGF instance of a German newspaper text (excerpt)</textual></title><programlisting class="po-block e539 e539" xml:space="preserve"><textual class="po-textual">&lt;corpus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.text-technology.de/sekimo root.xsd"
  xmlns="http://www.text-technology.de/sekimo"
  xmlns:base="http://www.text-technology.de/sekimo"&gt;
  &lt;corpusData xml:id="c15" type="text"&gt;
  &lt;primaryData start="0" end="8208" fileref="c15-pd.txt" xml:lang="de"&gt;
  &lt;checksum algorithm="md5"&gt;6ee0021b23c56b5917703746579e9ce8&lt;/checksum&gt;
    &lt;/primaryData&gt;
    &lt;segments&gt;
      &lt;segment xml:id="seg1" type="char" start="0" end="8207"/&gt;
      &lt;segment xml:id="seg2" type="char" start="0" end="16"/&gt;
      &lt;segment xml:id="seg1577" type="char" start="4439" end="4567"/&gt;
      &lt;segment xml:id="seg1578" type="char" start="4439" end="4444"/&gt;
      &lt;segment xml:id="seg1589" type="char" start="4473" end="4487"/&gt;
      &lt;segment xml:id="seg1592" type="char" start="4477" end="4487"/&gt;
      &lt;segment xml:id="seg1620" type="seg" segments="seg1621 seg1623"/&gt;
      &lt;segment xml:id="seg1621" type="char" start="4557" end="4560"/&gt;
      &lt;segment xml:id="seg1623" type="char" start="4561" end="4566"/&gt;
      &lt;-- [...] --&gt;
    &lt;/segments&gt;
    &lt;annotation&gt;
      &lt;level xml:id="doc" priority="0"&gt;
        &lt;meta&gt;&lt;-- [...] --&gt;&lt;/meta&gt;
        &lt;layer xmlns:doc="http://www.text-technology.de/sekimo/doc"
          xsi:schemaLocation="http://www.text-technology.de/sekimo/doc doc.xsd"&gt;
          &lt;doc:text base:segment="seg1" xml:lang="de"&gt;
            &lt;doc:para base:segment="seg2" skip="no"/&gt;
            &lt;-- [...] --&gt;
          &lt;/doc:text&gt;
        &lt;/layer&gt;
      &lt;/level&gt;
    &lt;/annotation&gt;
    &lt;annotation&gt;
      &lt;level xml:id="cnx" priority="0"&gt;
        &lt;meta&gt;&lt;-- [...] --&gt;&lt;/meta&gt;
        &lt;layer xmlns:cnx="http://www.text-technology.de/cnx"
          xsi:schemaLocation="http://www.text-technology.de/cnx cnx.xsd"&gt;
          &lt;-- [...] --&gt;
          &lt;cnx:sentence base:segment="seg1577" id="w826" auto="no"&gt;
            &lt;-- [...] --&gt;
            &lt;cnx:token base:segment="seg1578" text="Lurup" dependHead="w828"
              pos="N" syntax="@NH" lemma="lurup" dependValue="subj" morpho="NOM"
              id="w827"/&gt;
            &lt;-- [...] --&gt;
            &lt;cnx:token base:segment="seg1592" text="Hansestadt" dependHead="w831"
              pos="N" syntax="@NH" lemma="hanse#stadt" dependValue="mod"
              morpho="FEM SG GEN" id="w833"/&gt;
            &lt;-- [...] --&gt;
            &lt;cnx:token base:segment="seg1621" text="der" dependHead="w848"
              pos="DET" syntax="@PREMOD" lemma="die" dependValue="det"
              morpho="Def FEM SG GEN" id="w847"/&gt;
            &lt;cnx:token base:segment="seg1623" text="Stadt" dependHead="w846"
              pos="N" syntax="@NH" lemma="stadt" dependValue="mod"
              morpho="FEM SG GEN" id="w848"/&gt;
          &lt;/cnx:sentence&gt;
          &lt;-- [...] --&gt;
        &lt;/layer&gt;
      &lt;/level&gt;
    &lt;/annotation&gt;
    &lt;annotation&gt;
      &lt;level xml:id="de" priority="1"&gt;
        &lt;meta&gt;&lt;-- [...] --&gt;&lt;/meta&gt;
        &lt;layer xmlns:chs="http://www.text-technology.de/sekimo/chs"
          xsi:schemaLocation="http://www.text-technology.de/sekimo/chs chs.xsd"&gt;
          &lt;-- [...] --&gt;
          &lt;chs:de base:segment="seg1589" deID="de226" headRef="w833" /&gt;
          &lt;chs:de base:segment="seg1620" deID="de231" headRef="w848" deType="nom"/&gt;
          &lt;-- [...] --&gt;
        &lt;/layer&gt;
      &lt;/level&gt;
      &lt;level xml:id="chs" priority="1"&gt;
        &lt;meta&gt;&lt;-- [...] --&gt;&lt;/meta&gt;
        &lt;layer xmlns:chs="http://www.text-technology.de/sekimo/chs"
          xsi:schemaLocation="http://www.text-technology.de/sekimo/chs
          chs.xsd"&gt;
          &lt;chs:semRel&gt;
            &lt;-- [...] --&gt;
            &lt;chs:cospecLink id="sr86" relType="hypernym" phorIDRef="de231"
              antecedentIDRefs="de226"/&gt;
            &lt;-- [...] --&gt;
          &lt;/chs:semRel&gt;
        &lt;/layer&gt;
      &lt;/level&gt;
    &lt;/annotation&gt;
  &lt;/corpusData&gt;
&lt;/corpus&gt;</textual></programlisting></figure><para class="po-block e540 e540"><textual class="po-textual">Apart from resources that have already been mentioned, further information is needed in
        order to create a suitable set of antecedent candidates for training and resolution. In
        general, a fixed search window in terms of markables (i.e. elements between which anaphoric
        relations can hold), sentences or paragraphs is chosen. This approach works well for pronoun
        anaphora due to the fact that pronouns tend to find their antecedents within a short
        distance (cf. </textual><xref class="po-milestone e541 e541" linkend="Mitkov2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). However, for the resolution of non-pronominal
        definite noun phrases (definite descriptions) and the processing of long texts the
        application of a fixed search window is not feasible because definite descriptions tend to
        find their antecedents at a greater distance than pronouns. For the corpus under
        investigation that has been manually annotated for anaphoric relations (cf. </textual><xref class="po-milestone e542 e542" linkend="Diewald2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for further information regarding the corpus and the annotation
        scheme), 26.8% of all non-pronominal anaphors (i.e. 20.9% of all anaphors in the corpus)
        find their antecedent at a distance of two or more paragraphs. We apply structural
        information to create candidate sets that include not only candidates at a short distance
        but also those at a larger distance. A small excerpt of the XSLT stylesheet that is used for
        the extraction is shown in </textual><xref class="po-milestone e543 e543" linkend="lst.xslt"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. </textual></para><figure class="po-container e544 e544" xml:id="lst.xslt"><title class="po-block e545 e545"><textual class="po-textual">Excerpt of the XSLT stylesheet used for extracting candidates</textual></title><programlisting class="po-block e546 e546" xml:space="preserve"><textual class="po-textual">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0"
  xmlns="http://www.text-technology.de/sekimo"
  xmlns:base="http://www.text-technology.de/sekimo"
  xmlns:doc="http://www.text-technology.de/sekimo/doc"
  xmlns:cnx="http://www.text-technology.de/cnx"
  xmlns:chs="http://www.text-technology.de/sekimo/chs"&gt;
  &lt;-- [...] --&gt;
  &lt;xsl:template match="chs:bridgingLink | chs:cospecLink"&gt;
    &lt;xsl:variable name="link" select="."/&gt;
    &lt;semRel&gt;
      &lt;xsl:attribute name="relationID" select="@id"/&gt;
      &lt;xsl:attribute name="type" select="local-name()"/&gt;
      &lt;xsl:for-each select="id(@phorIDRef)"&gt;
        &lt;xsl:variable name="anaphoraPosition"&gt;
          &lt;xsl:number level="single"/&gt;
        &lt;/xsl:variable&gt;
        &lt;-- [...] --&gt;
        &lt;anaphor&gt;
          &lt;-- [...] --&gt;
          &lt;xsl:copy-of select="idref(id(@base:segment))[name()='cnx:token']/@*"/&gt;
          &lt;xsl:variable name="segstart" select="id(@base:segment)/@start"/&gt;
          &lt;xsl:variable name="segend" select="id(@base:segment)/@end"/&gt;
          &lt;xsl:for-each select="//element()[contains(name(),'doc')]"&gt;
            &lt;xsl:if test="id(@base:segment)/@start &lt;= $segstart and
            id(@base:segment)/@end &gt;= $segend"&gt;
              &lt;xsl:attribute name="docParent"&gt;
                &lt;xsl:value-of select="name()"/&gt;
                &lt;xsl:text&gt;[&lt;/xsl:text&gt;
                &lt;xsl:number level="single"/&gt;
                &lt;xsl:text&gt;]&lt;/xsl:text&gt;
              &lt;/xsl:attribute&gt;
            &lt;/xsl:if&gt;
          &lt;/xsl:for-each&gt;
        &lt;/anaphor&gt;
        &lt;xsl:for-each select="preceding-sibling::chs:de[position() &lt;= $de_distance]"&gt;
          &lt;xsl:variable name="antecedentPosition"&gt;
            &lt;xsl:number level="single"/&gt;
          &lt;/xsl:variable&gt;
          &lt;antecedentCandidate&gt;
            &lt;-- [...] --&gt;
          &lt;/antecedentCandidate&gt;
        &lt;/xsl:for-each&gt;
      &lt;/xsl:for-each&gt;
    &lt;/semRel&gt;
  &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</textual></programlisting></figure><para class="po-block e547 e547"><textual class="po-textual">Because the </textual><code class="po-atom e548 e548"><textual class="po-textual">segment</textual></code><textual class="po-textual"> element is the central and critical mechanism in SGF
        (cf. </textual><xref class="po-milestone e549 e549" linkend="fig.sgf.id"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) we have to use the id() and idref() XPath functions to
        analyze elements derived from different annotation layers. </textual><xref class="po-milestone e550 e550" linkend="lst.candidates"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">
        shows a result candidate list, extracted with a maximum distance of 10 discourse entities.</textual></para><figure class="po-container e551 e551" xml:id="lst.candidates"><title class="po-block e552 e552"><textual class="po-textual">Candidate list extracted from the SGF instance</textual></title><programlisting class="po-block e553 e553" xml:space="preserve"><textual class="po-textual">&lt;candidateList xmlns="http://www.text-technology.de/sekimo"
  xmlns:base="http://www.text-technology.de/sekimo"
  maxDeDistance="10" filename="c15-sgf.xml"&gt;
  &lt;-- [...] --&gt;
  &lt;semRel relationID="sr86" type="cospecLink" subtype="hyperonym" phorIDRef="de231"
    antecedentIDRefs="de226"&gt;
    &lt;anaphor base:segment="seg1623" deID="de231" headRef="w848" deType="nom"
      text="Stadt" dependHead="w846" pos="N" syntax="@NH" lemma="stadt"
      dependValue="mod" morpho="FEM SG GEN" id="w848" position="195" type="char"
      start="4557" end="4566" docParent="doc:para[13]"/&gt;
    &lt;antecedentCandidate base:segment="seg1560" deID="de221" headRef="w815"
      deType="nom" text="Kind" pos="N" syntax="@NH" lemma="kind"
      morpho="NEU SG NOM" id="w815" position="185" deDistance="10" type="char"
      start="4375" end="4403" docParent="doc:para[12]"/&gt;
    &lt;-- [...] --&gt;
    &lt;antecedentCandidate base:segment="seg1587" deID="de225" headRef="w831"
      deType="nom" text="Brennpunkt" dependHead="w828" pos="N" syntax="@NH"
      lemma="brenn#punkt" dependValue="comp" morpho="MSC SG NOM" id="w831"
      position="189" deDistance="6" type="char" start="4449" end="4472"
      docParent="doc:para[13]"/&gt;
    &lt;antecedentCandidate correctAntecendent="yes" base:segment="seg1592"
      deID="de226" headRef="w833" deType="nom" text="Hansestadt" dependHead="w831"
      pos="N" syntax="@NH" lemma="hanse#stadt" dependValue="mod"
      morpho="FEM SG GEN" id="w833" position="190" deDistance="5"
      type="char" start="4473" end="4487" docParent="doc:para[13]"/&gt;
    &lt;antecedentCandidate base:segment="seg1598" deID="de227" headRef="w836"
      deType="nom" text="Vorort" pos="N" syntax="@NH" lemma="vorort"
      morpho="MSC SG NOM" id="w836" position="191" deDistance="4" type="char"
      start="4489" end="4499" docParent="doc:para[13]"/&gt;
    &lt;antecedentCandidate base:segment="seg1602" deID="de228" headRef="w838"
      deType="nom" text="Einzelhäusern" dependHead="w836" pos="N" syntax="@NH"
      lemma="einzelhaus" dependValue="mod" morpho="NEU PL DAT" id="w838"
      position="192" deDistance="3" type="char" start="4504" end="4517"
      docParent="doc:para[13]"/&gt;
    &lt;-- [...] --&gt;
  &lt;/semRel&gt;
&lt;/candidateList&gt;</textual></programlisting></figure><para class="po-block e554 e554"><textual class="po-textual">For all </textual><code class="po-atom e555 e555"><textual class="po-textual">antecedentCandidate</textual></code><textual class="po-textual"> elements (i.e. former </textual><code class="po-atom e556 e556"><textual class="po-textual">chs:de</textual></code><textual class="po-textual">
        elements) </textual><code class="po-atom e557 e557"><textual class="po-textual">position</textual></code><textual class="po-textual"> and </textual><code class="po-atom e558 e558"><textual class="po-textual">deDistance</textual></code><textual class="po-textual"> attributes have been added.
        Apart from the discourse structure that is used to model accessibility of antecedent
        candidates (cf. </textual><xref class="po-milestone e559 e559" linkend="Polanyi1988"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), the logical document structure provides
        information on the hierarchical structure of texts by describing
        the organisation of the text document in terms of chapters, sections, paragraphs, and the
        like and is stored in the </textual><code class="po-atom e560 e560"><textual class="po-textual">doc</textual></code><textual class="po-textual"> layer of the SGF instance.</textual><footnote class="po-popup e561 e561"><para class="po-block e562 e562"><textual class="po-textual">The logical document layer is a shortened variant of the DocBook schema (cf. </textual><xref class="po-milestone e563 e563" linkend="Bayerl2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for details).</textual></para></footnote><textual class="po-textual"> Based on this information which can be accessed from DocBook, OpenDocument, or
        LaTeX, a layout-oriented presentation can be generated which is application independent.
        Especially for texts from e-publishing sources a set of logical document structure elements
        is easily available which can be used to identify different text segments. The influence of
        the logical document structure on the choice of an antecedent might be either (a) a direct
        influence on the markables (or antecedent life span) or (b) an influence on the search
        window (cf. </textual><xref class="po-milestone e564 e564" linkend="Goecke2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). In our candidate list shown in </textual><xref class="po-milestone e565 e565" linkend="lst.candidates"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> the </textual><code class="po-atom e566 e566"><textual class="po-textual">docParent</textual></code><textual class="po-textual"> attribute supplies information about
        the (virtual) parent element of the logical document layer, i.e. the element of the logical
        document layer that refers to a segment whose start position is lower or equal and whose end
        position is greater or equal to that of the segment referred to by the element analyzed. </textual></para><para class="po-block e567 e567"><textual class="po-textual">Regarding the document structure, corpus evidence shows that some discourse entities are
        more prominent throughout the whole document than others, e.g. markables occurring in the
        abstract of a text might be accessible during the whole text whereas markables that occur in
        a footnote-structure are less likely as an antecedent for anaphoric elements in the main
        text. Corpus evidence shows that in a corpus consisting of 4323 anaphoric relations 65.3% of
        all anaphor-antecedent-pairs are located in the same segment. Regarding the remaining
        anaphor-antecedent-pairs, we expect markables described in hierarchically higher elements
        (e.g. subsection) to be much more prone to finding their antecedents in structuring elements of a
        higher level (section) than in a preceding but hierarchically lower segment
        (subsubsection). Thus, the influence on the search window may either enlarge the search
        window, i.e. the antecedent may be located outside the standard window (e.g. located in the
        whole paragraph or in a preceding one), or may narrow the search window, e.g. due to the
        start of a new chapter or section. Furthermore, the position of an antecedent candidate
        within a paragraph gives hints as to how likely that candidate is chosen as the correct one.
        An analysis of our corpus data shows that 50.2% of the antecedents are located
        paragraph-initial and 29.1% are located paragraph-final whereas only 20.2% are located in
        the middle of the paragraph. Thus in addition to the information regarding the search
        window, information on logical document structure might give cues for selecting the correct
        antecedent from a set of candidates.</textual></para></section><section class="po-hcontainer e568 e568" xml:id="sec.serengeti"><title class="po-block e569 e569"><textual class="po-textual">SGF as import and export format</textual></title><para class="po-block e570 e570"><textual class="po-textual">While the main reason for the development of SGF was analyzing relations between
        elements derived from different annotations (cf. </textual><xref class="po-milestone e571 e571" linkend="sec.application"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), the
        format is used in a another application in our project. The </textual><emphasis class="po-inline e572 e572" role="ital"><textual class="po-textual">Serengeti</textual></emphasis><textual class="po-textual"> web-based annotation tool described in </textual><xref class="po-milestone e573 e573" linkend="Stührenberg2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> is currently enhanced to support different annotation schemes. This upcoming version of
        Serengeti will be used not only at Bielefeld University but also as an expert annotation
        tool in the </textual><emphasis class="po-inline e574 e574" role="ital"><textual class="po-textual">AnaWiki</textual></emphasis><textual class="po-textual"> project (cf. </textual><xref class="po-milestone e575 e575" linkend="Poesio2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and will use SGF as its import and export format. For this reason, an SGF API (written
        in Perl) was implemented that allows the mapping of SGF to the relational MySQL database
        that is used as a backend for Serengeti.</textual></para><para class="po-block e576 e576"><textual class="po-textual">During this development a log functionality was added to SGF ensuring that the
        information of added, deleted or modified data is not only stored in the Serengeti
        application but can be included in the exported SGF instance. A </textual><code class="po-atom e577 e577"><textual class="po-textual">log</textual></code><textual class="po-textual"> can be
        stored as child element of an annotation level and contains at least one log
        </textual><code class="po-atom e578 e578"><textual class="po-textual">entry</textual></code><textual class="po-textual">, consisting of optional metadata and one or more </textual><code class="po-atom e579 e579"><textual class="po-textual">action</textual></code><textual class="po-textual">
        elements. The user responsible for the log entry is identified via a respective attribute,
        together with the time the entry was made (</textual><code class="po-atom e580 e580"><textual class="po-textual">timestamp</textual></code><textual class="po-textual"> attribute). Each action is
        specified by its </textual><code class="po-atom e581 e581"><textual class="po-textual">type</textual></code><textual class="po-textual"> attribute (</textual><emphasis class="po-inline e582 e582" role="ital"><textual class="po-textual">add</textual></emphasis><textual class="po-textual">,
          </textual><emphasis class="po-inline e583 e583" role="ital"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e584 e584" role="ital"><textual class="po-textual">modify</textual></emphasis><textual class="po-textual">) and
        refers to the affected elements via an optional IDREF </textual><code class="po-atom e585 e585"><textual class="po-textual">affectedItem</textual></code><textual class="po-textual"> attribute
        (not when the </textual><code class="po-atom e586 e586"><textual class="po-textual">type</textual></code><textual class="po-textual"> attribute's value is set to </textual><emphasis class="po-inline e587 e587" role="ital"><textual class="po-textual">add</textual></emphasis><textual class="po-textual">). The content of an </textual><code class="po-atom e588 e588"><textual class="po-textual">action</textual></code><textual class="po-textual"> element is a sequence of elements
        from any namespace (otherwise modification of segments would not be possible), however, XML
        Schema's </textual><code class="po-atom e589 e589"><textual class="po-textual">processContents</textual></code><textual class="po-textual"> attribute is set to </textual><emphasis class="po-inline e590 e590" role="ital"><textual class="po-textual">skip</textual></emphasis><textual class="po-textual">, therefore, it is possible to use the same IDs several times (e.g. when
        modifying a </textual><code class="po-atom e591 e591"><textual class="po-textual">segment</textual></code><textual class="po-textual"> element).</textual></para><para class="po-block e592 e592"><textual class="po-textual">In addition, an SGF application for storing lexical chains was developed. </textual><emphasis class="po-inline e593 e593" role="ital"><textual class="po-textual">SGF-LC</textual></emphasis><textual class="po-textual">, a lightweight XSD that is imported into the SGF base layer
        and that makes use of the attributes provided by the base layer is described in </textual><xref class="po-milestone e594 e594" linkend="Waltinger2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and is used as export format for the </textual><emphasis class="po-inline e595 e595" role="ital"><textual class="po-textual">Scientific Workplace</textual></emphasis><textual class="po-textual"> tool</textual><footnote class="po-popup e596 e596"><para class="po-block e597 e597"><textual class="po-textual">
            </textual><link class="po-inline e598 e598" xlink:actuate="onRequest" xlink:href="http://www.scientific-workplace.org/" xlink:show="new" xlink:title="Scientific Workplace Homepage" xlink:type="simple"><textual class="po-textual">http://www.scientific-workplace.org/</textual></link><textual class="po-textual">
          </textual></para></footnote><textual class="po-textual"> developed by the project A4 (</textual><emphasis class="po-inline e599 e599" role="ital"><textual class="po-textual">Indogram</textual></emphasis><textual class="po-textual">) of our
        Research Group.</textual></para></section></section><section class="po-hcontainer e600 e600" xml:id="sec.conclusion"><title class="po-block e601 e601"><textual class="po-textual">Conclusion and outlook</textual></title><para class="po-block e602 e602"><textual class="po-textual">In this paper we presented the Sekimo Generic Format (SGF) as an alternative approach for
      storing multiple annotated data amongst a variety of already established architectures and
      formats. SGF is used as an XML-based solution for storing and especially analyzing a corpus of
      multiple annotated documents (multi-rooted trees) in the linguistic application domain of
      anaphora resolution. Future work regarding our linguistic task of anaphora resolution focuses
      on the analysis of relations between logical document structure and the distribution of
      antecedent detection. On the technical side, we will adapt SGF to the upcoming version 1.1 of
      XML Schema, which includes assertions similar to the Schematron asserts used in the current
      version of SGF. Other possible developments include the implementation of converter scripts
      between SGF and some of the graph-based architectures mentioned and the further testing of the
      efficiency of SGF in large scale corpora using a wider set of sample queries.</textual></para></section><bibliography class="po-hcontainer e603 e603"><title class="po-block e604 e604"><textual class="po-textual">References</textual></title><bibliomixed class="po-block e605 e605" xml:id="Alink2006" xreflabel="Alink et al., 2006"><textual class="po-textual">Alink, W., Bhoedjang, R., de
      Vries, A. P., and Boncz, P. A. </textual><emphasis class="po-inline e606 e606" role="ital"><textual class="po-textual">Efficient XQuery Support for Stand-Off
        Annotation</textual></emphasis><textual class="po-textual">. In: Proceedings of the 3rd International Workshop on XQuery
      Implementation, Experience and Perspectives, in cooperation with ACM SIGMOD, Chicago, USA,
      2006. </textual></bibliomixed><bibliomixed class="po-block e607 e607" xml:id="Alink2006a" xreflabel="Alink et al., 2006a"><textual class="po-textual">Alink, W., Jijkoun, V., Ahn,
      D., and de Rijke, M. </textual><emphasis class="po-inline e608 e608" role="ital"><textual class="po-textual">Representing and Querying Multi-dimensional Markup
        for Question Answering</textual></emphasis><textual class="po-textual">. In: Proceedings of the 5th EACL Workshop on NLP and XML
      (NLPXML-2006): Multi-Dimensional Markup in Natural Language Processing}, Trento, 2006.</textual></bibliomixed><bibliomixed class="po-block e609 e609" xml:id="Bayerl2003" xreflabel="Bayerl et al., 2003"><textual class="po-textual">Bayerl, P. S., Lüngen, H.,
      Goecke, D., Witt, A. and Naber, D. </textual><emphasis class="po-inline e610 e610" role="ital"><textual class="po-textual">Methods for the semantic analysis of
        document markup</textual></emphasis><textual class="po-textual">. In: Roisin, C.; Muson, E. and Vanoirbeek, C. (ed.), Proceedings
      of the 3rd ACM Symposium on Document Engineering (DocEng), Grenoble, pages 161-170, 2003. 
      doi:</textual><biblioid class="po-atom e611 doi e611"><textual class="po-textual">10.1145/958220.958250</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e612 e612" xml:id="Bird1999" xreflabel="Bird and Liberman, 1999"><textual class="po-textual">Bird, S. and Liberman,
        M.</textual><emphasis class="po-inline e613 e613" role="ital"><textual class="po-textual">Annotation graphs as a framework for multidimensional linguistic
        data analysis</textual></emphasis><textual class="po-textual">. In: Proceedings of the Workshop "Towards Standards and Tools for
      Discourse Tagging", pages 1–10. Association for Computational Linguistics, 1999.</textual></bibliomixed><bibliomixed class="po-block e614 e614" xml:id="Bird2000" xreflabel="Bird et al., 2000"><textual class="po-textual"> Bird, S., Day, D., Garofolo, J.,
      Henderson,J., Laprun, C. and Liberman,M. </textual><emphasis class="po-inline e615 e615" role="ital"><textual class="po-textual">ATLAS: A flexible and
        extensible architecture for linguistic annotation</textual></emphasis><textual class="po-textual">. In: Proceedings of the Second
      International Conference on Language Resources and Evaluation, pages 1699–1706, Paris, 2000.
      European Language Resources Association. </textual></bibliomixed><bibliomixed class="po-block e616 e616" xml:id="Bird2001" xreflabel="Bird and Liberman, 2001"><textual class="po-textual">Bird, S. and Liberman, M.
        </textual><emphasis class="po-inline e617 e617" role="ital"><textual class="po-textual">A formal framework for linguistic annotation</textual></emphasis><textual class="po-textual">. Speech
      Communication, 33(1–2): pages 23–60, 2001. 
      doi:</textual><biblioid class="po-atom e618 doi e618"><textual class="po-textual">10.1016/S0167-6393(00)00068-6</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e619 e619" xml:id="Bird2006" xreflabel="Bird et al., 2006"><textual class="po-textual"> Bird, S., Chen, Y., Davidson, S.,
      Lee, H. and Zheng,Y.  </textual><emphasis class="po-inline e620 e620" role="ital"><textual class="po-textual">Designing and Evaluating an XPath Dialect for
        Linguistic Queries</textual></emphasis><textual class="po-textual">. In: Proceedings of the 22nd International Conference on Data
      Engineering (ICDE), Atlanta, USA., 2006. 
      doi:</textual><biblioid class="po-atom e621 doi e621"><textual class="po-textual">10.1109/ICDE.2006.48</textual></biblioid><textual class="po-textual">. </textual></bibliomixed><bibliomixed class="po-block e622 e622" xml:id="Carletta2003" xreflabel="Carletta et al., 2003"><textual class="po-textual">Carletta, J., Kilgour, J.,
      O’Donnel, T. J., Evert, S. and Voormann, H. </textual><emphasis class="po-inline e623 e623" role="ital"><textual class="po-textual">The NITE Object Model
        Library for Handling Structured Linguistic Annotation on Multimodal Data Sets</textual></emphasis><textual class="po-textual">.
      In: Proceedings of the EACL Workshop on Language Technology and the Semantic Web (3rd Workshop
      on NLP and XML (NLPXML-2003)), Budapest, Ungarn, 2003. </textual></bibliomixed><bibliomixed class="po-block e624 e624" xml:id="Clark1977" xreflabel="Clark, 1977"><textual class="po-textual">Clark, H. (1977). </textual><emphasis class="po-inline e625 e625" role="ital"><textual class="po-textual">Bridging</textual></emphasis><textual class="po-textual">. In: Johnson-Laird, P.N. and Wason, P.C. (eds.): Thinking: Readings in
      Cognitive Science. Cambridge : Cambridge University Press, 1977, S. 411 - 420. </textual></bibliomixed><bibliomixed class="po-block e626 e626" xml:id="Cowan2006" xreflabel="Cowan et al., 2006"><textual class="po-textual"> J. Cowan, J. Tennison, and Piez,
      W. </textual><emphasis class="po-inline e627 e627" role="ital"><textual class="po-textual">LMNL update</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup Languages,
      Montréal, Québec, 2006. </textual></bibliomixed><bibliomixed class="po-block e628 e628" xml:id="DeRose2001" xreflabel="DeRose et al., 2001"><textual class="po-textual"> DeRose, S., Maler, E. and
      Orchard, D. </textual><emphasis class="po-inline e629 e629" role="ital"><textual class="po-textual">XML Linking Language (XLink) Version 1.0</textual></emphasis><textual class="po-textual">. W3C
      Recommendation, World Wide Web Consortium, June 2001. Online: </textual><link class="po-inline e630 e630" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2001/REC-xlink-20010627/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2001/REC-xlink-20010627/</textual></link><textual class="po-textual">. </textual></bibliomixed><bibliomixed class="po-block e631 e631" xml:id="DeRose2004" xreflabel="DeRose, 2004"><textual class="po-textual">DeRose, S. J. </textual><emphasis class="po-inline e632 e632" role="ital"><textual class="po-textual">Markup Overlap: A Review and a Horse</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup
      Languages, 2004. </textual></bibliomixed><bibliomixed class="po-block e633 e633" xml:id="Diewald2008" xreflabel="Diewald et al. (submitted)"><textual class="po-textual">Diewald, N.,
      Stührenberg, M., Garbar, A. and Goecke, D. </textual><emphasis class="po-inline e634 e634" role="ital"><textual class="po-textual">Serengeti -- Webbasierte
        Annotation semantischer Relationen</textual></emphasis><textual class="po-textual">. To appear in LDV Forum - Zeitschrift für
      Computerlinguistik und Sprachtechnologie.</textual></bibliomixed><bibliomixed class="po-block e635 e635" xml:id="Dipper2005" xreflabel="Dipper, 2005"><textual class="po-textual">Dipper, S. </textual><emphasis class="po-inline e636 e636" role="ital"><textual class="po-textual">XML-based stand-off representation and exploitation of multi-level linguistic
      annotation</textual></emphasis><textual class="po-textual">. In: Proceedings of Berliner XML Tage 2005 (BXML 2005), pages 39–50,
      Berlin, Deutschland, 2005. </textual></bibliomixed><bibliomixed class="po-block e637 e637" xml:id="Dipper2007" xreflabel="Dipper et al., 2007"><textual class="po-textual"> Dipper, S., Götze, M.,
      Küssner, U. and Stede, M. </textual><emphasis class="po-inline e638 e638" role="ital"><textual class="po-textual">Representing and Querying Standoff
      XML</textual></emphasis><textual class="po-textual">. In: Rehm, G., Witt, A. and Lemnitzer, L. editors, Datenstrukturen für
      linguistische Ressourcen und ihre Anwendungen. Data Structures for Linguistic Resources and
      Applications. Proceedings of the Biennial GLDV Conference 2007, pages 337–346, Tübingen, 2007.
      Gunter Narr Verlag. </textual></bibliomixed><bibliomixed class="po-block e639 e639" xml:id="Durusau2002" xreflabel="Durusau and O'Donnell, 2002"><textual class="po-textual"> Durusau, P. and
      O'Donnell, M.B.. </textual><emphasis class="po-inline e640 e640" role="ital"><textual class="po-textual">Concurrent Markup for XML Documents</textual></emphasis><textual class="po-textual">. In:
      Proceedings of the XML Europe conference 2002.</textual></bibliomixed><bibliomixed class="po-block e641 e641" xml:id="Fellbaum1998" xreflabel="Fellbaum, 1998"><textual class="po-textual">Fellbaum, C. </textual><emphasis class="po-inline e642 e642" role="ital"><textual class="po-textual">WordNet: An electronic lexical database</textual></emphasis><textual class="po-textual">. Cambridge, Mass.: MIT Press, 1998.</textual></bibliomixed><bibliomixed class="po-block e643 e643" xml:id="Gleim2007" xreflabel="Gleim et al., 2007"><textual class="po-textual"> Gleim, R., Mehler, A. and
      Eikmeyer, H.-J. </textual><emphasis class="po-inline e644 e644" role="ital"><textual class="po-textual">Representing and Maintaining Large Corpora</textual></emphasis><textual class="po-textual">.
      In: Proceedings of the Corpus Linguistics 2007 Conference, Birmingham (UK), 2007.</textual></bibliomixed><bibliomixed class="po-block e645 e645" xml:id="Goecke2006" xreflabel="Goecke and Witt, 2006"><textual class="po-textual">Goecke, D. and Witt, A.
        </textual><emphasis class="po-inline e646 e646" role="ital"><textual class="po-textual">Exploiting Logical Document Structure for Anaphora
      Resolution.</textual></emphasis><textual class="po-textual"> In: Proceedings of the 5th International Conference on Language
      Resources and Evaluation (LREC 2006). Genoa, Italy, 2006. </textual></bibliomixed><bibliomixed class="po-block e647 e647" xml:id="Goecke2007" xreflabel="Goecke et al. (to appear)"><textual class="po-textual">Goecke, D., Stührenberg,
      M. and Wandmacher, T. </textual><emphasis class="po-inline e648 e648" role="ital"><textual class="po-textual">Extraction and representation of semantic
        relations for resolving definite descriptions</textual></emphasis><textual class="po-textual">. To appear in LDV Forum -
      Zeitschrift für Computerlinguistik und Sprachtechnologie.</textual></bibliomixed><bibliomixed class="po-block e649 e649" xml:id="Buchkapitel" xreflabel="Goecke et al., 2008"><textual class="po-textual"> Goecke, D., Lüngen, H.,
      Metzing, D., Stührenberg, M. and Witt, A. </textual><emphasis class="po-inline e650 e650" role="ital"><textual class="po-textual">Different Views on Markup.
        Distinguishing levels and layers</textual></emphasis><textual class="po-textual">. In: Linguistic modeling of information and
      Markup Languages. Contributions to language technology. Springer, 2008.</textual></bibliomixed><bibliomixed class="po-block e651 e651" xml:id="Grosso2003" xreflabel="Grosso et al., 2003"><textual class="po-textual"> Grosso, P., Maler, E., Marsh,
      J. and Walsh, N. </textual><emphasis class="po-inline e652 e652" role="ital"><textual class="po-textual">XPointer Framework</textual></emphasis><textual class="po-textual">. W3C Recommendation,
      World Wide Web Consortium, March 2003. Online: </textual><link class="po-inline e653 e653" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2003/REC-xptr-framework-20030325/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2003/REC-xptr-framework-20030325/</textual></link><textual class="po-textual">. </textual></bibliomixed><bibliomixed class="po-block e654 e654" xml:id="Hamp1997" xreflabel="Hamp and Feldweg, 1997"><textual class="po-textual">Hamp, B. and Feldweg, H.
        </textual><emphasis class="po-inline e655 e655" role="ital"><textual class="po-textual">GermaNet - a Lexical-Semantic Net for German</textual></emphasis><textual class="po-textual">. In:
      Proceedings of ACL workshop "Automatic Information Extraction and Building of Lexical
      Semantic Resources for NLP Applications", pages 9–15, New Brunswick, New Jersey,
      1997. Association for Computational Linguistics. </textual></bibliomixed><bibliomixed class="po-block e656 e656" xml:id="Hilbert2005" xreflabel="Hilbert, 2005"><textual class="po-textual"> Hilbert, M. </textual><emphasis class="po-inline e657 e657" role="ital"><textual class="po-textual">MuLaX – ein Modell zur Verarbeitung mehrfach XML-strukturierter Daten</textual></emphasis><textual class="po-textual">. Diploma
      thesis, Bielefeld University, 2005. </textual></bibliomixed><bibliomixed class="po-block e658 e658" xml:id="Hilbert2005a" xreflabel="Hilbert et al., 2005"><textual class="po-textual"> M. Hilbert, O. Schonefeld,
      and A. Witt. </textual><emphasis class="po-inline e659 e659" role="ital"><textual class="po-textual">Making CONCUR work</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme
      Markup Languages, 2005. </textual></bibliomixed><bibliomixed class="po-block e660 e660" xml:id="Holt2006" xreflabel="Holt et al., 2006"><textual class="po-textual"> Holt, R., Schürr, A., Elliott Sim,
      S and Winter, A. </textual><emphasis class="po-inline e661 e661" role="ital"><textual class="po-textual">GXL: A graph-based standard exchange format for
      reengineering</textual></emphasis><textual class="po-textual">. In: Science of Computer Programming, 60(2): 149-170, 2006. 
      doi:</textual><biblioid class="po-atom e662 doi e662"><textual class="po-textual">10.1016/j.scico.2005.10.003</textual></biblioid><textual class="po-textual">.
    </textual></bibliomixed><bibliomixed class="po-block e663 e663" xml:id="Huitfeldt2001" xreflabel="Huitfeldt and Sperberg-McQueen, 2001"><textual class="po-textual"> Huitfeldt,
      C. and Sperberg-McQueen, C.M. </textual><emphasis class="po-inline e664 e664" role="ital"><textual class="po-textual">Texmecs: An experimental markup
        meta-language for complex documents</textual></emphasis><textual class="po-textual">. Markup Languages and Complex Documents
      (MLCD) Project, Februar 2001. </textual></bibliomixed><bibliomixed class="po-block e665 e665" xml:id="Ide2004" xreflabel="Ide and Romary, 2004"><textual class="po-textual"> Ide, N. and Romary, L. </textual><emphasis class="po-inline e666 e666" role="ital"><textual class="po-textual">International Standard for a Linguistic Annotation Framework</textual></emphasis><textual class="po-textual">. Journal
      of Natural Language Engineering, 10(3-4): pages 211-225, 2004.
      doi:</textual><biblioid class="po-atom e667 doi e667"><textual class="po-textual">10.1017/S135132490400350X</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e668 e668" xml:id="Ide2007a" xreflabel="Ide and Romary, 2007"><textual class="po-textual"> Ide, N. and Romary, L.
        </textual><emphasis class="po-inline e669 e669" role="ital"><textual class="po-textual">Towards International Standards for Language Resources</textual></emphasis><textual class="po-textual">. In:
      Dybkjaer, L., Hemsen, H., and Minker, W., editors, Evaluation of Text and Speech Systems,
      pages 263--284. Springer. </textual></bibliomixed><bibliomixed class="po-block e670 e670" xml:id="Ide2007" xreflabel="Ide and Suderman, 2007"><textual class="po-textual"> Ide, N. and Suderman, K.
        </textual><emphasis class="po-inline e671 e671" role="ital"><textual class="po-textual">GrAF: A Graph-based Format for Linguistic Annotations</textual></emphasis><textual class="po-textual">. In:
      Proceedings of the Linguistic Annotation Workshop, pages 1-8, Prague, Czech Republic.
      Association for Computational Linguistics, 2007.</textual></bibliomixed><bibliomixed class="po-block e672 e672" xml:id="Laprun2002" xreflabel="Laprun et al., 2002"><textual class="po-textual"> Laprun, C., Fiscus, J. G.,
      Garofolo, J. and Pajot, S. </textual><emphasis class="po-inline e673 e673" role="ital"><textual class="po-textual">Recent improvements to the ATLAS
      architecture</textual></emphasis><textual class="po-textual">. In: Proceedings of HLT 2002, Second International Conference on Human
      Language Technology Research, 2002. </textual></bibliomixed><bibliomixed class="po-block e674 e674" xml:id="RELAX2003" xreflabel="ISO/IEC 19757-2:2003"><textual class="po-textual"> ISO/IEC 19757-2:2003.
        </textual><emphasis class="po-inline e675 e675" role="ital"><textual class="po-textual">Information technology – Document Schema Definition Language (DSDL) –
        Part 2: Regular-grammar-based validation – RELAX NG (ISO/IEC 19757-2)</textual></emphasis><textual class="po-textual">.
      International Standard, International Organization for Standardization, Geneva, 2003. </textual></bibliomixed><bibliomixed class="po-block e676 e676" xml:id="Schematron" xreflabel="ISO/IEC 19757-3:2006"><textual class="po-textual"> ISO/IEC 19757-3:2006.
        </textual><emphasis class="po-inline e677 e677" role="ital"><textual class="po-textual">Information technology – Document Schema Definition Language (DSDL) –
        Part 3: Rule-based validation – Schematron</textual></emphasis><textual class="po-textual">. International standard, International
      Organization for Standardization, Geneva, 2006. </textual></bibliomixed><bibliomixed class="po-block e678 e678" xml:id="Jagadish2004" xreflabel="Jagadish et al., 2004"><textual class="po-textual"> Jagadish, H. V.,
      Lakshmanany, L. V. S., Scannapieco, M., Srivastava, D. and Wiwatwattana, N. </textual><emphasis class="po-inline e679 e679" role="ital"><textual class="po-textual">Colorful XML: One hierarchy isn’t enough</textual></emphasis><textual class="po-textual">. In: Proceedings of ACM
      SIGMOD International Conference on Management of Data (SIGMOD 2004), pages 251–262, Paris,
      June 13-18 2004. ACM Press New York, NY, USA. 
      doi:</textual><biblioid class="po-atom e680 doi e680"><textual class="po-textual">10.1145/1007568.1007598</textual></biblioid><textual class="po-textual">. </textual></bibliomixed><bibliomixed class="po-block e681 e681" xml:id="Kay2008" xreflabel="Kay 2008"><textual class="po-textual"> M. Kay. </textual><emphasis class="po-inline e682 e682" role="ital"><textual class="po-textual">XSLT 2.0 and
        XPath 2.0 Programmer’s Reference</textual></emphasis><textual class="po-textual">. Wiley Publishing, Indianapolis, 4th edition,
      2008. </textual></bibliomixed><bibliomixed class="po-block e683 e683" xml:id="LeMaitre2006" xreflabel="Le Maitre, 2006"><textual class="po-textual"> Le Maitre, J. </textual><emphasis class="po-inline e684 e684" role="ital"><textual class="po-textual">Describing multistructured XML documents by means of delay nodes</textual></emphasis><textual class="po-textual">. In:
      DocEng ’06: Proceedings of the 2006 ACM symposium on Document engineering, pages 155–164, New
      York, NY, USA, 2006. ACM Press. 
      doi:</textual><biblioid class="po-atom e685 doi e685"><textual class="po-textual">10.1145/1166160.1166200</textual></biblioid><textual class="po-textual">. </textual></bibliomixed><bibliomixed class="po-block e686 e686" xml:id="Mitkov2002" xreflabel="Mitkov, 2002"><textual class="po-textual">Mitkov, R. </textual><emphasis class="po-inline e687 e687" role="ital"><textual class="po-textual">Anaphora resolution</textual></emphasis><textual class="po-textual">. London: Longman, 2002</textual></bibliomixed><bibliomixed class="po-block e688 e688" xml:id="Poesio2008" xreflabel="Poesio and Kruschwitz 2008"><textual class="po-textual"> Poesio, M. and
      Kruschwitz, U. </textual><emphasis class="po-inline e689 e689" role="ital"><textual class="po-textual">Anawiki: Creating anaphorically annotated resources
        through web cooperation</textual></emphasis><textual class="po-textual">. In: Proceedings of LREC 2008. </textual></bibliomixed><bibliomixed class="po-block e690 e690" xml:id="Polanyi1988" xreflabel="Polanyi, 1988"><textual class="po-textual"> Polanyi, L. </textual><emphasis class="po-inline e691 e691" role="ital"><textual class="po-textual">A
        formal model of the structure of discourse</textual></emphasis><textual class="po-textual">. In: Journal of Pragmatics 12 (1988),
      pages 601-638. doi:</textual><biblioid class="po-atom e692 doi e692"><textual class="po-textual">10.1016/0378-2166(88)90050-1</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e693 e693" xml:id="Robertson2002" xreflabel="Robertson, 2002"><textual class="po-textual"> E. Robertson. </textual><emphasis class="po-inline e694 e694" role="ital"><textual class="po-textual">Combining Schematron with other XML Schema languages</textual></emphasis><textual class="po-textual">, Juni 2002.
      Online: </textual><link class="po-inline e695 e695" xlink:actuate="onRequest" xlink:href="http://www.topologi.com/public/Schtrn_XSD/Paper.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.topologi.com/public/Schtrn_XSD/Paper.html</textual></link><textual class="po-textual">. </textual></bibliomixed><bibliomixed class="po-block e696 e696" xml:id="Schonefeld2007" xreflabel="Schonefeld, 2007"><textual class="po-textual"> O. Schonefeld. </textual><emphasis class="po-inline e697 e697" role="ital"><textual class="po-textual">XCONCUR and XCONCUR-CL: A constraint-based approach for the validation of
        concurrent markup</textual></emphasis><textual class="po-textual">. In: Rehm, G., Witt, A., Lemnitzer, L. (eds.), Datenstrukturen
      für linguistische Ressourcen und ihre Anwendungen. Data Structures for Linguistic Resources
      and Applications. Proceedings of the Biennial GLDV Conference 2007, Tübingen, Germany, 2007.
      Gunter Narr Verlag. </textual></bibliomixed><bibliomixed class="po-block e698 e698" xml:id="Soon2001" xreflabel="Soon et al., 2001"><textual class="po-textual">Soon, W.M., Lim, D.C.Y. and Ng,
      H.T. (2001). </textual><emphasis class="po-inline e699 e699" role="ital"><textual class="po-textual">A Machine Learning Approach to Coreference Resolution of
        Noun Phrases</textual></emphasis><textual class="po-textual">. In: Computational Linguistics 27 (2001), No. 4, pages 521-544. 
      doi:</textual><biblioid class="po-atom e700 doi e700"><textual class="po-textual">10.1162/089120101753342653</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e701 e701" xml:id="Simons2001" xreflabel="Simons and Bird, 2003"><textual class="po-textual"> G. Simons and S. Bird.
        </textual><emphasis class="po-inline e702 e702" role="ital"><textual class="po-textual">OLAC Metadata</textual></emphasis><textual class="po-textual">. OLAC: Open Language Archives Community,
      2003. Online: </textual><link class="po-inline e703 e703" xlink:actuate="onRequest" xlink:href="http://www.language-archives.org/OLAC/metadata.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.language-archives.org/OLAC/metadata.html</textual></link><textual class="po-textual">. </textual></bibliomixed><bibliomixed class="po-block e704 e704" xml:id="Sperberg-McQueen2000" xreflabel="Sperberg-McQueen et al., 2000"><textual class="po-textual">Sperberg-McQueen, C. M., Huitfeldt, C. and Renear, A.. </textual><emphasis class="po-inline e705 e705" role="ital"><textual class="po-textual">Meaning and
        Interpretation of markup</textual></emphasis><textual class="po-textual">. Markup Languages - Theory &amp; Practice, 2, pages
      215-234, 2000. doi:</textual><biblioid class="po-atom e706 doi e706"><textual class="po-textual">10.1162/109966200750363599</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e707 e707" xml:id="Sperberg-McQueen2002" xreflabel="Sperberg-McQueen et al., 2002"><textual class="po-textual">Sperberg-McQueen, C. M., Dubin, D., Huitfeldt, C. and Renear, A. </textual><emphasis class="po-inline e708 e708" role="ital"><textual class="po-textual">Drawing inferences on the basis of markup</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup
      Languages, 2002. </textual></bibliomixed><bibliomixed class="po-block e709 e709" xml:id="Sperberg-McQueen2002a" xreflabel="Sperberg-McQueen and       Burnard, 2002"><textual class="po-textual">
      C. Sperberg-McQueen, C. M. and Burnard, L. (eds.). </textual><emphasis class="po-inline e710 e710" role="ital"><textual class="po-textual">TEI P4: Guidelines
        for Electronic Text Encoding and Interchange</textual></emphasis><textual class="po-textual">. published for the TEI Consortium by
      Humanities Computing Unit, University of Oxford, Oxford, Providence, Charlottesville, Bergen,
      2002. </textual></bibliomixed><bibliomixed class="po-block e711 e711" xml:id="Sperberg-McQueen2004" xreflabel="Sperberg-McQueen and       Huitfeldt, 2004"><textual class="po-textual">
      Sperberg-McQueen, C. M. and Huitfeldt, C. </textual><emphasis class="po-inline e712 e712" role="ital"><textual class="po-textual">GODDAG: A Data Structure for
        Overlapping Hierarchies</textual></emphasis><textual class="po-textual">. In: King, P. and Munson, E. V. (eds.), Proceedings of
      the 5th International Workshop on the Principles of Digital Document Processing (PODDP 2000),
      volume 2023 of Lecture Notes in Computer Science, pages 139–160. Springer, 2004. </textual></bibliomixed><bibliomixed class="po-block e713 e713" xml:id="Strube2003" xreflabel="Strube and Müller, 2003"><textual class="po-textual">Strube, M. and Müller, C.
      (2003). </textual><emphasis class="po-inline e714 e714" role="ital"><textual class="po-textual">A machine learning approach to pronoun resolution in spoken
        dialogue</textual></emphasis><textual class="po-textual">. In: ACL '03: Proceedings of the 41st Annual Meeting on Association for
      Computational Linguistics. Morristown, NJ, USA : Association for Computational Linguistics,
      2003, pages 168-175. 
      doi:</textual><biblioid class="po-atom e715 doi e715"><textual class="po-textual">10.3115/1075096.1075118</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e716 e716" xml:id="Stührenberg2007" xreflabel="Stührenberg et al., 2007"><textual class="po-textual"> Stührenberg, M.,
      Goecke, D, Diewald, N., Cramer, I. and Mehler, A. </textual><emphasis class="po-inline e717 e717" role="ital"><textual class="po-textual">Web-based annotation
        of anaphoric relations and lexical chains</textual></emphasis><textual class="po-textual">. In: Proceedings of the Linguistic
      Annotation Workshop (LAW), pages 140–147, Prague. Association for Computational Linguistics,
      2007</textual></bibliomixed><bibliomixed class="po-block e718 e718" xml:id="Tennison2002" xreflabel="Tennison, 2002"><textual class="po-textual"> Tennison, J. </textual><emphasis class="po-inline e719 e719" role="ital"><textual class="po-textual">Layered Markup and Annotation Language (LMNL)</textual></emphasis><textual class="po-textual">. In: Proceedings of
      Extreme Markup Languages, Montréal, Québec, 2002. </textual></bibliomixed><bibliomixed class="po-block e720 e720" xml:id="Thompson1997" xreflabel="Thompson and McKelvie, 1997"><textual class="po-textual"> Thompson, H. S. and
      D. McKelvie. </textual><emphasis class="po-inline e721 e721" role="ital"><textual class="po-textual">Hyperlink semantics for standoff markup of read-only
        documents</textual></emphasis><textual class="po-textual">. In: Proceedings of SGML Europe ’97: The next decade – Pushing the
      Envelope, pages 227–229, Barcelona, 1997. </textual></bibliomixed><bibliomixed class="po-block e722 e722" xml:id="Waltinger2008" xreflabel="Waltinger et al., 2008"><textual class="po-textual"> Waltinger, U., Mehler,
      A. Mehler, and Stührenberg, M. </textual><emphasis class="po-inline e723 e723" role="ital"><textual class="po-textual">An Integrated Model of Lexical Chaining:
        Application, Resources and its Format</textual></emphasis><textual class="po-textual">. Accepted for Proceedings of Konvens 2008.</textual></bibliomixed><bibliomixed class="po-block e724 e724" xml:id="Witt2002" xreflabel="Witt, 2002"><textual class="po-textual"> Witt, A. </textual><emphasis class="po-inline e725 e725" role="ital"><textual class="po-textual">Meaning
        and interpretation of concurrent markup</textual></emphasis><textual class="po-textual">. In: Proceedings of ALLC-ACH2002, Joint
      Conference of the ALLC and ACH, 2002. </textual></bibliomixed><bibliomixed class="po-block e726 e726" xml:id="Witt2004" xreflabel="Witt, 2004"><textual class="po-textual"> Witt, A. </textual><emphasis class="po-inline e727 e727" role="ital"><textual class="po-textual">Multiple
        hierarchies: New Aspects of an Old Solution</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup
      Languages, 2004. </textual></bibliomixed><bibliomixed class="po-block e728 e728" xml:id="Witt2005" xreflabel="Witt et al., 2005"><textual class="po-textual">Witt, A., Goecke, D., Sasaki, F.,
      and Lüngen, H. </textual><emphasis class="po-inline e729 e729" role="ital"><textual class="po-textual">Unification of XML Documents with Concurrent
      Markup</textual></emphasis><textual class="po-textual">. Literary and Lingustic Computing, 20(1): pages 103-116, 2005.
      doi:</textual><biblioid class="po-atom e730 doi e730"><textual class="po-textual">10.1093/llc/fqh046</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e731 e731" xml:id="Witt2007" xreflabel="Witt et al., 2007"><textual class="po-textual"> Witt, A., Schonefeld, O., Rehm,
      G., Khoo, J. and Evang, K. </textual><emphasis class="po-inline e732 e732" role="ital"><textual class="po-textual">On the lossless transformation of
        single-file, multi-layer annotations into multi-rooted trees</textual></emphasis><textual class="po-textual">. In: Proceedings of
      Extreme Markup Languages, Montréal, Québec, 2007. </textual></bibliomixed><bibliomixed class="po-block e733 e733" xml:id="XMLSchema2004" xreflabel="XML Schema Part 1, 2004"><textual class="po-textual">XML Schema Part 1:
      Structures Second Edition. W3C Recommendation, World Wide Web Consortium, 28 October 2004.
      Online: </textual><link class="po-inline e734 e734" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e735 e735" xml:id="XMLSchema2004b" xreflabel="XML Schema Part 2, 2004"><textual class="po-textual">XML Schema Part 2:
      Datatypes Second Edition. W3C Recommendation, World Wide Web Consortium, 28 October 2004.
      Online: </textual><link class="po-inline e736 e736" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e737 e737" xml:id="XMLSchema2008" xreflabel="XML Schema 1.1 Part 1, 2008"><textual class="po-textual"> W3C XML Schema
      Definition Language (XSD) 1.1 Part 1: Structures. W3C Working Draft, World Wide Web
      Consortium, 20 June 2008. Online: </textual><link class="po-inline e738 e738" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2008/WD-xmlschema11-1-20080620/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2008/WD-xmlschema11-1-20080620/</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e739 e739" xml:id="Yang2004" xreflabel="Yang et al., 2004"><textual class="po-textual">Yang, X., Su, J., Zhou, G. and Tan,
      C. L. (2004). </textual><emphasis class="po-inline e740 e740" role="ital"><textual class="po-textual">Improving pronoun resolution by incorporating
        coreferential information of candidates.</textual></emphasis><textual class="po-textual"> In: Proceedings of the 42nd Annual
      Meeting of the Association for Computational Linguistics (ACL04). Barcelona, Spain,
    2004. 
      doi:</textual><biblioid class="po-atom e741 doi e741"><textual class="po-textual">10.3115/1218955.1218972</textual></biblioid><textual class="po-textual">.</textual></bibliomixed></bibliography></article></classedDocument>