<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.2"><title class="po-block e1 e1"><textual class="po-textual">Stand-alone Encoding of Document History </textual></title><subtitle class="po-block e2 e2"><textual class="po-textual">(or One Step Beyond XML Diff)</textual></subtitle><info class="po-record e3 e3"><confgroup class="po-record e4 e4"><conftitle class="po-field e5 e5"><textual class="po-textual">Balisage: The Markup Conference 2010</textual></conftitle><confdates class="po-field e6 e6"><textual class="po-textual">August 3 - 6, 2010</textual></confdates></confgroup><abstract class="po-container e7 e7"><para class="po-block e8 e8"><textual class="po-textual">This paper describes an approach to encapsulate together an XML document and its
                history (i.e. the various significant states it adopted along its life cycle) into a
                single standalone XML document. Our proposal introduces an XML data model suited to
                capture versioning information combined with an operational model to handle such
                encapsulated data. We describe basic operators involved along the transformation
                process of the document/history pair, mainly designed around the principle of
                maintaining coherence properties. </textual></para></abstract><author class="po-record e9 e9"><personname class="po-record e10 e10"><firstname class="po-field e11 e11"><textual class="po-textual">Jean-Yves</textual></firstname><surname class="po-field e12 e12"><textual class="po-textual">Vion-Dury</textual></surname></personname><personblurb class="po-container e13 e13"><para class="po-block e14 e14"><textual class="po-textual"> Jean-Yves Vion-Dury holds an CS engineering degree from the "Conservatoire
                    National des Arts et Métiers, Paris" (1993) and graduated with a PhD in CS from
                    Université Joseph Fourier, Grenoble in 1999. He has been working at Xerox
                    Research Centre Europe (in Grenoble, France) since 1995, as a research
                    scientist; he has also been on a two year sabbatical with Vincent Quint's team
                    at INRIA in 2002-2004. His research interests relate to various aspect of XML
                    including models, the impact of standards, validation/transformation languages
                    and architectures, with theoretical background in programming languages,
                    compilation, type systems and formal logics. </textual></para><para class="po-block e15 e15"><textual class="po-textual">Jean-Yves was Program Chair of DocEng (ACM Document Engineering Symposium ) in
                    2004, is member of its Program Committee since 2003, and member of its Steering
                    Committee since 2005. </textual></para></personblurb><affiliation class="po-record e16 e16"><jobtitle class="po-field e17 e17"><textual class="po-textual">Senior Scientist</textual></jobtitle><orgname class="po-block e18 e18"><textual class="po-textual">Xerox Research Centre Europe</textual></orgname></affiliation><email class="po-field e19 e19"><textual class="po-textual">jean-yves.vion-dury@xeroxlabs.com</textual></email></author><legalnotice class="po-container e20 e20"><para class="po-block e21 e21"><textual class="po-textual">Copyright © 2010 Xerox.  All rights reserved.</textual></para></legalnotice></info><section class="po-hcontainer e22 e22"><title class="po-block e23 e23"><textual class="po-textual">Introduction</textual></title><para class="po-block e24 e24"><textual class="po-textual">XML being recognized today as the lingua franca of computerized information, some key
            basic functionalities become of universal interest and will predictably gain momentum in
            the upcoming XML related economy.</textual></para><para class="po-block e25 e25"><textual class="po-textual">One of these functionalities is the computation of differences between two XML
            documents, and more generally, the management of the history of a given document. In
            particular, this functions as a cornerstone of any system aiming at offering long term
            preservation.</textual></para><para class="po-block e26 e26"><textual class="po-textual">Today, such functionality is achieved through content management systems or databases.
            Models and operations are therefore hidden inside a black box, and up to the author's
            knowledge, no standard mechanism makes this information explicit and accessible to human
            users neither to external algorithms and processors.</textual></para><para class="po-block e27 e27"><textual class="po-textual">Our proposal addresses this issue by associating a target document instance together
            with its history inside a standalone and consistent document, thus gaining strong
            potential for current or future interoperability.</textual></para><para class="po-block e28 e28"><textual class="po-textual">The notion of </textual><emphasis class="po-inline e29 e29" role="ital"><textual class="po-textual">history</textual></emphasis><textual class="po-textual">, when applied to a document,
            calls for a deeper understanding of the global context, intents and social processes
            underpinning the creation, evolution and maintenance of documents (see </textual><xref class="po-milestone e30 e30" linkend="pédauque03"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Hence, the relevant structure of a meaningful </textual><emphasis class="po-inline e31 e31" role="ital"><textual class="po-textual">document history</textual></emphasis><textual class="po-textual"> highly depends on the document typology and
            usages.</textual></para><para class="po-block e32 e32"><textual class="po-textual">In addition, the criterion that founds any document history is the permanence of some
            key deep invariants (for a general, ontological, reflection around this line, see </textual><xref class="po-milestone e33 e33" linkend="pédauque05"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Those invariants define the identity of the document itself
            and their loss inevitably ends the versioning process and calls for a new creation
            cycle.</textual></para><para class="po-block e34 e34"><textual class="po-textual">The method we describe in this paper takes into consideration the key points above,
            especially through a flexible calculus of difference descriptors, and through offering
            high level transformation operations that preserve the consistency of both the document
            instance and its whole history.</textual></para></section><section class="po-hcontainer e35 e35"><title class="po-block e36 e36"><textual class="po-textual">Overview</textual></title><para class="po-block e37 e37"><textual class="po-textual">The target document (also called </textual><emphasis class="po-inline e38 e38" role="ital"><textual class="po-textual">body</textual></emphasis><textual class="po-textual"> hereafter),
            i.e. any XML document using any namespace, is encapsulated inside a dedicated packaging
            XML document. The body always consistently relates to a given state of its history (not
            necessarily the most recent one) thanks to a dedicated attribute that refers to a
            version label and makes this relation explicit. </textual></para><para class="po-block e39 e39"><textual class="po-textual"> The history itself is encoded as interrelated nodes (XML elements) and has the
            structure of a directed acyclic graph (DAG); each node of this graph models a versioning
            point, i.e. a particular significant state that the document reached during its lifetime
            and for which a version has been recorded. The meaning of any versioning point with
            respect to the document life cycle is application dependent, as discussed above, and the
            proposed approach abstracts over application semantics, just considering that a new
            version is built when some actor in the document life cycle decided it makes sense to do
            so. Arcs that connect the nodes are decorated with deltas, and these arcs model the
            transformation that allows changing the document from one versioning point to the other.
            Thus arcs are oriented. Deltas descriptors are combinations of low level operations on
            the document tree, mainly based on deletion and insertion of subtrees.</textual></para><para class="po-block e40 e40"><textual class="po-textual"> Thanks to a set of transformations qualitatively described in this paper, it is
            possible to navigate inside the history of the document and to consistently extract any
            version of the document captured in the history graph. It is also possible to create new
            versioning points, new branches or to merge existing branches, all these operations
            producing novel consistent encapsulations of the target document.</textual></para></section><section class="po-hcontainer e41 e41"><title class="po-block e42 e42"><textual class="po-textual">Modelling Abstract Differencing Operations</textual></title><section class="po-hcontainer e43 e43"><title class="po-block e44 e44"><textual class="po-textual">Document model</textual></title><para class="po-block e45 e45"><textual class="po-textual"> The encapsulating XML document can be represented (in an abstract way) as a tree
                like this: </textual></para><figure class="po-container e46 e46" xml:id="tree-structure"><title class="po-block e47 e47"><textual class="po-textual">Abstract tree structure of the document history</textual></title><para class="po-block e48 e48"><textual class="po-textual">x-version[x-body</textual><subscript class="po-atom e49 e49"><textual class="po-textual">v</textual><subscript class="po-atom e50 e50"><textual class="po-textual">i</textual></subscript></subscript><textual class="po-textual">[d],x-history[…v</textual><subscript class="po-atom e51 e51"><textual class="po-textual">i</textual></subscript><textual class="po-textual">…]]</textual></para></figure><para class="po-block e52 e52"><textual class="po-textual">where </textual><emphasis class="po-inline e53 e53" role="ital"><textual class="po-textual">d</textual></emphasis><textual class="po-textual"> represent the target document and
                    </textual><emphasis class="po-inline e54 e54" role="ital"><textual class="po-textual">v</textual><subscript class="po-atom e55 e55"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual"> a versioning point.
                The full syntax of our encapsulation is available through a RelaxNG Schema (see
                appendix). The examples </textual><xref class="po-milestone e56 e56" linkend="Ex1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e57 e57" linkend="Ex2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e58 e58" linkend="Ex3"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e59 e59" linkend="Ex4"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> illustrate concretely the way we
                propose to encode the history graph (DAG) in XML, and the way delta operations are
                attached to transition arcs.</textual></para></section><section class="po-hcontainer e60 e60"><title class="po-block e61 e61"><textual class="po-textual">Diff Engine</textual></title><para class="po-block e62 e62"><textual class="po-textual">We assume that a diff engine is able to operate as a black box function. Its
                abstract signature could be for instance: </textual></para><figure class="po-container e63 e63"><title class="po-block e64 e64"><textual class="po-textual">Abstracting over diff operation</textual></title><informaltable class="po-container e65 e65"><tr class="po-table e66 e66"><td class="po-block e67 e67"><textual class="po-textual">
                            </textual><emphasis class="po-inline e68 e68" role="bold"><textual class="po-textual">diff</textual></emphasis><textual class="po-textual">(config, d, d’) </textual></td><td class="po-block e69 e69"><textual class="po-textual"> → </textual></td><td class="po-block e70 e70"><textual class="po-textual"> Δ </textual></td></tr></informaltable></figure><para class="po-block e71 e71"><textual class="po-textual">with config being some input information used to configure the processor (e.g.
                filter to apply, mode commutative/non-commutative,…). The notation Δ represents a
                set of basic delta operations, formally described hereafter.</textual></para></section><section class="po-hcontainer e72 e72"><title class="po-block e73 e73"><textual class="po-textual">Abstracting over Delta Operations</textual></title><figure class="po-container e74 e74"><title class="po-block e75 e75"><textual class="po-textual">Syntax of delta operations</textual></title><informaltable class="po-container e76 e76"><tr class="po-table e77 e77"><td class="po-block e78 e78"><textual class="po-textual">Δ</textual></td><td class="po-block e79 e79"><textual class="po-textual">::= </textual></td><td class="po-block e80 e80"><textual class="po-textual"> { } </textual></td><td class="po-block e81 e81"><textual class="po-textual">no operation</textual></td></tr><tr class="po-table e82 e82"><td class="po-block e83 e83"><textual class="po-textual">
                        </textual></td><td class="po-block e84 e84"><textual class="po-textual">
                        </textual></td><td class="po-block e85 e85"><textual class="po-textual">| { δ</textual><subscript class="po-atom e86 e86"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> … δ</textual><subscript class="po-atom e87 e87"><textual class="po-textual">i</textual></subscript><textual class="po-textual"> } </textual></td><td class="po-block e88 e88"><textual class="po-textual">commutative snapshots</textual></td></tr><tr class="po-table e89 e89"><td class="po-block e90 e90"><textual class="po-textual">
                        </textual></td><td class="po-block e91 e91"><textual class="po-textual">
                        </textual></td><td class="po-block e92 e92"><textual class="po-textual">| Δ ; Δ </textual></td><td class="po-block e93 e93"><textual class="po-textual">sequences</textual></td></tr><tr class="po-table e94 e94"><td class="po-block e95 e95"><textual class="po-textual">δ</textual></td><td class="po-block e96 e96"><textual class="po-textual">::= </textual></td><td class="po-block e97 e97"><textual class="po-textual"> insert (pp, A)</textual></td><td class="po-block e98 e98"><textual class="po-textual">subtree insertion</textual></td></tr><tr class="po-table e99 e99"><td class="po-block e100 e100"><textual class="po-textual">
                        </textual></td><td class="po-block e101 e101"><textual class="po-textual">
                        </textual></td><td class="po-block e102 e102"><textual class="po-textual">| insert-attr(pp/@nm, A)</textual></td><td class="po-block e103 e103"><textual class="po-textual">attribute insertion</textual></td></tr><tr class="po-table e104 e104"><td class="po-block e105 e105"><textual class="po-textual">
                        </textual></td><td class="po-block e106 e106"><textual class="po-textual">
                        </textual></td><td class="po-block e107 e107"><textual class="po-textual">| delete(p)</textual></td><td class="po-block e108 e108"><textual class="po-textual">subtree deletion</textual></td></tr></informaltable></figure><para class="po-block e109 e109"><textual class="po-textual">The delta operation use paths, noted </textual><emphasis class="po-inline e110 e110" role="ital"><textual class="po-textual">p</textual></emphasis><textual class="po-textual">, to
                designate the tree location where the modification should be applied. Those paths
                are describe by the following grammar (</textual><emphasis class="po-inline e111 e111" role="ital"><textual class="po-textual">i</textual></emphasis><textual class="po-textual"> is a
                positive integer, </textual><emphasis class="po-inline e112 e112" role="ital"><textual class="po-textual">nm</textual></emphasis><textual class="po-textual"> an attribute name, </textual><emphasis class="po-inline e113 e113" role="ital"><textual class="po-textual">pp</textual></emphasis><textual class="po-textual"> denotes "pure paths"):</textual></para><figure class="po-container e114 e114"><title class="po-block e115 e115"><textual class="po-textual">Syntax of path description</textual></title><informaltable class="po-container e116 e116"><tr class="po-table e117 e117"><td class="po-block e118 e118"><textual class="po-textual">p </textual></td><td class="po-block e119 e119"><textual class="po-textual">::=</textual></td><td class="po-block e120 e120"><textual class="po-textual">pp | pp/@nm</textual></td></tr><tr class="po-table e121 e121"><td class="po-block e122 e122"><textual class="po-textual">pp </textual></td><td class="po-block e123 e123"><textual class="po-textual">::=</textual></td><td class="po-block e124 e124"><textual class="po-textual">i/pp | i</textual></td></tr></informaltable></figure><para class="po-block e125 e125"><textual class="po-textual">These paths are interpreted as relative to the root of the encapsulated document,
                and can be easily translated as XPath expressions. For example, 1/2/1 is translated
                into *[1]/*[2]/*[1], and 1/3/@id into *[1]/*[3]/@id </textual><footnote class="po-popup e126 e126"><para class="po-block e127 e127"><textual class="po-textual">the XPath translation of </textual><emphasis class="po-inline e128 e128" role="ital"><textual class="po-textual">1/2/1</textual></emphasis><textual class="po-textual"> could also
                        be </textual><emphasis class="po-inline e129 e129" role="ital"><textual class="po-textual">node()[1]/node()[2]/node()[1]</textual></emphasis><textual class="po-textual"> in order
                        to consider all possible nodes as allowed by the XML document tree
                    model.</textual></para></footnote><textual class="po-textual">. </textual></para><para class="po-block e130 e130"><textual class="po-textual">Each delta belonging to a snapshot must comply with a structural constraint that
                ensures orthogonality (thus making the snapshot indeed commutative). In particular,
                it is enough to verify that two paths in a snapshot do not designate sibling trees,
                and one path does not designate a sibling tree of the parent node designated by the
                other path. We assume that this constraint is part of the well-formedness condition
                assured for all definitions </textual><footnote class="po-popup e131 e131" xml:id="refined-calculus"><para class="po-block e132 e132"><textual class="po-textual">Actually the calculus can be refined in such a way that this condition can
                        be relaxed thanks to a particular rewriting of conflicting deltas. This
                        suppose a particular semantic interpretation of conflicting
                    information.</textual></para></footnote><textual class="po-textual">.</textual></para><para class="po-block e133 e133"><textual class="po-textual">The semantics of delta operations expresses changes that occur on the operand (an
                XML tree) ; we note this transformation of </textual><emphasis class="po-inline e134 e134" role="ital"><textual class="po-textual">d</textual></emphasis><textual class="po-textual"> into
                    </textual><emphasis class="po-inline e135 e135" role="ital"><textual class="po-textual">d’</textual></emphasis><textual class="po-textual"> by applying </textual><emphasis class="po-inline e136 e136" role="ital"><textual class="po-textual">Δ</textual></emphasis><textual class="po-textual"> as follows: </textual></para><figure class="po-container e137 e137"><title class="po-block e138 e138"><textual class="po-textual">Transformation by Delta application</textual></title><informaltable class="po-container e139 e139"><tr class="po-table e140 e140"><td align="center" class="po-block e141 e141"><textual class="po-textual">
                        </textual></td><td class="po-block e142 e142"><textual class="po-textual">d › Δ › d’</textual></td></tr></informaltable></figure><para class="po-block e143 e143"><textual class="po-textual">More precisely, the previous notation is a logical assertion saying that a
                well-formed document </textual><emphasis class="po-inline e144 e144" role="ital"><textual class="po-textual">d</textual></emphasis><textual class="po-textual"> is changed into a
                well-formed document </textual><emphasis class="po-inline e145 e145" role="ital"><textual class="po-textual">d’</textual></emphasis><textual class="po-textual"> after application of the
                well-formed </textual><emphasis class="po-inline e146 e146" role="ital"><textual class="po-textual">Δ</textual></emphasis><textual class="po-textual"> operation.</textual></para><para class="po-block e147 e147"><textual class="po-textual">Formally, for all subtree </textual><emphasis class="po-inline e148 e148" role="ital"><textual class="po-textual">A</textual></emphasis><textual class="po-textual">, path </textual><emphasis class="po-inline e149 e149" role="ital"><textual class="po-textual">p</textual></emphasis><textual class="po-textual">, documents </textual><emphasis class="po-inline e150 e150" role="ital"><textual class="po-textual">d</textual></emphasis><textual class="po-textual"> and
                    </textual><emphasis class="po-inline e151 e151" role="ital"><textual class="po-textual">d’</textual></emphasis><textual class="po-textual">, deltas </textual><emphasis class="po-inline e152 e152" role="ital"><textual class="po-textual">Δ</textual><subscript class="po-atom e153 e153"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e154 e154" role="ital"><textual class="po-textual">δ</textual><subscript class="po-atom e155 e155"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual">, the transformations verify the following
                abstract properties: </textual></para><figure class="po-container e156 e156" xml:id="abs-property"><title class="po-block e157 e157"><textual class="po-textual">Abstract properties of delta transformations</textual></title><informaltable class="po-container e158 e158"><tr class="po-table e159 e159"><td class="po-block e160 e160"><textual class="po-textual">(a-seq) </textual></td><td class="po-block e161 e161"><textual class="po-textual"> d › Δ</textual><subscript class="po-atom e162 e162"><textual class="po-textual">1</textual></subscript><textual class="po-textual">;Δ</textual><subscript class="po-atom e163 e163"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> › d’</textual></td><td class="po-block e164 e164"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e165 e165"><textual class="po-textual"> ∃ d’’ , d › Δ</textual><subscript class="po-atom e166 e166"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> › d’’ ⋀ d’’›
                            Δ</textual><subscript class="po-atom e167 e167"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> › d’ </textual></td><td class="po-block e168 e168"><textual class="po-textual">
                        </textual></td></tr><tr class="po-table e169 e169"><td class="po-block e170 e170"><textual class="po-textual">(a-snap) </textual></td><td class="po-block e171 e171"><textual class="po-textual"> d › { δ</textual><subscript class="po-atom e172 e172"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ... δ</textual><subscript class="po-atom e173 e173"><textual class="po-textual">i</textual></subscript><textual class="po-textual">} › d’</textual></td><td class="po-block e174 e174"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e175 e175"><textual class="po-textual"> d › {δ</textual><subscript class="po-atom e176 e176"><textual class="po-textual">π</textual><subscript class="po-atom e177 e177"><textual class="po-textual">1</textual></subscript></subscript><textual class="po-textual">} ; {
                                    δ</textual><subscript class="po-atom e178 e178"><textual class="po-textual">π</textual><subscript class="po-atom e179 e179"><textual class="po-textual">i</textual></subscript></subscript><textual class="po-textual">} › d’</textual></td><td class="po-block e180 e180"><textual class="po-textual">for any permutation π defined over the sequence of indexes [1,…,i]</textual></td></tr><tr class="po-table e181 e181"><td class="po-block e182 e182"><textual class="po-textual">(a-void) </textual></td><td class="po-block e183 e183"><textual class="po-textual"> d › { } › d’</textual></td><td class="po-block e184 e184"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e185 e185"><textual class="po-textual"> d ≈ d’</textual></td><td class="po-block e186 e186"><textual class="po-textual">
                        </textual></td></tr><tr class="po-table e187 e187"><td class="po-block e188 e188"><textual class="po-textual">(a-ins) </textual></td><td class="po-block e189 e189"><textual class="po-textual"> d › { </textual><emphasis class="po-inline e190 e190" role="bold"><textual class="po-textual">insert</textual></emphasis><textual class="po-textual">(pp,A)} › d’</textual></td><td class="po-block e191 e191"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e192 e192"><textual class="po-textual">
                            </textual><emphasis class="po-inline e193 e193" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d',pp)≈A ⋀ </textual><emphasis class="po-inline e194 e194" role="bold"><textual class="po-textual">invar</textual></emphasis><textual class="po-textual">(d,d',pp,f)</textual></td><td class="po-block e195 e195"><textual class="po-textual"> with f = ζ(pp)</textual></td></tr><tr class="po-table e196 e196"><td class="po-block e197 e197"><textual class="po-textual">(a-ins-@) </textual></td><td class="po-block e198 e198"><textual class="po-textual"> d › { </textual><emphasis class="po-inline e199 e199" role="bold"><textual class="po-textual">insert-attr</textual></emphasis><textual class="po-textual">(pp/@nm,A)} › d’</textual></td><td class="po-block e200 e200"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e201 e201"><textual class="po-textual">
                            </textual><emphasis class="po-inline e202 e202" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d',pp/@nm) = A ⋀ </textual><emphasis class="po-inline e203 e203" role="bold"><textual class="po-textual">invar</textual></emphasis><textual class="po-textual">(d,d',pp/@nm)</textual></td><td class="po-block e204 e204"><textual class="po-textual">
                        </textual></td></tr><tr class="po-table e205 e205"><td class="po-block e206 e206"><textual class="po-textual">(a-del) </textual></td><td class="po-block e207 e207"><textual class="po-textual"> d › { </textual><emphasis class="po-inline e208 e208" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp)} › d’</textual></td><td class="po-block e209 e209"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e210 e210"><textual class="po-textual">
                            </textual><emphasis class="po-inline e211 e211" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d',pp)≈</textual><emphasis class="po-inline e212 e212" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d,pp ⊕ f) ⋀ </textual><emphasis class="po-inline e213 e213" role="bold"><textual class="po-textual">invar</textual></emphasis><textual class="po-textual">(d,d',pp,-f)</textual></td><td class="po-block e214 e214"><textual class="po-textual"> with f = ζ(pp)</textual></td></tr><tr class="po-table e215 e215"><td class="po-block e216 e216"><textual class="po-textual">(a-del-@) </textual></td><td class="po-block e217 e217"><textual class="po-textual"> d › { </textual><emphasis class="po-inline e218 e218" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp/@nm)} › d’</textual></td><td class="po-block e219 e219"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e220 e220"><textual class="po-textual">
                            </textual><emphasis class="po-inline e221 e221" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d',pp/@nm) = ε</textual></td><td class="po-block e222 e222"><textual class="po-textual">
                        </textual></td></tr></informaltable></figure><para class="po-block e223 e223"><textual class="po-textual">Note that the definition of </textual><emphasis class="po-inline e224 e224" role="bold"><textual class="po-textual">insert</textual></emphasis><textual class="po-textual"> operator makes
                use of the function </textual><emphasis class="po-inline e225 e225" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">, which extracts the subtree
                rooted at a given location </textual><emphasis class="po-inline e226 e226" role="ital"><textual class="po-textual">p</textual></emphasis><textual class="po-textual">, as well as a path
                addition function ⊕ and a so called fingerprint extraction ζ . The invar operator
                deals with locality of the transformation (see Invariance Property Fig </textual><xref class="po-milestone e227 e227" linkend="invariance-prop"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and associated explanations). Moreover, ≈ (the
                equivalence of trees) is defined extensionally using quantification of paths, and is
                insensitive to attribute order, according to path definition.</textual></para><figure class="po-container e228 e228" xml:id="definition-tree-equivalence"><title class="po-block e229 e229"><textual class="po-textual">Tree equivalence</textual></title><informaltable class="po-container e230 e230"><tr class="po-table e231 e231"><td class="po-block e232 e232"><textual class="po-textual">d ≈ d’ </textual></td><td class="po-block e233 e233"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e234 e234"><textual class="po-textual"> ∀ p, </textual><emphasis class="po-inline e235 e235" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d,p) = </textual><emphasis class="po-inline e236 e236" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d’,p)</textual></td></tr></informaltable><para class="po-block e237 e237"><emphasis class="po-inline e238 e238" role="ital"><textual class="po-textual">Path based, extensional equivalence over
                    trees</textual></emphasis></para></figure><para class="po-block e239 e239"><textual class="po-textual">The path addition is defined over pure paths (paths designating element nodes
                only, noted </textual><emphasis class="po-inline e240 e240" role="ital"><textual class="po-textual">pp</textual></emphasis><textual class="po-textual">), can deal with operands of various
                depth and is commutative: </textual></para><para class="po-block e241 e241"><textual class="po-textual">
                </textual><figure class="po-container e242 e242"><title class="po-block e243 e243"><textual class="po-textual">Path addition</textual></title><informaltable class="po-container e244 e244"><tr class="po-table e245 e245"><td class="po-block e246 e246"><textual class="po-textual">i/pp </textual></td><td class="po-block e247 e247"><textual class="po-textual"> ⊕ </textual></td><td class="po-block e248 e248"><textual class="po-textual">j/pp’ </textual></td><td class="po-block e249 e249"><textual class="po-textual">=</textual></td><td class="po-block e250 e250"><textual class="po-textual"> (i + j)/(pp ⊕ pp’)</textual></td></tr><tr class="po-table e251 e251"><td class="po-block e252 e252"><textual class="po-textual">i/pp </textual></td><td class="po-block e253 e253"><textual class="po-textual"> ⊕ </textual></td><td class="po-block e254 e254"><textual class="po-textual"> j</textual></td><td class="po-block e255 e255"><textual class="po-textual">=</textual></td><td class="po-block e256 e256"><textual class="po-textual"> (i + j)/pp</textual></td></tr><tr class="po-table e257 e257"><td class="po-block e258 e258"><textual class="po-textual">i </textual></td><td class="po-block e259 e259"><textual class="po-textual"> ⊕ </textual></td><td class="po-block e260 e260"><textual class="po-textual"> j</textual></td><td class="po-block e261 e261"><textual class="po-textual">=</textual></td><td class="po-block e262 e262"><textual class="po-textual"> (i + j)</textual></td></tr></informaltable></figure><textual class="po-textual">
            </textual></para><para class="po-block e263 e263"><textual class="po-textual">Also fingerprints capture some structural information, and more precisely, the
                depth level of a path:</textual></para><figure class="po-container e264 e264"><title class="po-block e265 e265"><textual class="po-textual">Fingerprint computation</textual></title><informaltable class="po-container e266 e266"><tr class="po-table e267 e267"><td class="po-block e268 e268"><textual class="po-textual">ζ(i/pp)</textual></td><td class="po-block e269 e269"><textual class="po-textual"> = </textual></td><td class="po-block e270 e270"><textual class="po-textual">0/ζ(pp)</textual></td></tr><tr class="po-table e271 e271"><td class="po-block e272 e272"><textual class="po-textual">ζ(i)</textual></td><td class="po-block e273 e273"><textual class="po-textual"> = </textual></td><td class="po-block e274 e274"><textual class="po-textual">1</textual></td></tr></informaltable></figure><para class="po-block e275 e275"><textual class="po-textual">Thus ζ (1/2/3) = 0/0/1 and 1/2/3 ⊕ ζ(1/2/3) = 1/2/4 and 1/2/3/2 ⊕ ζ(1/2/3) =
                1/2/4/2</textual></para><para class="po-block e276 e276"><textual class="po-textual">The property </textual><emphasis class="po-inline e277 e277" role="ital"><textual class="po-textual">(a-snap)</textual></emphasis><textual class="po-textual"> holds for all permutations
                over indexes. It simply means that the set of deltas must be commutative with
                respect to their sequential application. In other words, all basic deltas of a
                snapshot are pairwise orthogonal.</textual></para><para class="po-block e278 e278"><textual class="po-textual">The property </textual><emphasis class="po-inline e279 e279" role="ital"><textual class="po-textual">(a-del)</textual></emphasis><textual class="po-textual"> involves a minus operator
                over paths. This one is easily defined as inverting all integers found in the path.</textual></para><figure class="po-container e280 e280"><title class="po-block e281 e281"><textual class="po-textual">Path inversion</textual></title><informaltable class="po-container e282 e282"><tr class="po-table e283 e283"><td class="po-block e284 e284"><textual class="po-textual">-(i/pp)</textual></td><td class="po-block e285 e285"><textual class="po-textual"> = </textual></td><td class="po-block e286 e286"><textual class="po-textual">(-i)/-(pp)</textual></td></tr><tr class="po-table e287 e287"><td class="po-block e288 e288"><textual class="po-textual">-(i)</textual></td><td class="po-block e289 e289"><textual class="po-textual"> = </textual></td><td class="po-block e290 e290"><textual class="po-textual">-i</textual></td></tr></informaltable></figure><para class="po-block e291 e291"><textual class="po-textual">The </textual><emphasis class="po-inline e292 e292" role="bold"><textual class="po-textual">invar</textual></emphasis><textual class="po-textual"> property used in (a-ins), (a-ins-@) and
                (a-del) expresses that other parts of the tree are not modified by the operation.
                This is defined as follows:</textual></para><figure class="po-container e293 e293" xml:id="invariance-prop"><title class="po-block e294 e294"><textual class="po-textual">Invariance property</textual></title><informaltable class="po-container e295 e295"><tr class="po-table e296 e296"><td class="po-block e297 e297"><emphasis class="po-inline e298 e298" role="bold"><textual class="po-textual">invar</textual></emphasis><textual class="po-textual">(d, d’, pp/@nm)</textual></td><td class="po-block e299 e299"><textual class="po-textual"> ≡ </textual></td><td class="po-block e300 e300"><textual class="po-textual">∀ nm' [ </textual><emphasis class="po-inline e301 e301" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d, pp/@nm’) = </textual><emphasis class="po-inline e302 e302" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d’, pp/@nm’) ]</textual></td></tr><tr class="po-table e303 e303"><td class="po-block e304 e304"><emphasis class="po-inline e305 e305" role="bold"><textual class="po-textual">invar</textual></emphasis><textual class="po-textual">(d, d’, pp, f)</textual></td><td class="po-block e306 e306"><textual class="po-textual"> ≡ </textual></td><td class="po-block e307 e307"><textual class="po-textual">∀ p' [ </textual><para class="po-block e308 e308"><textual class="po-textual">
                                </textual><informaltable class="po-container e309 e309"><tr class="po-table e310 e310"><td class="po-block e311 e311"><textual class="po-textual">p' ≪ pp </textual></td><td class="po-block e312 e312"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e313 e313"><emphasis class="po-inline e314 e314" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d, p’) =</textual><emphasis class="po-inline e315 e315" role="bold"><textual class="po-textual"> get</textual></emphasis><textual class="po-textual">(d’,p’)</textual></td></tr><tr class="po-table e316 e316"><td class="po-block e317 e317"><textual class="po-textual">⋀</textual></td><td class="po-block e318 e318"><textual class="po-textual">
                                        </textual></td><td class="po-block e319 e319"><textual class="po-textual">
                                        </textual></td></tr><tr class="po-table e320 e320"><td class="po-block e321 e321"><textual class="po-textual"> pp ≪ p'</textual></td><td class="po-block e322 e322"><textual class="po-textual"> ⇒</textual></td><td class="po-block e323 e323"><emphasis class="po-inline e324 e324" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d, p’) = </textual><emphasis class="po-inline e325 e325" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d’,p’ ⊕ f) </textual></td></tr></informaltable><textual class="po-textual">
                            </textual></para><textual class="po-textual"> ] </textual></td></tr></informaltable></figure><para class="po-block e326 e326"><textual class="po-textual"> The relation ≪ is a strict total order over (pure) paths, which is sound with
                respect to the standard total order over document nodes as defined by the XML
                document model.</textual></para><figure class="po-container e327 e327"><title class="po-block e328 e328"><textual class="po-textual">Strict total order on paths</textual></title><para class="po-block e329 e329"><textual class="po-textual"> for all i, j integers, pp, pp' pure paths, </textual></para><table class="po-container e330 e330" rules="rows"><tr class="po-table e331 e331"><th class="po-field e332 e332"><textual class="po-textual">
                        </textual></th><th class="po-field e333 e333"><textual class="po-textual">
                        </textual></th><th class="po-field e334 e334"><textual class="po-textual">
                        </textual></th><th class="po-field e335 e335"><textual class="po-textual">
                        </textual></th><th align="center" class="po-field e336 e336"><textual class="po-textual"> i &lt; j </textual></th><th align="center" class="po-field e337 e337"><textual class="po-textual"> i = j </textual></th><th align="center" class="po-field e338 e338"><textual class="po-textual"> i &gt; j </textual></th></tr><tr class="po-table e339 e339"><td align="right" class="po-block e340 e340"><textual class="po-textual"> i/pp</textual></td><td align="center" class="po-block e341 e341"><textual class="po-textual">≪</textual></td><td align="left" class="po-block e342 e342"><textual class="po-textual"> j/pp'</textual></td><td class="po-block e343 e343"><textual class="po-textual">
                        </textual></td><td align="center" class="po-block e344 e344"><textual class="po-textual"> true </textual></td><td align="center" class="po-block e345 e345"><textual class="po-textual"> pp ≪ pp' </textual></td><td align="center" class="po-block e346 e346"><textual class="po-textual"> false </textual></td></tr><tr class="po-table e347 e347"><td align="right" class="po-block e348 e348"><textual class="po-textual"> i</textual></td><td align="center" class="po-block e349 e349"><textual class="po-textual">≪</textual></td><td align="left" class="po-block e350 e350"><textual class="po-textual"> j/pp'</textual></td><td class="po-block e351 e351"><textual class="po-textual">
                        </textual></td><td align="center" class="po-block e352 e352"><textual class="po-textual"> true </textual></td><td align="center" class="po-block e353 e353"><textual class="po-textual"> false </textual></td><td align="center" class="po-block e354 e354"><textual class="po-textual"> false </textual></td></tr><tr class="po-table e355 e355"><td align="right" class="po-block e356 e356"><textual class="po-textual"> i/pp</textual></td><td align="center" class="po-block e357 e357"><textual class="po-textual">≪</textual></td><td align="left" class="po-block e358 e358"><textual class="po-textual"> j</textual></td><td class="po-block e359 e359"><textual class="po-textual">
                        </textual></td><td align="center" class="po-block e360 e360"><textual class="po-textual"> true </textual></td><td align="center" class="po-block e361 e361"><textual class="po-textual"> false </textual></td><td align="center" class="po-block e362 e362"><textual class="po-textual"> false </textual></td></tr><tr class="po-table e363 e363"><td align="right" class="po-block e364 e364"><textual class="po-textual"> i</textual></td><td align="center" class="po-block e365 e365"><textual class="po-textual">≪</textual></td><td align="left" class="po-block e366 e366"><textual class="po-textual"> j</textual></td><td class="po-block e367 e367"><textual class="po-textual">
                        </textual></td><td align="center" class="po-block e368 e368"><textual class="po-textual"> true </textual></td><td align="center" class="po-block e369 e369"><textual class="po-textual"> false </textual></td><td align="center" class="po-block e370 e370"><textual class="po-textual"> false </textual></td></tr></table></figure><para class="po-block e371 e371"><textual class="po-textual">The intuitive notion of path prefix relation captures the idea of tree embedding</textual></para><figure class="po-container e372 e372"><title class="po-block e373 e373"><textual class="po-textual">Path prefix relation</textual></title><informaltable class="po-container e374 e374"><tr class="po-table e375 e375"><td class="po-block e376 e376"><textual class="po-textual">pp</textual><subscript class="po-atom e377 e377"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ≺ pp</textual><subscript class="po-atom e378 e378"><textual class="po-textual">2</textual></subscript></td><td class="po-block e379 e379"><textual class="po-textual"> iff </textual></td><td class="po-block e380 e380"><textual class="po-textual"> ∃ pp | pp</textual><subscript class="po-atom e381 e381"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> = pp</textual><subscript class="po-atom e382 e382"><textual class="po-textual">2</textual></subscript><textual class="po-textual">/pp</textual></td></tr></informaltable></figure><para class="po-block e383 e383"><textual class="po-textual">We now define the notion of path orthogonality as a binary boolean operator that
                captures the notion that a path is not a subpath of another (or equivalently, a
                subtree is not included into another subtree)</textual></para><figure class="po-container e384 e384"><title class="po-block e385 e385"><textual class="po-textual">Path orthogonality</textual></title><informaltable class="po-container e386 e386"><tr class="po-table e387 e387"><td class="po-block e388 e388"><textual class="po-textual"> pp</textual><subscript class="po-atom e389 e389"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ⊥ pp</textual><subscript class="po-atom e390 e390"><textual class="po-textual">2</textual></subscript><textual class="po-textual">
                        </textual></td><td class="po-block e391 e391"><textual class="po-textual"> iff </textual></td><td class="po-block e392 e392"><textual class="po-textual"> not [ pp</textual><subscript class="po-atom e393 e393"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ≺ pp</textual><subscript class="po-atom e394 e394"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ⋁
                                pp</textual><subscript class="po-atom e395 e395"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ≺ pp</textual><subscript class="po-atom e396 e396"><textual class="po-textual">1</textual></subscript><textual class="po-textual">] </textual></td></tr></informaltable></figure><section class="po-hcontainer e397 e397"><title class="po-block e398 e398"><textual class="po-textual">Extension of basic vocabulary</textual></title><para class="po-block e399 e399"><textual class="po-textual">In order to ease understanding and increase the generality of descriptions, we
                    propose now to extend the vocabulary through definitions based on the
                    fundamental operations described above: </textual><emphasis class="po-inline e400 e400" role="bold"><textual class="po-textual">move</textual></emphasis><textual class="po-textual">,
                        </textual><emphasis class="po-inline e401 e401" role="bold"><textual class="po-textual">copy</textual></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e402 e402" role="bold"><textual class="po-textual">replace</textual></emphasis><textual class="po-textual">
                    </textual><footnote class="po-popup e403 e403"><para class="po-block e404 e404"><textual class="po-textual">These operations are known to be non-trivial to compute by a diff
                            engine, can be non optimal, and are actually rarely produced for this
                            reason. However, other sources of delta computation such as smart
                            versioning oriented editors can produce very useful move and copy delta
                            operations.</textual></para></footnote><textual class="po-textual">. </textual></para><figure class="po-container e405 e405"><title class="po-block e406 e406"><textual class="po-textual">Definition of Additional Operators</textual></title><informaltable class="po-container e407 e407"><tr class="po-table e408 e408"><td class="po-block e409 e409"><textual class="po-textual">pp</textual><subscript class="po-atom e410 e410"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ≪ pp</textual><subscript class="po-atom e411 e411"><textual class="po-textual">1</textual></subscript></td><td class="po-block e412 e412"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e413 e413"><textual class="po-textual">d › { </textual><emphasis class="po-inline e414 e414" role="bold"><textual class="po-textual">move</textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e415 e415"><textual class="po-textual">1</textual></subscript><textual class="po-textual">,
                                pp</textual><subscript class="po-atom e416 e416"><textual class="po-textual">2</textual></subscript><textual class="po-textual">) } › d’ </textual></td><td class="po-block e417 e417"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e418 e418"><textual class="po-textual">d › { </textual><emphasis class="po-inline e419 e419" role="bold"><textual class="po-textual">insert
                                    </textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e420 e420"><textual class="po-textual">2</textual></subscript><textual class="po-textual">,</textual><emphasis class="po-inline e421 e421" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d, pp</textual><subscript class="po-atom e422 e422"><textual class="po-textual">1</textual></subscript><textual class="po-textual">))};{</textual><emphasis class="po-inline e423 e423" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e424 e424"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ⊕
                                    ζ(pp</textual><subscript class="po-atom e425 e425"><textual class="po-textual">2</textual></subscript><textual class="po-textual">)) } › d’</textual></td></tr><tr class="po-table e426 e426"><td class="po-block e427 e427"><textual class="po-textual">pp</textual><subscript class="po-atom e428 e428"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ≪ pp</textual><subscript class="po-atom e429 e429"><textual class="po-textual">2</textual></subscript></td><td class="po-block e430 e430"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e431 e431"><textual class="po-textual">d › { </textual><emphasis class="po-inline e432 e432" role="bold"><textual class="po-textual">move</textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e433 e433"><textual class="po-textual">1</textual></subscript><textual class="po-textual">,
                                pp</textual><subscript class="po-atom e434 e434"><textual class="po-textual">2</textual></subscript><textual class="po-textual">) } › d’ </textual></td><td class="po-block e435 e435"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e436 e436"><textual class="po-textual">d › { </textual><emphasis class="po-inline e437 e437" role="bold"><textual class="po-textual">insert
                                    </textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e438 e438"><textual class="po-textual">2</textual></subscript><textual class="po-textual">,</textual><emphasis class="po-inline e439 e439" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d, pp</textual><subscript class="po-atom e440 e440"><textual class="po-textual">1</textual></subscript><textual class="po-textual">))};{</textual><emphasis class="po-inline e441 e441" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e442 e442"><textual class="po-textual">1</textual></subscript><textual class="po-textual">) } ›
                            d’</textual></td></tr><tr class="po-table e443 e443"><td class="po-block e444 e444"><textual class="po-textual">pp</textual><subscript class="po-atom e445 e445"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ⊥ pp</textual><subscript class="po-atom e446 e446"><textual class="po-textual">2</textual></subscript></td><td class="po-block e447 e447"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e448 e448"><textual class="po-textual">d › { </textual><emphasis class="po-inline e449 e449" role="bold"><textual class="po-textual">copy</textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e450 e450"><textual class="po-textual">1</textual></subscript><textual class="po-textual">,
                                pp</textual><subscript class="po-atom e451 e451"><textual class="po-textual">2</textual></subscript><textual class="po-textual">) } › d’ </textual></td><td class="po-block e452 e452"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e453 e453"><textual class="po-textual">d › { </textual><emphasis class="po-inline e454 e454" role="bold"><textual class="po-textual">insert
                                    </textual></emphasis><textual class="po-textual">(pp</textual><subscript class="po-atom e455 e455"><textual class="po-textual">2</textual></subscript><textual class="po-textual">,</textual><emphasis class="po-inline e456 e456" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d, pp</textual><subscript class="po-atom e457 e457"><textual class="po-textual">1</textual></subscript><textual class="po-textual">)) } › d’</textual></td></tr><tr class="po-table e458 e458"><td class="po-block e459 e459"><textual class="po-textual">
                            </textual></td><td class="po-block e460 e460"><textual class="po-textual">
                            </textual></td><td class="po-block e461 e461"><textual class="po-textual">d › { </textual><emphasis class="po-inline e462 e462" role="bold"><textual class="po-textual">replace</textual></emphasis><textual class="po-textual">(pp,A) } › d’ </textual></td><td class="po-block e463 e463"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e464 e464"><textual class="po-textual">d › { </textual><emphasis class="po-inline e465 e465" role="bold"><textual class="po-textual">insert </textual></emphasis><textual class="po-textual">(pp,A)};{</textual><emphasis class="po-inline e466 e466" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp ⊕ ζ(pp)) } › d’</textual></td></tr><tr class="po-table e467 e467"><td class="po-block e468 e468"><textual class="po-textual">
                            </textual></td><td class="po-block e469 e469"><textual class="po-textual">
                            </textual></td><td class="po-block e470 e470"><textual class="po-textual">d › { </textual><emphasis class="po-inline e471 e471" role="bold"><textual class="po-textual">replace</textual></emphasis><textual class="po-textual">(pp/@nm,A) } › d’ </textual></td><td class="po-block e472 e472"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e473 e473"><textual class="po-textual">d › {</textual><emphasis class="po-inline e474 e474" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp/@nm) }; { </textual><emphasis class="po-inline e475 e475" role="bold"><textual class="po-textual">insert-attr</textual></emphasis><textual class="po-textual">(pp/@nm,A)} › d’</textual></td></tr></informaltable></figure><para class="po-block e476 e476"><textual class="po-textual">Note that move and copy operations are only defined for orthogonal paths</textual><footnote class="po-popup e477 e477"><para class="po-block e478 e478"><textual class="po-textual"> A theorem establishes that pp</textual><subscript class="po-atom e479 e479"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ⊥
                                pp</textual><subscript class="po-atom e480 e480"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ⇔ pp</textual><subscript class="po-atom e481 e481"><textual class="po-textual">1</textual></subscript><textual class="po-textual">≪
                                pp</textual><subscript class="po-atom e482 e482"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ⋁ pp</textual><subscript class="po-atom e483 e483"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ≪
                                pp</textual><subscript class="po-atom e484 e484"><textual class="po-textual">1</textual></subscript><textual class="po-textual">
                        </textual></para></footnote><textual class="po-textual">.</textual></para></section><section class="po-hcontainer e485 e485"><title class="po-block e486 e486"><textual class="po-textual">Inversion of basic operations and snapshots</textual></title><para class="po-block e487 e487"><textual class="po-textual">Inverting a delta (i.e. computing the changes that will exactly bring the
                    operand in the previous state) requires knowing the original operand on which
                    changes will be applied.</textual></para><para class="po-block e488 e488"><textual class="po-textual">The inversion function is inductively defined as follows:</textual></para><figure class="po-container e489 e489"><title class="po-block e490 e490"><textual class="po-textual">Inversion Function ∘</textual></title><informaltable class="po-container e491 e491"><tr class="po-table e492 e492"><td class="po-block e493 e493"><textual class="po-textual">
                            </textual></td><td class="po-block e494 e494"><textual class="po-textual">
                            </textual></td><td align="right" class="po-block e495 e495"><textual class="po-textual">
                                </textual><emphasis class="po-inline e496 e496" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">{ } </textual></td><td class="po-block e497 e497"><textual class="po-textual"> = </textual></td><td class="po-block e498 e498"><textual class="po-textual"> { } </textual></td></tr><tr class="po-table e499 e499"><td class="po-block e500 e500"><textual class="po-textual"> d › {δ</textual><subscript class="po-atom e501 e501"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ... δ</textual><subscript class="po-atom e502 e502"><textual class="po-textual">i</textual></subscript><textual class="po-textual">} › d’</textual></td><td class="po-block e503 e503"><textual class="po-textual"> ⇒ </textual></td><td align="right" class="po-block e504 e504"><textual class="po-textual">
                                </textual><emphasis class="po-inline e505 e505" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">{δ</textual><subscript class="po-atom e506 e506"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ...
                                    δ</textual><subscript class="po-atom e507 e507"><textual class="po-textual">i</textual></subscript><textual class="po-textual">} </textual></td><td class="po-block e508 e508"><textual class="po-textual"> = </textual></td><td class="po-block e509 e509"><textual class="po-textual"> {</textual><emphasis class="po-inline e510 e510" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">δ</textual><subscript class="po-atom e511 e511"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ...
                                    </textual><emphasis class="po-inline e512 e512" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">δ</textual><subscript class="po-atom e513 e513"><textual class="po-textual">i</textual></subscript><textual class="po-textual">}
                            </textual></td></tr><tr class="po-table e514 e514"><td class="po-block e515 e515"><textual class="po-textual"> d › Δ</textual><subscript class="po-atom e516 e516"><textual class="po-textual">1</textual></subscript><textual class="po-textual">;Δ</textual><subscript class="po-atom e517 e517"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> › d’</textual></td><td class="po-block e518 e518"><textual class="po-textual"> ⇒ </textual></td><td align="right" class="po-block e519 e519"><textual class="po-textual">
                                </textual><emphasis class="po-inline e520 e520" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(Δ</textual><subscript class="po-atom e521 e521"><textual class="po-textual">1</textual></subscript><textual class="po-textual">;Δ</textual><subscript class="po-atom e522 e522"><textual class="po-textual">2</textual></subscript><textual class="po-textual">) </textual></td><td class="po-block e523 e523"><textual class="po-textual"> = </textual></td><td class="po-block e524 e524"><textual class="po-textual">
                                </textual><emphasis class="po-inline e525 e525" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(Δ</textual><subscript class="po-atom e526 e526"><textual class="po-textual">2</textual></subscript><textual class="po-textual">);</textual><emphasis class="po-inline e527 e527" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(Δ</textual><subscript class="po-atom e528 e528"><textual class="po-textual">1</textual></subscript><textual class="po-textual">) </textual></td></tr><tr class="po-table e529 e529"><td class="po-block e530 e530"><textual class="po-textual"> d › {</textual><emphasis class="po-inline e531 e531" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp)} › d’</textual></td><td class="po-block e532 e532"><textual class="po-textual"> ⇒ </textual></td><td align="right" class="po-block e533 e533"><textual class="po-textual">
                                </textual><emphasis class="po-inline e534 e534" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(</textual><emphasis class="po-inline e535 e535" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp)) </textual></td><td class="po-block e536 e536"><textual class="po-textual"> = </textual></td><td class="po-block e537 e537"><textual class="po-textual">
                                </textual><emphasis class="po-inline e538 e538" role="bold"><textual class="po-textual">insert</textual></emphasis><textual class="po-textual">(pp,</textual><emphasis class="po-inline e539 e539" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d,pp)) </textual></td></tr><tr class="po-table e540 e540"><td class="po-block e541 e541"><textual class="po-textual"> d › {</textual><emphasis class="po-inline e542 e542" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp/@nm)} › d’</textual></td><td class="po-block e543 e543"><textual class="po-textual"> ⇒ </textual></td><td align="right" class="po-block e544 e544"><textual class="po-textual">
                                </textual><emphasis class="po-inline e545 e545" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(</textual><emphasis class="po-inline e546 e546" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp/@nm)) </textual></td><td class="po-block e547 e547"><textual class="po-textual"> = </textual></td><td class="po-block e548 e548"><textual class="po-textual">
                                </textual><emphasis class="po-inline e549 e549" role="bold"><textual class="po-textual">insert-attr</textual></emphasis><textual class="po-textual">(pp/@nm,</textual><emphasis class="po-inline e550 e550" role="bold"><textual class="po-textual">get</textual></emphasis><textual class="po-textual">(d,pp/@nm)) </textual></td></tr><tr class="po-table e551 e551"><td class="po-block e552 e552"><textual class="po-textual"> d › {</textual><emphasis class="po-inline e553 e553" role="bold"><textual class="po-textual">insert</textual></emphasis><textual class="po-textual">(pp,A)} › d’</textual></td><td class="po-block e554 e554"><textual class="po-textual"> ⇒ </textual></td><td align="right" class="po-block e555 e555"><textual class="po-textual">
                                </textual><emphasis class="po-inline e556 e556" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(</textual><emphasis class="po-inline e557 e557" role="bold"><textual class="po-textual">insert</textual></emphasis><textual class="po-textual">(pp,A)) </textual></td><td class="po-block e558 e558"><textual class="po-textual"> = </textual></td><td class="po-block e559 e559"><textual class="po-textual">
                                </textual><emphasis class="po-inline e560 e560" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp) </textual></td></tr><tr class="po-table e561 e561"><td class="po-block e562 e562"><textual class="po-textual"> d › {</textual><emphasis class="po-inline e563 e563" role="bold"><textual class="po-textual">insert-attr</textual></emphasis><textual class="po-textual">(pp/@nm,A)} › d’</textual></td><td class="po-block e564 e564"><textual class="po-textual"> ⇒ </textual></td><td align="right" class="po-block e565 e565"><textual class="po-textual">
                                </textual><emphasis class="po-inline e566 e566" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(</textual><emphasis class="po-inline e567 e567" role="bold"><textual class="po-textual">insert-attr</textual></emphasis><textual class="po-textual">(pp/@nm,A)) </textual></td><td class="po-block e568 e568"><textual class="po-textual"> = </textual></td><td class="po-block e569 e569"><textual class="po-textual">
                                </textual><emphasis class="po-inline e570 e570" role="bold"><textual class="po-textual">delete</textual></emphasis><textual class="po-textual">(pp/@nm) </textual></td></tr></informaltable></figure><para class="po-block e571 e571"><textual class="po-textual">Delta inversion is characterized by the following soundness property:</textual></para><figure class="po-container e572 e572" xml:id="proposition-1"><title class="po-block e573 e573"><textual class="po-textual">Proposition 1</textual></title><informaltable class="po-container e574 e574"><tr class="po-table e575 e575"><td class="po-block e576 e576"><textual class="po-textual">d › Δ › d’ </textual></td><td class="po-block e577 e577"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e578 e578"><textual class="po-textual"> d’ › </textual><emphasis class="po-inline e579 e579" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">Δ › d</textual></td></tr></informaltable><para class="po-block e580 e580"><emphasis class="po-inline e581 e581" role="ital"><textual class="po-textual">Inversion of well-formed delta operations over
                            well-formed documents produces a well-formed reverse tree
                            transformations</textual></emphasis></para></figure><para class="po-block e582 e582"><textual class="po-textual">
                    </textual><emphasis class="po-inline e583 e583" role="ital"><textual class="po-textual">Proof</textual></emphasis><textual class="po-textual"> : See appendix </textual><xref class="po-milestone e584 e584" linkend="proof-proposition-1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">
                </textual></para><para class="po-block e585 e585"><textual class="po-textual">The inversion of deltas is an important functionality which allows navigating
                    in the history graph. Moreover, it provides a more compact representation of
                    changes, especially when successive versions represent documents whose content
                    tends to increase incrementally (corresponds to the construction phase inside a
                    standard document life-cycle).</textual></para><para class="po-block e586 e586"><textual class="po-textual">Indeed, in such cases, subgraphs of the form </textual><footnote class="po-popup e587 e587" xml:id="note-2"><para class="po-block e588 e588"><textual class="po-textual">focus node v</textual><subscript class="po-atom e589 e589"><textual class="po-textual">k</textual></subscript><textual class="po-textual"> is by convention identified
                            through surrounding brackets [.]</textual></para></footnote></para><informaltable class="po-container e590 e590"><tr class="po-table e591 e591"><td class="po-block e592 e592"><textual class="po-textual">v</textual><subscript class="po-atom e593 e593"><textual class="po-textual">i</textual></subscript></td><td class="po-block e594 e594"><textual class="po-textual">→</textual><superscript class="po-atom e595 e595"><textual class="po-textual">insert(p,A)</textual></superscript></td><td class="po-block e596 e596"><textual class="po-textual">v</textual><subscript class="po-atom e597 e597"><textual class="po-textual">j</textual></subscript></td><td class="po-block e598 e598"><textual class="po-textual">→</textual><superscript class="po-atom e599 e599"><textual class="po-textual">insert(p',B)</textual></superscript></td><td class="po-block e600 e600"><textual class="po-textual">[</textual><emphasis class="po-inline e601 e601" role="bold"><textual class="po-textual">v</textual><subscript class="po-atom e602 e602"><textual class="po-textual">k</textual></subscript></emphasis><textual class="po-textual">]</textual></td></tr></informaltable><para class="po-block e603 e603"><textual class="po-textual">can be rewritten using delta inversion as:</textual></para><informaltable class="po-container e604 e604"><tr class="po-table e605 e605"><td class="po-block e606 e606"><textual class="po-textual">v</textual><subscript class="po-atom e607 e607"><textual class="po-textual">i</textual></subscript></td><td class="po-block e608 e608"><textual class="po-textual">←</textual><superscript class="po-atom e609 e609"><textual class="po-textual">delete(p)</textual></superscript></td><td class="po-block e610 e610"><textual class="po-textual">v</textual><subscript class="po-atom e611 e611"><textual class="po-textual">j</textual></subscript></td><td class="po-block e612 e612"><textual class="po-textual">←</textual><superscript class="po-atom e613 e613"><textual class="po-textual">delete(p')</textual></superscript></td><td class="po-block e614 e614"><textual class="po-textual">[</textual><emphasis class="po-inline e615 e615" role="bold"><textual class="po-textual">v</textual><subscript class="po-atom e616 e616"><textual class="po-textual">k</textual></subscript></emphasis><textual class="po-textual">]</textual></td></tr></informaltable><para class="po-block e617 e617"><textual class="po-textual">This transformation is beneficial because the subtrees A and B are redundantly
                    stored: once inside the history and once inside the encapsulated instance
                    itself. In case the focus is set to a non-terminal versioning point (e.g.
                        v</textual><subscript class="po-atom e618 e618"><textual class="po-textual">j</textual></subscript><textual class="po-textual"> ), we also may have</textual></para><informaltable class="po-container e619 e619"><tr class="po-table e620 e620"><td class="po-block e621 e621"><textual class="po-textual">v</textual><subscript class="po-atom e622 e622"><textual class="po-textual">i</textual></subscript></td><td class="po-block e623 e623"><textual class="po-textual">←</textual><superscript class="po-atom e624 e624"><textual class="po-textual">delete(p)</textual></superscript></td><td class="po-block e625 e625"><textual class="po-textual">[</textual><emphasis class="po-inline e626 e626" role="bold"><textual class="po-textual">v</textual><subscript class="po-atom e627 e627"><textual class="po-textual">j</textual></subscript></emphasis><textual class="po-textual">]</textual></td><td class="po-block e628 e628"><textual class="po-textual">→</textual><superscript class="po-atom e629 e629"><textual class="po-textual">insert(p',B)</textual></superscript></td><td class="po-block e630 e630"><textual class="po-textual">v</textual><subscript class="po-atom e631 e631"><textual class="po-textual">k</textual></subscript></td></tr></informaltable><para class="po-block e632 e632"><textual class="po-textual">which is still quite meaningful as the subtree B is only stored once inside
                    the delta transition (indeed, the encapsulated document, consistent with focused
                    version v</textual><subscript class="po-atom e633 e633"><textual class="po-textual">j</textual></subscript><textual class="po-textual">, does not comprise the B subtree (see examples
                    3 et 4 below to grasp more concretely the point).</textual></para><para class="po-block e634 e634"><textual class="po-textual">Note that inverting the operands of a diff operation should also lead to
                    reversed deltas </textual><footnote class="po-popup e635 e635" xml:id="note-3"><para class="po-block e636 e636"><textual class="po-textual">Such an abstract property could be hardly met by a "black box" diff
                            operator, from the implementation point of view. However, we investigate
                            if a delta normalization procedure could reduce those cases, so that the
                            abstract property of </textual><xref class="po-milestone e637 e637" linkend="strong-soundness"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> would be always
                            verified. </textual></para></footnote><textual class="po-textual">:</textual></para><figure class="po-container e638 e638" xml:id="strong-soundness"><title class="po-block e639 e639"><textual class="po-textual">Strong soundness of delta inversion</textual></title><informaltable class="po-container e640 e640"><tr class="po-table e641 e641"><td class="po-block e642 e642"><emphasis class="po-inline e643 e643" role="bold"><textual class="po-textual">diff</textual></emphasis><textual class="po-textual">(c, d, d’)=Δ </textual></td><td class="po-block e644 e644"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e645 e645"><textual class="po-textual">
                                </textual><emphasis class="po-inline e646 e646" role="bold"><textual class="po-textual">diff</textual></emphasis><textual class="po-textual">(c, d’, d) = </textual><emphasis class="po-inline e647 e647" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(Δ)</textual></td></tr></informaltable></figure><para class="po-block e648 e648"><textual class="po-textual">A weaker version of this property (see </textual><xref class="po-milestone e649 e649" linkend="weak-soundness"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> below)
                    requires defining an equivalence relation over deltas. This relation is based on
                    the effect of delta application rather than its syntactic structure.</textual></para><figure class="po-container e650 e650" xml:id="weak-soundness"><title class="po-block e651 e651"><textual class="po-textual">Weak soundness of delta inversion</textual></title><informaltable class="po-container e652 e652"><tr class="po-table e653 e653"><td class="po-block e654 e654"><emphasis class="po-inline e655 e655" role="bold"><textual class="po-textual">diff</textual></emphasis><textual class="po-textual">(c, d, d’)=Δ </textual></td><td class="po-block e656 e656"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e657 e657"><textual class="po-textual">
                                </textual><emphasis class="po-inline e658 e658" role="bold"><textual class="po-textual">diff</textual></emphasis><textual class="po-textual">(c, d’, d) ≈ </textual><emphasis class="po-inline e659 e659" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(Δ)</textual></td></tr></informaltable></figure><figure class="po-container e660 e660" xml:id="delta-equivalence"><title class="po-block e661 e661"><textual class="po-textual">Equivalence of deltas </textual></title><informaltable class="po-container e662 e662"><tr class="po-table e663 e663" valign="middle"><td class="po-block e664 e664" valign="middle"><textual class="po-textual">Δ ≈ Δ' </textual></td><td class="po-block e665 e665" valign="middle"><textual class="po-textual"> ⇔ </textual></td><td class="po-block e666 e666" valign="middle"><textual class="po-textual">
                                </textual><para class="po-block e667 e667"><textual class="po-textual">
                                    </textual><informaltable class="po-container e668 e668" frame="lhs"><tr class="po-table e669 e669"><td class="po-block e670 e670"><textual class="po-textual">∀ d, d', d'' </textual></td><td class="po-block e671 e671"><textual class="po-textual">
                                            </textual></td><td class="po-block e672 e672"><textual class="po-textual">
                                            </textual></td></tr><tr class="po-table e673 e673"><td class="po-block e674 e674"><textual class="po-textual">d › Δ › d' ⋀ d › Δ' › d''</textual></td><td class="po-block e675 e675"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e676 e676"><textual class="po-textual">d' ≈ d''</textual></td></tr></informaltable><textual class="po-textual">
                                </textual></para><textual class="po-textual">
                            </textual></td></tr></informaltable></figure><para class="po-block e677 e677"><textual class="po-textual">In the general case, it is much more interesting (from the performance point
                    of view) to compute inversion on deltas rather than to perform a reversed
                diff.</textual></para></section></section></section><section class="po-hcontainer e678 e678"><title class="po-block e679 e679"><textual class="po-textual">Fundamental Operations over Encapsulated Documents </textual></title><section class="po-hcontainer e680 e680"><title class="po-block e681 e681"><textual class="po-textual">Creation of a history from an initial XML document</textual></title><para class="po-block e682 e682"><textual class="po-textual">This operation has the following abstract signature:</textual></para><figure class="po-container e683 e683" xml:id="op-encapsulation"><title class="po-block e684 e684"><textual class="po-textual">Initial Encapsulation</textual></title><informaltable class="po-container e685 e685"><tr class="po-table e686 e686"><td class="po-block e687 e687"><emphasis class="po-inline e688 e688" role="bold"><textual class="po-textual">create-history</textual></emphasis><textual class="po-textual">(d) </textual></td><td class="po-block e689 e689"><textual class="po-textual">→</textual></td><td class="po-block e690 e690"><textual class="po-textual"> x-version[x-body </textual><emphasis class="po-inline e691 e691" role="bold"><subscript class="po-atom e692 e692"><textual class="po-textual">v</textual><subscript class="po-atom e693 e693"><textual class="po-textual">0</textual></subscript></subscript><textual class="po-textual">
                            </textual></emphasis><textual class="po-textual">[d], x-history[</textual><emphasis class="po-inline e694 e694" role="bold"><textual class="po-textual">v</textual><subscript class="po-atom e695 e695"><textual class="po-textual">0</textual></subscript></emphasis><textual class="po-textual">]]</textual></td></tr></informaltable></figure><para class="po-block e696 e696"><textual class="po-textual">This reflects that the document is encapsulated, and that an initial versioning
                point </textual><emphasis class="po-inline e697 e697" role="ital"><textual class="po-textual">v</textual><subscript class="po-atom e698 e698"><textual class="po-textual">0</textual></subscript></emphasis><textual class="po-textual"> is created inside
                the history. The link that relates the embedded document with the consistent
                versioning point is inserted in the </textual><emphasis class="po-inline e699 e699" role="ital"><textual class="po-textual">x-body</textual></emphasis><textual class="po-textual">
            subtree.</textual></para></section><section class="po-hcontainer e700 e700"><title class="po-block e701 e701"><textual class="po-textual">Versioning</textual></title><para class="po-block e702 e702"><textual class="po-textual">The operation requires two operands: the encapsulated document and another variant
                of the document which is to be considered as the novel versioning point. What is
                returned is a novel encapsulated document including a new versioning point, a
                (consistent) link inside the body part, and a transition from the previous
                versioning point to the new one. This transition expresses the delta operations
                abstracted from the diff engine outputs.</textual></para><figure class="po-container e703 e703" xml:id="op-version-creation"><title class="po-block e704 e704"><textual class="po-textual">Version Creation</textual></title><informaltable class="po-container e705 e705"><tr class="po-table e706 e706"><td class="po-block e707 e707"><emphasis class="po-inline e708 e708" role="bold"><textual class="po-textual">create-version</textual></emphasis><textual class="po-textual">(x-version[x-body</textual><emphasis class="po-inline e709 e709" role="bold"><textual class="po-textual">
                                </textual><subscript class="po-atom e710 e710"><textual class="po-textual">v</textual><subscript class="po-atom e711 e711"><textual class="po-textual">i</textual></subscript></subscript><textual class="po-textual">
                            </textual></emphasis><textual class="po-textual">[d], x-history[</textual><emphasis class="po-inline e712 e712" role="bold"><textual class="po-textual">...
                                v</textual><subscript class="po-atom e713 e713"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual"> ...]], d') </textual></td><td class="po-block e714 e714"><textual class="po-textual"> → </textual></td><td class="po-block e715 e715"><textual class="po-textual"> x-version[ x-body</textual><emphasis class="po-inline e716 e716" role="bold"><textual class="po-textual">
                                </textual><subscript class="po-atom e717 e717"><textual class="po-textual">v</textual><subscript class="po-atom e718 e718"><textual class="po-textual">j</textual></subscript></subscript><textual class="po-textual">
                            </textual></emphasis><textual class="po-textual">[d], x-history[... v</textual><subscript class="po-atom e719 e719"><textual class="po-textual">i</textual></subscript><textual class="po-textual"> →</textual><superscript class="po-atom e720 e720"><textual class="po-textual">
                            Δ</textual></superscript><textual class="po-textual">
                            </textual><emphasis class="po-inline e721 e721" role="bold"><textual class="po-textual">v</textual><subscript class="po-atom e722 e722"><textual class="po-textual">j</textual></subscript></emphasis><textual class="po-textual"> ]]</textual></td></tr><tr class="po-table e723 e723"><td class="po-block e724 e724"><textual class="po-textual">
                        </textual></td><td class="po-block e725 e725"><textual class="po-textual"> with </textual></td><td class="po-block e726 e726"><textual class="po-textual">
                            </textual><emphasis class="po-inline e727 e727" role="bold"><textual class="po-textual">diff</textual></emphasis><textual class="po-textual">(c,d,d') = Δ</textual></td></tr></informaltable></figure></section><section class="po-hcontainer e728 e728"><title class="po-block e729 e729"><textual class="po-textual">Extraction</textual></title><para class="po-block e730 e730"><textual class="po-textual">Unfolds the embedded document. This is useful to work on the target document,
                update or change it.</textual></para><figure class="po-container e731 e731" xml:id="op-extraction"><title class="po-block e732 e732"><textual class="po-textual">Version Extraction</textual></title><informaltable class="po-container e733 e733"><tr class="po-table e734 e734"><td class="po-block e735 e735"><emphasis class="po-inline e736 e736" role="bold"><textual class="po-textual">extract</textual></emphasis><textual class="po-textual">( x-version[x-body</textual><emphasis class="po-inline e737 e737" role="bold"><textual class="po-textual">
                                </textual><subscript class="po-atom e738 e738"><textual class="po-textual">v</textual><subscript class="po-atom e739 e739"><textual class="po-textual">i</textual></subscript></subscript><textual class="po-textual">
                            </textual></emphasis><textual class="po-textual">[d], x-history[...</textual><emphasis class="po-inline e740 e740" role="bold"><textual class="po-textual">v</textual><subscript class="po-atom e741 e741"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual">...]] ) </textual></td><td class="po-block e742 e742"><textual class="po-textual"> → </textual></td><td class="po-block e743 e743"><textual class="po-textual"> d </textual></td></tr></informaltable></figure></section><section class="po-hcontainer e744 e744"><title class="po-block e745 e745"><textual class="po-textual">Focusing</textual></title><para class="po-block e746 e746"><textual class="po-textual">This operation allows modifying the embedded document </textual><emphasis class="po-inline e747 e747" role="ital"><textual class="po-textual">d</textual></emphasis><textual class="po-textual"> in order to be compliant to a given version stored in the history.
                This requires first building the path that connects the current versioning point
                    </textual><emphasis class="po-inline e748 e748" role="ital"><textual class="po-textual">v</textual><subscript class="po-atom e749 e749"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual"> to the novel
                    </textual><emphasis class="po-inline e750 e750" role="ital"><textual class="po-textual">v</textual><subscript class="po-atom e751 e751"><textual class="po-textual">j</textual></subscript></emphasis><textual class="po-textual"> and second, applying
                all deltas to obtain the new embedded document </textual><emphasis class="po-inline e752 e752" role="ital"><textual class="po-textual">d'</textual></emphasis></para><figure class="po-container e753 e753" xml:id="op-focusing"><title class="po-block e754 e754"><textual class="po-textual">Version Focusing</textual></title><informaltable class="po-container e755 e755"><tr class="po-table e756 e756"><td class="po-block e757 e757"><emphasis class="po-inline e758 e758" role="bold"><textual class="po-textual">focus</textual></emphasis><textual class="po-textual">(x-version[x-body</textual><emphasis class="po-inline e759 e759" role="bold"><subscript class="po-atom e760 e760"><textual class="po-textual">v</textual><subscript class="po-atom e761 e761"><textual class="po-textual">i</textual></subscript></subscript></emphasis><textual class="po-textual">[d],
                                x-history[</textual><emphasis class="po-inline e762 e762" role="bold"><textual class="po-textual">...v</textual><subscript class="po-atom e763 e763"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual">...]],
                            v</textual><subscript class="po-atom e764 e764"><textual class="po-textual">j</textual></subscript><textual class="po-textual">) </textual></td><td class="po-block e765 e765"><textual class="po-textual"> → </textual></td><td class="po-block e766 e766"><textual class="po-textual"> x-version[ x-body</textual><emphasis class="po-inline e767 e767" role="bold"><textual class="po-textual">
                                </textual><subscript class="po-atom e768 e768"><textual class="po-textual">v</textual><subscript class="po-atom e769 e769"><textual class="po-textual">j</textual></subscript></subscript><textual class="po-textual">
                            </textual></emphasis><textual class="po-textual">[d'], x-history[... </textual><emphasis class="po-inline e770 e770" role="bold"><textual class="po-textual">v</textual><subscript class="po-atom e771 e771"><textual class="po-textual">j</textual></subscript></emphasis><textual class="po-textual"> ...]]</textual></td></tr><tr class="po-table e772 e772"><td class="po-block e773 e773"><textual class="po-textual">
                        </textual></td><td class="po-block e774 e774"><textual class="po-textual"> with </textual></td><td class="po-block e775 e775"><textual class="po-textual"> v</textual><subscript class="po-atom e776 e776"><textual class="po-textual">i</textual></subscript><textual class="po-textual"> →</textual><superscript class="po-atom e777 e777"><textual class="po-textual">
                            Δ</textual><subscript class="po-atom e778 e778"><textual class="po-textual">i</textual></subscript></superscript><textual class="po-textual"> ... →</textual><superscript class="po-atom e779 e779"><textual class="po-textual">
                                Δ</textual><subscript class="po-atom e780 e780"><textual class="po-textual">j</textual></subscript></superscript><textual class="po-textual">v</textual><subscript class="po-atom e781 e781"><textual class="po-textual">j</textual></subscript><textual class="po-textual"> and
                            d › Δ</textual><subscript class="po-atom e782 e782"><textual class="po-textual">i</textual></subscript><textual class="po-textual"> ; ... ; Δ</textual><subscript class="po-atom e783 e783"><textual class="po-textual">j</textual></subscript><textual class="po-textual"> › d’
                        </textual></td></tr></informaltable></figure><para class="po-block e784 e784"><textual class="po-textual">Note that in the connection path, some vertices could have the reversed form
                    v</textual><subscript class="po-atom e785 e785"><textual class="po-textual">n</textual></subscript><textual class="po-textual"> ←</textual><superscript class="po-atom e786 e786"><textual class="po-textual">Δ</textual><subscript class="po-atom e787 e787"><textual class="po-textual">n</textual></subscript></superscript><textual class="po-textual">
                    v</textual><subscript class="po-atom e788 e788"><textual class="po-textual">m</textual></subscript><textual class="po-textual"> requiring the computation of inverse delta (indeed,
                the connection graph is a DAG admitting branching). Note also that we assume that
                the algorithm is able to choose a path when several possibilities are present in the
                graph (it may decide which is the optimal path with respect to performance criteria
                based on standard algorithm based on simple metrics).</textual></para></section><section class="po-hcontainer e789 e789"><title class="po-block e790 e790"><textual class="po-textual">Merging branches</textual></title><para class="po-block e791 e791"><textual class="po-textual">This operation requires two operands: the embedded document and another existing
                versioning point. An algorithm creates a novel versioning point and two transitions
                that relate original versioning points to the new one. The idea is to perform a
                merge with maximal preservation (no deletion operation in the respective deltas).
                However, conflicts may arise, and can be signaled thanks to a dedicated annotation
                inside the target document (this annotation is based on foreign namespace which
                cannot conflict with namespaces used by target document)</textual></para><figure class="po-container e792 e792" xml:id="op-merging"><title class="po-block e793 e793"><textual class="po-textual">Version Merging</textual></title><informaltable class="po-container e794 e794"><tr class="po-table e795 e795"><td class="po-block e796 e796"><emphasis class="po-inline e797 e797" role="bold"><textual class="po-textual">merge</textual></emphasis><textual class="po-textual">(x-version[x-body</textual><emphasis class="po-inline e798 e798" role="bold"><subscript class="po-atom e799 e799"><textual class="po-textual">v</textual><subscript class="po-atom e800 e800"><textual class="po-textual">i</textual></subscript></subscript></emphasis><textual class="po-textual">[d],
                                x-history[</textual><emphasis class="po-inline e801 e801" role="bold"><textual class="po-textual">...v</textual><subscript class="po-atom e802 e802"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual">...]],
                            v</textual><subscript class="po-atom e803 e803"><textual class="po-textual">j</textual></subscript><textual class="po-textual">) </textual></td><td class="po-block e804 e804"><textual class="po-textual"> → </textual></td><td class="po-block e805 e805"><textual class="po-textual"> x-version[ x-body</textual><emphasis class="po-inline e806 e806" role="bold"><subscript class="po-atom e807 e807"><textual class="po-textual">v</textual><subscript class="po-atom e808 e808"><textual class="po-textual">k</textual></subscript></subscript></emphasis><textual class="po-textual">[d'],
                            x-history[... v</textual><subscript class="po-atom e809 e809"><textual class="po-textual">i</textual></subscript><textual class="po-textual">
                                →</textual><superscript class="po-atom e810 e810"><textual class="po-textual">Δ</textual><subscript class="po-atom e811 e811"><textual class="po-textual">a</textual></subscript></superscript><emphasis class="po-inline e812 e812" role="bold"><textual class="po-textual"> v</textual><subscript class="po-atom e813 e813"><textual class="po-textual">k</textual></subscript></emphasis><textual class="po-textual"> ,
                            v</textual><subscript class="po-atom e814 e814"><textual class="po-textual">j</textual></subscript><textual class="po-textual">
                                →</textual><superscript class="po-atom e815 e815"><textual class="po-textual">Δ</textual><subscript class="po-atom e816 e816"><textual class="po-textual">b</textual></subscript></superscript><emphasis class="po-inline e817 e817" role="bold"><textual class="po-textual"> v</textual><subscript class="po-atom e818 e818"><textual class="po-textual">k</textual></subscript></emphasis><textual class="po-textual"> ]]</textual></td></tr><tr class="po-table e819 e819"><td class="po-block e820 e820"><textual class="po-textual">
                        </textual></td><td class="po-block e821 e821"><textual class="po-textual"> with </textual></td><td class="po-block e822 e822"><textual class="po-textual"> d</textual><subscript class="po-atom e823 e823"><textual class="po-textual">v</textual><subscript class="po-atom e824 e824"><textual class="po-textual">i</textual></subscript></subscript><textual class="po-textual"> ›
                            Δ</textual><subscript class="po-atom e825 e825"><textual class="po-textual">a</textual></subscript><textual class="po-textual"> › d’ and
                            d</textual><subscript class="po-atom e826 e826"><textual class="po-textual">v</textual><subscript class="po-atom e827 e827"><textual class="po-textual">j</textual></subscript></subscript><textual class="po-textual"> ›
                            Δ</textual><subscript class="po-atom e828 e828"><textual class="po-textual">b</textual></subscript><textual class="po-textual"> › d’ </textual></td></tr></informaltable></figure><para class="po-block e829 e829"><textual class="po-textual">In the above formula, Δ</textual><subscript class="po-atom e830 e830"><textual class="po-textual">a</textual></subscript><textual class="po-textual"> represents the concatenation of
                (possibly reversed) deltas that allows to reach the new (merged) version starting
                from version v</textual><subscript class="po-atom e831 e831"><textual class="po-textual">i</textual></subscript><textual class="po-textual">, and similarly for Δ</textual><subscript class="po-atom e832 e832"><textual class="po-textual">a</textual></subscript><textual class="po-textual">
                and v</textual><subscript class="po-atom e833 e833"><textual class="po-textual">j</textual></subscript><textual class="po-textual"> .</textual></para></section></section><section class="po-hcontainer e834 e834"><title class="po-block e835 e835"><textual class="po-textual">Encoding Graphs of Deltas in XML</textual></title><para class="po-block e836 e836"><textual class="po-textual">Each versioning point is captured using a dedicated element (e.g. </textual><emphasis class="po-inline e837 e837" role="ital"><textual class="po-textual">version</textual></emphasis><textual class="po-textual">) associated with an id attribute that uniquely
            identifies it. Our convention uses a naming scheme of the form </textual><emphasis class="po-inline e838 e838" role="ital"><textual class="po-textual">v0…
                v3</textual></emphasis><textual class="po-textual"> for instance. Names for diverging branches use a dot, e.g. </textual><emphasis class="po-inline e839 e839" role="ital"><textual class="po-textual">v1.1, v1.2</textual></emphasis><textual class="po-textual">.</textual></para><para class="po-block e840 e840"><textual class="po-textual">Each version element contains a sequence of </textual><emphasis class="po-inline e841 e841" role="ital"><textual class="po-textual">delta</textual></emphasis><textual class="po-textual">
            elements which capture the transition from this versioning point to another versioning
            point. This information is conveyed by an attribute (e.g. </textual><emphasis class="po-inline e842 e842" role="ital"><textual class="po-textual">fwd</textual></emphasis><textual class="po-textual"> for forward links and </textual><emphasis class="po-inline e843 e843" role="ital"><textual class="po-textual">bwd</textual></emphasis><textual class="po-textual"> for backward
            links). Moreover, a delta contains a non order-significant sequence of delta operations,
            which captures the so-called </textual><emphasis class="po-inline e844 e844" role="ital"><textual class="po-textual">snapshot</textual></emphasis><textual class="po-textual">. Several delta
            elements are interpreted as sequences of snapshots (corresponds to the
            Δ</textual><subscript class="po-atom e845 e845"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ; Δ</textual><subscript class="po-atom e846 e846"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> syntactic form, where
                Δ</textual><subscript class="po-atom e847 e847"><textual class="po-textual">i</textual></subscript><textual class="po-textual">= {…}).</textual></para><para class="po-block e848 e848"><textual class="po-textual">Each delta operation is described using a dedicated element name according to its
            semantics (</textual><emphasis class="po-inline e849 e849" role="ital"><textual class="po-textual">insert, insert-attr</textual></emphasis><textual class="po-textual"> …). The path information
            may be concisely encoded, e.g. through an “ipath” attribute. Copies of subtrees may be
            expressed through a “copy” attribute attached to the delta element. When such an
            attribute is not defined, an extensive definition of the subtree is expected as the
            content of the operation.</textual></para><para class="po-block e850 e850"><textual class="po-textual">The example 1 below is a target document we want to track</textual></para><figure class="po-container e851 e851" xml:id="Ex1"><title class="po-block e852 e852"><textual class="po-textual">The Original Document</textual></title><programlisting class="po-block e853 e853" xml:space="preserve"><textual class="po-textual">
        &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
            &lt;!-- XHTML 1.0 --&gt;
            &lt;head&gt;
                &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;p class="verse" number="1"&gt;
                Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
                behold, there came wise men from the east to Jerusalem,
                &lt;/p&gt;
            &lt;/body&gt;
        &lt;/html&gt;
           </textual></programlisting><caption class="po-container e854 e854"><para class="po-block e855 e855"><textual class="po-textual">The original (target) document to be encoded using our method</textual></para></caption></figure><para class="po-block e856 e856"><textual class="po-textual">After applying the create-history operation, the document of figure </textual><xref class="po-milestone e857 e857" linkend="Ex2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> below is created.</textual></para><figure class="po-container e858 e858" xml:id="Ex2"><title class="po-block e859 e859"><textual class="po-textual">First encapsulation</textual></title><programlisting class="po-block e860 e860" xml:space="preserve"><textual class="po-textual">

      &lt;x-version id="xhtml-1.0" xmlns="XEROX::XRCE::DS:X-Version"&gt;
        &lt;x-body version=”v0”&gt;
            &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
            &lt;!-- XHTML 1.0 --&gt;
            &lt;head&gt;
                &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;p class="verse" number="1"&gt;
                Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
                behold, there came wise men from the east to Jerusalem,
                &lt;/p&gt;                
            &lt;/body&gt;
            &lt;/html&gt;
         &lt;/x-body&gt;
       &lt;x-history &gt;
         &lt;version id=”v0”/&gt;
       &lt;/x-history&gt;
     &lt;/x-version&gt;

            </textual></programlisting><caption class="po-container e861 e861"><para class="po-block e862 e862"><textual class="po-textual">A first version (labeled v0) has been created ; note that the attribute
                    “version” of element x-body points to the right versioning point inside the
                    x-history subtree.</textual></para></caption></figure><para class="po-block e863 e863"><textual class="po-textual">In the following example, we assume three distinct versioning points have been
            created. </textual></para><figure class="po-container e864 e864" xml:id="Ex3"><title class="po-block e865 e865"><textual class="po-textual">A focused history</textual></title><programlisting class="po-block e866 e866" xml:space="preserve"><textual class="po-textual">
                &lt;x-version id="xhtml-1.0" xmlns="XEROX::XRCE::DS:X-Version"&gt;
                    &lt;x-body version=”v1”&gt;
                        &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
                            &lt;!-- XHTML 1.0 --&gt;
                            &lt;head&gt;
                                &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
                            &lt;/head&gt;
                            &lt;body&gt;
                                &lt;p class="verse" number="1"&gt;
                                Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
                                behold, there came wise men from the east to Jerusalem,
                                &lt;/p&gt;
                                &lt;p class="verse" number="2"&gt;
                                Saying, Where is he that is born King of the Jews? For we have seen his star in 
                                the east, and are come to worship him.
                                &lt;/p&gt;
                            &lt;/body&gt;
                        &lt;/html&gt;
                    &lt;/x-body&gt;
                    &lt;x-history start=”v0” end=”v2”&gt;
                        &lt;version id=”v0” /&gt;
                        &lt;version id=”v1”&gt;
                            &lt;delta bwd=”v0”&gt;
                                &lt;delete ipath=”1/2/2”/&gt;
                            &lt;/delta &gt;
                            &lt;delta fwd=”v2”&gt;
                                &lt;insert ipath=”1/2/3”&gt;
                                    &lt;p class="verse" number="3"&gt;
                                    When Herod the king had heard these things, he was troubled, and all 
                                    Jerusalem with him.
                                    &lt;/p&gt;
                                &lt;/insert &gt;
                            &lt;/delta &gt;
                        &lt;/version &gt;
                        &lt;version id=”v2” /&gt;
                    &lt;/x-history&gt;
                &lt;/x-version&gt;
                
            </textual></programlisting><para class="po-block e867 e867"><textual class="po-textual">Three different versioning points have been created. The current version is v1 (cf
                attribute </textual><emphasis class="po-inline e868 e868" role="ital"><textual class="po-textual">version</textual></emphasis><textual class="po-textual"> of </textual><emphasis class="po-inline e869 e869" role="ital"><textual class="po-textual">x-body</textual></emphasis><textual class="po-textual"> element). As the versioning mode is “focused”, we do have
                backward oriented delta to the previous version, and forward oriented delta to the
                following version (to the latest one in this example).</textual></para></figure><para class="po-block e870 e870"><textual class="po-textual">The following example illustrate how the same information can be encoded differently,
            featuring different properties.</textual></para><figure class="po-container e871 e871" xml:id="Ex4"><title class="po-block e872 e872"><textual class="po-textual">The same document (see </textual><xref class="po-milestone e873 e873" linkend="Ex3"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) in "linear mode"</textual></title><programlisting class="po-block e874 e874" xml:space="preserve"><textual class="po-textual">

    &lt;x-version id="xhtml-1.0" xmlns="XEROX::XRCE::DS:X-Version"&gt;
        &lt;x-body version=”v1”&gt;
            &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
            &lt;!-- XHTML 1.0 --&gt;
            &lt;head&gt;
                &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;p class="verse" number="1"&gt;
                Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
                behold, there came wise men from the east to Jerusalem,
                &lt;/p&gt;
                &lt;p class="verse" number="2"&gt;
                Saying, Where is he that is born King of the Jews? For we have seen his star in 
                the east, and are come to worship him.
                &lt;/p&gt;
            &lt;/body&gt;
            &lt;/html&gt;
        &lt;/x-body&gt;
        &lt;x-history start=”v0” end=”v2”&gt;
            &lt;version id=”v0” &gt;
                &lt;delta fwd=”v1”&gt;
                    &lt;insert ipath=”1/2/2”&gt;
                    &lt;p class="verse" number="2"&gt;
                    Saying, Where is he that is born King of the Jews? For we have seen his star in 
                    the east, and are come to worship him.
                    &lt;/p&gt;
                    &lt;/insert &gt;
                &lt;/delta &gt;
            &lt;/version &gt;
            &lt;version id=”v1”&gt;
                &lt;delta fwd=”v2”&gt;
                    &lt;insert ipath=”1/2/3”&gt;
                        &lt;p class="verse" number="3"&gt;
                        When Herod the king had heard these things, he was troubled, and all 
                        Jerusalem with him.
                        &lt;/p&gt;
                    &lt;/insert &gt;
                &lt;/delta &gt;
            &lt;/version &gt;
            &lt;version id=”v2” /&gt;
        &lt;/x-history&gt;
    &lt;/x-version&gt;                

            </textual></programlisting><para class="po-block e875 e875"><textual class="po-textual">We do have a forward oriented delta from </textual><emphasis class="po-inline e876 e876" role="ital"><textual class="po-textual">v0</textual></emphasis><textual class="po-textual"> to
                    </textual><emphasis class="po-inline e877 e877" role="ital"><textual class="po-textual">v1</textual></emphasis><textual class="po-textual">, and a forward oriented delta from </textual><emphasis class="po-inline e878 e878" role="ital"><textual class="po-textual">v1</textual></emphasis><textual class="po-textual"> to </textual><emphasis class="po-inline e879 e879" role="ital"><textual class="po-textual">v2</textual></emphasis><textual class="po-textual">. Note that the
                whole history can be read in compliance with the evolution order, from the beginning
                up to the end. However, in that case, we have information redundancy as a subtree
                (verse number 2) is present both in the body and in the history.</textual></para></figure><para class="po-block e880 e880"><textual class="po-textual">We propose a particular optimisation that could be applied in linear mode: redundant
            trees are eliminated tanks to an explicit copy instruction using an XPath expression to
            designate the subtree (thus the XPath selection refers to the focused version).
            </textual><programlisting class="po-block e881 e881" xml:space="preserve"><textual class="po-textual">
                &lt;delta fwd="v1"&gt;
                    &lt;insert ipath=”1/2/2”&gt;
                        &lt;p class="verse" number="2"&gt;
                        Saying, Where is he that is born King of the Jews? For we have seen his star 
                        in the east, and are come to worship him.
                        &lt;/p&gt;
                    &lt;/insert &gt;                
                &lt;/delta&gt;                 
            </textual></programlisting><textual class="po-textual">
            In the case of figure </textual><xref class="po-milestone e882 e882" linkend="Ex4"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, the node "insert", child of the forward
            delta to v1, is suppressed from the history and its parent is changed into the
            expression below:
            </textual><programlisting class="po-block e883 e883" xml:space="preserve"><textual class="po-textual">
                &lt;delta fwd="v1"&gt;
                    &lt;insert ipath=”1/2/2” copy=”/html[1]/body[1]/p[2]”/&gt;    
                &lt;/delta&gt;                 
            </textual></programlisting></para><para class="po-block e884 e884"><textual class="po-textual">This optimization applies only to versions belonging to </textual><emphasis class="po-inline e885 e885" role="ital"><textual class="po-textual">past
                history</textual></emphasis><textual class="po-textual">, but makes a lot of sense when the evolution of document
            instances is best captured through using linear mode and comprises many incremental
            additions.</textual></para></section><section class="po-hcontainer e886 e886"><title class="po-block e887 e887"><textual class="po-textual">State of the Art</textual></title><para class="po-block e888 e888"><textual class="po-textual"> XML diff operations are basically used to realize two fundamental operations on tree
            structured documents: comparison and merging. Therefore tree based diff algorithms are
            central to solve various important problems related to XML document management and
            editing processes (</textual><xref class="po-milestone e889 e889" linkend="Chawathe96"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), among which: </textual></para><itemizedlist class="po-table e890 e890"><listitem class="po-container e891 e891"><para class="po-block e892 e892"><textual class="po-textual">checking modifications with respect to a reference document, typically, the
                    last version stored inside a repository or a file system (version management
                        </textual><xref class="po-milestone e893 e893" linkend="Chien00"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">)</textual></para></listitem><listitem class="po-container e894 e894"><para class="po-block e895 e895"><textual class="po-textual">synchronizing variants, that is, detection of changes that occurred
                    concurrently on two copies of a reference document, detecting potential
                    conflicts (</textual><xref class="po-milestone e896 e896" linkend="LaFontaine02"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref></para></listitem><listitem class="po-container e897 e897"><para class="po-block e898 e898"><textual class="po-textual">merging variants, which is about fusing two variants into a unique document
                    integrating modifications of both instances (this may imply solving potential
                    conflicts when the underlying document management system applies a weak control
                    policy)</textual></para></listitem><listitem class="po-container e899 e899"><para class="po-block e900 e900"><textual class="po-textual">recovering anterior state(s) of a document</textual></para></listitem></itemizedlist><para class="po-block e901 e901"><textual class="po-textual">An abundant literature exists on this topic, including recent and excellent synthetic
            work on an old topic, linear differencing (</textual><xref class="po-milestone e902 e902" linkend="Khanna07"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Most work covers
            :</textual></para><orderedlist class="po-table e903 e903"><listitem class="po-container e904 e904"><para class="po-block e905 e905"><textual class="po-textual">
                    </textual><emphasis class="po-inline e906 e906" role="ital"><textual class="po-textual">Algorithmic complexity of the differencing operation,
                        either for ordered or unordered tree models.</textual></emphasis><textual class="po-textual">
                </textual></para><para class="po-block e907 e907"><textual class="po-textual">The problem was first approached as a particular case of string oriented diff
                    computation (see </textual><xref class="po-milestone e908 e908" linkend="Khanna07"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for a point on most recent
                    algorithms in this area), implying computing an adequate linearization of the
                    XML trees. Zhang and Shasha described a fast algorithm in 1989 for computing
                    tree edit distance </textual><xref class="po-milestone e909 e909" linkend="Zha89"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> improving previous work conducted in
                    1979. Still the runtime and space complexity was higher than quadratic on
                    sequential architectures, but could drop to quadratic levels on parallel
                    architectures. In </textual><xref class="po-milestone e910 e910" linkend="Wang03"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> an algorithm for unordered tree was
                    presented with a polynomial complexity for optimal differences, whereas previous
                    works established a NP-complete complexity for general cases. A survey (still of
                    interest 14 years after) and a comparative study on the topic can be found in
                        </textual><xref class="po-milestone e911 e911" linkend="Bille95"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e912 e912" linkend="Cobe02"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Most recent
                    algorithms for ordered diff computation are described in </textual><xref class="po-milestone e913 e913" linkend="Lind06"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e914 e914" linkend="Rönnau08"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e915 e915" linkend="Rönnau09"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para></listitem><listitem class="po-container e916 e916"><para class="po-block e917 e917"><textual class="po-textual">
                    </textual><emphasis class="po-inline e918 e918" role="ital"><textual class="po-textual">Optimality of editing scripts (also called
                    deltas)</textual></emphasis><textual class="po-textual">
                </textual></para><para class="po-block e919 e919"><textual class="po-textual">The very notion of optimality is somehow controversial, because bound to
                    execution models one could consider either as over simplistic or too specific.
                    Of course execution models are needed to justify underlying cost functions
                    associated with deltas application. However, such an approach intrinsically
                    restricts the application field or the area of proposed results. In addition,
                    usages and document types deeply impact the structure of delta and thus the
                    runtime performance of algorithms. As a consequence, diff algorithms should be
                    chosen and parameterized on the basis of document type and related
                activities.</textual></para></listitem><listitem class="po-container e920 e920"><para class="po-block e921 e921"><textual class="po-textual">
                    </textual><emphasis class="po-inline e922 e922" role="ital"><textual class="po-textual">Delta models and use of diff operations inside storage
                        architectures (typically databases).</textual></emphasis><textual class="po-textual">
                </textual></para><para class="po-block e923 e923"><textual class="po-textual">In </textual><xref class="po-milestone e924 e924" linkend="Martinez02"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, a versioning graph is proposed based on XLink
                    designation mechanism. But in this proposal, the graph relates two separate
                    documents that may exist in independent storage infrastructure. Hence there is
                    no notion of encapsulation and explicit consistency. In </textual><xref class="po-milestone e925 e925" linkend="Arevalo09"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, an application is proposed that offers online
                    versioning services for XML documents. However, there is no notion of history
                    encapsulation, and the history itself cannot be exported or organized into an
                    explicit form (see </textual><xref class="po-milestone e926 e926" linkend="Arevalo09b"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for an online demo).</textual></para></listitem></orderedlist><para class="po-block e927 e927"><textual class="po-textual"> A recent paper </textual><xref class="po-milestone e928 e928" linkend="Rönnau08"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> proposes reversible deltas using a
            straightforward mechanism as deletion operation conveys explicitly the deleted subtree
            (this could quickly lead to enormous overhead, especially in the perspective of storing
            the whole history). The authors focus on algorithmic and speed performance issues of a
            novel diff algorithm using a bottom-up approach (and also precomputed hash codes on a
            sliding window of adjacent nodes.)</textual></para><para class="po-block e929 e929"><textual class="po-textual">Most work conducted on this area focused on related algorithm performance, time and
            space complexity of the diff operation and also optimality of generated deltas, but
            little attention has been paid to tools and models to make use of these in efficient
            ways. From the practical point of view, no work considered the necessity and applicative
            interest of abstracting over deltas and related operation models.</textual></para><para class="po-block e930 e930"><textual class="po-textual">Recently, the XQuery Update working group from W3C (see </textual><xref class="po-milestone e931 e931" linkend="XQueryUp"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">)
            published a candidate recommendation proposing to enrich XQuery with mechanisms intended
            to modify XML documents. This impressive work largely focused on expressive power and
            consistent integration of the new constructs to the existing language. The patching
            operations rely on "insert", "delete", "rename" and "replace" , using XPath to designate
            the locations in the XML tree ; an innovative "transform" operator allows for combining
            copy with on-the-fly modifications. One major difficulty was to deal with the extra
            power raised by the selection semantic model of XPath, i.e sequences of nodes. As a
            consequence, many runtime error may occur depending on the evaluation of selectors and
            the semantics of the delta operation. Additionally the insert operator of the language
            is particularly powerful since it can make explicit positional constraints ("first/last
            position", "before/after A") whereas when implicit, positional constraints are
            interpreted so that global ordering constraint are optimally satisfied (this remain a
            bit unclear how far this can be hard). </textual></para><para class="po-block e932 e932"><textual class="po-textual">The transformation model of XQUpdate relies on a kind of transactional framework,
            where changes are stored in a list of "pending modifications" only applied after calling
            a dedicated primitive upd:applyUpdates. This is a pragmatic solution to the problem of
            path relocation (and variable scope validity!), but is a nightmare regarding static
            analysis. Therefore it will be much more realistic to use the XQUpdate interpreter as a
            patch engine (i.e generating XQUpdate code from our descriptions), than considering  an
            XQUpdate program as a description of differences. </textual></para></section><section class="po-hcontainer e933 e933"><title class="po-block e934 e934"><textual class="po-textual">Conclusion</textual></title><para class="po-block e935 e935"><textual class="po-textual">The main contribution of this work is to propose a universal XML data structure and
            related transformations which allow abstracting from underlying storage systems and from
            any execution model associated with the computation of XML versioning information. </textual></para><para class="po-block e936 e936"><textual class="po-textual">This is in favor of long term preservation of XML documents, infrastructure and vendor
            independence, and open the way to interoperable processing of XML versioning
            information. </textual></para><para class="po-block e937 e937"><textual class="po-textual">The method targets generic XML documents, and makes use of a particular namespace to
            embed any XML document (whatever vocabulary it may use) without any change in its
            content and tag/attribute set. The history is encoded using a specific vocabulary that
            captures change operations in a formal and universal way, so that any XML diff enabled
            processor can generate suitable deltas. Based on the properties of this change
            description language, we propose a set of high level operators which allows exploiting
            the historical information in order to navigate inside the history, compute new version
            in the current branch, create new branches or suppress intermediate versioning points. </textual></para><para class="po-block e938 e938"><textual class="po-textual">Various information may be attached to the versioning points, such as user meta
            information, universal date/time of the creation of the versioning point, additional
            data required to optimize or ameliorate the computation (hash code, digest number,...),
            which are not central to this contribution but could substantially enhance any of its
            application.</textual></para><para class="po-block e939 e939"><textual class="po-textual">The problem with existing diff related approaches is that the description model and
            the transformation model are identical. In other words, they use the same objects both
            to describe operationally and declaratively the differences between trees. We outline in
            our proposal a calculus that formally allows making a distinction between modification
            descriptors and modification operations. This calculus allows modeling "standard"
            processing of deltas and allows transforming descriptions in order to gain compactness
            or efficiency. We are not aware of any equivalent proposal.</textual></para><para class="po-block e940 e940"><textual class="po-textual">The two transformation structures we described can lead to two broad classes of delta
            interpretations:</textual></para><orderedlist class="po-table e941 e941"><listitem class="po-container e942 e942"><para class="po-block e943 e943"><textual class="po-textual">Each modification step transforms the tree, so that the paths used inside
                    subsequent deltas should be defined on the modified tree. This model is used
                    inside database systems and DOM-like in memory tree processors (especially </textual><xref class="po-milestone e944 e944" linkend="XUpdate"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e945 e945" linkend="XQueryUp"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual></para></listitem><listitem class="po-container e946 e946"><para class="po-block e947 e947"><textual class="po-textual">All modification steps are defined on the same reference tree, and all
                    modifications are realized in one global step. Thus the paths always refer to
                    the same tree operand and consequently, delta sequences are more easily
                    understood by a human reader, because they do not have to maintain the cognitive
                    load of mentally propagating tree modifications to paths. From a computational
                    point of view, this model is well adapted to stream based processing pipes in
                    which each operation can be performed concurrently (e.g. on a multi core
                    processor). As this approach doesn't need building a tree in memory, it is
                    particularly indicated for large and very large document processing. </textual></para></listitem></orderedlist><para class="po-block e948 e948"><textual class="po-textual">The delta model we propose as foundational for history encoding integrates those two
            transformation models, in the sense that both can be expressed explicitly. The first one
            is captured by sequences of singleton snapshots whereas the second may involve snapshots
            including several deltas.</textual></para><para class="po-block e949 e949"><textual class="po-textual">We identified 4 key issues when addressing the challenge of encapsulating document
            history into a stand alone XML instance: mastering the potentially big data volume,
            usability of the history model (human vs machine), flexibility of the history
            representation and abstracting over diff operations (i.e. not being dependent of a
            particular diff algorithm/engine behavior). The method described in this paper addresses
            these four issues at various levels. We believe our approach therefore constitutes a
            significant contribution having a realistic applicability level, though the data volume
            issue would still require large scale experiments.</textual></para></section><section class="po-hcontainer e950 e950"><title class="po-block e951 e951"><textual class="po-textual">Acknowledgment</textual></title><para class="po-block e952 e952"><textual class="po-textual">This work is supported by the European project SHAMAN (FP7- ICT-216736, </textual><link class="po-inline e953 e953" xlink:actuate="onRequest" xlink:href="http://shaman-ip.eu/shaman/" xlink:show="new" xlink:type="simple"><textual class="po-textual">
                http://shaman-ip.eu/shaman/ </textual></link><textual class="po-textual">). The author also would like to thanks
            Jean-Pierre Chanod for his continuous support and helpful comments</textual></para></section><appendix class="po-hcontainer e954 e954" xml:id="proof-proposition-1"><title class="po-block e955 e955"><textual class="po-textual">Proof of proposition </textual><xref class="po-milestone e956 e956" linkend="proposition-1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref></title><para class="po-block e957 e957"><textual class="po-textual">Global structure: </textual></para><para class="po-block e958 e958"><textual class="po-textual">We do a structural induction over Δ. Each sub-case is associated with a corresponding
            well-formedness hypothesis; we use these together with the definitions of inversion. We
            show here the case for the Δ</textual><subscript class="po-atom e959 e959"><textual class="po-textual">1</textual></subscript><textual class="po-textual">;Δ</textual><subscript class="po-atom e960 e960"><textual class="po-textual">2</textual></subscript><textual class="po-textual">
            composition:</textual></para><orderedlist class="po-table e961 e961"><listitem class="po-container e962 e962"><para class="po-block e963 e963"><textual class="po-textual">Goal : </textual><informaltable class="po-container e964 e964"><tr class="po-table e965 e965"><td class="po-block e966 e966"><textual class="po-textual">d › Δ</textual><subscript class="po-atom e967 e967"><textual class="po-textual">1</textual></subscript><textual class="po-textual">;Δ</textual><subscript class="po-atom e968 e968"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> › d’ </textual></td><td class="po-block e969 e969"><textual class="po-textual"> ⇒ </textual></td><td class="po-block e970 e970"><textual class="po-textual"> d’ › </textual><emphasis class="po-inline e971 e971" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(
                                    Δ</textual><subscript class="po-atom e972 e972"><textual class="po-textual">1</textual></subscript><textual class="po-textual">;Δ</textual><subscript class="po-atom e973 e973"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ) › d</textual></td></tr></informaltable></para><para class="po-block e974 e974"><textual class="po-textual">We introduce the left hand as a new hypothesis H and we get the new goal </textual></para><informaltable class="po-container e975 e975"><tr class="po-table e976 e976"><td class="po-block e977 e977"><textual class="po-textual"> d’ › </textual><emphasis class="po-inline e978 e978" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">(
                                Δ</textual><subscript class="po-atom e979 e979"><textual class="po-textual">1</textual></subscript><textual class="po-textual">;Δ</textual><subscript class="po-atom e980 e980"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ) › d</textual></td></tr></informaltable><para class="po-block e981 e981"><textual class="po-textual">By applying the definition of inversion (thanks to H), we get </textual></para><informaltable class="po-container e982 e982"><tr class="po-table e983 e983"><td class="po-block e984 e984"><textual class="po-textual"> d’ › </textual><emphasis class="po-inline e985 e985" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">Δ</textual><subscript class="po-atom e986 e986"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> ;
                                </textual><emphasis class="po-inline e987 e987" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">Δ</textual><subscript class="po-atom e988 e988"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> › d</textual></td></tr></informaltable><para class="po-block e989 e989"><textual class="po-textual">The we apply the property (a-seq)</textual></para><informaltable class="po-container e990 e990"><tr class="po-table e991 e991"><td class="po-block e992 e992"><textual class="po-textual"> ∃ dd , d’ › </textual><emphasis class="po-inline e993 e993" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">Δ</textual><subscript class="po-atom e994 e994"><textual class="po-textual">2</textual></subscript><textual class="po-textual">
                            › dd ⋀ dd › </textual><emphasis class="po-inline e995 e995" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">Δ</textual><subscript class="po-atom e996 e996"><textual class="po-textual">1</textual></subscript><textual class="po-textual">
                            › d</textual></td></tr></informaltable><para class="po-block e997 e997"><textual class="po-textual">We apply again the (a-seq) property to hypothesis H, and get a
                    particularisation for intermediate tree d''. Thus we choose d'' as an evidence
                    for the existence of dd, and get </textual></para><informaltable class="po-container e998 e998"><tr class="po-table e999 e999"><td class="po-block e1000 e1000"><textual class="po-textual"> d’ › </textual><emphasis class="po-inline e1001 e1001" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">Δ</textual><subscript class="po-atom e1002 e1002"><textual class="po-textual">2</textual></subscript><textual class="po-textual"> › d''
                            ⋀ d'' › </textual><emphasis class="po-inline e1003 e1003" role="bold"><textual class="po-textual">∘</textual></emphasis><textual class="po-textual">Δ</textual><subscript class="po-atom e1004 e1004"><textual class="po-textual">1</textual></subscript><textual class="po-textual"> ›
                        d</textual></td></tr></informaltable><para class="po-block e1005 e1005"><textual class="po-textual">Now we split the goal in two subgoals and apply the induction hypothesis to
                    both.</textual></para></listitem></orderedlist></appendix><appendix class="po-hcontainer e1006 e1006"><title class="po-block e1007 e1007"><textual class="po-textual">An RelaxNG schema (compact syntax ) capturing our model</textual></title><para class="po-block e1008 e1008"><textual class="po-textual">
            </textual><programlisting class="po-block e1009 e1009" xml:space="preserve"><textual class="po-textual">
                
default namespace xversion = "XRCE::DS::X-Version"
datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

start =  x-version

anyElement = element * - xversion:* { anyAttribute*, anyElement*} | text
anyAttribute = attribute * { text}

x-version = element x-version { 
    element x-version-body { 
        attribute ref {V-REF}, 
        attribute xml:space {"preserve" | "ignore"}?,
        SUBTREE
        }+,
    element x-version-history {
        attribute first {list {V-REF+}},
        attribute last {list {V-REF+}},
        # the version history encodes a DAG (Directed Acyclic Graph)
        version*
    }    
}

    
version = element version {
    attribute id { V-REF},
        
    # allows zero or more
    attribute conflicts {xsd:nonNegativeInteger}?, 
    a-time?,
    delta*
    }

a-target=
    # this attribute defines a "one-step" next version 
    attribute to {V-REF}  


delta = element delta {  a-target,   (rename | insert | append | move | copy | delete | replace)* }

a-here= 
    # the "here" attribute designates the insertion point (existing stuff is to be shift to right after insertion)
    attribute here {IPath}
    
    
insert=
    # "insert" only applies to elements, text, comment and PI
    element insert {
    a-here,
    # the subtree to be inserted is here (but skipped thanks to a NVDL rule)
    SUBTREE
    }

append=
    # "append" applies to everything including attributes
    # for elements, text, comments, PI, the item is appended at the end of the sequence of children
    element append {
    a-here,
    # the "attribute" attribute is used to specify attribute insertion; it must have the "QName=Value" syntactic structure 
    ((attribute attribute {A-DEF}?, empty) | SUBTREE)
    }

copy= element copy {
    a-what, a-here,
    attribute append {flag}?
    }
    
move= element move {
    a-what, a-here,
    attribute append {flag}?
    }

delete= element delete { a-what, SUBTREE }
replace= element replace { a-what, SUBTREE }

rename= 
    # works for elements, attributes, and PI as well
    # the "as" attribute is a qualified name (that is, may refer to a given namespace through a declared prefix
    element rename {  a-what,    attribute as {token}}


SUBTREE=anyElement | conflict

conflict=element conflict { item+ }
item = element item { attribute ref {V-REF}, anyElement }

attribute-conflict =element attribute-conflict { attribute ref {V-REF}, A-DEF}
tree-conflict = element tree-conflict { attribute ref {V-REF}, A-DEF}

V-REF= xsd:string { pattern="v\d+(\.\d+)*" }

A-DEF=string


flag = "yes" | "no"

a-what = attribute what {XPath}
a-time = attribute time {xsd:dateTime}

XPath = xsd:string
IPath = xsd:string { pattern="1(/\d+)*(/@([\c-[:]]+:)?[\c-[:]]+)?" }
                
            </textual></programlisting><textual class="po-textual">
        </textual></para></appendix><appendix class="po-hcontainer e1010 e1010"><title class="po-block e1011 e1011"><textual class="po-textual">an ISO Schematron schema </textual><xref class="po-milestone e1012 e1012" linkend="Schematron"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref></title><para class="po-block e1013 e1013"><textual class="po-textual">
            </textual><programlisting class="po-block e1014 e1014" xml:space="preserve"><textual class="po-textual">
                
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" xml:lang="en" queryBinding="xslt2"&gt;
    &lt;sch:ns uri="XRCE::DS::X-Version" prefix="xv"/&gt;
    &lt;sch:pattern &gt;
        &lt;sch:let name="versions" value="/*[1]/*[2]/xv:version"/&gt;
        &lt;sch:let name="versions-id" value="for $i in $versions/@id return normalize-space($i)"/&gt;
        &lt;sch:let name="Nversions-id" value="distinct-values($versions-id)"/&gt;

        &lt;sch:let name="history" value="/*[1]/xv:x-version-history[1]"/&gt;
        &lt;sch:let name="starting-vector" value="tokenize(normalize-space($history/@first),'\s')"/&gt;
        &lt;sch:let name="ending-vector" value="tokenize(normalize-space($history/@last),'\s')"/&gt;
        &lt;sch:let name="Nstarting-vector" value="distinct-values($starting-vector)"/&gt;
        &lt;sch:let name="Nending-vector" value="distinct-values($ending-vector)"/&gt;
        
        
        &lt;sch:rule context="/*[1]/xv:x-version-history[1]"&gt;
            &lt;sch:assert test="count($versions-id) ge count($Nversions-id)"&gt;Every version element must have an unique id attribute&lt;/sch:assert&gt;
            
            &lt;sch:assert test="count($starting-vector) eq count($Nstarting-vector)"&gt;"first" attribute should refer to each relevant version only once&lt;/sch:assert&gt;
            &lt;sch:assert test="count($ending-vector) eq count($Nending-vector)"&gt;"last" attribute should refer to each relevant version only once&lt;/sch:assert&gt;
            
            &lt;sch:assert test="every $i in $Nstarting-vector satisfies index-of($Nversions-id,$i) gt 0 "&gt;
                the "first" attribute should point to existing version(s) (cf 
                "&lt;sch:value-of select="string-join($Nstarting-vector,'/')"/&gt;" versus "&lt;sch:value-of select="string-join($Nversions-id,'/')"/&gt;"
                )
            &lt;/sch:assert&gt;
            &lt;sch:assert test="every $i in $Nending-vector satisfies index-of($Nversions-id,$i) gt 0 "&gt;
                the "last" attribute should point to existing version(s) (cf 
                "&lt;sch:value-of select="string-join($Nending-vector,'/')"/&gt;" versus "&lt;sch:value-of select="string-join($Nversions-id,'/')"/&gt;"
                )
            &lt;/sch:assert&gt;
        &lt;/sch:rule&gt;
        &lt;sch:rule context="xv:version"&gt;
            &lt;sch:report test="count(index-of($versions-id,normalize-space(@id))) gt 1"&gt;
                The "id" attribute must be unique ("&lt;sch:value-of select="@id"/&gt;")
            &lt;/sch:report&gt; 
            &lt;sch:let name="my-id" value="@id"/&gt;
            &lt;sch:assert test="(count(../xv:version/xv:delta[@to=$my-id]) gt 0) or (index-of($Nstarting-vector,$my-id) gt 0)"&gt;
                missing back link to anterior version (version "&lt;sch:value-of select="@id"/&gt;")
            &lt;/sch:assert&gt;
            &lt;sch:assert test="(count(xv:delta[@to]) gt 0) or (index-of($Nending-vector,$my-id) gt 0)"&gt;
                missing link to posterior version (version "&lt;sch:value-of select="@id"/&gt;")
            &lt;/sch:assert&gt;
        &lt;/sch:rule&gt;
        &lt;sch:rule context="xv:delta"&gt;
            &lt;sch:assert test="index-of($Nversions-id,@to) gt 0"&gt;
                The link to version "&lt;sch:value-of select="@to"/&gt;" is dangling (no corresponding version found in the whole history)
            &lt;/sch:assert&gt; 
            &lt;sch:let name="my-dest" value="@to"/&gt;
            &lt;sch:report test="count(preceding-sibling::xv:delta[@to=$my-dest]) gt 0" &gt;
                Delta must be unique for one target version ("&lt;sch:value-of select="@to"/&gt;")
            &lt;/sch:report&gt;
        &lt;/sch:rule&gt;
        &lt;sch:rule context="xv:conflict"&gt;
            &lt;sch:let name="all-item-refs" value="for $i in xv:item/@ref return normalize-space($i)"/&gt;
            &lt;sch:assert test="count(distinct-values($all-item-refs)) eq count($all-item-refs)"&gt;
                Conflicting items must be uniquely defined for a given version 
            &lt;/sch:assert&gt;
        &lt;/sch:rule&gt;
        &lt;sch:rule context="xv:item"&gt;
            &lt;sch:assert test="index-of($Nversions-id,@ref) gt 0"&gt;
                The reference to version "&lt;sch:value-of select="@ref"/&gt;" is dangling (no corresponding version found in the whole history)
            &lt;/sch:assert&gt;
        &lt;/sch:rule&gt;
    &lt;/sch:pattern&gt;
&lt;/sch:schema&gt;

            </textual></programlisting><textual class="po-textual">
        </textual></para></appendix><bibliography class="po-hcontainer e1015 e1015"><title class="po-block e1016 e1016"><textual class="po-textual">References</textual></title><bibliomixed class="po-block e1017 e1017" xml:id="Zha89"><textual class="po-textual">
            </textual><emphasis class="po-inline e1018 e1018" role="ital"><textual class="po-textual">Simple Fast Algorithms for the Editing Distance between Trees and
                Related Problems</textual></emphasis><textual class="po-textual">, Kaizhong Zhang; Dennis Shasha, SIAM J. Comput., 1989 </textual></bibliomixed><bibliomixed class="po-block e1019 e1019" xml:id="Bille95"><textual class="po-textual">
            </textual><emphasis class="po-inline e1020 e1020" role="ital"><textual class="po-textual">A survey on tree edit distance and related problems</textual></emphasis><textual class="po-textual">,
            Philip Bille, Theoretical Computer Science , Volume 337 Issue 1-3 June 2005. </textual></bibliomixed><bibliomixed class="po-block e1021 e1021" xml:id="Chawathe96"><textual class="po-textual">
            </textual><emphasis class="po-inline e1022 e1022" role="ital"><textual class="po-textual">Change detection in hierarchically structured
            information</textual></emphasis><textual class="po-textual">, Sudarshan S. Chawathe; Anand Rajaraman;Hector Garcia-Molina ;
            Jennifer Widom, SIGMOD '96: Proceedings of the 1996 ACM SIGMOD international conference
            on Management of data, June 1996, doi: </textual><biblioid class="po-atom e1023 doi e1023"><textual class="po-textual">10.1145/233269.233366
</textual></biblioid><textual class="po-textual"> </textual></bibliomixed><bibliomixed class="po-block e1024 e1024" xml:id="Chien00"><textual class="po-textual">
            </textual><emphasis class="po-inline e1025 e1025" role="ital"><textual class="po-textual">A Comparative Study of Version Management Schemes for XML
                Documents</textual></emphasis><textual class="po-textual">, Shu-Yao Chien ; Vassilis J. Tsotras ; Carlo Zaniolo, 2000 </textual></bibliomixed><bibliomixed class="po-block e1026 e1026" xml:id="Cobe02"><textual class="po-textual">
            </textual><emphasis class="po-inline e1027 e1027" role="ital"><textual class="po-textual">A comparative study for XML change detection</textual></emphasis><textual class="po-textual">, Grégory
            Cobéna; Talel Abdessalem; Yassine Hinnach, Research Report, INRIA Rocquencourt, France,
            2002 </textual><link class="po-inline e1028 e1028" xlink:actuate="onRequest" xlink:href="http://leo.saclay.inria.fr/publifiles/gemo/GemoReport-221.pdf" xlink:show="new" xlink:type="simple"><textual class="po-textual">PDF</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e1029 e1029" xml:id="LaFontaine02"><emphasis class="po-inline e1030 e1030" role="ital"><textual class="po-textual">Merging XML files: a new approach
                providing intelligent merge of XML data sets</textual></emphasis><textual class="po-textual">, Robin La Fontaine, 2002</textual></bibliomixed><bibliomixed class="po-block e1031 e1031" xml:id="Martinez02"><textual class="po-textual">
            </textual><emphasis class="po-inline e1032 e1032" role="ital"><textual class="po-textual">A method for the dynamic generation of virtual versions of
                evolving documents</textual></emphasis><textual class="po-textual">, Mercedes Martinez, Jean-Claude Derniame, Pablo de la
            Fuente, SAC 2002, Madrid, Spain, 2002 </textual></bibliomixed><bibliomixed class="po-block e1033 e1033" xml:id="pédauque03"><textual class="po-textual">
            </textual><emphasis class="po-inline e1034 e1034" role="ital"><textual class="po-textual">Document: Form, Sign and Medium, as Reformulated for Electronic
                Documents</textual></emphasis><textual class="po-textual">, Roger T. Pédauque, collective writing, STIC-CNRS, 12 September
            2003. </textual><link class="po-inline e1035 e1035" xlink:actuate="onRequest" xlink:href="http://archivesic.ccsd.cnrs.fr/docs/00/06/22/28/PDF/sic_00000594.pdf" xlink:show="new" xlink:type="simple"><textual class="po-textual">PDF</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e1036 e1036" xml:id="Wang03"><textual class="po-textual">
            </textual><emphasis class="po-inline e1037 e1037" role="ital"><textual class="po-textual">X-Diff: A Fast Change Detection Algorithm for
            XMLDocuments</textual></emphasis><textual class="po-textual">. Yuan Wang , David J. DeWitt , Jin-Yi Cai in Proceedings of the
            International Conference on Data Engineering (ICDE'03) </textual><link class="po-inline e1038 e1038" xlink:actuate="onRequest" xlink:href="http://pages.cs.wisc.edu/~yuanwang/papers/xdiff.pdf" xlink:show="new" xlink:type="simple"><textual class="po-textual">PDF</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e1039 e1039" xml:id="pédauque05"><textual class="po-textual">
            </textual><emphasis class="po-inline e1040 e1040" role="ital"><textual class="po-textual">Le texte en jeu (Permanence et transformations du
            document)</textual></emphasis><textual class="po-textual">, Roger T. Pédauque, collective writing, STIC-CNRS, 7 April 2005.
                </textual><link class="po-inline e1041 e1041" xlink:actuate="onRequest" xlink:href="http://archivesic.ccsd.cnrs.fr/docs/00/06/26/01/PDF/sic_00001401.pdf" xlink:show="new" xlink:type="simple"><textual class="po-textual">PDF</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e1042 e1042" xml:id="Lind06"><textual class="po-textual">
            </textual><emphasis class="po-inline e1043 e1043" role="ital"><textual class="po-textual">Fast and Simple XML Tree Differencing by Sequence
            Alignment</textual></emphasis><textual class="po-textual">, Tancred Lindholm; Jaakko Kangasharju; Sasu Tarkoma, DocEng '06:
            Proceedings of the 2006 ACM symposium on Document engineering October 2006, doi: </textual><biblioid class="po-atom e1044 doi e1044"><textual class="po-textual">10.1145/1166160.1166183</textual></biblioid></bibliomixed><bibliomixed class="po-block e1045 e1045" xml:id="Khanna07"><textual class="po-textual">
            </textual><emphasis class="po-inline e1046 e1046" role="ital"><textual class="po-textual">A Formal Investigation of diff3</textual></emphasis><textual class="po-textual">, Sanjeev Khanna; Keshav
            Kunal ; Benjamin C. Pierce, In Arvind and Prasad, editors, Foundations of Software
            Technology and Theoretical Computer Science (FSTTCS), December 2007 </textual><link class="po-inline e1047 e1047" xlink:actuate="onRequest" xlink:href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.106.5604&amp;rep=rep1&amp;type=pdf" xlink:show="new" xlink:type="simple"><textual class="po-textual">PDF</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e1048 e1048" xml:id="Tata07"><emphasis class="po-inline e1049 e1049" role="ital"><textual class="po-textual">Tree automata techniques and
            applications</textual></emphasis><textual class="po-textual">, Hubert Comon; Max Dauchet; Florent Jacquemard; Denis Lugiez;
            Sophie Tison; Marc Tommasi , 2007 </textual><link class="po-inline e1050 e1050" xlink:actuate="onRequest" xlink:href="http://tata.gforge.inria.fr/" xlink:show="new" xlink:type="simple"><textual class="po-textual">PDF</textual></link></bibliomixed><bibliomixed class="po-block e1051 e1051" xml:id="Rönnau08"><emphasis class="po-inline e1052 e1052" role="ital"><textual class="po-textual">Merging Changes in XML Documents Using
                Reliable Context Fingerprints</textual></emphasis><textual class="po-textual">, Sebastian Rönnau; Christian Pauli; Uwe M.
            Borghoff, ACM Symposium on Document Engineering, September 2008, doi: </textual><biblioid class="po-atom e1053 doi e1053"><textual class="po-textual">10.1145/1410140.1410151</textual></biblioid><textual class="po-textual"> </textual></bibliomixed><bibliomixed class="po-block e1054 e1054" xml:id="Rönnau09"><emphasis class="po-inline e1055 e1055" role="ital"><textual class="po-textual">Efficient Change Control of XML
                Documents</textual></emphasis><textual class="po-textual">, Sebastian Rönnau; Christian Pauli; Uwe M. Borghoff, ACM
            Symposium on Document Engineering, September 2009, doi: </textual><biblioid class="po-atom e1056 doi e1056"><textual class="po-textual">10.1145/1600193.1600197</textual></biblioid><textual class="po-textual"> </textual></bibliomixed><bibliomixed class="po-block e1057 e1057" xml:id="Arevalo09"><emphasis class="po-inline e1058 e1058" role="ital"><textual class="po-textual">A Web-Based Version Editor for XML
                Documents</textual></emphasis><textual class="po-textual">, Luis Arévalo Rosado, Antonio Polo Márquez and Miryam Salas
            Sánchez, ACM Symposium on Document Engineering, September 2009, doi: </textual><biblioid class="po-atom e1059 doi e1059"><textual class="po-textual">10.1145/1600193.1600249</textual></biblioid></bibliomixed><bibliomixed class="po-block e1060 e1060" xml:id="Arevalo09b"><emphasis class="po-inline e1061 e1061" role="ital"><textual class="po-textual">A Web-Based Version Editor for XML
                Documents</textual></emphasis><textual class="po-textual">, online demonstration version:
                </textual><link class="po-inline e1062 e1062" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://picaro.unex.es:8180/vEditor/</textual></link></bibliomixed><bibliomixed class="po-block e1063 e1063" xml:id="XQueryUp"><textual class="po-textual">
            </textual><emphasis class="po-inline e1064 e1064" role="ital"><textual class="po-textual">XQuery Update Facility 1.0</textual></emphasis><textual class="po-textual">, W3C, Specification, June
            2009 </textual><link class="po-inline e1065 e1065" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/xquery-update-10/</textual></link></bibliomixed><bibliomixed class="po-block e1066 e1066" xml:id="XUpdate"><textual class="po-textual">
            </textual><link class="po-inline e1067 e1067" xlink:actuate="onRequest" xlink:href="http://xmldb-org.sourceforge.net/xupdate/xupdate-wd.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://xmldb-org.sourceforge.net/xupdate/xupdate-wd.html</textual></link><textual class="po-textual"> ; </textual><link class="po-inline e1068 e1068" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/XUpdate" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://en.wikipedia.org/wiki/XUpdate</textual></link></bibliomixed><bibliomixed class="po-block e1069 e1069" xml:id="Saxonica" xreflabel="Saxonica"><textual class="po-textual">
            </textual><emphasis class="po-inline e1070 e1070" role="ital"><textual class="po-textual">Saxonica, XSLT and XQuery processing</textual></emphasis><textual class="po-textual"> Michael Kay, </textual><link class="po-inline e1071 e1071" xlink:actuate="onRequest" xlink:href="http://www.saxonica.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.saxonica.com/</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e1072 e1072" xml:id="Schematron" xreflabel="Schematron"><textual class="po-textual">
            </textual><emphasis class="po-inline e1073 e1073" role="ital"><textual class="po-textual">ISO Schematron, a language for making assertions about patterns
                found in XML documents</textual></emphasis><textual class="po-textual">, Topologi , </textual><link class="po-inline e1074 e1074" xlink:actuate="onRequest" xlink:href="http://www.schematron.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">web
                site</textual></link><textual class="po-textual">
        </textual></bibliomixed></bibliography></article></classedDocument>