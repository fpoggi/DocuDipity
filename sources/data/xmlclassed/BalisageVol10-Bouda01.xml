<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3" xml:id="HR-23632987-8973"><title class="po-block e1 e1"><textual class="po-textual">Poio API and GraF-XML</textual></title><subtitle class="po-block e2 e2"><textual class="po-textual">A radical stand-off approach in language documentation and language typology</textual></subtitle><info class="po-record e3 e3"><confgroup class="po-record e4 e4"><conftitle class="po-field e5 e5"><textual class="po-textual">Balisage: The Markup Conference 2013</textual></conftitle><confdates class="po-field e6 e6"><textual class="po-textual">August 6 - 9, 2013</textual></confdates></confgroup><abstract class="po-container e7 e7"><para class="po-block e8 e8"><textual class="po-textual">
        This paper presents an ongoing CLARIN project that implements a library and web
        application for data management in language documentation and language typology. The
        project uses annotation graphs as pivot format, as described by ISO 24612 "Language
        resource management - Linguistic annotation framework (LAF)". The standard contains
        an XML representation of annotation graphs. We will show hwo we map common file
        formats onto annotation graphs and how this stand-off approach will improve
        linguistic workflows and data management in language documentation and typology.
      </textual></para></abstract><author class="po-record e9 e9"><personname class="po-record e10 e10"><firstname class="po-field e11 e11"><textual class="po-textual">Jonathan</textual></firstname><surname class="po-field e12 e12"><textual class="po-textual">Blumtritt</textual></surname></personname><personblurb class="po-container e13 e13"><para class="po-block e14 e14"><textual class="po-textual">Jonathan Blumtritt is a software developer at the Cologne
        Center for eHumanities.</textual></para></personblurb><affiliation class="po-record e15 e15"><orgname class="po-block e16 e16"><textual class="po-textual">Cologne Center for eHumanities, University of Cologne</textual></orgname></affiliation><email class="po-field e17 e17"><textual class="po-textual">‎jonathan.blumtritt@uni-koeln.de</textual></email></author><author class="po-record e18 e18"><personname class="po-record e19 e19"><firstname class="po-field e20 e20"><textual class="po-textual">Peter</textual></firstname><surname class="po-field e21 e21"><textual class="po-textual">Bouda</textual></surname></personname><personblurb class="po-container e22 e22"><para class="po-block e23 e23"><textual class="po-textual">Peter Bouda is general linguist and co-founder of
        the Centro Interdisciplinar de Documentação Linguística e Social in
        Minde/Portugal. He is also working as a researcher in
        project Quantitative Historical Linguistics at the University of Marburg.</textual></para></personblurb><affiliation class="po-record e24 e24"><orgname class="po-block e25 e25"><textual class="po-textual">Centro Interdisciplinar de Documentação Linguística e Social</textual></orgname></affiliation><email class="po-field e26 e26"><textual class="po-textual">pbouda@cidles.eu</textual></email></author><author class="po-record e27 e27"><personname class="po-record e28 e28"><firstname class="po-field e29 e29"><textual class="po-textual">Felix</textual></firstname><surname class="po-field e30 e30"><textual class="po-textual">Rau</textual></surname></personname><personblurb class="po-container e31 e31"><para class="po-block e32 e32"><textual class="po-textual">Felix Rau is a PhD student at the University of Cologne.</textual></para></personblurb><affiliation class="po-record e33 e33"><orgname class="po-block e34 e34"><textual class="po-textual">Department of Linguistics, University of Cologne</textual></orgname></affiliation><email class="po-field e35 e35"><textual class="po-textual">f.rau@uni-koeln.de</textual></email></author><legalnotice class="po-container e36 e36"><para class="po-block e37 e37"><textual class="po-textual">Copyright © 2013 by the authors. Used with permission.</textual></para></legalnotice></info><section class="po-hcontainer e38 e38"><title class="po-block e39 e39"><textual class="po-textual">Introduction</textual></title><para class="po-block e40 e40"><textual class="po-textual">
      Field linguists in language documentation projects have increasingly adopted the latest
      technologies and tools. Their work have led to remarkable developments in digital corpora,
      exemplified by The Language Archive at the MPI in Nijmegen. The next step in research is
      now the analysis and theoretical exploitation of the huge amount of data that has been
      collected in numerous language documentation projects. This research will rely on
      computer-based strategies, as data is already available in digital formats.
    </textual></para><para class="po-block e41 e41"><textual class="po-textual">
      In our talk we will present a recent project within the CLARIN framework
      ("Common Language Ressources and Technology Infrastructure") that develops a solution
      for researchers to access the data collected in language documentation
      projects via GrAF data structures. Our project consists of three parts:
      </textual><itemizedlist class="po-table e42 e42"><listitem class="po-container e43 e43"><para class="po-block e44 e44"><textual class="po-textual">
            graf-python: a Python implementation of GrAF as defined in the ISO document;
          </textual></para></listitem><listitem class="po-container e45 e45"><para class="po-block e46 e46"><textual class="po-textual">
            Poio API: a Python library that maps data formats used in language documentation to
            GrAF and back again;
          </textual></para></listitem><listitem class="po-container e47 e47"><para class="po-block e48 e48"><textual class="po-textual">
            CLASS: a web application that provides a REST and user interface to access, search
            and modify the data.
          </textual></para></listitem></itemizedlist><textual class="po-textual">
      We will focus on the advantages of the radical stand-off approach (internally and via its
      XML representation) for collaboration in language documentation and analysis projects. We
      will also show how our project connects to existing infrastructure via building a bridge
      to existing identity providers within the linguistic, scientific environment.
    </textual></para></section><section class="po-hcontainer e49 e49"><title class="po-block e50 e50"><textual class="po-textual">A Common Research Infrastructure</textual></title><para class="po-block e51 e51"><textual class="po-textual">
      The project was developed by the German section of the European CLARIN project
      </textual><footnote class="po-popup e52 e52"><para class="po-block e53 e53"><link class="po-inline e54 e54" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://clarin-d.net/</textual></link><textual class="po-textual">, accessed 19.4.2013</textual></para></footnote><textual class="po-textual">. The CLARIN
      project aims at establishing a web-based research infrastructure for the social sciences
      and humanities. The infrastructure embraces existing standards and focusses on loosely
      coupled REST-style web services. To assure interoperability, Text Corpus Format (TCF)
      </textual><footnote class="po-popup e55 e55"><para class="po-block e56 e56"><link class="po-inline e57 e57" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://weblicht.sfs.uni-tuebingen.de/weblichtwiki/index.php/The_TCF_Format</textual></link><textual class="po-textual">,
        accessed 19.4.2013</textual></para></footnote><textual class="po-textual"> –  an exchange format for annotations – has been
        defined. TCF is fully compatible with the Linguistic Annotation Format (LAF) and
        Graph­based Format for Linguistic Annotations (GrAF).
    </textual></para><para class="po-block e58 e58"><textual class="po-textual">
      The DoBeS-Archive </textual><footnote class="po-popup e59 e59"><para class="po-block e60 e60"><link class="po-inline e61 e61" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.mpi.nl/DOBES</textual></link><textual class="po-textual">, accessed 19.4.2013</textual></para></footnote><textual class="po-textual">,
      one of the biggest digital archives for data from language documentation projects, is
      part of this infrastructure project. The CLASS webservice
      interfaces with this archive as part of the CLARIN infrastructure.
    </textual></para></section><section class="po-hcontainer e62 e62"><title class="po-block e63 e63"><textual class="po-textual">GrAF and Poio API</textual></title><para class="po-block e64 e64"><textual class="po-textual">
      One problem that our research field faces at the moment is that the data and annotations
      show a highly heterogeneous layout. Not only are there different file formats in the
      archives, but the structure of "tiers" and the annotation schemes used differ
      from project to project. Our implementation aims at unifying the existing data formats and
      the existing tier hierarchies into a standardized pivot format as defined by ISO 24612
      "Language resource management - Linguistic annotation framework (LAF)"
      </textual><footnote class="po-popup e65 e65"><para class="po-block e66 e66"><link class="po-inline e67 e67" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.iso.org/iso/catalogue_detail.htm?csnumber=37326</textual></link><textual class="po-textual">,
      accessed 21.3.2013</textual></para></footnote><textual class="po-textual">. This standard
      is based on annotation graphs and was developed as an underlying data model
      for linguistic annotations [</textual><xref class="po-milestone e68 e68" linkend="idesuderman2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. The "Graph Annotation Framework"
      (GrAF), an implementation of LAF, was originally developed to publish the "Manually Annotated Subcorpus" (MASC)
      of the American National Corpus
      </textual><footnote class="po-popup e69 e69"><para class="po-block e70 e70"><link class="po-inline e71 e71" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.americannationalcorpus.org/MASC/Home.html</textual></link><textual class="po-textual">, accessed 19.4.2013</textual></para></footnote><textual class="po-textual">,
      and consists of three parts:
      </textual><itemizedlist class="po-table e72 e72"><listitem class="po-container e73 e73"><para class="po-block e74 e74"><textual class="po-textual">
            an abstract data model;
          </textual></para></listitem><listitem class="po-container e75 e75"><para class="po-block e76 e76"><textual class="po-textual">
            an API for manipulating the data model;
          </textual></para></listitem><listitem class="po-container e77 e77"><para class="po-block e78 e78"><textual class="po-textual">
            a simple XML serialization of the data model.
          </textual></para></listitem></itemizedlist><textual class="po-textual">
      As the data model and its specification is somewhat liberal regarding the layout of the
      data, we had to define a common annotation graph structure for data from language documentation
      projects in the beginning (for the advantages of the liberal approach of GrAF for our
      purposes see </textual><xref class="po-milestone e79 e79" linkend="seclangdoc"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.). In our project we use the Graph Annotation Framework
      version 1.0</textual><footnote class="po-popup e80 e80"><para class="po-block e81 e81"><link class="po-inline e82 e82" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.xces.org/ns/GrAF/1.0/</textual></link><textual class="po-textual">,
      accessed 3.7.2013</textual></para></footnote><textual class="po-textual">.
    </textual></para><section class="po-hcontainer e83 e83"><title class="po-block e84 e84"><textual class="po-textual">Converting from and to GrAF and GrAF-XML</textual></title><para class="po-block e85 e85"><textual class="po-textual">
        We started with the XML representation
        of a software called Elan </textual><footnote class="po-popup e86 e86"><para class="po-block e87 e87"><textual class="po-textual">Elan uses an XML format called EAF:
        </textual><link class="po-inline e88 e88" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.mpi.nl/tools/elan/EAF_Annotation_Format.pdf</textual></link><textual class="po-textual">, accessed 19.4.2013</textual></para></footnote><textual class="po-textual">, which
        is the de-facto standard in language documentation at the moment. First, we separated the metadata content of Elan's
        EAF files from the bare content with data and annotations. Most meta-data contained in Elan
        describes the types and restrictions on linguistic tiers, which we store seperately to the
        graphs. The graphs itself capture two items: The tier hierarchy in the EAF file and
        the content of the annotations.
      </textual></para><para class="po-block e89 e89"><textual class="po-textual">
        The following listing shows the start of one tier that stores "utterances" in the EAF file:

        </textual><programlisting class="po-block e90 e90" xml:space="preserve"><textual class="po-textual">
  &lt;TIER DEFAULT_LOCALE="en" LINGUISTIC_TYPE_REF="utterance" PARTICIPANT="" TIER_ID="W-Spch"&gt;
    &lt;ANNOTATION&gt;
      &lt;ALIGNABLE_ANNOTATION ANNOTATION_ID="a8" TIME_SLOT_REF1="ts4" TIME_SLOT_REF2="ts23"&gt;
        &lt;ANNOTATION_VALUE&gt;so you go out of the Institute to the Saint Anna Straat.&lt;/ANNOTATION_VALUE&gt;
      &lt;/ALIGNABLE_ANNOTATION&gt;
    &lt;/ANNOTATION&gt;
    &lt;ANNOTATION&gt;
      [...]
    &lt;/ANNOTATION&gt;
  &lt;/TIER&gt;
        </textual></programlisting><textual class="po-textual">

        The tokenization into individual words are stored in a seperate child tier for "words":

        </textual><programlisting class="po-block e91 e91" xml:space="preserve"><textual class="po-textual">
  &lt;TIER DEFAULT_LOCALE="en" LINGUISTIC_TYPE_REF="words" PARENT_REF="W-Spch" PARTICIPANT="" TIER_ID="W-Words"&gt;
    &lt;ANNOTATION&gt;
      &lt;ALIGNABLE_ANNOTATION ANNOTATION_ID="a23" TIME_SLOT_REF1="ts4" TIME_SLOT_REF2="ts6"&gt;
        &lt;ANNOTATION_VALUE&gt;so&lt;/ANNOTATION_VALUE&gt;
      &lt;/ALIGNABLE_ANNOTATION&gt;
    &lt;/ANNOTATION&gt;
    &lt;ANNOTATION&gt;
      [...]
    &lt;/ANNOTATION&gt;
  &lt;/TIER&gt;      
        </textual></programlisting><textual class="po-textual">

        Both tiers being time-aligned, the basic video or audio data serves as reference
        point to describe which annotations of a child tier are contained in one annotation
        of the parent tier. As this layout is already a stand-off annotation (although
        everything is stored in a single file) the transformation to annotation graph is
        an easy task. The utterance is stored as a GrAF node with an annotation that
        contains a feature structure. The first annotation of the tier W-Spch with the
        annotation value "so you go out of the Institute to the Saint Anna Straat." looks
        like this in GrAF:

        </textual><programlisting class="po-block e92 e92" xml:space="preserve"><textual class="po-textual">
  &lt;node xml:id="utterance..W-Spch..na8"&gt;
   &lt;link targets="utterance..W-Spch..ra8"/&gt;
  &lt;/node&gt;
  &lt;region anchors="780 4090" xml:id="utterance..W-Spch..ra8"/&gt;
  &lt;a as="utterance" label="utterance" ref="utterance..W-Spch..na8" xml:id="a8"&gt;
   &lt;fs&gt;
     &lt;f name="annotation_value"&gt;so you go out of the Institute to the Saint Anna Straat.&lt;/f&gt;
   &lt;/fs&gt;
  &lt;/a&gt;
        </textual></programlisting><textual class="po-textual">

        The </textual><code class="po-atom e93 e93"><textual class="po-textual">&lt;node&gt;</textual></code><textual class="po-textual"> is linked to a </textual><code class="po-atom e94 e94"><textual class="po-textual">&lt;region&gt;</textual></code><textual class="po-textual"> that contains the values of the time slots
        of the original EAF file. The annotation </textual><code class="po-atom e95 e95"><textual class="po-textual">&lt;a&gt;</textual></code><textual class="po-textual"> for the node has a feature structure
        </textual><code class="po-atom e96 e96"><textual class="po-textual">&lt;fs&gt;</textual></code><textual class="po-textual"> with one feature </textual><code class="po-atom e97 e97"><textual class="po-textual">&lt;f&gt;</textual></code><textual class="po-textual"> for the annotation
        value. The corresponding annotation for the "word" annotation in EAF looks
        like this:

        </textual><programlisting class="po-block e98 e98" xml:space="preserve"><textual class="po-textual">
  &lt;node xml:id="words..W-Words..na23"&gt;
   &lt;link targets="words..W-Words..ra23"/&gt;
  &lt;/node&gt;
  &lt;region anchors="780 1340" xml:id="words..W-Words..ra23"/&gt;
  &lt;edge from="utterance..W-Spch..n8" to="words..W-Words..na23" xml:id="ea23"/&gt;
  &lt;a as="words" label="words" ref="words..W-Words..na23" xml:id="a23"&gt;
   &lt;fs&gt;
     &lt;f name="annotation_value"&gt;so&lt;/f&gt;
   &lt;/fs&gt;
  &lt;/a&gt;
        </textual></programlisting><textual class="po-textual">

        The node for the word annotation is similar to the utterance node, except for
        an additional </textual><code class="po-atom e99 e99"><textual class="po-textual">&lt;edge&gt;</textual></code><textual class="po-textual"> tag that links the node to the corresponding
        utterance node. Nodes and edges are created for all annotations of tiers that have
        time slots and a parent tier in EAF (those tiers have the stereotype
        "Time Subdivision" in EAF).
      </textual></para><para class="po-block e100 e100"><textual class="po-textual">
        Poio API contains a plugin mechanism to allow future support of other file formats
        that can be mapped onto GrAF structures. This mechanism consists of base classes
        for </textual><code class="po-atom e101 e101"><textual class="po-textual">Reader</textual></code><textual class="po-textual"> and </textual><code class="po-atom e102 e102"><textual class="po-textual">Writer</textual></code><textual class="po-textual"> classes that are used by a general
        </textual><code class="po-atom e103 e103"><textual class="po-textual">Converter</textual></code><textual class="po-textual"> class which constructs the graph. This architecture minimizes
        the amount of work needed to implement support for new file formats. The basic
        idea is that we map the semantics of file formats in language documentation onto
        annotation graphs, thus creating a certain subset of general annotation
        graphs that is suitable to store the information from the original files.
        The notion of "tiers" also has to be mapped and stored in annotation graphs
        during conversion. This will be explained in the next section.
      </textual></para></section><section class="po-hcontainer e104 e104"><title class="po-block e105 e105"><textual class="po-textual">Tier hierarchies</textual></title><para class="po-block e106 e106"><textual class="po-textual">
        In Elan, information about the tier hierarchy is stored only implicitly with the
        layout of our graph. However, there is no restriction in GrAF itself that would
        disallow a node in the word tier to connect to any other node in other tiers but
        the utterance tier. This is not possible in Elan. To describe those restrictions
        we added another data structure in Poio API that we call "data structure type".
        This data structure separately stores information about any tier hierarchy that we
        can extract from the graph later. A simple data structure type indicating that the
        researcher wants to tokenize a text into words before adding a word-for-word
        translation and a translation for the whole utterance looks like this:
        </textual><programlisting class="po-block e107 e107" xml:space="preserve"><textual class="po-textual">
[ 'utterance', [ 'word', 'wfw' ], 'translation' ]
        </textual></programlisting><textual class="po-textual">
        One advantage in representing annotation schemes through those simple trees
        is that the linguists instantly understand how such a tree works and they can give a
        representation of "their" annotation schema. In language documentation and
        general linguistics researchers tend to create ad-hoc annotation schemes according to
        their background and then normally start to create only those annotations related
        to their current research project. This is for example reflected in an annotation
        software like Elan, where the user can freely create tiers with any names and
        arrange them in custom hierarchies. As we need to map those data into our internal
        representation, we try to ease the creation of custom annotation schemes which are
        easy to understand for users. Subsequently, users can create their own
        data structure types and derive the annotation schemes for GrAF files from those
        structures.
      </textual></para><para class="po-block e108 e108"><textual class="po-textual">
        The node IDs in our GrAF data have a prefix that also contains the
        tier name (for example the utterance node: </textual><code class="po-atom e109 e109"><textual class="po-textual">&lt;node xml:id="utterance..W-Spch..na8"&gt;</textual></code><textual class="po-textual">).
        In the case of Elan the tier name in the node ID is preceeded
        by another string, the so-called "Linguistic Type" of Elan. This is a general restriction
        of our annotation graphs: we use those string IDs to be able to query the
        graphs quickly, for example to get all annotations which are children
        of another annotation on a certain tier, or to get all annotations for a "Linguistic Type".
        In other words we apply the semantics of tier-based annotation
        onto annotation graphs and make sure that the graphs we create and that the user
        handles in Poio API are a valid subset of general annotation graphs, as we defined it.
        The advantage of this approach is that within Poio API we are sure that the annotation
        graphs show a certain layout. The following sections will give an outlook on how this
        basic unification will support collaborations and scientific workflows in the future.
      </textual></para><para class="po-block e110 e110"><textual class="po-textual">
        We also want to mention that we store the annotations of each tier in a separate file
        in GrAF-XML. This radical stand-off approach allows easy sharing of annotation files
        and unsupervised collaboration, as discussed in </textual><xref class="po-milestone e111 e111" linkend="secworkflows"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Still,
        we do not propose to introduce GrAF-XML as another file format for software tools
        or archiving in language documentation, but as an easy way to serialize annotation
        graphs for later processing in a scientific workflow.
      </textual></para><para class="po-block e112 e112"><textual class="po-textual">
        All in all, it was an easy task to map an Elan
        EAF file to an annotation graph in GrAF. Those graphs are now the basis for other
        mappings of file formats onto GrAF. We are currently working on mapping from SIL
        Toolbox files, Typecraft XML files and Weblicht TCF files.
      </textual></para></section></section><section class="po-hcontainer e113 e113" xml:id="secworkflows"><title class="po-block e114 e114"><textual class="po-textual">Annotation graphs in linguistic workflows and collaborative projects</textual></title><para class="po-block e115 e115"><textual class="po-textual">
      Annotation graphs have long been discussed as the underlying data model for
      linguistic annotations [</textual><xref class="po-milestone e116 e116" linkend="birdliberman2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. Furthermore, the graphs
      itself can be used to extend and augment existing corpora without a central,
      supervising instance. As the XML representation of GrAF constitutes a radical
      stand-off approach, it is possible to add and mix annotation tiers in collaborative
      projects without administrative overhead (for advantages of radical stand-off
      solutions against previous approaches see [</textual><xref class="po-milestone e117 e117" linkend="caylesssoroka2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]
      and [</textual><xref class="po-milestone e118 e118" linkend="banski2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]). The amount of work to
      manage and synchronize the data is thereby kept as minimal as possible.
    </textual></para><para class="po-block e119 e119"><textual class="po-textual">
      In contrast to Elan we store each tier in a separate XML files, so that users can
      share annotations independently from any other tier and across sources. With this stand-off
      approach, a common data structure and unified access via an API facilitate the
      analysis of linguistic data, for example in typological research.
      GrAF itself was developed with interoperability in mind, so researchers
      can also use existing workflow tools like GATE and Apache UIMA in analysis
      [</textual><xref class="po-milestone e120 e120" linkend="idesuderman2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">].
    </textual></para><para class="po-block e121 e121"><textual class="po-textual">
      Last but not least, existing graph-based methods can now be applied directly on
      the linguistic graphs in analysis, for example graph-traversal algorithms to
      generate co-occurrence statistics of annotations (for preliminary thoughts in
      that direction see also [</textual><xref class="po-milestone e122 e122" linkend="idesuderman2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]). Graph visualization
      techniques can be instantly used by researchers to gain insight into their data
      and allow distant reading.
    </textual></para></section><section class="po-hcontainer e123 e123" xml:id="seclangdoc"><title class="po-block e124 e124"><textual class="po-textual">Language Documentation and Language Typology</textual></title><para class="po-block e125 e125"><textual class="po-textual">
      Data used in documentary linguistics and language typology is different from data
      used in other areas of linguistics. The data produced in language documentation
      projects consists mostly of audio and video recordings with time-aligned annotations.
      This predominance of time-aligned annotations determines the requirements for data
      structures. Because of these requirements an annotation format used in this area
      of linguistics should allow the definition of regions of media recordings using timestamps
      as well as string ranges of annotations.
    </textual></para><para class="po-block e126 e126"><textual class="po-textual">
      The linguistic diversity of the data in documentary linguistics and language
      typology makes the creation of standardized tag sets difficult, if not impossible,
      and even tier hierarchies differ considerably. Furthermore, many documented and
      analyzed languages will be subjected to further research and projects need to work with competing annotations
      and analyses. The specifics of the data and research questions require a format that
      can represent these complex and varied structures, while providing a unified access
      to data and annotation.
    </textual></para><para class="po-block e127 e127"><textual class="po-textual">
      We hope that the usage of annotation graphs as pivot structures and the unification
      of tier-based annotation via our subset of graphs will help in the ongoing task
      to unify tier structures and annotation schemes. The
      annotation graphs that our library constructs may be augmented, for example,
      with ISOcat links, added as regular features to already existing feature
      structures. : This way, the mapping between different tier structures and annotation
      schemes remains very general and does not depend on any file format.
      In this sense we see Poio API as one important building block to support cross-corpus
      research projects in the future.
    </textual></para></section><section class="po-hcontainer e128 e128"><title class="po-block e129 e129"><textual class="po-textual">CLASS web application as gateway to the archive</textual></title><para class="po-block e130 e130"><textual class="po-textual">
      The CLASS web application implements tools for search and analysis based on
      Poio API, provides easy-to-use web interfaces to facilitate field linguist's
      research and integrates with CLARIN service infrastructure. In order to offer
      a convenient web based workflow it is desirable that the users of the application
      may access resource files for analysis directly from CLARIN data centers and
      other sources.
    </textual></para><para class="po-block e131 e131"><textual class="po-textual">
      The main target of this effort is currently the DoBeS corpus, a core resource
      maintained by the TLA (The Language Archive) at the MPI (Max-Planck-Institute
      for Psycholinguistics, Nijmegen, NL). Since most of the collections within the
      corpus are protected on a personalized level for privacy and ethical reasons and
      may only be accessed by the corresponding owner or research group, the retrieval
      of data by external services has not been viable in the past.
    </textual></para><para class="po-block e132 e132"><textual class="po-textual">
      The CLASS web application will introduce a solution to this problem using single
      sign-on technology in a delegated scenario. The implementation will enable users
      to allow the CLASS service to access the data without exposing their credentials
      to the service itself. This behavior has become increasingly popular with social
      networks and cloud services (Google, Dropbox, Twitter, Facebook etc.) and is widely
      accepted by internet users but has had little impact on scientific practice.
    </textual></para><para class="po-block e133 e133"><textual class="po-textual">
      The infrastructure for Federated Authentication in scientific networks has already
      been established by national and international programs such as CLARIN using the
      Shibboleth/SAML protocol. Maintenance and configuration of delegated scenarios in
      large federations however prove impractical and the underlying profile ECP
      (Enhanced Client or Proxy) is currently not supported by the majority of Identity
      Provides within CLARIN and DFN-AAI (German Authentication and Authorization
      Infrastructure). To reach the goals of this project we are collaborating with
      the TLA in introducing a SAML/OAuth2 bridge, thus combining Federated Authentication
      with the benefits of OAuth2 delegation. The experimental nature of this implementation
      comes with the risk of the first-mover but will largely improve accessibility of
      research data in field linguistics once successfully established.
    </textual></para></section><section class="po-hcontainer e134 e134"><title class="po-block e135 e135"><textual class="po-textual">Summary and outlook</textual></title><para class="po-block e136 e136"><textual class="po-textual">
    We have shown how our project maps data from a common XML format in language documentation to a
    unified data structure and its XML representation as defined in ISO 24612. Those annotation
    graphs are a big step forward on the way to unified access to data and annotations from language
    documentation projects. Future projects in language typology and quantitative language comparison
    can make use of this unified access via the easy-to-use programming interface as defined
    in Poio API, without having to handle and parse different file formats. As soon as the data
    was transformed into annotation graphs as defined by GrAF, the individual tiers can be shared
    as GrAF-XML and extended independently without any supervising instance. Our hope is that this
    will foster collaboration in future analysis projects. GrAF-XML can then be used as a common
    interchange format in those projects.
    </textual></para></section><bibliography class="po-hcontainer e137 e137"><title class="po-block e138 e138"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e139 e139" xml:id="banski2009" xreflabel="Banski/Przepiórkowski 2009"><textual class="po-textual">
       Banski, Piotr and Przepiórkowski (2009).
      </textual><emphasis class="po-inline e140 e140" role="ital"><textual class="po-textual">Stand-off TEI annotation: the case of the national corpus of polish</textual></emphasis><textual class="po-textual">;
      in </textual><quote class="po-inline e141 e141"><textual class="po-textual">Proceedings of the Third Linguistic Annotation Workshop (LAW III)</textual></quote><textual class="po-textual">, pp. 65–67.
    </textual></bibliomixed><bibliomixed class="po-block e142 e142" xml:id="birdliberman2001" xreflabel="Bird/Liberman 2009"><textual class="po-textual">
       Bird, Sptehen and Liberman, Mark (2001).
      </textual><emphasis class="po-inline e143 e143" role="ital"><textual class="po-textual">A formal framework for linguistic annotation</textual></emphasis><textual class="po-textual">;
      in </textual><quote class="po-inline e144 e144"><textual class="po-textual">Speech Communication 33</textual></quote><textual class="po-textual">, pp. 23-60. doi:</textual><biblioid class="po-atom e145 doi e145"><textual class="po-textual">10.1016/S0167-6393(00)00068-6</textual></biblioid><textual class="po-textual">.
    </textual></bibliomixed><bibliomixed class="po-block e146 e146" xml:id="caylesssoroka2010" xreflabel="Cayless/Soroka 2010"><textual class="po-textual">
      Cayless, Hugh A. and Soroka, Adam (2010).
      </textual><emphasis class="po-inline e147 e147" role="ital"><textual class="po-textual">On implementing string-range() for TEI</textual></emphasis><textual class="po-textual">;
      in </textual><quote class="po-inline e148 e148"><textual class="po-textual">Proceedings of Balisage: The Markup Conference 2010</textual></quote><textual class="po-textual">
      [online] [cited 19 April 2013].
      </textual><link class="po-inline e149 e149" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.balisage.net/Proceedings/vol5/html/Cayless01/BalisageVol5-Cayless01.html</textual></link><textual class="po-textual">. doi:</textual><biblioid class="po-atom e150 doi e150"><textual class="po-textual">10.4242/BalisageVol5.Cayless01</textual></biblioid><textual class="po-textual">.
    </textual></bibliomixed><bibliomixed class="po-block e151 e151" xml:id="idesuderman2007" xreflabel="Ide/Suderman 2007"><textual class="po-textual">
      Ide, Nancy and Suderman, Keith (2007).
      </textual><emphasis class="po-inline e152 e152" role="ital"><textual class="po-textual">GrAF: A graph-based format for linguistic annotations</textual></emphasis><textual class="po-textual">;
      in </textual><quote class="po-inline e153 e153"><textual class="po-textual">Proceedings of the Linguistic Annotation Workshop</textual></quote><textual class="po-textual">, pp. 1–8,
      Prague, Czech Republic, June. Association for Computational Linguistics. doi:</textual><biblioid class="po-atom e154 doi e154"><textual class="po-textual">10.3115/1642059.1642060</textual></biblioid><textual class="po-textual">.
    </textual></bibliomixed><bibliomixed class="po-block e155 e155" xml:id="idesuderman2009" xreflabel="Ide/Suderman 2009"><textual class="po-textual">
      Ide, Nancy and Suderman, Keith (2009).
      </textual><emphasis class="po-inline e156 e156" role="ital"><textual class="po-textual">Bridging the gaps: interoperability for GrAF, GATE, and UIMA</textual></emphasis><textual class="po-textual">;
      in </textual><quote class="po-inline e157 e157"><textual class="po-textual">Proceedings of the Third Linguistic Annotation Workshop</textual></quote><textual class="po-textual">, pp. 27–34,
      Suntec, Singapore, August 6-7. Association for Computational Linguistics. doi:</textual><biblioid class="po-atom e158 doi e158"><textual class="po-textual">10.3115/1698381.1698385</textual></biblioid><textual class="po-textual">.
    </textual></bibliomixed></bibliography></article></classedDocument>