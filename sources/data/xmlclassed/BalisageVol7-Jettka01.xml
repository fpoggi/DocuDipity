<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3"><title class="po-block e1 e1"><textual class="po-textual">Visualization of concurrent markup</textual></title><subtitle class="po-block e2 e2"><textual class="po-textual">From trees to graphs, from 2D to 3D</textual></subtitle><info class="po-record e3 e3"><confgroup class="po-record e4 e4"><conftitle class="po-field e5 e5"><textual class="po-textual">Balisage: The Markup Conference 2011</textual></conftitle><confdates class="po-field e6 e6"><textual class="po-textual">August 2 - 5, 2011</textual></confdates></confgroup><abstract class="po-container e7 e7"><para class="po-block e8 e8"><textual class="po-textual">The present paper deals with the visualization of concurrent markup. An initial 
        discussion of the underlying model of XML instances demonstrates that valid XML exceeds  
        the expressive power of trees. While some challenging 
        features of concurrent markup, like overlaps, can be captured by minimally extended trees, 
        there are other phenomena which can be adequately expressed in XML using constructs 
        which instantiate advanced graph structures (e.g. discontinuous elements or repetitive structures).
      </textual></para><para class="po-block e9 e9"><textual class="po-textual">On the basis of two representation formats for concurrent markup, XStandoff and xLMNL,
    two distinct approaches towards its visualization are presented. The first method has been
    implemented in XSLT as an SVG-based 2D visualization strategy. Although it can be shown that this
    first approach provides an adequate (though not optimal) solution to overlapping
    structures, it is not capable of illustrating enhanced graph-based phenomena
    like the ones mentioned above. Therefore, some remarks about possible 3D visualizations are made
    which  show how the adding of another dimension could contribute to the appropriately expressive
    visualization of concurrent markup. In addition, a prototypic implementation based on XSLT and X3D is discussed as first
    step towards a three-dimensional illustration.</textual></para></abstract><author class="po-record e10 e10"><personname class="po-record e11 e11"><firstname class="po-field e12 e12"><textual class="po-textual">Daniel</textual></firstname><surname class="po-field e13 e13"><textual class="po-textual">Jettka</textual></surname></personname><personblurb class="po-container e14 e14"><para class="po-block e15 e15"><textual class="po-textual">Daniel Jettka recently finished his Master degree in Linguistics after acquiring a BA
          in Text Technology. During his studies he worked together with Andreas Witt, Dieter
          Metzing, Daniela Goecke and Maik Stührenberg in the </textual><emphasis class="po-inline e16 e16" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual"> project of the Research Group 437 </textual><emphasis class="po-inline e17 e17" role="ital"><textual class="po-textual">Text-technological Modelling of Information</textual></emphasis><textual class="po-textual"> funded by the German Research
          Foundation on different XSLT stylesheets for the handling and transformation of
          overlapping markup. His Master's Thesis dealt with the representation, processing, and
          visualization of multiple hierarchies with XStandoff and XSLT. </textual></para></personblurb></author><author class="po-record e18 e18"><personname class="po-record e19 e19"><firstname class="po-field e20 e20"><textual class="po-textual">Maik</textual></firstname><surname class="po-field e21 e21"><textual class="po-textual">Stührenberg</textual></surname></personname><personblurb class="po-container e22 e22"><para class="po-block e23 e23"><textual class="po-textual">Maik Stührenberg studied Computational Linguistics at Bielefeld University. He worked
          four years as research assistant at Giessen University in different text-technological
          projects together with Henning Lobin and Georg Rehm. Afterwards, he worked together with
          Andreas Witt, Dieter Metzing, Daniela Goecke and Daniel Jettka in the </textual><emphasis class="po-inline e24 e24" role="ital"><textual class="po-textual">Sekimo</textual></emphasis><textual class="po-textual"> project of the Research Group 437 </textual><emphasis class="po-inline e25 e25" role="ital"><textual class="po-textual">Text-technological Modelling of Information</textual></emphasis><textual class="po-textual"> funded by the German Research
          Foundation and is now employed as research assistant at Bielefeld University finishing his PhD thesis. His main
          research interests include specifications for structuring multiple annotated data, query
          languages, and query processing. </textual></para></personblurb></author><legalnotice class="po-container e26 e26"><para class="po-block e27 e27"><textual class="po-textual">Copyright © 2011 by the authors. Used with permission.</textual></para></legalnotice></info><section class="po-hcontainer e28 e28"><title class="po-block e29 e29"><textual class="po-textual">Introduction</textual></title><para class="po-block e30 e30"><textual class="po-textual">More than ten years after the birth of XML the limits of XML-based markup languages seem
      to become apparent: while on the one hand some people tend to see XML together with its accompanying 
      specifications as the new (too complex) SGML and try to trim it (see </textual><xref class="po-milestone e31 e31" linkend="Cowan2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e32 e32" linkend="Cowan2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, and the discussion on the xml-dev mailing list), on the other hand the underlying formal
      model of a tree cannot cope with multiple and possibly overlapping structures. Together with an
      increasing demand for multiple annotated corpora in the Digital Humanities questions for
      visualizations of concurrent annotations have been posed. In this paper we will sketch
      out two main points: firstly, we will show that the underlying data model of XML is not a tree at
      all and that it is possible to serialize graph-like structures including discontinuous
      elements with plain XML. We will then choose two XML-based representation formats as basis for
      our visualization efforts which will be discussed in </textual><xref class="po-milestone e33 e33" linkend="sec.visualization"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. The
      paper continues with some thoughts about 3D visualization techniques and the discussion of a prototypic implementation in </textual><xref class="po-milestone e34 e34" linkend="sec.3D"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and concludes with some remarks about possible future research.</textual></para></section><section class="po-hcontainer e35 e35"><title class="po-block e36 e36"><textual class="po-textual">A formal model of XML instances</textual></title><para class="po-block e37 e37"><textual class="po-textual">The majority of people dealing with XML instances tend to believe that markup languages
      which were developed to annotate mainly textual content use the formal model of a tree. This
      thinking can be traced back to statements like the one expressed in 1987 by J. H. Coombs et al. who
      stated that </textual><quote class="po-inline e38 e38"><textual class="po-textual">[d]ocuments have a natural hierarchical structure: chapters have sections,
        sections have subsections, and so on, until one reaches sentences, words, and
        letters</textual></quote><textual class="po-textual"> (</textual><xref class="po-milestone e39 e39" linkend="Coombs1987"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 945) and was encouraged by the OHCO theory
      that states that a text is an ordered hierarchy of content objects.</textual><footnote class="po-popup e40 e40"><para class="po-block e41 e41"><textual class="po-textual">Of course one could easily dig any deeper down to the beginnings of the GenCode(r)
          project and GML, but the point we want to take here is that there is a historic
          relation between markup languages on the one hand and the formal model of a tree on the
          other hand.</textual></para></footnote><textual class="po-textual"> From the formal perspective a tree is a special kind of directed graph. We reconsider the definition of a
      directed graph stated in </textual><xref class="po-milestone e42 e42" linkend="Hopcroft1979"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 2: </textual><blockquote class="po-container e43 e43"><para class="po-block e44 e44"><textual class="po-textual">A directed graph (or digraph), [...] denoted G = (V, E), consists of a finite set of
          vertices [(or nodes)] V and a set of ordered pairs of vertices E called arcs. We denote an
          arc from v to w by v→w.</textual></para><para class="po-block e45 e45"><textual class="po-textual">A path in a digraph is a sequence of vertices v</textual><subscript class="po-atom e46 e46"><textual class="po-textual">1</textual></subscript><textual class="po-textual">,
            v</textual><subscript class="po-atom e47 e47"><textual class="po-textual">2</textual></subscript><textual class="po-textual">,...,v</textual><subscript class="po-atom e48 e48"><textual class="po-textual">k</textual></subscript><textual class="po-textual">, k≥1, such that
            v</textual><subscript class="po-atom e49 e49"><textual class="po-textual">1</textual></subscript><textual class="po-textual">→v</textual><subscript class="po-atom e50 e50"><textual class="po-textual">i+1</textual></subscript><textual class="po-textual"> is an arc for each i,
          1≤i≤k. We say the path is from v</textual><subscript class="po-atom e51 e51"><textual class="po-textual">i</textual></subscript><textual class="po-textual"> to
            v</textual><subscript class="po-atom e52 e52"><textual class="po-textual">k</textual></subscript><textual class="po-textual">. [...] If v→w is an arc we say v is a predecessor of w
          and w is a successor of v.</textual></para></blockquote><textual class="po-textual"> An ordered, directed tree is a digraph that has a single root node (a node
      </textual><quote class="po-inline e53 e53"><textual class="po-textual">that has no predecessors and from which there is a path to every vertex</textual></quote><textual class="po-textual">).
      Each node other than the root node has exactly one predecessor and is connected to this single
      parent via one (and only one) edge. The successors of each node are ordered from left to right
        (</textual><xref class="po-milestone e54 e54" linkend="Hopcroft1979"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 3).</textual></para><para class="po-block e55 e55"><textual class="po-textual">Usually, one tends to agree on XML instances to use the formal model of a single-rooted
      tree: in the XML specification it is stated that </textual><quote class="po-inline e56 e56"><textual class="po-textual">[t]here is exactly one element, called
        the root, or document element, no part of which appears in the content of any other element.
        For all other elements, if the start-tag is in the content of another element, the end-tag
        is in the content of the same element. More simply stated, the elements, delimited by start-
        and end-tags, nest properly within each other.</textual></quote><textual class="po-textual"> And indeed, if we stick with the
      nesting of elements (and attributes) we end up with a tree. A tree, however, has certain
      limitations: since crossing arcs are not allowed, it is not possible to use a tree model for
      the annotation of discontinuous segments (for example multi-word idioms discussed in </textual><xref class="po-milestone e57 e57" linkend="Pianta2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> or the </textual><quote class="po-inline e58 e58"><textual class="po-textual">Alice in Wonderland</textual></quote><textual class="po-textual"> example quoted in </textual><xref class="po-milestone e59 e59" linkend="Sperberg-McQueen2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Although it would be possible to use TEI's milestone
      elements or fragmentation (see </textual><xref class="po-milestone e60 e60" linkend="TEI2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) one would still have to deal with
      separate element instances, that is the relation between the parts of the elements would be
      implicit.</textual></para><para class="po-block e61 e61"><textual class="po-textual">A related disadvantage of trees is that it is often not possible to annotate concurrent
    – and possibly overlapping – hierarchies.
   </textual><blockquote class="po-container e62 e62"><para class="po-block e63 e63"><textual class="po-textual">A hierarchy is formed by a subset
        of the elements of the markup language used to encode the document. The elements within a
        hierarchy have a clear nested structure. When more than such a hierarchy is present in the
        markup language, the hierarchies are called concurrent.</textual></para></blockquote><textual class="po-textual">(</textual><xref class="po-milestone e64 e64" linkend="Dekhtyar2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 186).</textual></para><para class="po-block e65 e65"><textual class="po-textual">Even if two concurrent hierarchies do not overlap it is
      impossible to merge them into a single tree if they do not share the same root, since trees
      are only allowed to have a single root node (see definition above). But the major problem
      related to concurrent markup is that multiple hierarchies may lead to multiple parentage of
      nodes: </textual><blockquote class="po-container e66 e66"><para class="po-block e67 e67"><textual class="po-textual">Overlap can be represented by graphs that are very like trees, but in which nodes may
          have multiple parents. Overlap is multiple parentage.</textual></para></blockquote><textual class="po-textual">(</textual><xref class="po-milestone e68 e68" linkend="Sperberg-McQueen2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><para class="po-block e69 e69"><textual class="po-textual">Since one of the main driving forces behind the creation of multi-dimensionally annotated
   documents are linguistic corpora, the TEI Guidelines </textual><xref class="po-milestone e70 e70" linkend="TEI2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> have not only
   improved the awareness of scholars of the Digital Humanities for the problems regarding this
   special field of research, but also provided some solutions to it. However, the different possible
   solutions (multiple documents, milestone elements, fragmentation and standoff markup) that are
   part of Chapter 20 of the aforementioned Guidelines are flawed with several disadvantages.
   Using multiple documents (cf. Section 20.1 of </textual><xref class="po-milestone e71 e71" linkend="TEI2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) results in redundant
   storage of the primary data, that is the character stream which is to be annotated and – as
   an effect – makes further changes to both primary data and annotation files time-consuming,
   which in turn can result in inconsistencies between the various instances. In addition
    </textual><quote class="po-inline e72 e72"><textual class="po-textual">there is no explicit indication that the various views, which might be in separate files,
    are related to each other: it might prove difficult to combine the views or access information
    from one view while processing the file that contains the encoding of another</textual></quote><textual class="po-textual"> (</textual><xref class="po-milestone e73 e73" linkend="TEI2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 621). The last point can be addressed by using the primary data as
   reference system, that is the positions in the character stream delimit the start and end points
   of corresponding markup, see </textual><xref class="po-milestone e74 e74" linkend="Witt2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (which is already referred to in the
   Guidelines) or </textual><xref class="po-milestone e75 e75" linkend="Witt2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and the standoff approaches discussed below. The
   related approach of </textual><emphasis class="po-inline e76 e76" role="ital"><textual class="po-textual">twin documents</textual></emphasis><textual class="po-textual"> shown in </textual><xref class="po-milestone e77 e77" linkend="Marinelli2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> in addition to the primary data redundantly stores the so-called
    </textual><emphasis class="po-inline e78 e78" role="ital"><textual class="po-textual">sacred markup</textual></emphasis><textual class="po-textual">, that is markup which is shared between different
   annotation layers (in contrast to </textual><emphasis class="po-inline e79 e79" role="ital"><textual class="po-textual">profane markup</textual></emphasis><textual class="po-textual"> that is related
   to a single layer). Although redundancy may lead to an improved sustainability (according to
    </textual><xref class="po-milestone e80 e80" linkend="Rehm2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) we tend to follow the Guidelines in believing that the price in form
   of possible inconsistencies is too high.</textual></para><para class="po-block e81 e81"><textual class="po-textual">For these reasons several proposals for graph-based formal models and alternative representation
      formats have been discussed in the last decade. As already stated above, a graph is the
      superclass of trees and therefore allows both multiple parentage and multiple root nodes. 
      Again, first proposals for the XML representation of graphs can be found in the TEI Guidelines </textual><xref class="po-milestone e82 e82" linkend="TEI2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> in Chapter 18 by introducing feature structures.</textual><footnote class="po-popup e83 e83"><para class="po-block e84 e84"><textual class="po-textual">It may be of interest that the mention of feature structures in the TEI Guidelines can be traced back to the first proposal (P1) written in Waterloo script. Even this very draft version dated from 1990 covered feature structures as a means for linguistic annotation.</textual></para></footnote><textual class="po-textual">
     Feature structures are single-rooted labeled directed acyclic graphs, often displayed as attribute value matrices, 
      that can be used for representing various kinds of information. The TEI approach was standardized as international 
      standard </textual><xref class="po-milestone e85 e85" linkend="iso24610-2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> 
      and can be used as serialization format for multiple annotations as shown by </textual><xref class="po-milestone e86 e86" linkend="Stegmann2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. 
      However, as discussed in this special paper, the resulting XML instances can be quite huge, rendering this 
      approach quite limited.</textual></para><para class="po-block e87 e87"><textual class="po-textual">
      Another alternative formal model for markup languages that has received much attention is the
      General Ordered-Descendant Directed Acyclic Graph (GODDAG) which was introduced in </textual><xref class="po-milestone e88 e88" linkend="Sperberg-McQueen2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (see </textual><xref class="po-milestone e89 e89" linkend="Sperberg-McQueen2008a"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for a more
      recent discussion). To be more precise, there is a whole range of GODDAG sub-classes, such as
      the restricted GODDAG (r-GODDAG), the generalized GODDAG, the clean GODDAG, the normalized
      GODDAG and the colored GODDAG (the latter two have been introduced in </textual><xref class="po-milestone e90 e90" linkend="Huitfeldt2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual><xref class="po-milestone e91 e91" linkend="fig.goddag"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (taken from </textual><xref class="po-milestone e92 e92" linkend="Sperberg-McQueen2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) shows a GODDAG representing the aforementioned
        </textual><quote class="po-inline e93 e93"><textual class="po-textual">Alice in Wonderland</textual></quote><textual class="po-textual"> example.</textual></para><figure class="po-container e94 e94" xml:id="fig.goddag"><title class="po-block e95 e95"><textual class="po-textual">GODDAG representation of discontinuous segments</textual></title><mediaobject class="po-container e96 e96"><imageobject class="po-container e97 e97"><imagedata class="po-meta e98 e98" fileref="../../../vol7/graphics/Jettka01/Jettka01-001.png" format="png" width="754"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e99 e99"><textual class="po-textual">GODDAGs (and especially clean r-GODDAGs) can be serialized as TexMECS instances (see </textual><xref class="po-milestone e100 e100" linkend="Marcoux2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for a detailed discussion about the relationships between GODDAG
      sub-class and TexMECS serialization). The respective GODDAG serialization of the above-named example 
      is shown below:</textual></para><programlisting class="po-block e101 e101" xml:space="preserve"><textual class="po-textual">&lt;p|Alice
was beginning to get very tired ...
it had no pictures or conversations in it,
&lt;q|and what is the use of a book,|-q&gt;
thought Alice
&lt;+q|without pictures or conversation?|q&gt;
|p&gt;</textual></programlisting><para class="po-block e102 e102"><textual class="po-textual">Apart from TexMECS there are other serialization options for representing GODDAGs.
      Especially the work done by </textual><xref class="po-milestone e103 e103" linkend="DiIorio2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> is of interest, since they have
      shown that a data structure based on RDF, called EARMARK (Extreme Annotational RDF Markup), not
      only fully supports the expressiveness of GODDAGs but additionally introduces a new sub-type,
      called e-GODDAG (extended GODDAG) that adds anonymous non-terminal nodes (for establishing
      multiple arcs between two nodes and therefore allowing repetitive structures).</textual></para><para class="po-block e104 e104"><textual class="po-textual">A second alternative data model for markup languages is the Annotation Graph introduced by
        </textual><xref class="po-milestone e105 e105" linkend="Bird1999"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> which was especially designed for linguistic annotations. An AG
      formally is a labeled directed acyclic graph (labeled DAG) which uses an
        </textual><quote class="po-inline e106 e106"><textual class="po-textual">order-preserving map assigning times to (some of) the nodes</textual></quote><textual class="po-textual"> (</textual><xref class="po-milestone e107 e107" linkend="Bird1999"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, p. 2). This formal model is used for example in the annotation tool
      EXMARaLDA discussed in </textual><xref class="po-milestone e108 e108" linkend="Schmidt2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. An extended version can be found in the
      NITE Object Model (cf. </textual><xref class="po-milestone e109 e109" linkend="Carletta2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e110 e110" linkend="Carletta2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) which
      combines hierarchies between nodes (similar to ordered directed trees) and the timing
      information. Both formal models use plain XML as serialization format. We will discuss this
      finding in a few paragraphs.</textual></para><para class="po-block e111 e111"><textual class="po-textual">The third alternative formal model is based on the Core Range Algebra, introduced in </textual><xref class="po-milestone e112 e112" linkend="Nicol2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and extended in </textual><xref class="po-milestone e113 e113" linkend="Nicol2002a"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. It uses flat ranges over
      the primary data and allows for overlapping ranges. A related serialization format is the
      Layered Markup and Annotation Language (LMNL, </textual><xref class="po-milestone e114 e114" linkend="Tennison2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e115 e115" linkend="Piez2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e116 e116" linkend="Cowan2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). LMNL uses the primary data as base
      consisting of zero or more atoms (representing a Unicode char or something completely
      different). Ranges over the base contain the atoms between a matching start tag and end tag
      and may overlap. Even self-overlap (that is overlapping of elements, or ranges that bear the
      same generic identifier, see </textual><xref class="po-milestone e117 e117" linkend="Marinelli2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for an example) is supported, as
      well as anonymous ranges (similar to the aforementioned e-GODDAGs). Annotations can be located
      at both the start and end tag and since LMNL completely abandons hierarchy there is no need
      for a 'root range' (although the containment relation can be used via the use of base layers,
      see </textual><xref class="po-milestone e118 e118" linkend="Cowan2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Despite its naming as 'markup language' LMNL was developed as
      a formal model, therefore several serialization formats exist. Apart from LMNL's own Sawtooth
      syntax there is Canonical LMNL in XML (CLIX, formerly known as HORSE, Hierarchy-Obfuscating
      Really Spiffy Encoding, </textual><xref class="po-milestone e119 e119" linkend="DeRose2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e120 e120" linkend="Bauman2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), ECLIX
      (extended CLIX) and xLMNL. While CLIX and ECLIX use TEI milestone elements, xLMNL is a flat
      representation, similar to a standoff approach (examples of all these formats can be found at
        </textual><link class="po-inline e121 e121" xlink:actuate="onRequest" xlink:href="http://www.piez.org/wendell/papers/dh2010/clix-sonnets/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.piez.org/wendell/papers/dh2010/clix-sonnets/</textual></link><textual class="po-textual">). </textual><xref class="po-milestone e122 e122" linkend="fig.lmnl"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows a 
      possible graphical representation of ranges and annotations in LMNL (here syllables and morphemes). 
      Note, that due to the two-dimensional 
      approach the hierarchy that is implied by the vertical arrangement of the bars is not compulsory in LMNL.</textual></para><figure class="po-container e123 e123" xml:id="fig.lmnl"><title class="po-block e124 e124"><textual class="po-textual">Possible graphical representation of LMNL ranges</textual></title><mediaobject class="po-container e125 e125"><imageobject class="po-container e126 e126"><imagedata class="po-meta e127 e127" fileref="../../../vol7/graphics/Jettka01/Jettka01-002.png" format="png" width="300"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e128 e128"><textual class="po-textual">Other approaches that shall be mentioned here for the sake of completeness are multi-colored
      XML (cf. </textual><xref class="po-milestone e129 e129" linkend="Jagadish2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), the use of delay nodes (</textual><xref class="po-milestone e130 e130" linkend="LeMaitre2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), the tabling approach described by </textual><xref class="po-milestone e131 e131" linkend="Durusau2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and XCONCUR by </textual><xref class="po-milestone e132 e132" linkend="Schonefeld2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. While some of the aforementioned data models make use of a
      serialization format of their own, others succeed in using plain XML. This indicates that the
      formal model of XML instances has a greater expressive power than a directed ordered tree. And
      indeed, if we leave the field of Digital Humanities, there is a number of authors that tend to
      agree that the formal model of XML instances is that of a graph: </textual><xref class="po-milestone e133 e133" linkend="Abiteboul2000"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e134 e134" linkend="Polyzotis2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e135 e135" linkend="Gou2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> or </textual><xref class="po-milestone e136 e136" linkend="Moeller2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. The discrepancy in the findings can be explained by the sole observation of hierarchical
      relations of elements or by alternatively taking the XML-inherent integrity constraints
      into consideration, that is ID/IDREF/IDREFS token type attributes (in DTD) or
      xs:ID/xs:IDREF/xs:IDREFS and xs:key/xs:keyref (in XSD) respectively. In this context a line can be drawn between well-formed XML instances (in that case we still have to deal with a tree) and valid
      XML instances according to a document grammar that makes use of the aforementioned integrity
      constraints. Using a native XML approach has the advantage of being able to make use not only of a
      large range of software products but also of related specifications such as XPath, XSLT, 
      and XQuery. Especially the upcoming XSLT 3.0 is quite interesting since it supports streamable
      transformations allowing for the manipulation of fairly big XML instances (cf. </textual><xref class="po-milestone e137 e137" linkend="Kay2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). In addition, XML-based visualization formats such as the 2D SVG and
      newer approaches such as the 3D X3D are promising formats for the visualization of concurrent
      annotations (see </textual><xref class="po-milestone e138 e138" linkend="sec.visualization"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e139 e139" linkend="sec.3D"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). We have already found proofs
      that the full power of valid XML instances can be used to serialize Annotation Graphs or LMNL
      ranges. </textual><xref class="po-milestone e140 e140" linkend="lst.minimal"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> demonstrates that valid XML can even make use
      of cyclic paths (or arcs) and therefore definitely exceeds the formal power of trees.</textual></para><figure class="po-container e141 e141" xml:id="lst.minimal"><title class="po-block e142 e142"><textual class="po-textual">Minimal valid XML instance with cyclic paths</textual></title><programlisting class="po-block e143 e143" xml:space="preserve"><textual class="po-textual">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE a
[ &lt;!ELEMENT a EMPTY&gt;
  &lt;!ATTLIST a id ID #IMPLIED idref IDREF #IMPLIED&gt; ]&gt;
&lt;a id="a" idref="a"/&gt;</textual></programlisting></figure><para class="po-block e144 e144"><textual class="po-textual">Together with the standoff approach mentioned both in the TEI Guidelines and </textual><xref class="po-milestone e145 e145" linkend="Thompson1997"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, this expressive power can be used to capture multiple annotated data. In </textual><xref class="po-milestone e146 e146" linkend="Stührenberg2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e147 e147" linkend="Stührenberg2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> the authors
      discuss the XStandoff meta annotation format which is capable of representing discontinuous elements, multiple parentage and virtual elements (amongst others). Since it is XML-based
      we have chosen it as one of the two formats (besides xLMNL) to discuss visualization
      aspects.</textual></para></section><section class="po-hcontainer e148 e148"><title class="po-block e149 e149"><textual class="po-textual">XStandoff as a starting point for visualization</textual></title><para class="po-block e150 e150"><textual class="po-textual">XStandoff is a representation format for multiple hierarchies which evolved from works of
      the research project </textual><quote class="po-inline e151 e151"><textual class="po-textual">Secondary structuring of information and comparative discourse
        analysis</textual></quote><textual class="po-textual"> (Sekimo)</textual><footnote class="po-popup e152 e152"><para class="po-block e153 e153"><textual class="po-textual">The project Sekimo was a part of the distributed research group </textual><link class="po-inline e154 e154" xlink:actuate="onRequest" xlink:href="http://www.text-technology.de" xlink:show="new" xlink:type="simple"><quote class="po-inline e155 e155"><textual class="po-textual">Text Technological Modelling of
              Information</textual></quote></link><textual class="po-textual"> which lasted from 2003 to 2009.</textual></para></footnote><textual class="po-textual">. The format is a successor of the Sekimo Generic Format (SGF, cf. </textual><xref class="po-milestone e156 e156" linkend="Stührenberg2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and was presented in detail at the Balisage 2009 (cf. </textual><xref class="po-milestone e157 e157" linkend="Stührenberg2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, for current developments see </textual><link class="po-inline e158 e158" xlink:actuate="onRequest" xlink:href="http://www.xstandoff.net/tk.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">the XStandoff website</textual></link><textual class="po-textual">). XStandoff can be seen as the combination of the standoff approach
      and the formal model of GODDAGs, capable of using native XML to represent multiple hierarchies and the
      specifically challenging structures such as overlaps, discontinuous elements, or virtual elements. </textual></para><para class="po-block e159 e159"><textual class="po-textual">Since XStandoff makes use of the XML-inherent ID/IDREF mechanism the underlying model can
      be seen as a graph and therefore the format is able to represent any graph-based structure.
      Because of this it can become quite complicated to construct XStandoff instances manually. For
      this reason the XStandoff toolkit was implemented</textual><footnote class="po-popup e160 e160"><para class="po-block e161 e161"><textual class="po-textual">The stylesheets and corresponding documentation are available at
        </textual><link class="po-inline e162 e162" xlink:actuate="onRequest" xlink:href="http://www.xstandoff.net/tk.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.xstandoff.net/tk.html</textual></link><textual class="po-textual">.</textual></para></footnote><textual class="po-textual">, providing XSLT 2.0 stylesheets for the
      creation of XStandoff instances on the basis of standard inline XML annotations and their corresponding
      primary data (</textual><emphasis class="po-inline e163 e163" role="ital"><textual class="po-textual">inline2XSF.xsl</textual></emphasis><textual class="po-textual">), the merging of XSF instances
        (</textual><emphasis class="po-inline e164 e164" role="ital"><textual class="po-textual">mergeXSF.xsl</textual></emphasis><textual class="po-textual">), the extraction or deletion of levels or layers</textual><footnote class="po-popup e165 e165"><para class="po-block e166 e166"><textual class="po-textual">Levels refer to the conceptual realization of annotations and layers to the technical
          realization (cf. </textual><xref class="po-milestone e167 e167" linkend="Goecke2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). This distinction is reflected by XStandoff
          in providing the corresponding meta elements </textual><code class="po-atom e168 e168"><textual class="po-textual">&lt;xsf:level&gt;</textual></code><textual class="po-textual"> and
            </textual><code class="po-atom e169 e169"><textual class="po-textual">&lt;xsf:layer&gt;</textual></code><textual class="po-textual">.
        </textual></para></footnote><textual class="po-textual"> from XStandoff instances (</textual><emphasis class="po-inline e170 e170" role="ital"><textual class="po-textual">extractXSFcontent.xsl</textual></emphasis><textual class="po-textual">)
      and the transformation of standard XStandoff instances to inline XStandoff representations
        (</textual><emphasis class="po-inline e171 e171" role="ital"><textual class="po-textual">XSF2inline.xsl</textual></emphasis><textual class="po-textual">), the latter mainly for demonstration
      purposes. 
      The workflow for creating an XStandoff instance can be demonstrated by the following
      example. The basis for the construction is given by two separate annotations (</textual><xref class="po-milestone e172 e172" linkend="fig.drive-anno"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) for a single primary data text (</textual><xref class="po-milestone e173 e173" linkend="fig.drive-pd"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">): </textual></para><figure class="po-container e174 e174" xml:id="fig.drive-pd"><title class="po-block e175 e175"><textual class="po-textual">Textual primary data</textual></title><programlisting class="po-block e176 e176" xml:space="preserve"><textual class="po-textual">Asked a girl what she wanted to be
She said baby, can't you see
I wanna be famous, a star on the screen
But you can do something in between
Baby you can drive my car
Yes I'm gonna be a star
Baby you can drive my car
And baby I love you</textual></programlisting></figure><figure class="po-container e177 e177" xml:id="fig.drive-anno"><title class="po-block e178 e178"><textual class="po-textual">The annotations (verse structure &amp; direct discourse)</textual></title><programlisting class="po-block e179 e179" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;text xmlns="http://www.tei-c.org/ns/1.0"&gt;
    &lt;body&gt;
        &lt;lg type="verse"&gt;
            &lt;l&gt;Asked a girl what she wanted to be&lt;/l&gt;
            &lt;l&gt;She said baby, can't you see&lt;/l&gt;
            &lt;l&gt;I wanna be famous, a star on the screen&lt;/l&gt;
            &lt;l&gt;But you can do something in between&lt;/l&gt;
        &lt;/lg&gt;
        &lt;lg type="chorus"&gt;
            &lt;l&gt;Baby you can drive my car&lt;/l&gt;
            &lt;l&gt;Yes I'm gonna be a star&lt;/l&gt;
            &lt;l&gt;Baby you can drive my car&lt;/l&gt;
            &lt;l&gt;And baby I love you&lt;/l&gt;
        &lt;/lg&gt;
    &lt;/body&gt;
&lt;/text&gt;</textual></programlisting><programlisting class="po-block e180 e180" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;text xmlns="http://www.tei-c.org/ns/1.0"&gt;
    &lt;body&gt;
        &lt;p&gt;Asked a girl what she wanted to be
            She said &lt;q&gt;baby, can't you see
            I wanna be famous, a star on the screen
            But you can do something in between&lt;/q&gt;&lt;/p&gt;
        &lt;p&gt;&lt;q&gt;Baby you can drive my car
            Yes I'm gonna be a star
            Baby you can drive my car
            And baby I love you&lt;/q&gt;&lt;/p&gt;
    &lt;/body&gt;
&lt;/text&gt;</textual></programlisting></figure><para class="po-block e181 e181"><textual class="po-textual">The stylesheet </textual><emphasis class="po-inline e182 e182" role="ital"><textual class="po-textual">inline2XSF.xsl</textual></emphasis><textual class="po-textual"> can be used to build
      XStandoff instances for each of the input annotations, by using the Saxon XSLT Processor</textual><footnote class="po-popup e183 e183"><para class="po-block e184 e184"><emphasis class="po-inline e185 e185" role="ital"><textual class="po-textual">inline2XSF.xsl</textual></emphasis><textual class="po-textual"> makes use of Saxon specific extensions
          which are available in the older XSLT 2.0 versions of Saxon (-B and -SA) and the newer
          versions PE and EE; see </textual><link class="po-inline e186 e186" xlink:actuate="onRequest" xlink:href="http://saxon.sourceforge.net/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://saxon.sourceforge.net/</textual></link><textual class="po-textual">.</textual></para></footnote><textual class="po-textual">:</textual></para><para class="po-block e187 e187"><code class="po-atom e188 e188"><textual class="po-textual">saxon -o:[output.xml] -s:[input.xml] -xsl:inline2XSF.xsl
   primary-data=[primary-data-file.txt]</textual></code></para><para class="po-block e189 e189"><textual class="po-textual">Afterwards the two instances can be merged
      with the help of the stylesheet </textual><emphasis class="po-inline e190 e190" role="ital"><textual class="po-textual">mergeXSF.xsl</textual></emphasis><textual class="po-textual">:</textual></para><para class="po-block e191 e191"><textual class="po-textual"> </textual><code class="po-atom e192 e192"><textual class="po-textual">saxon -o:[combined-output.xml] -s:[input-xsf-1.xml] merge-with=[input-xsf-2.xml]</textual></code><textual class="po-textual">)</textual></para><para class="po-block e193 e193"><textual class="po-textual">This process results in the integration of the separate annotations into a single XStandoff instance: </textual></para><figure class="po-container e194 e194" xml:id="fig.drive-xsf"><title class="po-block e195 e195"><textual class="po-textual">XStandoff instance</textual></title><programlisting class="po-block e196 e196" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsf:corpusData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xsf="http://www.xstandoff.net/2009/xstandoff/1.1"
    xsfVersion="1.1"
    xml:id="drive_my_car_lines-drive_my_car_quotes"
    xsi:schemaLocation="http://www.xstandoff.net/2009/xstandoff/1.1 http://www.xstandoff.net/2009/xstandoff/1.1/xsf.xsd"&gt;
    &lt;xsf:primaryData start="0" end="235"&gt;
        &lt;xsf:primaryDataRef uri="../pd/drive_my_car.txt"/&gt;
    &lt;/xsf:primaryData&gt;
    &lt;xsf:segmentation&gt;
        &lt;xsf:segment xml:id="seg1" start="0" end="235"/&gt;
        &lt;xsf:segment xml:id="seg2" start="0" end="140"/&gt;
        &lt;xsf:segment xml:id="seg3" start="0" end="34"/&gt;
        &lt;xsf:segment xml:id="seg4" start="35" end="63"/&gt;
        &lt;xsf:segment xml:id="seg5" start="44" end="139"/&gt;
        &lt;xsf:segment xml:id="seg6" start="64" end="103"/&gt;
        &lt;xsf:segment xml:id="seg7" start="104" end="139"/&gt;
        &lt;xsf:segment xml:id="seg8" start="140" end="235"/&gt;
        &lt;xsf:segment xml:id="seg9" start="140" end="165"/&gt;
        &lt;xsf:segment xml:id="seg10" start="166" end="189"/&gt;
        &lt;xsf:segment xml:id="seg11" start="190" end="215"/&gt;
        &lt;xsf:segment xml:id="seg12" start="216" end="235"/&gt;
    &lt;/xsf:segmentation&gt;
    &lt;xsf:annotation&gt;
        &lt;xsf:level xml:id="drive_my_car_lines-level1"&gt;
            &lt;xsf:layer xmlns="http://www.tei-c.org/ns/1.0" priority="0"&gt;
                &lt;text xsf:segment="seg1"&gt;
                    &lt;body xsf:segment="seg1"&gt;
                        &lt;lg xsf:segment="seg2" type="verse"&gt;
                            &lt;l xsf:segment="seg3"/&gt;
                            &lt;l xsf:segment="seg4"/&gt;
                            &lt;l xsf:segment="seg6"/&gt;
                            &lt;l xsf:segment="seg7"/&gt;
                        &lt;/lg&gt;
                        &lt;lg xsf:segment="seg8" type="chorus"&gt;
                            &lt;l xsf:segment="seg9"/&gt;
                            &lt;l xsf:segment="seg10"/&gt;
                            &lt;l xsf:segment="seg11"/&gt;
                            &lt;l xsf:segment="seg12"/&gt;
                        &lt;/lg&gt;
                    &lt;/body&gt;
                &lt;/text&gt;
            &lt;/xsf:layer&gt;
        &lt;/xsf:level&gt;
        &lt;xsf:level xml:id="drive_my_car_quotes-level1"&gt;
            &lt;xsf:layer xmlns="http://www.tei-c.org/ns/1.0" priority="0"&gt;
                &lt;text xsf:segment="seg1"&gt;
                    &lt;body xsf:segment="seg1"&gt;
                        &lt;p xsf:segment="seg2"&gt;
                            &lt;q xsf:segment="seg5"/&gt;
                        &lt;/p&gt;
                        &lt;p xsf:segment="seg8"&gt;
                            &lt;q xsf:segment="seg8"/&gt;
                        &lt;/p&gt;
                    &lt;/body&gt;
                &lt;/text&gt;
            &lt;/xsf:layer&gt;
        &lt;/xsf:level&gt;
    &lt;/xsf:annotation&gt;
&lt;/xsf:corpusData&gt;</textual></programlisting></figure><para class="po-block e197 e197"><textual class="po-textual">There are several parameters which can be specified by the user to influence the
      actual serialization of the XStandoff annotation (for a detailed overview see the 
      </textual><link class="po-inline e198 e198" xlink:actuate="onRequest" xlink:href="http://www.xstandoff.net/docs/xslt/inline2XSF.xsl.xd.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">online stylesheet documentation</textual></link><textual class="po-textual">). 
      Apart from this, it should be obvious how the format deals with
      challenging structures like overlaps or discontinuous elements, namely by instantiating an
      underlying graph model through the use of string range references to parts of the primary data
      (</textual><code class="po-atom e199 e199"><textual class="po-textual">xsf:segment</textual></code><textual class="po-textual"> elements). At the same time the hierarchical structures of the input annotations are kept nearly
      unchanged (except for the addition of the </textual><code class="po-atom e200 e200"><textual class="po-textual">xsf:segment</textual></code><textual class="po-textual"> attribute which refers to the respective 
      </textual><code class="po-atom e201 e201"><textual class="po-textual">xsf:segment</textual></code><textual class="po-textual"> element) by storing them separately under </textual><code class="po-atom e202 e202"><textual class="po-textual">&lt;xsf:level&gt;</textual></code><textual class="po-textual"> and
        </textual><code class="po-atom e203 e203"><textual class="po-textual">&lt;xsf:layer&gt;</textual></code><textual class="po-textual"> elements. Note that there is no mandatory relationship
      between the string ranges (containment) and the dominance relations implied by the hierarchical structure 
      (cf. the </textual><quote class="po-inline e204 e204"><textual class="po-textual">Alice in Wonderland</textual></quote><textual class="po-textual"> example in </textual><xref class="po-milestone e205 e205" linkend="Stührenberg2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual></para><para class="po-block e206 e206"><textual class="po-textual">In </textual><xref class="po-milestone e207 e207" linkend="sec.XSF2SVG"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e208 e208" linkend="sec.3D"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> we will present approaches
      to the visualization of XStandoff instances like the one shown in </textual><xref class="po-milestone e209 e209" linkend="fig.drive-xsf"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. However, as discussed above, we would like to have a second
      XML-based option as starting point for a visualization of concurrent markup. Therefore we explored the possibility of
      converting other formats into XStandoff and vice versa. This would allow for the graphic rendering of distinct formats by the visualization 
      approaches we will introduce in </textual><xref class="po-milestone e210 e210" linkend="sec.visualization"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e211 e211" linkend="sec.3D"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. As a possible candidate 
      for conversion we have chosen xLMNL which we will briefly 
      present in the following section.</textual></para></section><section class="po-hcontainer e212 e212" xml:id="sec.xLMNL"><title class="po-block e213 e213"><textual class="po-textual">xLMNL as a starting point for visualization</textual></title><para class="po-block e214 e214"><textual class="po-textual">Since xLMNL, an XML-based serialization format for LMNL, which was introduced by </textual><xref class="po-milestone e215 e215" linkend="Piez2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> as
      an ad-hoc solution for representing LMNL in XML, makes a similar use of string
      ranges like XStandoff, it was chosen as a starting point for a conversion project between
      XStandoff and other XML-based formats.
      The corresponding simplified xLMNL
      serialization for the annotations shown in </textual><xref class="po-milestone e216 e216" linkend="fig.drive-anno"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> can be
      seen in </textual><xref class="po-milestone e217 e217" linkend="fig.xLMNL"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> which demonstrates the use of  character positions (in </textual><code class="po-atom e218 e218"><textual class="po-textual">start</textual></code><textual class="po-textual"> and 
      </textual><code class="po-atom e219 e219"><textual class="po-textual">end</textual></code><textual class="po-textual"> attributes) referring to the normalized textual content of </textual><code class="po-atom e220 e220"><textual class="po-textual">x:content</textual></code><textual class="po-textual">.</textual></para><figure class="po-container e221 e221" xml:id="fig.xLMNL"><title class="po-block e222 e222"><textual class="po-textual">xLMNL representation</textual></title><programlisting class="po-block e223 e223" xml:space="preserve"><textual class="po-textual">&lt;x:lmnl-document&gt;
    &lt;x:content&gt;Asked a girl what she wanted to be
        She said baby, can't you see
        I wanna be famous, a star on the screen
        But you can do something in between
        Baby you can drive my car
        Yes I'm gonna be a star
        Baby you can drive my car
        And baby I love you&lt;/x:content&gt;
    &lt;x:range name="text" ID="text-1" start="0" end="235"/&gt;
    &lt;x:range name="text" ID="text-2" start="0" end="235"/&gt;
    &lt;x:range name="body" ID="body-1" start="0" end="235"/&gt;
    &lt;x:range name="body" ID="body-2" start="0" end="235"/&gt;
    &lt;x:range name="lg" ID="lg-1" start="0" end="140"&gt;
        &lt;x:annotation name="type" role="start-annotation"&gt;
            &lt;x:content&gt;verse&lt;/x:content&gt;
        &lt;/x:annotation&gt;
    &lt;/x:range&gt;
    &lt;x:range name="p" ID="p-1" start="0" end="140"/&gt;
    &lt;x:range name="l" ID="l-1" start="0" end="34"/&gt;
    &lt;x:range name="l" ID="l-2" start="35" end="63"/&gt;
    &lt;x:range name="q" ID="q-1" start="44" end="139"/&gt;
    &lt;x:range name="l" ID="l-3" start="64" end="103"/&gt;
    &lt;x:range name="l" ID="l-4" start="104" end="139"/&gt;
    &lt;x:range name="lg" ID="lg-2" start="140" end="235"&gt;
        &lt;x:annotation name="type" role="start-annotation"&gt;
            &lt;x:content&gt;chorus&lt;/x:content&gt;
        &lt;/x:annotation&gt;
    &lt;/x:range&gt;
    &lt;x:range name="p" ID="p-2" start="140" end="235"/&gt;
    &lt;x:range name="q" ID="q-2" start="140" end="235"/&gt;
    &lt;x:range name="l" ID="l-5" start="140" end="165"/&gt;
    &lt;x:range name="l" ID="l-6" start="166" end="189"/&gt;
    &lt;x:range name="l" ID="l-7" start="190" end="215"/&gt;
    &lt;x:range name="l" ID="l-8" start="216" end="235"/&gt; 
&lt;/x:lmnl-document&gt;</textual></programlisting></figure><para class="po-block e224 e224"><textual class="po-textual">This illustrates the main difference of XStandoff and xLMNL in that the latter does not
      consider a hierarchical structure and imposes a completely flat structure of annotations.
      Admittedly, in contrast to dominance relations, containment relations can well be derived by
      taking into account the string ranges. Nevertheless, the distinct approaches of xLMNL and
      XStandoff towards the representation of potentially concurrent annotations constitute a
      serious challenge for the conversion enterprise because annotation hierarchies are not present
      in xLMNL. There are two possible ways to deal with this issue. Since XStandoff in principle
      allows for the capturing of arbitrary graph-like structures, the xLMNL representation could be
      integrated without making any assumptions about hierarchies. Another
      strategy, which would make more sense if one wanted to visualize the annotations by the methods
      introduced later on, would be the analysis of the individual relations between annotations on the
      basis of their string ranges and to try to construct hierarchies of annotations by considering
      the containment relations. Conflicting annotations could be separated from each other to avoid
      representation problems. This strategy admittedly inserts information which is not directly present,
      however it would not be a problem to remove the additional information again in
      a later step.</textual></para><para class="po-block e225 e225"><textual class="po-textual">Perspectively there will be an examination of creating or integrating XStandoff into a
      syntactic conversion framework for existing representation formats like the one described in
        </textual><xref class="po-milestone e226 e226" linkend="Marinelli2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Although it would be possible to realize individual
      format-to-format conversions, it seems much more straightforward to have a framework
      which is based on a common model. For this purpose the above-mentioned meta markup language
      EARMARK, which can be used to represent GODDAGs, appears to be a quite promising candidate for a
      pivot format. </textual></para></section><section class="po-hcontainer e227 e227" xml:id="sec.visualization"><title class="po-block e228 e228"><textual class="po-textual">2D visualization of concurrent markup</textual></title><section class="po-hcontainer e229 e229"><title class="po-block e230 e230"><textual class="po-textual">Basic principles of the visualization of concurrent markup</textual></title><para class="po-block e231 e231"><textual class="po-textual">For the visualization of concurrent markup there are two main issues to be regarded 
        and to be solved: </textual><itemizedlist class="po-table e232 e232"><listitem class="po-container e233 e233"><para class="po-block e234 e234"><textual class="po-textual">the illustration of the relationship of primary data and annotations</textual></para></listitem><listitem class="po-container e235 e235"><para class="po-block e236 e236"><textual class="po-textual">the visualization of potentially overlapping annotations (including other 
              tree-challenging phenomena like discontinuous elements)</textual></para></listitem></itemizedlist><textual class="po-textual">
      </textual></para><para class="po-block e237 e237"><textual class="po-textual">In the case of XStandoff the visualization of multiple hierarchies at first glance can be based on a
        relatively simple principle, namely the delineation of separate tree structures. This of course only makes sense when the focus is on dominance
        relationships. As stated above, it is possible to represent graph structures, too. This will
        be addressed in more detail in </textual><xref class="po-milestone e238 e238" linkend="sec.3D"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. But before, we want to take a look
        at a general visualization principle for multiple tree structures. A very
        basic visualization method is given in </textual><xref class="po-milestone e239 e239" linkend="Witt2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> where two annotation layers corresponding
        to common textual primary data are represented by vertically ordered colored bars: </textual></para><figure class="po-container e240 e240"><title class="po-block e241 e241"><textual class="po-textual">Visualization of annotation layers (</textual><xref class="po-milestone e242 e242" linkend="Witt2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">: 76)</textual></title><mediaobject class="po-container e243 e243"><imageobject class="po-container e244 e244"><imagedata class="po-meta e245 e245" fileref="../../../vol7/graphics/Jettka01/Jettka01-003.png" format="png" width="600"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e246 e246"><textual class="po-textual">Here the horizontally ordered segments of each level represent the individual
        annotations and their length is used to demonstrate the correspondence to the dominated
        annotations (edges are inferable by the width of the bars) and the spanned textual content.
        This strategy, as indicated above, is based on tree structure visualization. Admittedly it
        could be used to represent minimal extensions to trees, for example multiple parents, which would
        allow for the capturing of overlapping structures; remember that </textual><quote class="po-inline e247 e247"><textual class="po-textual">overlap is multiple
          parentage</textual></quote><textual class="po-textual"> (</textual><xref class="po-milestone e248 e248" linkend="Sperberg-McQueen2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). However, there seems to 
        be no way to represent more advanced graph structures. In addition there are some
        stylistic disadvantages: first of all, the overall width of the graphic and the visual
        accessibility mainly depend on the length of the primary data. Secondly, in this basic
        strategy line breaks from the primary data would have to be replaced in order to facilitate
        the visualization of continuously ordered annotation segments. </textual></para><para class="po-block e249 e249"><textual class="po-textual">The named stylistic shortcomings could be dealt with by changing the direction of the
        illustration and ordering the annotation levels horizontally. This concept can be
        demonstrated on the basis of the annotations introduced in </textual><xref class="po-milestone e250 e250" linkend="fig.drive-anno"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Since there
        is a classic overlap of the second </textual><code class="po-atom e251 e251"><textual class="po-textual">l</textual></code><textual class="po-textual"> element
          (</textual><code class="po-atom e252 e252"><textual class="po-textual">/text/body/lg[1]/l[2]</textual></code><textual class="po-textual">) of the verse annotation and the first </textual><code class="po-atom e253 e253"><textual class="po-textual">q</textual></code><textual class="po-textual">
        element (</textual><code class="po-atom e254 e254"><textual class="po-textual">/text/body/p[1]/q</textual></code><textual class="po-textual">) of the direct discourse annotation which holds for
        the string </textual><quote class="po-inline e255 e255"><textual class="po-textual">baby, can't you see</textual></quote><textual class="po-textual">, the annotation levels cannot simply be
        integrated into a common tree structure. Following the representation in Witt (2005) the
        present annotations could be visualized like in </textual><xref class="po-milestone e256 e256" linkend="fig.drive-bars-trees"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> 
        (in order to emphasize the present tree
        structures there is an additional representation of nodes and edges): </textual></para><figure class="po-container e257 e257" xml:id="fig.drive-bars-trees"><title class="po-block e258 e258"><textual class="po-textual">Graphic representation of annotations from </textual><xref class="po-milestone e259 e259" linkend="fig.drive-anno"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref></title><mediaobject class="po-container e260 e260"><imageobject class="po-container e261 e261"><imagedata class="po-meta e262 e262" fileref="../../../vol7/graphics/Jettka01/Jettka01-004.png" format="png" width="600"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><mediaobject class="po-container e263 e263"><imageobject class="po-container e264 e264"><imagedata class="po-meta e265 e265" fileref="../../../vol7/graphics/Jettka01/Jettka01-005.png" format="png" width="600"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e266 e266"><textual class="po-textual">To avoid the above-mentioned stylistic disadvantages of the horizontal ordering of
        annotation segments (vertical ordering of annotation levels), the representation could be rotated in a 90° angle to the right and
        mirrored horizontally: </textual></para><figure class="po-container e267 e267"><title class="po-block e268 e268"><textual class="po-textual">Graphic representation of annotations from </textual><xref class="po-milestone e269 e269" linkend="fig.drive-anno"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (different
            perspective)</textual></title><mediaobject class="po-container e270 e270"><imageobject class="po-container e271 e271"><imagedata class="po-meta e272 e272" fileref="../../../vol7/graphics/Jettka01/Jettka01-006.png" format="png" width="80"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject><imageobject class="po-container e273 e273"><imagedata class="po-meta e274 e274" fileref="../../../vol7/graphics/Jettka01/Jettka01-007.png" format="png" width="80"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e275 e275"><para class="po-block e276 e276"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></para></caption></figure><para class="po-block e277 e277"><textual class="po-textual">From this state, it is only a few steps towards an adequate readability of the text and the
        consideration of line breaks from the primary data. This can be shown
        by a visualization method implemented by </textual><xref class="po-milestone e278 e278" linkend="Piez2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. On the basis of LMNL
       markup he realized the visualization of concurrent annotations by both an  
       </textual><link class="po-inline e279 e279" xlink:actuate="onRequest" xlink:href="http://www.piez.org/wendell/papers/dh2010/clix-sonnets/ledaandswan-sonnet-arcs.svg" xlink:show="new" xlink:type="simple"><textual class="po-textual">'arcs'-visualization</textual></link><textual class="po-textual"> and an interactive SVG 'map' (shown in </textual><xref class="po-milestone e280 e280" linkend="fig.piez-drive"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> below).</textual></para><figure class="po-container e281 e281" xml:id="fig.piez-drive"><title class="po-block e282 e282"><textual class="po-textual">Visualization of </textual><link class="po-inline e283 e283" xlink:actuate="onRequest" xlink:href="http://www.piez.org/wendell/papers/dh2010/clix-sonnets/xLMNL/ledaandswan.xml" xlink:show="new" xlink:type="simple"><textual class="po-textual">xLMNL instance</textual></link><textual class="po-textual"> by </textual><xref class="po-milestone e284 e284" linkend="Piez2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref></title><mediaobject class="po-container e285 e285"><imageobject class="po-container e286 e286"><imagedata class="po-meta e287 e287" fileref="../../../vol7/graphics/Jettka01/Jettka01-008.png" format="png" width="500"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e288 e288"><textual class="po-textual">The present annotation layers and element types are displayed in the left top corner of
        the graphic and their appearance can be switched on and off by mouse click. The actual
        instances of the underlying annotation are represented by two distinct illustrations: as
        bars on the left hand side and circles on the right hand side. The primary data
        text is located in between. The correspondence of segments of the primary data and annotations is
        demonstrated by interactive mouse-over effects (see the SVG provided online at </textual><link class="po-inline e289 e289" xlink:actuate="onRequest" xlink:href="http://www.piez.org/wendell/papers/dh2010/clix-sonnets/ledaandswan-map.svg" xlink:show="new" xlink:type="simple"><textual class="po-textual">Piez' website</textual></link><textual class="po-textual">). </textual></para><para class="po-block e290 e290"><textual class="po-textual">Overlaps of annotations from the individual layers can be identified in the graphic by having a look at
        non-matching borders of the bars or cutting lines of the circles. While </textual><xref class="po-milestone e291 e291" linkend="Piez2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> explicitly states that the described visualization method primarily
        takes the function of a basic demonstration, there are certain technical and theoretical
        difficulties which should be named: </textual><orderedlist class="po-table e292 e292"><listitem class="po-container e293 e293"><para class="po-block e294 e294"><textual class="po-textual">The annotation layers of </textual><link class="po-inline e295 e295" xlink:actuate="onRequest" xlink:href="http://www.piez.org/wendell/papers/dh2010/clix-sonnets/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Piez'
                examples</textual></link><textual class="po-textual"> only contain elements which span over text segments large enough to
              avoid problems with the visualization of the corresponding bars. If there were
              annotations for single words or even smaller parts of the text, the bars and circles would
              become too small for a reasonable visualization (see </textual><xref class="po-milestone e296 e296" linkend="fig.line-length-influence"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para></listitem><listitem class="po-container e297 e297"><para class="po-block e298 e298"><textual class="po-textual">The use of circles for representing annotations is only feasible as long as there
              are no very large annotated segments because the diameter could grow too big. </textual></para></listitem><listitem class="po-container e299 e299"><para class="po-block e300 e300"><textual class="po-textual">Since all of the present annotation layers span the complete textual content
              without any gaps, there might be the impression that the method is arranged very
              clearly. In fact, other configurations of annotations which leave out certain parts of
              the text could lead to a less clear picture. </textual></para></listitem></orderedlist><textual class="po-textual">
        These restrictions, however, do not decrease the overall
        usefulness of the approach to visualize overlapping structures.
      </textual></para></section><section class="po-hcontainer e301 e301" xml:id="sec.XSF2SVG"><title class="po-block e302 e302"><textual class="po-textual">Rendering SVG from XStandoff</textual></title><para class="po-block e303 e303"><textual class="po-textual">The creation of two-dimensional SVG-based visualizations for XStandoff instances is to a great extent
        inspired by the approach of </textual><xref class="po-milestone e304 e304" linkend="Piez2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> discussed in the previous section. Accordingly, the visualization
        includes a section displaying the textual primary data and a section with representations of
        annotations which in return correspond to spanned segments of the primary data. The possible
        visualization of annotations by circles was not implemented since it can be assumed that
        this method leads to problems for large annotation segments, as already stated. Piez' 
        method was extended by some additional features for user
        interactivity like the horizontal switching of annotation levels and the optional display
        of classic overlaps. The general appearance of an XStandoff instance visualized in SVG can 
        be seen in </textual><xref class="po-milestone e305 e305" linkend="fig.xsf-drive-svg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. This representation is based on the XStandoff instance given 
        in </textual><xref class="po-milestone e306 e306" linkend="fig.drive-xsf"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (an </textual><link class="po-inline e307 e307" xlink:actuate="onRequest" xlink:href="http://jettka.com/xsf/examples/svg/drive-xsf.svg" xlink:show="new" xlink:type="simple"><textual class="po-textual">online
          version of the example</textual></link><textual class="po-textual"> is available for testing the interactive features)</textual><footnote class="po-popup e308 e308"><para class="po-block e309 e309"><textual class="po-textual">Also 
            consider the </textual><link class="po-inline e310 e310" xlink:actuate="onRequest" xlink:href="http://jettka.com/xsf/examples/svg/ledaandswan-xsf.svg" xlink:show="new" xlink:type="simple"><textual class="po-textual"> online
              visualization</textual></link><textual class="po-textual"> corresponding to </textual><xref class="po-milestone e311 e311" linkend="fig.piez-drive"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para></footnote><textual class="po-textual">. </textual></para><figure class="po-container e312 e312" xml:id="fig.xsf-drive-svg"><title class="po-block e313 e313"><textual class="po-textual">Visualization of XStandoff instance</textual></title><mediaobject class="po-container e314 e314"><imageobject class="po-container e315 e315"><imagedata class="po-meta e316 e316" fileref="../../../vol7/graphics/Jettka01/Jettka01-009.png" format="png" width="400"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e317 e317"><textual class="po-textual">There are two options for the user to influence the configuration of the responsible XSLT stylesheet 
        </textual><emphasis class="po-inline e318 e318" role="ital"><textual class="po-textual">XSF2SVG.xsl</textual></emphasis><footnote class="po-popup e319 e319"><para class="po-block e320 e320"><textual class="po-textual">The stylesheet 
          </textual><emphasis class="po-inline e321 e321" role="ital"><textual class="po-textual">XSF2SVG.xsl</textual></emphasis><textual class="po-textual"> is available at 
          </textual><link class="po-inline e322 e322" xlink:actuate="onRequest" xlink:href="http://www.xstandoff.net/tk.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.xstandoff.net/tk.html</textual></link></para></footnote><textual class="po-textual"> and the 
        resulting visualization: the stylesheet parameters </textual><code class="po-atom e323 e323"><textual class="po-textual">font-size</textual></code><textual class="po-textual"> and
          </textual><code class="po-atom e324 e324"><textual class="po-textual">max-line-length</textual></code><textual class="po-textual">. Since most SVG viewers enable the user to zoom in and out of
        the graphic anyway, the parameter </textual><code class="po-atom e325 e325"><textual class="po-textual">font-size</textual></code><textual class="po-textual"> simply determines the initial
        appearance of the resulting graphic. More attention should be drawn to the parameter
          </textual><code class="po-atom e326 e326"><textual class="po-textual">max-line-length</textual></code><textual class="po-textual"> which determines the maximal length of a single line of
        primary data. This has to be considered since lines of a certain length in
        combination with relatively small annotation segments can lead to visualization difficulties. Due to the correspondence between the height of a displayed annotation
        segment and the individual characters of a line of the primary data, annotations spanning
        over only a few characters might not be visualized accurately. That is the reason why the
        value of the parameter </textual><code class="po-atom e327 e327"><textual class="po-textual">max-line-length</textual></code><textual class="po-textual"> is determined
        automatically by default in order to provide an optimal illustration of the annotation segments.
        Although generally it is up to the user to vary the maximal line length, the
        circumstance that a high value could lead to inaccurate visualizations has to be kept in
        mind. </textual><xref class="po-milestone e328 e328" linkend="fig.line-length-influence"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> demonstrates the possible difficulties by comparing a
        visualization based on a maximal line length of 15 characters (automatically computed as maximum) with one
        which is based on 40 characters per line: </textual></para><figure class="po-container e329 e329" xml:id="fig.line-length-influence"><title class="po-block e330 e330"><textual class="po-textual">Influence of parameter </textual><code class="po-atom e331 e331"><textual class="po-textual">max-line-length</textual></code><textual class="po-textual"> on readability of SVG
            visualization</textual></title><mediaobject class="po-container e332 e332"><imageobject class="po-container e333 e333"><imagedata class="po-meta e334 e334" fileref="../../../vol7/graphics/Jettka01/Jettka01-010.png" format="png" width="680"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e335 e335"><textual class="po-textual">Even in the case of a short line length of 15 characters (on the left hand side of </textual><xref class="po-milestone e336 e336" linkend="fig.line-length-influence"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) it is difficult to 
        spot the segment for the tagged comma. Certainly, there are possible solutions to this problem. For instance, an advanced
        zooming method for the individual annotations and the corresponding textual content from the
        primary data could be implemented. Furthermore, it would be possible to realize some kind of
        page-wise navigation through the primary data, which would reduce the amount of
        simultaneously displayed text. Nevertheless, the main problems for the present SVG
        visualization are manifested by its conceptual foundation. The focus on tree structures
        (with minimal possible extensions) prohibits the coverage of other phenomena than overlaps
        and discontinuous elements, e.g. repetitive structures. This circumstance could be addressed
        by an increased focus on the annotations, which will be demonstrated in the following section. </textual></para></section></section><section class="po-hcontainer e337 e337" xml:id="sec.3D"><title class="po-block e338 e338"><textual class="po-textual">Adding the third dimension</textual></title><para class="po-block e339 e339"><textual class="po-textual">A different perspective on the visualization of concurrent annotations can be taken by the consideration of possible 3D graphic rendering. The
      recent developments in native browser support for 3D graphics, especially the specification of
      HTML5 (</textual><xref class="po-milestone e340 e340" linkend="HTML5"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and its element </textual><code class="po-atom e341 e341"><textual class="po-textual">&lt;canvas&gt;</textual></code><textual class="po-textual"> allowing for
      programmatic rendering of APIs like WebGL (cf. </textual><xref class="po-milestone e342 e342" linkend="WebGL2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), promises to
      provide a fruitful development and application framework for advanced graphical representation
      of concurrent markup. By the time of writing this article, WebGL is supported by the
      currently available builds of the browsers Firefox 5 and Chrome 12</textual><footnote class="po-popup e343 e343"><para class="po-block e344 e344"><textual class="po-textual">See </textual><link class="po-inline e345 e345" xlink:actuate="onRequest" xlink:href="http://www.khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.khronos.org/webgl/wiki/Getting_a_WebGL_Implementation</textual></link><textual class="po-textual"> for further details.</textual></para></footnote><textual class="po-textual">. </textual></para><para class="po-block e346 e346"><textual class="po-textual">With X3DOM</textual><footnote class="po-popup e347 e347"><para class="po-block e348 e348"><textual class="po-textual">See </textual><link class="po-inline e349 e349" xlink:actuate="onRequest" xlink:href="http://www.x3dom.org/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.x3dom.org/</textual></link><textual class="po-textual"> for further details.</textual></para></footnote><textual class="po-textual"> and the serialization format X3D (</textual><xref class="po-milestone e350 e350" linkend="ISO-X3D"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) there
      is an appropriate solution for defining 3D graphics in XML. Accordingly, it is possible to
      implement transformation scenarios for XML-based representation formats for concurrent markup 
      similar to the one shown for XStandoff and SVG for 3D visualizations without
      leaving the XML context. Certainly, a native browser support of XSLT 2.0 would make the
      framework even more straightforward, which naturally holds for the SVG approach, too. As an alternative 
      </textual><xref class="po-milestone e351 e351" linkend="Kay2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> has shown some pretty advantages in implementing a JavaScript version of 
      Saxon, called Saxon Client Edition or Saxon-CE, bringing XSLT 2.0 to the browser.</textual></para><section class="po-hcontainer e352 e352"><title class="po-block e353 e353"><textual class="po-textual">Considerations</textual></title><para class="po-block e354 e354"><textual class="po-textual">Since 3D visualizations accompanied by interactive user navigation open up different
      perspectives than the SVG approach presented in the previous section, the basic underlying principle could focus
      on different aspects. While in the mentioned two-dimensional representation the primary data
      is in focus and minimally extended tree structures for concurrent markup can be
      represented, a three-dimensional approach could envisage the comprehensible
      visualization of annotations with an underlying graph-based model by constructing horizontally
      (along the z-axis of a 3D space) ordered trees, extended tree structures (e.g., allowing
      multiple parentage), or even full-blown graphs (including repetitive structures and cyclic paths). </textual></para><para class="po-block e355 e355"><textual class="po-textual">In order to construct comparable layers of annotations, the structures could be
      normalized with respect to the corresponding primary data. In this context two methods could
      be considered: horizontal normalization and vertical
      normalization. The horizontal normalization of the displayed structures
      refers to the horizontal position of the nodes representing annotations and could be based on
      the primary data virtually transformed into a single line. Along this line of characters the
      nodes could be located by positioning them at the center of their spanned character string
      (x-axis of </textual><xref class="po-milestone e356 e356" linkend="fig.hierarchy-layering"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><para class="po-block e357 e357"><textual class="po-textual">The vertical normalization could make use of a very similar strategy. By dividing the
      amount of spanned characters of an annotation by the total amount of characters in the
      primary data, the vertical position of nodes could be determined. Admittedly, this strategy
      could lead to confusion since it is probable that nodes of one level do not have the
      same vertical position, while nodes from different levels have the same position. Having in 
      mind that the described normalization method arranges nodes with respect to the concept of containment, 
      it would be possible to allow for different realizations of layer visualizations, that is, a containment 
      perspective and a dominance perspective.</textual></para><figure class="po-container e358 e358" xml:id="fig.hierarchy-layering"><title class="po-block e359 e359"><textual class="po-textual">Normalized positioning of nodes in 3D space</textual></title><mediaobject class="po-container e360 e360"><imageobject class="po-container e361 e361"><imagedata class="po-meta e362 e362" fileref="../../../vol7/graphics/Jettka01/Jettka01-011.png" format="png" width="400"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e363 e363"><textual class="po-textual">The graphic incorporates the normalized structures of the two annotation layers of the 
      above-mentioned XStandoff instance 
      (</textual><xref class="po-milestone e364 e364" linkend="fig.drive-xsf"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). The normalized node positions reflect 
      the concept of containment. 
      In addition to the respective XStandoff instance, the first structure can also be seen as 
      a visualization of the containment relations from the xLMNL instance (</textual><xref class="po-milestone e365 e365" linkend="fig.piez-drive"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) 
      if a virtual node is imposed which spans the complete primary data.
      Note, that the hierarchy between the nodes in the structure for an xLMNL instance is only 
      implicitly present as already shown in 
      </textual><xref class="po-milestone e366 e366" linkend="fig.lmnl"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> – in contrast to hierarchies in XStandoff instances. Thus, in general, 
      for the visualization of concurrent markup two distinct 
      visualization methods (containment vs. dominance) should be considered.</textual></para><para class="po-block e367 e367"><textual class="po-textual">XStandoff supports the differentiation of containment and dominance relations (see </textual><xref class="po-milestone e368 e368" linkend="Stührenberg2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), 
      using the start and end positions of the referenced segments for computing whether a string range virtually delimited 
      by an annotation is contained inside a second one and using the hierarchical relations between two nodes on the same 
      annotation layer to express a dominance between these nodes. Therefore, it would be reasonable to consider 
      these two possible normalization methods, allowing for the generation of both visualization methods.</textual></para><para class="po-block e369 e369"><textual class="po-textual">As a benefit from using a 3D approach it would still be possible to use tree-like visualizations as a starting point since both 
      the handling of overlapping annotations and the arrangement of different annotation layers can 
      be managed by using the z-axis.</textual></para><para class="po-block e370 e370"><textual class="po-textual">The actual realization of a 3D rendering of concurrent markup could vary in its complexity and in the 
      amount of the realized features. </textual><xref class="po-milestone e371 e371" linkend="fig.drive-my-car"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (corresponding to the XStandoff instance in
     </textual><xref class="po-milestone e372 e372" linkend="fig.drive-xsf"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) demonstrates the dominance perspective mentioned above (in opposition to the
      containment persective), in which there is a 1:1 relationship between nodes and
      annotation elements. It is based on a hierarchical organization of the annotations. </textual></para><figure class="po-container e373 e373" xml:id="fig.drive-my-car"><title class="po-block e374 e374"><textual class="po-textual">Basic visualization of referenced primary data</textual></title><mediaobject class="po-container e375 e375"><imageobject class="po-container e376 e376"><imagedata class="po-meta e377 e377" fileref="../../../vol7/graphics/Jettka01/Jettka01-012.png" format="png" width="610"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e378 e378"><textual class="po-textual">Besides these minimalistic illustrations, more complex and sophisticated graphics could be
      realized. For example, it would be possible to represent hierarchies which are based on graphs
      and include phenomena like discontinuous elements or repetitive structures. These would be 
      visualized on the basis of present containment relations, that is, nodes are normalized with regard to their 
      referenced textual content and edges reflect containment relations.</textual></para><para class="po-block e379 e379"><textual class="po-textual">Regarding the visualization of the relationship between primary data and annotations there are several 
      imaginable solutions. Firstly, it would be possible to simply display the spanned textual content of a node in tooltips 
      as indicated in </textual><xref class="po-milestone e380 e380" linkend="fig.drive-my-car"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Alternatively, it would
      be conceivable to take a 3D space like in </textual><xref class="po-milestone e381 e381" linkend="fig.hierarchy-layering"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> as a basis
      and project the textual primary data onto the back wall. By mouse-over effects the user could
      focus the spanned textual content, for example by evoking light and shadow effects which
      highlight the corresponding primary data section(s). At the same time information about the annotation could 
      be shown in a tooltip.</textual></para><figure class="po-container e382 e382" xml:id="fig.drive-my-car2"><title class="po-block e383 e383"><textual class="po-textual">Advanced primary data visualization</textual></title><mediaobject class="po-container e384 e384"><imageobject class="po-container e385 e385"><imagedata class="po-meta e386 e386" fileref="../../../vol7/graphics/Jettka01/Jettka01-013.png" format="png" width="400"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e387 e387"><textual class="po-textual">In the visualization from </textual><xref class="po-milestone e388 e388" linkend="fig.drive-my-car2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, which shows horizontally and vertically normalized trees, 
      the appearance and position of nodes depend on the presence of distinct string
      ranges for which there are annotations, that is, a single node might represent more than one
      annotation element. This should be kept in mind.</textual></para><para class="po-block e389 e389"><textual class="po-textual">Apart from the actual design there are some core features which should be realized in the
      envisaged approach: </textual></para><itemizedlist class="po-table e390 e390"><listitem class="po-container e391 e391"><para class="po-block e392 e392"><textual class="po-textual">free user navigation through the graphic, including zooming in and out;</textual></para></listitem><listitem class="po-container e393 e393"><para class="po-block e394 e394"><textual class="po-textual">draggable structures for layers (e.g. draggable as a whole along the z-axis);</textual></para></listitem><listitem class="po-container e395 e395"><para class="po-block e396 e396"><textual class="po-textual">mouse-over effects: for example information on spanned primary data (textual content &amp;
          positions), information on annotation, XPath;</textual></para></listitem><listitem class="po-container e397 e397"><para class="po-block e398 e398"><textual class="po-textual">highlighting of specific structures (distinct element relations, overlaps,
          discontinuous elements, virtual/repetitive structures);</textual></para></listitem><listitem class="po-container e399 e399"><para class="po-block e400 e400"><textual class="po-textual">the choice between displaying annotated or plain textual content for a node;</textual></para></listitem><listitem class="po-container e401 e401"><para class="po-block e402 e402"><textual class="po-textual">illustration of left and right context of focused annotation elements and
          corresponding textual content (+ specification of the range of considered context).</textual></para></listitem></itemizedlist><para class="po-block e403 e403"><textual class="po-textual">Besides these rather stylistic considerations, which focus on the informational level of
      the visualization, the conceptual advantages of a 3D approach to concurrent markup should
      have become clear. Since it is not automatically restricted to strictly hierarchical
      structures, it would be possible to display graph-based constructs like repetitive/reentrant
      structures. Furthermore, relations between individual hierarchies of graph structures 
      could be illustrated and there could be a distinction of representations of dominance and/or
      containment relations being reflected by the actual instantiation of the edges of graphs.
    </textual></para></section><section class="po-hcontainer e404 e404"><title class="po-block e405 e405"><textual class="po-textual">Prototypic 3D visualization</textual></title><para class="po-block e406 e406"><textual class="po-textual">We've implemented a first prototypic 3D visualization based on an XSLT stylesheet 
      named </textual><emphasis class="po-inline e407 e407" role="ital"><textual class="po-textual">XSF2X3D.xsl</textual></emphasis><textual class="po-textual"> that transforms
     XStandoff instances into X3D graphics like the one in </textual><xref class="po-milestone e408 e408" linkend="fig.hierarchy-layering"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. 
     Since there is no complete implementation available yet, in the remainder of this section we
     will concentrate on the things already accomplished, followed by possible future enhancements.</textual></para><para class="po-block e409 e409"><textual class="po-textual">The current implementation of a 3D visualization of concurrent hierarchies reflects the 
     considerations from the previous sections. The direct embedding of X3D into HTML5 allows for the 
     rendering of 3D visualizations in current browser versions.</textual><footnote class="po-popup e410 e410"><para class="po-block e411 e411"><textual class="po-textual">The visualization has 
     been successfully tested in Google's Chrome 12.0.742.112 and Mozilla Firefox 5.0 except for certain HTML5 
     constructs like range inputs on the latter. Support is dependent on the GPU installed – it runs fine on an 
     NVIDIA GeForce GT 330M installed in a MacBook Pro, while on other configurations Chrome had to be 
     started with the '--ignore-gpu-blacklist' startup parameter while Firefox had to be
     customized via the about:config page and enabling the parameter 'webgl.force-enabled'.</textual></para></footnote><textual class="po-textual">
     The actual appearance of the current state of the prototype is shown in </textual><xref class="po-milestone e412 e412" linkend="fig.x3d-proto"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.
    </textual></para><figure class="po-container e413 e413" xml:id="fig.x3d-proto"><title class="po-block e414 e414"><textual class="po-textual">Screenshot of the prototype (Google Chrome)</textual></title><mediaobject class="po-container e415 e415"><imageobject class="po-container e416 e416"><imagedata class="po-meta e417 e417" fileref="../../../vol7/graphics/Jettka01/Jettka01-014.png" format="png" width="600"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e418 e418"><textual class="po-textual">The main component of the visualization is a 3D space indicated as a cube which contains the 
       layers from the corresponding XStandoff instance (</textual><xref class="po-milestone e419 e419" linkend="fig.drive-xsf"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) ordered along the z-axis. 
       At present, the normalization methods described in the previous section have not been fully implemented. In a later realization of the XSLT 
       stylesheet it should be possible for the 
       user to choose the normalization method, that is, the visualization of dominance or containment 
       relations.
       </textual></para><para class="po-block e420 e420"><textual class="po-textual">The illustration given in </textual><xref class="po-milestone e421 e421" linkend="fig.x3d-proto"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> indicates most of the available user interactivity. Besides 
      free navigation like zooming in and out of the graphic and rotating it, there are certain predefined viewpoints 
      like front view and side view, which could be interesting for the user and can be taken by selection 
      from the menu item 'View'. In addition, it is possible to freely drag the hierarchies along the 
      z-axis by using the sliders, which are available for each individual layer in the info box on the 
      right hand side. An interesting feature of the graphic is the possibility to virtually merge layers 
      by either dragging them into the appropriate positions or selecting the predefined 'Merge layers' option 
      from the 'Layers' submenu. The initial configuration of the layers can be 
      reestablished by a click on 'Reset layers'. In the case of feeling lost in 3D space the 'Reload' button 
      on the left hand side restores the initial state of the graphic.</textual></para><para class="po-block e422 e422"><textual class="po-textual">Information on the present annotations in the individual layers can be gathered by hovering over the 
       nodes with the cursor evoking a tooltip, which contains basic information like element names, 
       string ranges, and XPath expressions. Other desirable features for an appropriate visualization of 
       concurrent markup, like the ones listed in the previous section, will be considered in a later version.</textual></para></section></section><section class="po-hcontainer e423 e423"><title class="po-block e424 e424"><textual class="po-textual">Conclusion and future research</textual></title><para class="po-block e425 e425"><textual class="po-textual">In this paper we demonstrated two aspects: firstly, that the formal model of XML
      instances can exceed that of trees; in fact, we have proven that it is fully capable of
      representing graphs. This, secondly, was used as a starting point to choose two XML-based representation
      formats for multiple annotations that can be converted into 2D visualizations. Although it could be shown 
      that the first visualization approach provides an adequate (though admittedly suboptimal) solution to 
      overlapping structures, it is not capable of illustrating enhanced graph-based phenomena like 
      discontinuous elements or repetitive structures. Therefore we have sketched possible 
      3D renderings of concurrent markup. A first prototypic realization demonstrated how the adding of an additional 
      dimension could in principle contribute to the appropriate visualization of concurrent markup and could serve 
      as the basis for further research. The current version will be made available under 
      the GNU Lesser General Public License (LGPL v3) at the </textual><link class="po-inline e426 e426" xlink:actuate="onRequest" xlink:href="http://www.xstandoff.net/download.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">XStandoff website</textual></link><textual class="po-textual">.
      Unresolved tasks like an improved visualization of overlapping annotations 
      and the treatment of discontinuous and repetitive structures could be tackled in a future release.
    </textual></para></section><bibliography class="po-hcontainer e427 e427"><title class="po-block e428 e428"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e429 e429" xml:id="Abiteboul2000" xreflabel="Abiteboul et al., 2000"><textual class="po-textual">Abiteboul, S., 
      Buneman, P., and Suciu, D. </textual><emphasis class="po-inline e430 e430" role="ital"><textual class="po-textual">Data on the Web: From Relations to Semistructured
        Data and XML</textual></emphasis><textual class="po-textual">. San Francisco, California: Morgan Kaufmann Publishers,
      2000.</textual></bibliomixed><bibliomixed class="po-block e431 e431" xml:id="Bauman2005" xreflabel="Bauman, 2005"><textual class="po-textual">Bauman, S. </textual><emphasis class="po-inline e432 e432" role="ital"><textual class="po-textual">TEI
        HORSEing Around</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup Languages, Montréal, Québec,
      2005.</textual></bibliomixed><bibliomixed class="po-block e433 e433" xml:id="Bird1999" xreflabel="Bird and Liberman, 1999"><textual class="po-textual">Bird, S. and Liberman, M.
        </textual><emphasis class="po-inline e434 e434" role="ital"><textual class="po-textual">Annotation graphs as a framework for multidimensional linguistic data
        analysis</textual></emphasis><textual class="po-textual">. In: Proceedings of the Workshop "Towards Standards and Tools for
      Discourse Tagging". Association for Computational Linguistics, 1999.</textual></bibliomixed><bibliomixed class="po-block e435 e435" xml:id="TEI2011" xreflabel="TEI P5 (v 1.9.1), 2011"><textual class="po-textual">Burnard, L. and Bauman, S.
      (eds.). </textual><emphasis class="po-inline e436 e436" role="ital"><textual class="po-textual">TEI P5: Guidelines for Electronic Text Encoding and
        Interchange</textual></emphasis><textual class="po-textual">. Published for the TEI Consortium by Humanities Computing Unit,
      University of Oxford, Oxford, Providence, Charlottesville, Bergen. Version 1.9.1. Last updated
      on March 5th 2011.</textual></bibliomixed><bibliomixed class="po-block e437 e437" xml:id="Carletta2003" xreflabel="Carletta et al., 2003"><textual class="po-textual">Carletta, J., Kilgour, J.,
      O’Donnel, T. J., Evert, S., and Voormann, H. </textual><emphasis class="po-inline e438 e438" role="ital"><textual class="po-textual">The NITE Object Model
        Library for Handling Structured Linguistic Annotation on Multimodal Data Sets</textual></emphasis><textual class="po-textual">.
      In: Proceedings of the EACL Workshop on Language Technology and the Semantic Web (3rd Workshop
      on NLP and XML (NLPXML-2003)), Budapest, Ungarn, 2003.</textual></bibliomixed><bibliomixed class="po-block e439 e439" xml:id="Carletta2005" xreflabel="Carletta et al., 2005"><textual class="po-textual">Carletta, J., Evert, S., Heid, U., and Kilgour, J. </textual><emphasis class="po-inline e440 e440" role="ital"><textual class="po-textual">The NITE XML Toolkit: data model and query
        language</textual></emphasis><textual class="po-textual">. In: Language Resources and Evaluation, Springer, Dordrecht, 2005,
      39.</textual></bibliomixed><bibliomixed class="po-block e441 e441" xml:id="Coombs1987" xreflabel="Coombs et al., 1987"><textual class="po-textual">Coombs, J. H., Renear, A. H.,
      and DeRose, S. J. </textual><emphasis class="po-inline e442 e442" role="ital"><textual class="po-textual">Markup Systems and the Future of Scholarly Text
        Processing</textual></emphasis><textual class="po-textual">. In: Communications of the ACM 30.11, 1987.</textual></bibliomixed><bibliomixed class="po-block e443 e443" xml:id="Cowan2006" xreflabel="Cowan et al., 2006"><textual class="po-textual">Cowan, J., Tennison J., and Piez,
      W. </textual><emphasis class="po-inline e444 e444" role="ital"><textual class="po-textual">LMNL Update</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup Languages,
      Montréal, Québec, 2006.</textual></bibliomixed><bibliomixed class="po-block e445 e445" xml:id="Cowan2010" xreflabel="Cowan, 2010"><textual class="po-textual">Cowan, J. </textual><emphasis class="po-inline e446 e446" role="ital"><textual class="po-textual">MicroXML</textual></emphasis><textual class="po-textual">. Poster presented at XML Prague 2010.</textual></bibliomixed><bibliomixed class="po-block e447 e447" xml:id="Cowan2011" xreflabel="Cowan, 2011"><textual class="po-textual">Cowan, J. </textual><emphasis class="po-inline e448 e448" role="ital"><textual class="po-textual">MicroXML</textual></emphasis><textual class="po-textual">. Editor's Draft 2011-06-30. </textual><link class="po-inline e449 e449" xlink:actuate="onRequest" xlink:href="http://www.ccil.org/~cowan/MicroXML.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.ccil.org/~cowan/MicroXML.html</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e450 e450" xml:id="DeRose2004" xreflabel="DeRose, 2004"><textual class="po-textual">DeRose, S. J. </textual><emphasis class="po-inline e451 e451" role="ital"><textual class="po-textual">Markup Overlap: A Review and a Horse</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup
      Languages, Montréal, Québec, 2004.</textual></bibliomixed><bibliomixed class="po-block e452 e452" xml:id="Dekhtyar2005" xreflabel="Dekhytar and Iacob, 2005"><textual class="po-textual">Dekhtyar, A. and Iacob,
      I. E. </textual><emphasis class="po-inline e453 e453" role="ital"><textual class="po-textual">A framework for management of concurrent XML markup</textual></emphasis><textual class="po-textual">.
      Data &amp; Knowledge Engineering, 52(2):185–208, 2005.</textual></bibliomixed><bibliomixed class="po-block e454 e454" xml:id="DiIorio2009" xreflabel="Di Iorio et al., 2009"><textual class="po-textual"> Di Iorio, A., Peroni, S.,
      and Vitali, F. </textual><emphasis class="po-inline e455 e455" role="ital"><textual class="po-textual">Towards markup support for full GODDAGs and beyond: the
        EARMARK approach</textual></emphasis><textual class="po-textual">. In: Proceedings of Balisage: The Markup Conference 2009.
      Balisage Series on Markup Technologies, vol. 3 (2009). </textual><link class="po-inline e456 e456" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol3.Peroni01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol3.Peroni01</textual></link><textual class="po-textual">.
    </textual></bibliomixed><bibliomixed class="po-block e457 e457" xml:id="Durusau2004" xreflabel="Durusau and Brook O'Donnell, 2004"><textual class="po-textual">Durusau, P. and
    Brook O'Donnell, M. </textual><emphasis class="po-inline e458 e458" role="ital"><textual class="po-textual">Tabling the Overlap Discussion</textual></emphasis><textual class="po-textual">. In:
    Proceedings of Extreme Markup Languages, Montréal, Québec, 2004.</textual></bibliomixed><bibliomixed class="po-block e459 e459" xml:id="Goecke2010" xreflabel="Goecke et al., 2010"><textual class="po-textual"> Goecke, D., Lüngen, H.,
      Metzing, D., Stührenberg, M., and Witt, A. </textual><emphasis class="po-inline e460 e460" role="ital"><textual class="po-textual">Different views on markup.
        Distinguishing Levels and Layers</textual></emphasis><textual class="po-textual">. In: Witt, A. and Metzing, D. (eds.), Linguistic
      Modeling of Information and Markup Languages. Dordrecht: Springer, 2010.</textual></bibliomixed><bibliomixed class="po-block e461 e461" xml:id="Gou2007" xreflabel="Gou and Chirkova, 2007"><textual class="po-textual">Gou, G. and Chirkova, R.
    </textual><emphasis class="po-inline e462 e462" role="ital"><textual class="po-textual">Efficiently Querying Large XML Data Repositories: A Survey</textual></emphasis><textual class="po-textual">.
    In: IEEE Transactions on Knowledge and Data Engineering 19.10, 2007.</textual></bibliomixed><bibliomixed class="po-block e463 e463" xml:id="Hopcroft1979" xreflabel="Hopcroft and Ullman, 1979"><textual class="po-textual">Hopcroft, J. E. and
      Ullman, J. D. </textual><emphasis class="po-inline e464 e464" role="ital"><textual class="po-textual">Introduction to Automata Theory, Languages, and
      Computation</textual></emphasis><textual class="po-textual">. Addison-Wesley, 1979.</textual></bibliomixed><bibliomixed class="po-block e465 e465" xml:id="HTML5" xreflabel="HTML5 WD 2011"><textual class="po-textual">
    </textual><emphasis class="po-inline e466 e466" role="ital"><textual class="po-textual">HTML5: A vocabulary and associated APIs for HTML and XHTML</textual></emphasis><textual class="po-textual">,
    W3C Working Draft 05 April 2011. World Wide Web Consortium. </textual><link class="po-inline e467 e467" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/html5/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/html5/</textual></link><textual class="po-textual">.
   </textual></bibliomixed><bibliomixed class="po-block e468 e468" xml:id="Huitfeldt2006" xreflabel="Huitfeldt and Sperberg-McQueen, 2006"><textual class="po-textual"> Huitfeldt,
      C. and Sperberg-McQueen, C. M. </textual><emphasis class="po-inline e469 e469" role="ital"><textual class="po-textual">Representing and processing of GODDAG
        structures: implementation strategies and progress report</textual></emphasis><textual class="po-textual">. In: Proceedings of
        Extreme Markup Languages, Montréal, Québec, 2006.</textual></bibliomixed><bibliomixed class="po-block e470 e470" xml:id="ISO-X3D" xreflabel="ISO/IEC 19776-1:2009"><textual class="po-textual">
    </textual><emphasis class="po-inline e471 e471" role="ital"><textual class="po-textual">ISO/IEC 19776-1:2009, Information technology – Computer graphics,
     image processing and environmental data representation – Extensible 3D (X3D) encodings
     – Part 1: Extensible Markup Language (XML) encoding</textual></emphasis><textual class="po-textual">. International
    Standard, International Organization for Standardization, 2009.</textual></bibliomixed><bibliomixed class="po-block e472 e472" xml:id="iso24610-2006" xreflabel="ISO/IEC 24610-1:2006"><textual class="po-textual">
    ISO/TC 37/SC 4. </textual><emphasis class="po-inline e473 e473" role="ital"><textual class="po-textual">ISO 24610-1:2006: Language Resource Management – Feature Structures – Part 1: Feature Structure Representation</textual></emphasis><textual class="po-textual">. International Standard, International Organization for Standardization, 2006.
   </textual></bibliomixed><bibliomixed class="po-block e474 e474" xml:id="Jagadish2004" xreflabel="Jagadish et al., 2004"><textual class="po-textual">Jagadish, H. V.,
      Lakshmanany, L. V. S., Scannapieco, M., Srivastava, D., and Wiwatwattana, N. </textual><emphasis class="po-inline e475 e475" role="ital"><textual class="po-textual">Colorful XML: One hierarchy isn’t enough</textual></emphasis><textual class="po-textual">. In: Proceedings of ACM
      SIGMOD International Conference on Management of Data (SIGMOD 2004), ACM Press, New York, NY,
      USA, 2004.</textual></bibliomixed><bibliomixed class="po-block e476 e476" xml:id="Kay2010" xreflabel="Kay, 2010"><textual class="po-textual">Kay, M., 2010. </textual><emphasis class="po-inline e477 e477" role="ital"><textual class="po-textual">A streaming XSLT
        processor</textual></emphasis><textual class="po-textual">. In: Proceedings of Balisage: The Markup Conference 2010. 
        Balisage Series on Markup Technologies, vol. 5 (2010).
     </textual><link class="po-inline e478 e478" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol5.Kay01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol5.Kay01</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e479 e479" xml:id="Kay2011" xreflabel="Kay, 2011"><textual class="po-textual">Kay, M., 2011
    </textual><emphasis class="po-inline e480 e480" role="ital"><textual class="po-textual">XSLT in the Browser</textual></emphasis><textual class="po-textual">. In: Kosek, J. (ed), XML Prague 2011 Conference Proceedings, number 2011-519 in ITI Series, pages 125–134, Prague, Czech Republic, 3 2011. Institute for Theoretical Computer Science.</textual></bibliomixed><bibliomixed class="po-block e481 e481" xml:id="LeMaitre2006" xreflabel="Le Maitre, 2006"><textual class="po-textual">Le Maitre, J. </textual><emphasis class="po-inline e482 e482" role="ital"><textual class="po-textual">Describing multistructured XML documents by means of delay nodes</textual></emphasis><textual class="po-textual">. In:
      DocEng ’06: Proceedings of the 2006 ACM symposium on Document engineering, ACM Press, New
      York, NY, USA, 2006.</textual></bibliomixed><bibliomixed class="po-block e483 e483" xml:id="Marcoux2008" xreflabel="Marcoux, 2008"><textual class="po-textual">Marcoux, Y. </textual><emphasis class="po-inline e484 e484" role="ital"><textual class="po-textual">Graph characterization of overlap-only TexMECS and other overlapping markup
        formalisms</textual></emphasis><textual class="po-textual">. In: Proceedings of Balisage: The Markup Conference 2008.
      Balisage Series on Markup Technologies, vol. 1 (2008).
     </textual><link class="po-inline e485 e485" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol1.Marcoux01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol1.Marcoux01</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e486 e486" xml:id="Marinelli2008" xreflabel="Marinelli et al., 2008"><textual class="po-textual">Marinelli, P., Vitali,
      F., and Zacchiroli, S. </textual><emphasis class="po-inline e487 e487" role="ital"><textual class="po-textual">Towards the unification of formats for
        overlapping markup</textual></emphasis><textual class="po-textual">. In: New Review of Hypermedia and Multimedia, 14(1), 2008.
      Doi: </textual><link class="po-inline e488 e488" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.1080/13614560802316145" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.1080/13614560802316145</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e489 e489" xml:id="Moeller2007" xreflabel="Møller and Schwartzbach, 2007"><textual class="po-textual">Møller, A. and
      Schwartzbach, M. I. </textual><emphasis class="po-inline e490 e490" role="ital"><textual class="po-textual">XML Graphs in Program Analysis</textual></emphasis><textual class="po-textual">. In: PEPM
      ’07: Proceedings of the 2007 ACM SIGPLAN symposium on Partial evaluation and semantics-based
      program manipulation. Nice, France, 2007.</textual></bibliomixed><bibliomixed class="po-block e491 e491" xml:id="Nicol2002a" xreflabel="Nicol, 2002a"><textual class="po-textual">Nicol, G. T. </textual><emphasis class="po-inline e492 e492" role="ital"><textual class="po-textual">Attributed Range Algebra. Extending Core Range Algebra to Arbitrary Structures</textual></emphasis><textual class="po-textual">,
      2002.</textual></bibliomixed><bibliomixed class="po-block e493 e493" xml:id="Nicol2002" xreflabel="Nicol, 2002"><textual class="po-textual">Nicol, G. T. </textual><emphasis class="po-inline e494 e494" role="ital"><textual class="po-textual">Core Range
        Algebra: Toward a Formal Model of Markup</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup
      Languages. Montréal, Québec, 2002.</textual></bibliomixed><bibliomixed class="po-block e495 e495" xml:id="Pianta2004" xreflabel="Pianta and Bentivogli, 2004"><textual class="po-textual">Pianta, E. and
      Bentivogli., L. </textual><emphasis class="po-inline e496 e496" role="ital"><textual class="po-textual">Annotating Discontinuous Structures in XML: the
        Multiword Case</textual></emphasis><textual class="po-textual">. In: Proceedings of LREC 2004 Workshop on "XML-based richly
      annotated corpora", Lisbon, Portugal, 2004.</textual></bibliomixed><bibliomixed class="po-block e497 e497" xml:id="Piez2004" xreflabel="Piez, 2004"><textual class="po-textual">Piez, W. </textual><emphasis class="po-inline e498 e498" role="ital"><textual class="po-textual">Half-steps
        toward LMNL</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup Languages. Montréal, Québec,
      2004.</textual></bibliomixed><bibliomixed class="po-block e499 e499" xml:id="Piez2010" xreflabel="Piez, 2010"><textual class="po-textual">Piez, W. </textual><emphasis class="po-inline e500 e500" role="ital"><textual class="po-textual">Towards Hermeneutic Markup: An architectural outline</textual></emphasis><textual class="po-textual">. In: Digital Humanities
      2010 Conference Abstract, London, 2010.</textual></bibliomixed><bibliomixed class="po-block e501 e501" xml:id="Polyzotis2002" xreflabel="Polyzotis and Garofalakis,  2002"><textual class="po-textual">Polyzotis, N. and
      Garofalakis, M. </textual><emphasis class="po-inline e502 e502" role="ital"><textual class="po-textual">Statistical Synopses for Graph-Structured XML
        Databases</textual></emphasis><textual class="po-textual">. In: Proceedings of the 2002 ACM SIGMOD International Conference on
      Management of Data, Madison, Wisconsin, 2002.</textual></bibliomixed><bibliomixed class="po-block e503 e503" xml:id="Rehm2010" xreflabel="Rehm et al., 2010"><textual class="po-textual"> Rehm, G., Schonefeld, O., Trippel,
      T., and Witt, A. </textual><emphasis class="po-inline e504 e504" role="ital"><textual class="po-textual">Sustainability of linguistic resources
        revisited</textual></emphasis><textual class="po-textual">. In: Proceedings of the International Symposium on XML for the Long
      Haul: Issues in the Long-term Preservation of XML. Balisage Series on Markup
      Technologies, vol. 6 (2010). </textual><link class="po-inline e505 e505" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol6.Witt01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol6.Witt01</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e506 e506" xml:id="Schmidt2001" xreflabel="Schmidt, 2001"><textual class="po-textual">Schmidt, T. </textual><emphasis class="po-inline e507 e507" role="ital"><textual class="po-textual">The transcription system EXMARaLDA: An application of the annotation graph formalism as the
        Basis of a Database of Multilingual Spoken Discourse</textual></emphasis><textual class="po-textual">. In: Proceedings of the IRCS
      Workshop On Linguistic Databases. Philadelphia: Institute for Research in Cognitive Science,
      University of Pennsylvania, 2001.</textual></bibliomixed><bibliomixed class="po-block e508 e508" xml:id="Schonefeld2007" xreflabel="Schonefeld, 2007"><textual class="po-textual">Schonefeld, O. </textual><emphasis class="po-inline e509 e509" role="ital"><textual class="po-textual">XCONCUR and XCONCUR-CL: A constraint-based approach for the validation of
        concurrent markup</textual></emphasis><textual class="po-textual">. In: Rehm, G., Witt, A., Lemnitzer, L. (eds.), Datenstrukturen
      für linguistische Ressourcen und ihre Anwendungen. Data Structures for Linguistic Resources
      and Applications. Proceedings of the Biennial GLDV Conference 2007, Tübingen, Germany, 2007.
      Gunter Narr Verlag.</textual></bibliomixed><bibliomixed class="po-block e510 e510" xml:id="Sperberg-McQueen2004" xreflabel="Sperberg-McQueen and         Huitfeldt, 2004"><textual class="po-textual">Sperberg-McQueen, C. M. and
      Huitfeldt, C. </textual><emphasis class="po-inline e511 e511" role="ital"><textual class="po-textual">GODDAG: A Data Structure for Overlapping
        Hierarchies</textual></emphasis><textual class="po-textual">. In: King, P. and Munson, E. V. (eds.), Proceedings of the 5th
      International Workshop on the Principles of Digital Document Processing (PODDP 2000), volume
      2023 of Lecture Notes in Computer Science, Springer, 2004.</textual></bibliomixed><bibliomixed class="po-block e512 e512" xml:id="Sperberg-McQueen2008" xreflabel="Sperberg-McQueen and Huitfeldt, 2008"><textual class="po-textual">Sperberg-McQueen, C. M. and Huitfeldt, C. </textual><emphasis class="po-inline e513 e513" role="ital"><textual class="po-textual">Markup Discontinued
        Discontinuity in TexMecs, Goddag structures, and rabbit/duck grammars</textual></emphasis><textual class="po-textual">. In:
      Proceedings of Balisage: The Markup Conference 2008. Balisage Series on Markup Technologies,
      vol. 1 (2008). </textual><link class="po-inline e514 e514" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol1.Sperberg-McQueen01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol1.Sperberg-McQueen01</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e515 e515" xml:id="Sperberg-McQueen2008a" xreflabel="Sperberg-McQueen and Huitfeldt, 2008a"><textual class="po-textual">Sperberg-McQueen, C. M. and Huitfeldt, C. </textual><emphasis class="po-inline e516 e516" role="ital"><textual class="po-textual">GODDAG</textual></emphasis><textual class="po-textual">. Presented
      at the Goddag workshop, Amsterdam, 1-5 December 2008.</textual></bibliomixed><bibliomixed class="po-block e517 e517" xml:id="Stegmann2009" xreflabel="Stegmann and Witt, 2009"><textual class="po-textual">Stegmann, J. and Witt, A. </textual><emphasis class="po-inline e518 e518" role="ital"><textual class="po-textual">TEI Feature Structures as a Representation Format for Multiple Annotation and Generic XML Documents</textual></emphasis><textual class="po-textual">. In: Proceedings of Balisage: The Markup Conference
   2009. Balisage Series on Markup Technologies, vol. 3 (2009).
    </textual><link class="po-inline e519 e519" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol3.Stegmann01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol3.Stegmann01</textual></link><textual class="po-textual">.
   </textual></bibliomixed><bibliomixed class="po-block e520 e520" xml:id="Stührenberg2008" xreflabel="Stührenberg and Goecke, 2008"><textual class="po-textual">Stührenberg, M.
      and Goecke, D. </textual><emphasis class="po-inline e521 e521" role="ital"><textual class="po-textual">SGF – An integrated model for multiple annotations
        and its application in a linguistic domain</textual></emphasis><textual class="po-textual">. In: Proceedings of Balisage: The
      Markup Conference 2008. Balisage Series on Markup Technologies, vol. 1 (2008). </textual><link class="po-inline e522 e522" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol1.Stuehrenberg01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol1.Stuehrenberg01</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e523 e523" xml:id="Stührenberg2009" xreflabel="Stührenberg and Jettka, 2009"><textual class="po-textual"> Stührenberg, M. and Jettka, D. </textual><emphasis class="po-inline e524 e524" role="ital"><textual class="po-textual">A toolkit for multi-dimensional markup: The development of SGF to
      XStandoff</textual></emphasis><textual class="po-textual">. In: Proceedings of Balisage: The Markup Conference
       2009. Balisage Series on Markup Technologies, vol. 3 (2009). </textual><link class="po-inline e525 e525" xlink:actuate="onRequest" xlink:href="http://dx.doi.org/10.4242/BalisageVol3.Stuhrenberg01" xlink:show="new" xlink:type="simple"><textual class="po-textual">doi:10.4242/BalisageVol3.Stuhrenberg01</textual></link><textual class="po-textual">.
    </textual></bibliomixed><bibliomixed class="po-block e526 e526" xml:id="Tennison2002" xreflabel="Tennison, 2002"><textual class="po-textual">Tennison, J. </textual><emphasis class="po-inline e527 e527" role="ital"><textual class="po-textual">Layered Markup and Annotation Language (LMNL)</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup
      Languages, Montréal, Québec, 2002.</textual></bibliomixed><bibliomixed class="po-block e528 e528" xml:id="Thompson1997" xreflabel="Thompson and McKelvie, 1997"><textual class="po-textual">Thompson, H. S. and
      McKelvie, D. </textual><emphasis class="po-inline e529 e529" role="ital"><textual class="po-textual">Hyperlink semantics for standoff markup of read-only
        documents</textual></emphasis><textual class="po-textual">. In: Proceedings of SGML Europe ’97: The next decade – Pushing
      the Envelope, Barcelona, 1997.</textual></bibliomixed><bibliomixed class="po-block e530 e530" xml:id="WebGL2011" xreflabel="WebGL, 2011"><textual class="po-textual">WebGL Specification. Version 1.0, 10
      February 2011. Khronos Group. </textual><link class="po-inline e531 e531" xlink:actuate="onRequest" xlink:href="https://www.khronos.org/registry/webgl/specs/1.0/" xlink:show="new" xlink:type="simple"><textual class="po-textual">https://www.khronos.org/registry/webgl/specs/1.0/</textual></link><textual class="po-textual">.
    </textual></bibliomixed><bibliomixed class="po-block e532 e532" xml:id="Witt2002" xreflabel="Witt, 2002"><textual class="po-textual">Witt, A. </textual><emphasis class="po-inline e533 e533" role="ital"><textual class="po-textual">Multiple
        Informationsstrukturierung mit Auszeichnungssprachen. XML-basierte Methoden und deren Nutzen
        für die Sprachtechnologie</textual></emphasis><textual class="po-textual">. Dissertation, Universität Bielefeld, 2002.</textual></bibliomixed><bibliomixed class="po-block e534 e534" xml:id="Witt2004" xreflabel="Witt, 2004"><textual class="po-textual">Witt, A. </textual><emphasis class="po-inline e535 e535" role="ital"><textual class="po-textual">Multiple
        hierarchies: New Aspects of an Old Solution</textual></emphasis><textual class="po-textual">. In: Proceedings of Extreme Markup
        Languages, Montréal, Québec, 2004.</textual></bibliomixed><bibliomixed class="po-block e536 e536" xml:id="Witt2005" xreflabel="Witt, et al., 2005"><textual class="po-textual">Witt, A., Goecke, D., Sasaki, F., and Lüngen, H. </textual><emphasis class="po-inline e537 e537" role="ital"><textual class="po-textual">Unification of XML Documents with Concurrent Markup</textual></emphasis><textual class="po-textual">. Literary and Linguistic Computing, 20(1):103–116, 2005.</textual></bibliomixed></bibliography></article></classedDocument>