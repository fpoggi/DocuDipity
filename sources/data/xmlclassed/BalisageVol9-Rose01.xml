<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3"><title class="po-block e1 e1"><textual class="po-textual">ACS Publications — Ensuring XML Quality</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">International Symposium on Quality Assurance and Quality Control in XML</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 6, 2012</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">The benefits of using XML in publishing are widely known but those benefits are
                more difficult to attain if the quality of the XML produced by the process is not
                consistently at a very high level. This case study outlines the steps that the </textual><link class="po-inline e8 e8" xlink:actuate="onRequest" xlink:href="http://www.acs.org/" xlink:show="new" xlink:type="simple"><textual class="po-textual">American Chemical
                    Society</textual></link><textual class="po-textual"> (“ACS”) has taken both in-house and in collaboration with the
                vendor to which we have outsourced portions of our publication workflow. In addition
                to producing predictable XML, these efforts have also improved our publication
                time.</textual></para></abstract><author class="po-record e9 e9"><personname class="po-record e10 e10"><firstname class="po-field e11 e11"><textual class="po-textual">Tamara</textual></firstname><surname class="po-field e12 e12"><textual class="po-textual">Stoker</textual></surname></personname><personblurb class="po-container e13 e13"><para class="po-block e14 e14"><textual class="po-textual">Tami Stoker has served as the Vendor Relations Manager at the American
                    Chemical Society for the past four years. She became a Certified Quality Analyst
                    early in her career and worked in the quality management area for many years,
                    specializing in business process improvement. Tami resides in Worthington,
                    OH.</textual></para></personblurb><affiliation class="po-record e15 e15"><jobtitle class="po-field e16 e16"><textual class="po-textual">Vendor Relations Manager</textual></jobtitle><orgname class="po-block e17 e17"><textual class="po-textual">American Chemical Society</textual></orgname></affiliation><email class="po-field e18 e18"><textual class="po-textual">tstoker@acs.org</textual></email></author><author class="po-record e19 e19"><personname class="po-record e20 e20"><firstname class="po-field e21 e21"><textual class="po-textual">Keith</textual></firstname><surname class="po-field e22 e22"><textual class="po-textual">Rose</textual></surname></personname><personblurb class="po-container e23 e23"><para class="po-block e24 e24"><textual class="po-textual">Keith Rose is a Lead Programmer Analyst at the American Chemical Society, with
                    over 25 years of IT experience. He has spent the last five years in the ACS
                    Publications division working on XML-related projects for both journals and
                    books. Keith resides in Hilliard, OH.</textual></para></personblurb><affiliation class="po-record e25 e25"><jobtitle class="po-field e26 e26"><textual class="po-textual">Lead Programmer Analyst</textual></jobtitle><orgname class="po-block e27 e27"><textual class="po-textual">American Chemical Society</textual></orgname></affiliation><email class="po-field e28 e28"><textual class="po-textual">krose@acs.org</textual></email></author><legalnotice class="po-container e29 e29"><para class="po-block e30 e30"><textual class="po-textual">Copyright © 2012 American Chemical Society</textual></para></legalnotice></info><section class="po-hcontainer e31 e31"><title class="po-block e32 e32"><textual class="po-textual">Introduction to ACS</textual></title><para class="po-block e33 e33"><textual class="po-textual">ACS is a professional membership organization, chartered by the U.S. Congress in 1876,
            representing over 164,000 professionals at all degree levels and in all fields of
            chemistry and sciences that involve chemistry. Primary ACS divisions include Membership
            and Programs; </textual><link class="po-inline e34 e34" xlink:actuate="onRequest" xlink:href="http://www.cas.org/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Chemical
                Abstracts Service</textual></link><textual class="po-textual">, a secondary publisher of chemical-related data,
            information abstracts, and databases; and the Publications Division (“</textual><link class="po-inline e35 e35" xlink:actuate="onRequest" xlink:href="http://pubs.acs.org/" xlink:show="new" xlink:type="simple"><textual class="po-textual">ACS Pubs</textual></link><textual class="po-textual">”).</textual></para></section><section class="po-hcontainer e36 e36"><title class="po-block e37 e37"><textual class="po-textual">The ACS Manuscript Workflow</textual></title><para class="po-block e38 e38"><textual class="po-textual">The Journal and Book publishing units of ACS Pubs produces over forty STM
            peer-reviewed journals focused on various disciplines of chemistry. In 2012, ACS Pubs
            expects to publish about 325,000 pages in approximately 40,000 articles
            (manuscripts).</textual></para><para class="po-block e39 e39"><textual class="po-textual">Chemists from around the world document their research results and submit manuscripts
            to ACS of their findings for peer review and publication. Once a manuscript has been
            reviewed and accepted for publication, ACS receives it in the document format submitted
            by the author (Microsoft Word or LaTeX, for example). ACS has standardized on XML as the
            internal manuscript format and uses an “XML-first” approach to facilitate the production
            and publication processes. Therefore, before any processing occurs, the author’s
            original document is sent to a vendor for conversion into XML, using a DTD that is a
            customized version of the </textual><link class="po-inline e40 e40" xlink:actuate="onRequest" xlink:href="http://dtd.nlm.nih.gov/" xlink:show="new" xlink:type="simple"><textual class="po-textual">NLM article DTD</textual></link><textual class="po-textual">. (See </textual><xref class="po-milestone e41 e41" linkend="ACS-Tagsets"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.)</textual></para><para class="po-block e42 e42"><textual class="po-textual">After the manuscript is converted to XML, ACS staff that have Chemistry or related
            scientific degrees (“Technical Editors”) prepare it for publication, editing the paper
            for clarity and technical content (see </textual><xref class="po-milestone e43 e43" linkend="ACS-Style-Guide"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and ensuring
            proper markup of content. A proof version of the manuscript is sent to the author (in
            PDF format) for their review and the author’s corrections are applied before it is
            published on the </textual><link class="po-inline e44 e44" xlink:actuate="onRequest" xlink:href="http://pubs.acs.org/" xlink:show="new" xlink:type="simple"><textual class="po-textual">ACS
                Publications web site</textual></link><textual class="po-textual"> and also in print. The composition process of journal
            manuscripts (proof, web, and print PDFs) has recently been automated (see </textual><xref class="po-milestone e45 e45" linkend="ACS-Auto-Comp"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), with great success. The high-level of quality of the XML
            input to the composition engine is critical to the successful composition results.</textual></para><para class="po-block e46 e46"><textual class="po-textual">This is a simplified narrative of our workflow (see </textual><xref class="po-milestone e47 e47" linkend="fig-acs-workflow"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). The actual workflow is, of course, much more involved.</textual></para><figure class="po-container e48 e48" xml:id="fig-acs-workflow"><title class="po-block e49 e49"><textual class="po-textual">ACS XML Workflow Overview</textual></title><mediaobject class="po-container e50 e50"><imageobject class="po-container e51 e51"><imagedata class="po-meta e52 e52" fileref="../../../vol9/graphics/Rose01/Rose01-001.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e53 e53"><para class="po-block e54 e54"><textual class="po-textual">High-level overview of the ACS manuscript workflow.</textual></para></caption></figure></section><section class="po-hcontainer e55 e55"><title class="po-block e56 e56"><textual class="po-textual">Why XML Quality is Critical</textual></title><para class="po-block e57 e57"><textual class="po-textual">All of the processing that takes place on the text of each manuscript is performed
            after its conversion into XML. Technical Editors use a customized XML editor when they
            edit the manuscript, and all of the tools which automate the processing of manuscripts
            expect and require XML input. The quality of this XML is critical to the successful
            completion of each of these tools. A manuscript in XML format must be properly tagged so
            that it can be parsed. This is easily checked using the DTD. If all required document
            elements are present in the XML, and the contents of each of the document elements are
            valid within their context, then a manuscript has an acceptable quality level for our
            automation tools. As an example, our tools cannot understand a Publication Year with a
            value of “next year or maybe the year after”. Documents with invalid tagging or content
            require manual intervention to be processed for publication. Given the sheer quantity of
            XML processed daily at ACS, manual intervention must be a very tiny exception to keep
            production costs down and time-to-publication intervals competitive.</textual></para><para class="po-block e58 e58"><textual class="po-textual">To enhance the quality of the XML tagging and contents of each manuscript, validation
            tools and tools that perform automatic content and tagging changes (“edits”) were
            developed internally by ACS staff. The validation tools are run before the initial
            version of the XML content is accepted from the vendor, and again between most workflow
            stages. The automatic content and tagging edits are performed before and after the
            Technical Editors edit the manuscript.</textual></para></section><section class="po-hcontainer e59 e59"><title class="po-block e60 e60"><textual class="po-textual">Validations (Quality Enforced)</textual></title><para class="po-block e61 e61"><textual class="po-textual">There are hundreds of custom validations that are performed on each manuscript.
            Validations are typically executed as a manuscript transitions from one workflow stage
            to the next. Individual validation checks are collected in logical groups, and those
            logical groups of validations are executed by controllers that focus on the workflow
            stage of the manuscript.</textual></para><para class="po-block e62 e62"><textual class="po-textual">Some validation requests occur independently of workflow transitions. The vendor who
            converts the manuscript from the author’s original document format into XML executes
            some of our content validations before sending us the converted manuscript. Technical
            Editors may execute our validations directly within their XML editor (Arbortext) to
            check the validity of a manuscript before they attempt to promote it. Because validation
            requests come from a variety of sources, a web service was developed as a common entry
            point for execution of validations (</textual><xref class="po-milestone e63 e63" linkend="fig-acs-validations"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><figure class="po-container e64 e64" xml:id="fig-acs-validations"><title class="po-block e65 e65"><textual class="po-textual">ACS Manuscript XML Validation Architecture</textual></title><mediaobject class="po-container e66 e66"><imageobject class="po-container e67 e67"><imagedata class="po-meta e68 e68" fileref="../../../vol9/graphics/Rose01/Rose01-002.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e69 e69"><para class="po-block e70 e70"><textual class="po-textual">Validations may be called “on demand” by individual users or by workflow
                    tools. The particular Validation Controller is specified as a parameter to the
                    web service request.</textual></para></caption></figure><para class="po-block e71 e71"><textual class="po-textual">Validation violations, which indicate invalid XML tagging or invalid content, are
            categorized into three severities: warnings, errors, and fatal errors. Severe validation
            violations may prevent a manuscript from proceeding to the next workflow stage, which
            would require manual intervention. This is dependent on the particular stage, however.
            Violations that would halt processing at one point might be tolerated at a different
            point, particularly if a following stage of processing will involve staff interaction
            with the manuscript.</textual></para><para class="po-block e72 e72"><textual class="po-textual">When a violation is detected, details are enclosed in a “processing-comment” element
            that contains a custom message for the violation. See the example: </textual><xref class="po-milestone e73 e73" linkend="processing-comment"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. That element is inserted into the manuscript XML. If
            possible, it is inserted close to the location where the violation occurred. If the
            violation is not location-specific within the XML, the message element is placed close
            to the top of the XML document. Validation violation messages are interpreted by staff
            who take the appropriate corrective action. Violation messages are removed automatically
            when a manuscript “passes” validations and moves along in the workflow.</textual></para><para class="po-block e74 e74"><textual class="po-textual">If a severe violation exists in the new converted manuscript XML that is sent from the
            vendor, it is automatically rejected back to the vendor. Both the vendor and ACS receive
            notifications of the rejections so that we can track any chronic issues and also ensure
            that the violations are corrected and the manuscript is resent.</textual></para><para class="po-block e75 e75"><textual class="po-textual">ACS utilizes Documentum, a content management system, to store and process
            manuscripts. Documentum includes a Java API for custom application integration. ACS
            content validations are implemented using a few different technologies, including Java
            and Groovy. Implementing validations in Java and Groovy allow for validation of the
            manuscript content against data stored in the Documentum database, and the behavior of
            some validations change in subtle ways depending on manuscript attributes that are
            stored in the Documentum database. Validations written in Groovy may be developed
            quickly and deployed into production without incurring down-time.</textual></para><para class="po-block e76 e76"><textual class="po-textual">The framework and validations that were implemented using Groovy were inspired by some
            of the main concepts of </textual><link class="po-inline e77 e77" xlink:actuate="onRequest" xlink:href="http://www.schematron.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Schematron</textual></link><textual class="po-textual">,
            such as the use of </textual><link class="po-inline e78 e78" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xpath/" xlink:show="new" xlink:type="simple"><textual class="po-textual">XPath</textual></link><textual class="po-textual">
            expressions and assertion style programming. Individual validations that had no
            dependency on information stored in the content management system could have been
            implemented using Schematron. However, many validations did have that dependency, and
            there was a desire for a consistent approach in validation code.</textual></para><section class="po-hcontainer e79 e79"><title class="po-block e80 e80"><textual class="po-textual">Example 1</textual></title><para class="po-block e81 e81"><textual class="po-textual">When a manuscript is ready for publication in an issue of a journal, a check is
                performed to ensure that </textual><code class="po-atom e82 e82"><textual class="po-textual">//date[@date-type=’issue-pub’]</textual></code><textual class="po-textual"> is present in
                the content XML. If it is present, it is also checked to ensure that it is a valid
                date. If it is present and contains a valid date, then it is checked to ensure that
                it matches the “issue publication date” value stored in the Documentum database for
                that particular manuscript.</textual></para></section><section class="po-hcontainer e83 e83"><title class="po-block e84 e84"><textual class="po-textual">Example 2</textual></title><para class="po-block e85 e85"><textual class="po-textual">We validate that the element </textual><code class="po-atom e86 e86"><textual class="po-textual">&lt;journal-id&gt;</textual></code><textual class="po-textual"> is present as a child
                of the </textual><code class="po-atom e87 e87"><textual class="po-textual">&lt;journal-meta&gt;</textual></code><textual class="po-textual"> section (which must also be present), and
                that the </textual><code class="po-atom e88 e88"><textual class="po-textual">&lt;journal-id&gt;</textual></code><textual class="po-textual"> contents must be two characters in length.
                The XPath expression that finds elements matching that condition is
                    </textual><code class="po-atom e89 e89"><textual class="po-textual">//journal-meta/journal-id[string-length(.)=2]</textual></code><textual class="po-textual">. If there are no
                elements that match that expression then a violation message is inserted into the
                tagging and the overall validations result is a fatal error.</textual></para><section class="po-hcontainer e90 e90"><title class="po-block e91 e91"><textual class="po-textual">Validation code (Groovy)</textual></title><programlisting class="po-block e92 e92" xml:space="preserve"><textual class="po-textual">
xmlTestXPath(vid: 'journal-id',
        desc:'Journal Id must be present and be 2 characters long',
        context:’//journal-meta/journal-id’, 
        condition:'string-length(.)=2',
        messageId:'exact-string-length',
        severity:ACSPubsMessage.FATAL[…]
                </textual></programlisting></section><section class="po-hcontainer e93 e93" xml:id="processing-comment" xreflabel="Violation Message"><title class="po-block e94 e94"><textual class="po-textual">Violation message</textual></title><programlisting class="po-block e95 e95" xml:space="preserve"><textual class="po-textual">
&lt;tep-common:processing-comment category="Validation" error-code="exact-string-length"
type="fatal"&gt;Journal Id must be 2 characters long.&lt;/tep-common:processing-comment&gt;</textual></programlisting></section></section></section><section class="po-hcontainer e96 e96"><title class="po-block e97 e97"><textual class="po-textual">Automatic Edits (“Hands-Free” Quality)</textual></title><para class="po-block e98 e98"><textual class="po-textual">At two different times during the processing of a manuscript, content and tagging
            changes are automatically applied to the XML document. The first time (“pre-edit”)
            occurs between the stages when the manuscript is converted into XML and when the
            Technical Editor edits it.</textual></para><para class="po-block e99 e99"><textual class="po-textual">Pre-edits are commonly applied content corrections and tagging enhancements. For
            example, commonly misspelled (mispelled?) words are automatically corrected. Another
            simple example is that </textual><code class="po-atom e100 e100"><textual class="po-textual">&lt;title-group&gt;</textual></code><textual class="po-textual"> elements are added if they are
            missing. </textual></para><para class="po-block e101 e101"><textual class="po-textual">The goal of these automatic edits is twofold: to reduce the amount of time Technical
            Editors spend manually making common changes, and to increase quality by lowering the
            chances that instances of errors slip through the manual editing process. (Humans won’t
            catch every mispelled word!)</textual></para><para class="po-block e102 e102"><textual class="po-textual">Automatic edits are also applied after the Technical Editors complete the manual
            editing process. These edits (“post-edits”) do not typically alter the element contents,
            but target the element tagging. Tagging is normalized (extraneous attributes removed,
            etc.) and the manuscript is prepared for future stages, such as web and print
            publication.</textual></para><para class="po-block e103 e103"><textual class="po-textual">The automatic edit process itself is complex, and is accomplished using a combination
            of technologies. Many edits are implemented in Java after the XML document has been
            parsed. Some edits are implemented using XSL templates. We have developed thousands of
            individual edits, and continue to add them to our collection.</textual></para><section class="po-hcontainer e104 e104"><title class="po-block e105 e105"><textual class="po-textual">Example 1</textual></title><para class="po-block e106 e106"><textual class="po-textual">Label and head elements whose content is enclosed entirely inside certain
                formatting tagging will have that formatting tagging stripped. This is implemented
                in Java instead of XSL so that the list of formatting tagging can be supplied in
                dynamic properties. </textual></para><para class="po-block e107 e107"><textual class="po-textual">Before:
                </textual><programlisting class="po-block e108 e108" xml:space="preserve"><textual class="po-textual">&lt;label&gt;&lt;bold&gt;Label 1&lt;/bold&gt;&lt;/label&gt;</textual></programlisting><textual class="po-textual">
            </textual></para><para class="po-block e109 e109"><textual class="po-textual">After:
                </textual><programlisting class="po-block e110 e110" xml:space="preserve"><textual class="po-textual">&lt;label&gt;Label 1&lt;/label&gt;</textual></programlisting><textual class="po-textual">
            </textual></para></section><section class="po-hcontainer e111 e111"><title class="po-block e112 e112"><textual class="po-textual">Example 2</textual></title><para class="po-block e113 e113"><textual class="po-textual">This code adds a processing comment to the document XML that contains the page
                count of the manuscript. This is one example of an addition to the content XML that
                requires retrieval of information from the Documentum database.</textual></para><programlisting class="po-block e114 e114" xml:space="preserve"><textual class="po-textual">
/**
 * Add a processing comment to the document to let the TechEd know what
 * the current DOTS page count is for the document.
 * 
 * @param doc ACS Journal DOM Document
 */
public void addPageCountProcessingComment(Document doc)
{
    try {

        String mscNo =
            acsJournalUtil.xpathFindString(doc, ACSJournalUtil.XPATH_DOCUMENT_ID_OLD_9);

        String pageCount =
            dotsMetaDataService.getAttribute(mscNo, DOTSMetaDataService.PAGECNT_TAG);

        int pageCountNum = Integer.parseInt(pageCount);

        if (pageCountNum == 0) {
            acsJournalUtil.addProcessingComment(doc, null,
                TEPMessageService.getInstance().
                    getMessageForId(STANDARD_EDITS_PAGE_COUNT_ZERO, pageCount));
        } else {
            acsJournalUtil.addProcessingComment(doc, null,
                TEPMessageService.getInstance().
                    getMessageForId(STANDARD_EDITS_PAGE_COUNT, pageCount));
        }
    } catch (Exception e) {
        logger.warn("Unable to determine DOTS page count.", e);
        acsJournalUtil.addProcessingComment(doc, null,
            TEPMessageService.getInstance().
                getMessageForId(STANDARD_EDITS_PAGE_COUNT_UNAVAIL));
    }
}
            </textual></programlisting></section></section><section class="po-hcontainer e115 e115"><title class="po-block e116 e116"><textual class="po-textual">Vendor XML Quality</textual></title><para class="po-block e117 e117"><textual class="po-textual">ACS outsourced the conversion and composition of its journals approximately five years
            ago, creating the need for someone to manage vendor relations. Initially, the job
            position didn’t include quality metrics experience but over time, metrics experience
            proved necessary. Ensuring vendor quality ultimately was implemented in three ways:
            vendor scoring, vendor validations, and vendor manual rejections.</textual></para><section class="po-hcontainer e118 e118"><title class="po-block e119 e119"><textual class="po-textual">Vendor Scoring</textual></title><para class="po-block e120 e120"><textual class="po-textual">Measuring the quality of the XML was the first problem undertaken. XML standards,
                or conventions, had already been established with the vendor. For example:</textual></para><blockquote class="po-container e121 e121"><para class="po-block e122 e122"><textual class="po-textual">For elements that allow text, any deterministic leading and trailing white
                    space within element content should be avoided or moved outside of the tag. […]
                    the pink spaces below should be omitted, and the blue spaces should be relocated
                    into the adjacent text:</textual></para><mediaobject class="po-container e123 e123"><imageobject class="po-container e124 e124"><imagedata class="po-meta e125 e125" fileref="../../../vol9/graphics/Rose01/Rose01-003.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></blockquote><para class="po-block e126 e126"><textual class="po-textual">With a few exceptions, this largely boiled down to following the author submitted
                authority document. After the source document is converted to XML and returned to
                ACS, Technical Editors are responsible for editing the paper according to
                established standards. After consideration of many options, it was determined that
                the “goodness” of a paper was tied to the time it took the Technical Editor to fix
                any mistakes that happened in conversion; time that was very costly. Moreover, this
                added the element of the criticality of an error, rather than just the number of
                errors. A small team of ACS staff members worked to devise the Conversion Scorecard
                where the Technical Editor could record the minutes they took to fix problems while
                they were editing the manuscript. This process allowed ACS to integrate scoring into
                the existing editing process to make the data collection process as efficient as
                possible. Following is a sample section from the Conversion Scorecard.</textual></para><table class="po-container e127 e127" pgwide="1"><thead class="po-container e128 e128"><tr class="po-table e129 e129"><td align="center" class="po-block e130 e130" colspan="2"><emphasis class="po-inline e131 e131" role="bold"><textual class="po-textual">CONVERSION
                                SCORECARD</textual></emphasis></td></tr><tr class="po-table e132 e132"><td class="po-block e133 e133"><emphasis class="po-inline e134 e134" role="bold"><textual class="po-textual">Equations</textual></emphasis></td><td align="center" class="po-block e135 e135"><emphasis class="po-inline e136 e136" role="bold"><textual class="po-textual">Score</textual></emphasis></td></tr></thead><tbody class="po-table e137 e137"><tr class="po-table e138 e138"><td class="po-block e139 e139"><textual class="po-textual">Minutes to fix equations that were </textual><emphasis class="po-inline e140 e140" role="bold"><textual class="po-textual">not</textual></emphasis><textual class="po-textual">
                            keyed that should have been?</textual></td><td align="center" class="po-block e141 e141"><textual class="po-textual">1</textual></td></tr><tr class="po-table e142 e142"><td class="po-block e143 e143"><textual class="po-textual">Minutes to fix equations that were </textual><emphasis class="po-inline e144 e144" role="bold"><textual class="po-textual">not</textual></emphasis><textual class="po-textual">
                            MathML that should have been?</textual></td><td align="center" class="po-block e145 e145"><textual class="po-textual">0</textual></td></tr><tr class="po-table e146 e146"><td class="po-block e147 e147"><textual class="po-textual">Minutes to make the paper match author copy (beyond 2 items above)</textual></td><td align="center" class="po-block e148 e148"><textual class="po-textual">0</textual></td></tr><tr class="po-table e149 e149"><td align="right" class="po-block e150 e150"><emphasis class="po-inline e151 e151" role="bold"><textual class="po-textual">Equation Subtotal</textual></emphasis></td><td align="center" class="po-block e152 e152"><emphasis class="po-inline e153 e153" role="bold"><textual class="po-textual">1</textual></emphasis></td></tr></tbody></table><para class="po-block e154 e154"><textual class="po-textual">The scoring methodology having been determined, the next issue was how to apply
                that to the approximately 40,000 manuscripts received by ACS for publication in a
                year in an efficient yet statistically valid manner. One important factor was that
                even with the scorecard, scoring was somewhat complicated. For the scores to be
                valid, the same criteria had to be applied in deciding if something was an issue.
                Also, two Technical Editors had to apply very similar resources to fix the same
                issue in two different papers. In order to maintain this consistency, a small team
                of scorers was selected who could be trained to use the same standards and then
                monitored to ensure that they were recording time in a similar manner. Six of our
                most effective and efficient Technical Editors were selected, trained, and then
                evaluated to ensure their scoring was uniform by having them independently score the
                same set of manuscripts.</textual></para><para class="po-block e155 e155"><textual class="po-textual">With the small scoring team in place, the next determination was to find the
                smallest sample of manuscripts that could be scored and still give a very high
                degree of confidence that the sample was representative of the entire manuscript
                population. A sampling technique which was developed in-house by a Quality
                Management team in another division of ACS was used. That team started with standard
                sampling protocols taught in any statistical course, then created and tested a
                technique used to prove that scoring a relatively small number of items from a huge
                population was statistically representative of the entire population. The technique
                consisted of randomly selecting approximately 10% of the manuscripts submitted in a
                month, or 60 manuscripts. From that group of 60 manuscripts, 40 manuscripts were
                randomly selected. From that sub-sample of 40, 20 manuscripts were randomly
                selected. That sub-sub sample was then scored. The overall standard mean score and
                the standard deviation for the sub-sub sample was determined. Then the remaining 20
                manuscripts were scored (those not included in the first sub-sub sample). The
                overall standard mean and standard deviation for this set was then determined. In
                looking at the standard deviation from the two sets and the mean scores, it was
                determined with a confidence of 90% (which is standard for non-life threatening
                applications), that the mean score for a random sample of 20 manuscripts was within
                11% of the score for the entire population. The width of this interval was deemed
                acceptable.</textual></para><para class="po-block e156 e156"><textual class="po-textual">Given this number, open source “random selector” code was used to select 240
                numbers from 1-40,000, which was 20 manuscripts per month for 12 months. The 240
                random numbers were entered in a table. When a manuscript was submitted to the
                workflow with a sequential number that matched a number in the table, that
                manuscript was flagged. For example, if 1253 was a number in the table, when the
                1253rd manuscript of the year was submitted, then a scoring attribute for that
                manuscript was updated in our workflow system and an email was sent to the scoring
                team telling them the manuscript was ready to be scored as soon as it returned from
                conversion.</textual></para><para class="po-block e157 e157"><textual class="po-textual">When ACS first started scoring, the average number of minutes to fix a manuscript
                was 9.5. Today the number is between 1 and 2 minutes per manuscript. This
                significant improvement was achieved by a collaborative effort with the vendor to
                focus on the same issues and apply continuous improvement to those issues. This
                conversion score is reported weekly both internally and to the vendor. One of the
                real advantages of the reporting is that it is immediately obvious if there has been
                a change that affects the quality.</textual></para></section><section class="po-hcontainer e158 e158"><title class="po-block e159 e159"><textual class="po-textual">Vendor Validations</textual></title><para class="po-block e160 e160"><textual class="po-textual">Another way the quality of our converted XML is ensured is by allowing the vendor
                to call our web service to run the ACS validations program. As mentioned earlier,
                ACS has a robust validations system that is applied to manuscripts at many points
                throughout the production workflow, including when manuscripts are returned by the
                vendor. Rather than waiting until a manuscript is returned to run those validations,
                ACS opened up the validations via web service to the vendor, significantly reducing
                the number of manuscripts ever sent to ACS which have validation errors. This also
                helped the vendor to meet turnaround time SLOs.</textual></para><para class="po-block e161 e161"><textual class="po-textual">The validations check against our DTD but also against established conversion
                conventions. Following is an example of a validations error the vendor might see
                upon executing the validations service:</textual></para><blockquote class="po-container e162 e162"><para class="po-block e163 e163"><textual class="po-textual">Validation failures were detected for np200906s</textual></para><para class="po-block e164 e164"><textual class="po-textual">Journal: np</textual></para><para class="po-block e165 e165"><textual class="po-textual">Msc Type: r-Review</textual></para><para class="po-block e166 e166"><textual class="po-textual">FATAL: The content of element type "metadata" must match
                    "(journal-meta,document-meta,processing-meta?)".</textual></para></blockquote></section><section class="po-hcontainer e167 e167"><title class="po-block e168 e168"><textual class="po-textual">Vendor Manual rejections</textual></title><para class="po-block e169 e169"><textual class="po-textual">Because ACS edits XML that is relatively complex, understandably some errors that
                are difficult to catch with validations are introduced during technical editing.
                These errors often interfere with good composition. These mistakes were originally
                addressed via emails between ACS and the vendor. This caused problems when emails
                were lost or sent to out-of-office staff. There was also no enduring record of the
                problems being addressed. Working with the vendor, a way was implemented to reject
                incorrect tagging that affected composition. For example, a table attribute might
                have been set to be anchored instead of as float which resulted in poor rendering in
                the composed output. Code was installed at ACS and also at the vendor’s site which
                allowed the vendor to reject a composition request with a meaningful error code. Now
                when the ACS workflow system receives an error code, four things happen:</textual></para><orderedlist class="po-table e170 e170"><listitem class="po-container e171 e171"><para class="po-block e172 e172"><textual class="po-textual">the specific instructions that the vendor entered at the time of the
                        rejection is entered in the ACS workflow system as a note attached to the
                        manuscript. For example, “Figure 1 appears in the document but is not
                        cited.”</textual></para></listitem><listitem class="po-container e173 e173"><para class="po-block e174 e174"><textual class="po-textual">the code is looked up in a table and general instructions present in the
                        table for that error code are found</textual></para></listitem><listitem class="po-container e175 e175"><para class="po-block e176 e176"><textual class="po-textual">these instructions, both specific and general, become the text of an email
                        sent to the appropriate ACS staff member</textual></para></listitem><listitem class="po-container e177 e177"><para class="po-block e178 e178"><textual class="po-textual">the manuscript is auto-routed in the workflow system to the appropriate
                        stage to be corrected by either a Graphics Editor, a Production Assistant,
                        or a Technical Editor, depending on the error to be corrected</textual></para></listitem></orderedlist><para class="po-block e179 e179"><textual class="po-textual">Not only did this improve publication time but it improved the quality of the work
                done by ACS staff by giving immediate feedback on errors committed. The rejections
                are also parsed periodically to help guide other efforts to improve throughput and
                quality.</textual></para></section></section><section class="po-hcontainer e180 e180"><title class="po-block e181 e181"><textual class="po-textual">Conclusion</textual></title><para class="po-block e182 e182"><textual class="po-textual">The steps taken by ACS to measure, auto-correct, and validate our XML have made a
            positive difference in all aspects of the workflow. Technology is evolving daily and to
            think that efforts to ensure XML quality are complete is to already be behind. For
            example, we have made over 30 changes to our validations and pre-edits alone since the
            beginning of the year. ACS is committed to continually monitoring and improving the
            processes we have put in place to ensure the quality of our XML.</textual></para></section><bibliography class="po-hcontainer e183 e183"><title class="po-block e184 e184"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e185 e185" xml:id="ACS-Tagsets" xreflabel="ACS Tagsets"><textual class="po-textual">O'Brien, Dan and Fisher, Jeff.
                </textual><emphasis class="po-inline e186 e186" role="ital"><textual class="po-textual">“Journals and Magazines and Books, Oh My! A Look at ACS' Use
                of NLM Tagsets.”</textual></emphasis><textual class="po-textual"> JATS-Con Proceedings 2010. </textual><link class="po-inline e187 e187" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.ncbi.nlm.nih.gov/books/NBK47083/</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e188 e188" xml:id="ACS-Style-Guide" xreflabel="ACS Style Guide"><textual class="po-textual">Edited by Coghill, Anne M.
            and Garson, Lorrin R. </textual><emphasis class="po-inline e189 e189" role="ital"><textual class="po-textual">“The ACS Style Guide: Effective
                Communication of Scientific Information, 3rd ed.”</textual></emphasis><textual class="po-textual"> 2006. ISBN:
            978-0-8412-3999-9 </textual><link class="po-inline e190 e190" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://pubs.acs.org/page/books/styleguide/index.html</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e191 e191" xml:id="ACS-Auto-Comp" xreflabel="ACS Automated Composition"><textual class="po-textual">Needham, Diane.
                </textual><emphasis class="po-inline e192 e192" role="ital"><textual class="po-textual">“True Automated Page Composition Process.”</textual></emphasis><textual class="po-textual">
            Presentation given at </textual><emphasis class="po-inline e193 e193" role="ital"><textual class="po-textual">STM Innovations Seminar U.S. – Reinventing
                Innovation</textual></emphasis><textual class="po-textual">, 2012. </textual><link class="po-inline e194 e194" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.stm-assoc.org/2012_05_01_Innovations_US_Needham_True_Automated_Page_Composition_Process.pdf</textual></link><textual class="po-textual">.</textual></bibliomixed></bibliography></article></classedDocument>