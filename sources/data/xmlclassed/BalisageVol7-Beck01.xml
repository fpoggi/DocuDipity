<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3"><title class="po-block e1 e1"><textual class="po-textual">The False Security of Closed XML Systems</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2011</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 2 - 5, 2011</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">Creating and using XML documents in a closes system gives a false sense of “All’s
                Well”. A Closed XML system is one where a single party creates and uses the XML
                documents. Certainly this happens all of the time. We all create little XML
                documents with one-off throw-away models for one task or another that only we use.
                These documents will not be the focus here. When documents are created in a closed
                XML workflow and sent to another entity - such as an archive - for reuse, publishers
                can quickly learn that the content they have been accumulating is not useful for
                anything outside of their system and may not be useful if their own systems are
                upgraded or changed. </textual></para><para class="po-block e8 e8"><textual class="po-textual">The checks and procedures that must be put in place to support XML interchange
                between entities should be applied within closed XML systems to keep the content
                usable and useful.</textual></para></abstract><author class="po-record e9 e9"><personname class="po-record e10 e10"><firstname class="po-field e11 e11"><textual class="po-textual">Jeff</textual></firstname><surname class="po-field e12 e12"><textual class="po-textual">Beck</textual></surname></personname><personblurb class="po-container e13 e13"><para class="po-block e14 e14"><textual class="po-textual">Jeff has been involved in the PubMed Central project at NLM since 2000. He has
                    been working journal publishing since the early 1990.</textual></para></personblurb><affiliation class="po-record e15 e15"><jobtitle class="po-field e16 e16"><textual class="po-textual">Technical Information Specialist</textual></jobtitle><orgname class="po-block e17 e17"><textual class="po-textual">National Center for Biotechnology Information (NCBI), National Library of
                    Medicine (NLM), National Institutes of Heath (NIH)</textual></orgname></affiliation></author><legalnotice class="po-container e18 e18"><para class="po-block e19 e19"><textual class="po-textual">Author's contribution to the Work was done as part of the Author's official duties as an NIH employee and is a Work of the United States Government. Therefore, copyright may not be established in the United States. 17 U.S.C. § 105. If Publisher intends to disseminate the Work outside the U.S., Publisher may secure copyright to the extent authorized under the domestic laws of the relevant country, subject to a paid-up, nonexclusive, irrevocable worldwide license to the United States in such copyrighted work to reproduce, prepare derivative works, distribute copies to the public and perform publicly and display publicly the work, and to permit others to do so. </textual></para></legalnotice></info><para class="po-block e20 e20"><textual class="po-textual">I have been working on the PubMed Central </textual><citation class="po-atom e21 e21" linkend="PMC01"><textual class="po-textual">[PMC01]</textual></citation><textual class="po-textual">repository at the National Library of Medicine for 11 years. My role
        there is to ingest XML from different publishers and transform it into the JATS format
            </textual><citation class="po-atom e22 e22" linkend="JATS01"><textual class="po-textual">[JATS01]</textual></citation><textual class="po-textual"> for inclusion in our database. In this
        role, I have seen a lot of article SGML and XML content and had to make decisions on whether
        it was of a consistent quality to be included in the PMC database or not. </textual></para><para class="po-block e23 e23"><textual class="po-textual">Sometimes we have problems with content that is submitted to PMC. We see content that is
        not well-formed, not valid to the schema that is being used, tag abuse and other
        inconsistencies in how the elements and attributes of the XML model have been
        applied.</textual></para><para class="po-block e24 e24"><textual class="po-textual">PMC accepts content in many different XML formats, but well over 50% of the content being
    supplied currently is in one of the JATS models. Both the Archving and Interchange and the Journal Publishing
    models use the XHTML table model; the CALS table model is supplied in the Tag Suite but not used 
    in these two models. A wonderful example of content no longer being valid outside of a closed system
    involved a modification of the DTD to call in the CALS table model. The DTD was expanded correctly, and 
    everything ran fine on the publisher's system. However the DTD files were not given a new name. Also, the 
    PUBLIC and SYSTEM IDs used in the DOCTYPE declaration in the instances were those that were defined 
    for the Journal Publishing Model. </textual></para><para class="po-block e25 e25"><textual class="po-textual">When this content arrived in PMC, the PUBLIC ID was resolved the the standard Journal Publishing DTD 
    (without the extra table model), and all of the instances were invalid.</textual></para><para class="po-block e26 e26"><textual class="po-textual">When we provide feedback on the sample XML supplied during the PMC evaluation process
            </textual><citation class="po-atom e27 e27" linkend="Beck01"><textual class="po-textual">[Beck01]</textual></citation><textual class="po-textual">, the response we most often here from the
        publishers is "We paid a lot of money to get this XML. It works on our website, so we know
        it is good."</textual></para><para class="po-block e28 e28"><textual class="po-textual">It is obvious that if inconsistent and invalid content works in their system that they are
        creating and using their content in a Closed XML System.</textual></para><section class="po-hcontainer e29 e29"><title class="po-block e30 e30"><textual class="po-textual">What Is a Closed XML System?</textual></title><para class="po-block e31 e31"><textual class="po-textual">A closed XML system is a system where the XML files never leave the system or are
            never used by anyone other than the creator. We have all created little XML documents
            with one-off throw-away models for one task or another that only we use. </textual></para><para class="po-block e32 e32"><textual class="po-textual">An  example would be if you were creating a To Do list application to run 
            in XML for your own use. First you would figure out what you want to track and probably 
            start with a sample document. </textual></para><programlisting class="po-block e33 e33" xml:space="preserve"><textual class="po-textual">
            &lt;todolist&gt;
                &lt;todo&gt;
                    &lt;due month="07" day="08" year="2011"/&gt;
                    &lt;reminder month="07" day="01" year="2011"/&gt;
                    &lt;task&gt;Finish Balisage Paper.&lt;/task&gt;
                &lt;/todo&gt;
            &lt;/todolist&gt;
        </textual></programlisting><para class="po-block e34 e34"><textual class="po-textual">This works for a while, and then you decide to add a second reminder.</textual></para><programlisting class="po-block e35 e35" xml:space="preserve"><textual class="po-textual">
            &lt;todolist&gt;
                &lt;todo&gt;
                    &lt;due month="07" day="08" year="2011"/&gt;
                    &lt;first-reminder month="07" day="01" year="2011"/&gt;
                    &lt;second-reminder month="07" day="01" year="2011"/&gt;
                    &lt;task&gt;Finish Balisage Paper.&lt;/task&gt;
                &lt;/todo&gt;
            &lt;/todolist&gt;
        </textual></programlisting><para class="po-block e36 e36"><textual class="po-textual">And maybe a way to add custom messages.</textual></para><programlisting class="po-block e37 e37" xml:space="preserve"><textual class="po-textual">
            &lt;todolist&gt;
                &lt;todo&gt;
                    &lt;due month="07" day="08" year="2011"/&gt;
                    &lt;first-reminder month="07" day="01" year="2011"&gt;
                        &lt;message&gt;Just one week left to finish the paper.&lt;/message&gt;
                        &lt;/first-reminder&gt;
                    &lt;second-reminder month="07" day="01" year="2011"&gt;
                         &lt;message&gt;Time to call Tommie to get an extension.&lt;/message&gt;
                        &lt;/second-reminder&gt;
                   &lt;task&gt;Finish Balisage Paper.&lt;/task&gt;
                &lt;/todo&gt;
            &lt;/todolist&gt;
        </textual></programlisting><para class="po-block e38 e38"><textual class="po-textual">As this simple model has evolved, you've kept up with it with your XSLT or XQuery that you are 
            using to process the To Do list. You can handle a &lt;reminder&gt;, a &lt;first-reminder&gt;, and
            a &lt;second-reminder&gt;, both with and without &lt;message&gt;. The To Do list works fine because, 
            although you have inconsistent data, you were able to make allowances for it in your processor
            when you made the changes to the model. </textual></para><para class="po-block e39 e39"><textual class="po-textual">This is not a problem, because you control both ends of the process and nothing is showing 
        up unexpectedly. Confusion could arise if you shared your data with someone else who had to figure
        out what the difference was between a &lt;reminder&gt; and a &lt;first-reminder&gt; and what to do 
        with those that have messages and those that don't.</textual></para><para class="po-block e40 e40"><textual class="po-textual">But these little
            documents are not the focus of this paper. </textual></para><para class="po-block e41 e41"><textual class="po-textual">Coming from the document publishing side of the XML world, I am going to concentrate
            on document content XML: journal articles, books, book chapters, reports. But these
            'rules' apply to any XML that is intended to be saved, used or reused. Certainly this
            would apply to both document and data XML applications. </textual></para></section><section class="po-hcontainer e42 e42"><title class="po-block e43 e43"><textual class="po-textual">XML Interchange</textual></title><para class="po-block e44 e44"><textual class="po-textual">A not-closed XML system is one where there is some interchange of XML. This could be
            interchange between organizations, interchange between departments in an organization,
            or between individuals. Interchange can be an sharing of content between entities, but
            it could also be between steps in an XML workflow.</textual></para><para class="po-block e45 e45"><textual class="po-textual">The submission of papers for this conference is an example of XML interchange. The
            author creates XML to be used by the conference committee for peer review and
            (hopefully) publication in the conference proceedings. </textual></para></section><section class="po-hcontainer e46 e46"><title class="po-block e47 e47"><textual class="po-textual">A Classic Communication Model</textual></title><para class="po-block e48 e48"><textual class="po-textual">Wiener's modification of Shannon's classic communication model (see </textual><xref class="po-milestone e49 e49" linkend="F1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">; </textual><citation class="po-atom e50 e50" linkend="Wiener01"><textual class="po-textual">Wiener01, </textual></citation><textual class="po-textual">
            </textual><citation class="po-atom e51 e51" linkend="Wiener02"><textual class="po-textual">Wiener02, </textual></citation><textual class="po-textual">
            </textual><citation class="po-atom e52 e52" linkend="Foulger01"><textual class="po-textual">Foulger01</textual></citation><textual class="po-textual">) can be applied to XML interchange.
            In the communication model, there are two actors, the sender (information source) and
            the receiver (destination).</textual></para><figure class="po-container e53 e53" xml:id="F1" xreflabel="Fig. 1"><title class="po-block e54 e54"><textual class="po-textual">Interactive Communication Model</textual></title><mediaobject class="po-container e55 e55"><imageobject class="po-container e56 e56"><imagedata class="po-meta e57 e57" fileref="../../../vol7/graphics/Beck01/Beck01-001.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e58 e58"><textual class="po-textual">The communication in </textual><xref class="po-milestone e59 e59" linkend="F1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> contains the following steps: </textual><orderedlist class="po-table e60 e60"><listitem class="po-container e61 e61"><para class="po-block e62 e62"><textual class="po-textual">The Information Source creates a Message.</textual></para></listitem><listitem class="po-container e63 e63"><para class="po-block e64 e64"><textual class="po-textual">The Message is converted into a Signal and sent by the Transmitter.</textual></para></listitem><listitem class="po-container e65 e65"><para class="po-block e66 e66"><textual class="po-textual">The Signal may be acted upon or interfered with by Noise - some third
                        party or environmental activity. </textual></para></listitem><listitem class="po-container e67 e67"><para class="po-block e68 e68"><textual class="po-textual">The Received Signal is converted into a Message by the Receiver.</textual></para></listitem><listitem class="po-container e69 e69"><para class="po-block e70 e70"><textual class="po-textual">The Destination receives the Message.</textual></para></listitem><listitem class="po-container e71 e71"><para class="po-block e72 e72"><textual class="po-textual">The Destination provides feedback to the Information Source. </textual></para></listitem></orderedlist></para><para class="po-block e73 e73"><textual class="po-textual">Of course, this feedback is another message, with the original Destination as the
            Information Source, but what is important here is that the Receiver acknowledges or
            confirms the Message. (At this point, the Balisage audience should all be nodding their
            heads in agreement.) The feedback is a critical element of communication. It allows the
            sender to know whether the message is getting through and to make adjustments necessary
            to make the communication successfull.</textual></para><para class="po-block e74 e74"><textual class="po-textual">This model can be applied to any communication. For example a telephone conversation: </textual><orderedlist class="po-table e75 e75"><listitem class="po-container e76 e76"><para class="po-block e77 e77"><textual class="po-textual">Person A (Information Source) says "XML is great!" (Message) into his
                        telephone.</textual></para></listitem><listitem class="po-container e78 e78"><para class="po-block e79 e79"><textual class="po-textual">Telephone (Transmitter) converts sound to electrical Signal</textual></para></listitem><listitem class="po-container e80 e80"><para class="po-block e81 e81"><textual class="po-textual">The cell drops out (Noise).</textual></para></listitem><listitem class="po-container e82 e82"><para class="po-block e83 e83"><textual class="po-textual">Person B's telephone (Receiver) converts the Received Signal into sound
                        (Message).</textual></para></listitem><listitem class="po-container e84 e84"><para class="po-block e85 e85"><textual class="po-textual">Person B hears, "XML is gray---".</textual></para></listitem><listitem class="po-container e86 e86"><para class="po-block e87 e87"><textual class="po-textual">Person B provides feedback: "Gray?"</textual></para></listitem></orderedlist><textual class="po-textual">
        </textual></para></section><section class="po-hcontainer e88 e88"><title class="po-block e89 e89"><textual class="po-textual">What can go wrong with XML - The four layers of "bad"</textual></title><para class="po-block e90 e90"><textual class="po-textual">XML can go bad on several levels. These levels were beautifully and simply illustrated
            by </textual><citation class="po-atom e91 e91" linkend="Bauman01"><textual class="po-textual">[Bauman01]</textual></citation><textual class="po-textual"> in "The 4 'Levels' of XML
            Rectitude". The TEI examples in this section are his. </textual></para><para class="po-block e92 e92"><textual class="po-textual">The first thing that can go wrong is that the XML is not well-formed. Simply the basic
            rules of XML are not followed.</textual></para><figure class="po-container e93 e93" xml:id="F2" xreflabel="Fig. 2"><title class="po-block e94 e94"><textual class="po-textual">Not Well-Formed XML</textual></title><programlisting class="po-block e95 e95" xml:space="preserve"><textual class="po-textual">&lt;titleStmt&gt;
  &lt;title&gt;Fun!&lt;/head
&lt;/titleDesc</textual></programlisting></figure><para class="po-block e96 e96"><textual class="po-textual">If the document is well formed, the next potential problem is validity. Does the
            syntax of the XML match the schema?</textual></para><figure class="po-container e97 e97" xml:id="F3" xreflabel="Fig. 3"><title class="po-block e98 e98"><textual class="po-textual">Invalid TEI XML</textual></title><programlisting class="po-block e99 e99" xml:space="preserve"><textual class="po-textual">&lt;note href="#there" &gt;
  &lt;div&gt;
    What? In TEI, &lt;gi&gt;div&lt;/gi&gt; is
    not allowed in &lt;gi&gt;note&lt;/gi&gt;.
  &lt;/div&gt;&lt;/note&gt;</textual></programlisting></figure><para class="po-block e100 e100"><textual class="po-textual">Assuming that the document is well-formed and valid, next you have to worry about
            Sensibility. XML constructions that do not make any sense are not good to anyone. </textual></para><figure class="po-container e101 e101" xml:id="F4" xreflabel="Fig. 4"><title class="po-block e102 e102"><textual class="po-textual">Nonsense XML construction</textual></title><programlisting class="po-block e103 e103" xml:space="preserve"><textual class="po-textual">&lt;caesura xml:space="preserve"/&gt;
&lt;respStmt&gt;
  &lt;name&gt;&lt;catchwords/&gt;&lt;/name&gt;
  &lt;resp&gt;&lt;height unit="cm"/&gt;&lt;/resp&gt;
&lt;/respStmt&gt;</textual></programlisting></figure><para class="po-block e104 e104"><textual class="po-textual">Finally, if the XML is well-formed, valid, and is sensibly constructed, the content
            may just be wrong. </textual></para><figure class="po-container e105 e105" xml:id="F5" xreflabel="Fig. 5"><title class="po-block e106 e106"><textual class="po-textual">Just wrong content</textual></title><programlisting class="po-block e107 e107" xml:space="preserve"><textual class="po-textual">&lt;quote who="#Washington" &gt;
  &lt;time dur="PT4H7M"]] &gt; Four score and
  seven years&lt;/time&gt; ago our fathers
  brought forth on this continent a
  new nation …&lt;/quote&gt;</textual></programlisting></figure></section><section class="po-hcontainer e108 e108"><title class="po-block e109 e109"><textual class="po-textual">Applying the communication model to XML Interchange</textual></title><para class="po-block e110 e110"><textual class="po-textual">We can apply the classic communication model to interchange of XML between
            entities.</textual></para><figure class="po-container e111 e111" xml:id="F6" xreflabel="Fig. 6"><title class="po-block e112 e112"><textual class="po-textual">XML Interchange in the Communication model</textual></title><mediaobject class="po-container e113 e113"><imageobject class="po-container e114 e114"><imagedata class="po-meta e115 e115" fileref="../../../vol7/graphics/Beck01/Beck01-002.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e116 e116"><xref class="po-milestone e117 e117" linkend="F6"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows how the communication model can be applied to XML
            interchange between parties. The steps in this communication are: </textual><orderedlist class="po-table e118 e118"><listitem class="po-container e119 e119"><para class="po-block e120 e120"><textual class="po-textual">The Information Source creates some Content.</textual></para></listitem><listitem class="po-container e121 e121"><para class="po-block e122 e122"><textual class="po-textual">The Content is encoded into a file based on an XML Model and sent. </textual></para></listitem><listitem class="po-container e123 e123"><para class="po-block e124 e124"><textual class="po-textual">The file may be acted upon or interfered with by Noise. </textual></para></listitem><listitem class="po-container e125 e125"><para class="po-block e126 e126"><textual class="po-textual">The file is converted into Content with the XML Model.</textual></para></listitem><listitem class="po-container e127 e127"><para class="po-block e128 e128"><textual class="po-textual">The Destination receives the Content.</textual></para></listitem><listitem class="po-container e129 e129"><para class="po-block e130 e130"><textual class="po-textual">The Destination provides feedback to the Information Source. </textual></para></listitem></orderedlist><textual class="po-textual">
        </textual></para><para class="po-block e131 e131"><textual class="po-textual">For our purposes, we can simplify this model somewhat by removing the Noise. Certainly
            there can be noise in XML interchange, but I see noise that occurs in the transfer of
            files as a Systems problem and outside the scope of this discussion. </textual></para><para class="po-block e132 e132"><textual class="po-textual">There is another change we need to make, which is at the root of our discussion. Just
            as there may have been problems encoding and decoding the Message into and out of the
            Signal in the communication model because the Transmitter and Receiver are not the same
            entity, we need to note here that the XML is encoded with the Sender's XML model and
            decoded with the Receiver's XML model (see </textual><xref class="po-milestone e133 e133" linkend="F7"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual></para><figure class="po-container e134 e134" xml:id="F7" xreflabel="Fig. 7"><title class="po-block e135 e135"><textual class="po-textual">Modified XML Interchange model</textual></title><mediaobject class="po-container e136 e136"><imageobject class="po-container e137 e137"><imagedata class="po-meta e138 e138" fileref="../../../vol7/graphics/Beck01/Beck01-003.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e139 e139"><textual class="po-textual">So, if the Sender's XML Model is not exactly the same as the Receiver's XML model,
            there will be distortion of the Content, just as there is distortion of the Message if
            the Receiver is not decoding the signal as the Transmitter encoded it.</textual></para><para class="po-block e140 e140"><textual class="po-textual">Because XML is intended to be machine-processed content, we can run some tests after
            the XML has been received. First, we can test Well-Formedness with any XML parser.
            Well-formedness is defined by the XML Specification.</textual></para><para class="po-block e141 e141"><textual class="po-textual">The rest of the tests require some agreement between Sender and Receiver, either
            explicitly ("I am going to send you this article in DocBook 5 format.") or implicitly -
            where the XML file identifies itself. Either way, we can test for validity by processing
            the file with the agreed-upon schema. </textual></para><para class="po-block e142 e142"><textual class="po-textual">Next, content Sensibility can be checked with a content-application-level tool such as
            a Schematron or other application-specific checking tool like the PMC Stylechecker. For
            example, it would be trivial to write a Schematron rule to check the schema-valid but
            Nonsense XML in Fig. 4. If the application thought that a &lt;height&gt; element with
            units but no value was not "correct", a test could be added for that; similarly if
            &lt;catchwords&gt; was not something you wanted to see in &lt;name&gt;, you could have a
            test for that. But, Sensibility checking at this level comes with a price, which is even
            greater communication between Sender and Receiver. </textual></para><para class="po-block e143 e143"><textual class="po-textual">All of this Sender/Receiver communication is for one goal: to get the Sender's XML
            model and the Receiver's XML model to be as closely aligned as possible. This works
            pretty well in XML systems where content is transferred between entities, because the
            receiver is accustomed to running at least well-formedness and validity checks on
            incoming content. </textual></para><figure class="po-container e144 e144" xml:id="F8" xreflabel="Fig. 8"><title class="po-block e145 e145"><textual class="po-textual">XML Interchange model with checks</textual></title><mediaobject class="po-container e146 e146"><imageobject class="po-container e147 e147"><imagedata class="po-meta e148 e148" fileref="../../../vol7/graphics/Beck01/Beck01-004.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure></section><section class="po-hcontainer e149 e149"><title class="po-block e150 e150"><textual class="po-textual">Closed Systems</textual></title><para class="po-block e151 e151"><textual class="po-textual">In a closed XML system, the Sender and Receiver are the same entity. This greatly
            simplifies the XML interchange model (see Figs 9 and 10). </textual></para><figure class="po-container e152 e152" xml:id="F9" xreflabel="Fig. 9"><title class="po-block e153 e153"><textual class="po-textual">XML Interchange in a closed system. </textual></title><mediaobject class="po-container e154 e154"><imageobject class="po-container e155 e155"><imagedata class="po-meta e156 e156" fileref="../../../vol7/graphics/Beck01/Beck01-005.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><figure class="po-container e157 e157" xml:id="F10" xreflabel="Fig. 10"><title class="po-block e158 e158"><textual class="po-textual">Actually the Information Source and Destination are the same Entity.</textual></title><mediaobject class="po-container e159 e159"><imageobject class="po-container e160 e160"><imagedata class="po-meta e161 e161" fileref="../../../vol7/graphics/Beck01/Beck01-006.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e162 e162"><textual class="po-textual">In </textual><xref class="po-milestone e163 e163" linkend="F10"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, things have gotten very simple with the Information Source
            and Destination collapsed. And in some cases things are quite simple here. The danger of
            a closed XML system is that it gives a false sense of "All's Well." There are several
            things that happen in closed systems. First, one entity controls both ends of the pipe. </textual></para><para class="po-block e164 e164"><textual class="po-textual">For example, one person can be responsible for tagging articles for a magazine and
            building the rendering software that renders the articles on the web in HTML. When a new
            object appears in an article, the only requirement for the XML tagging is that it works
            in the renderer. </textual></para><para class="po-block e165 e165"><textual class="po-textual">Generally in these systems, the only test that things are OK is that the XML is
            working in the system; that is, in a system that was created to fit each twist and turn
            in the evolving XML model. If XML tools are used, then well-formedness tests come along
            for the ride, but validation against a schema (if there is one) is deemed unnecessary
            and complicated. After all, "Our XML works".</textual></para><para class="po-block e166 e166"><textual class="po-textual">In a closed system, "Garbage In" is OK, because you control both ends of the pipe,
            know the garbage is coming through, and build something to deal with it when it comes
            out the other end. Sometimes Garbage In is OK.</textual></para><para class="po-block e167 e167"><textual class="po-textual">And if it works, that is great. The real price for this closed system won't come due
            until you either have to send your XML to someone for reuse or reuse it yourself.</textual></para><para class="po-block e168 e168"><textual class="po-textual">Switching to an XML Interchange workflow from a closed system can be humbling and
            expensive. Any Destination that will be taking your content will expect it to pass all
            four levels of XML Rectitude, will actively check well-formedness and validity against a
            schema, and will seek information on tagging conventions (sensibility) expecting (or at
            least hoping for) some consistency in the tagging. </textual></para><para class="po-block e169 e169"><textual class="po-textual">If the XML corpus has not been subjected to these checks throughout there will be big
            problems with reuse of the content by an outside entity. </textual></para><para class="po-block e170 e170"><textual class="po-textual">Similarly, when everything about your XML system is in one geek's head, you will have
            trouble maintaining the system, let alone changing it or upgrading it when that geek
            moves on to greener pastures. </textual></para></section><section class="po-hcontainer e171 e171"><title class="po-block e172 e172"><textual class="po-textual">Standards are the answer?</textual></title><para class="po-block e173 e173"><textual class="po-textual">Actually not really. Using a standard model like the TEI, DocBook, or the JATS will
            get you schemas and some information on best practices for tagging, but there is no
            forced validation. Also, in closed XML Systems, there is no penalty for Tag Abuse. That
            is, if the standard schema does not have an element for an object, you can just tag your
            content any way you like. Because you control both ends of the pipe, </textual></para></section><section class="po-hcontainer e174 e174"><title class="po-block e175 e175"><textual class="po-textual">Requirements for XML Interchange</textual></title><para class="po-block e176 e176"><textual class="po-textual">There are two requirements for any XML Interchange, and they both come from an
            agreement between the Information Source and the Destination.</textual></para><orderedlist class="po-table e177 e177"><listitem class="po-container e178 e178"><para class="po-block e179 e179"><textual class="po-textual">Validation - XML files must be well-formed and valid against an agreed-upon
                    schema.</textual></para></listitem><listitem class="po-container e180 e180"><para class="po-block e181 e181"><textual class="po-textual">Defined tagging practices - XML files will be tagged consistently in a manner
                    that makes sense.</textual></para></listitem></orderedlist><para class="po-block e182 e182"><textual class="po-textual">These two requirements for interchange are the same ones you will need to run a
            consistent, sane system over time. </textual></para><para class="po-block e183 e183"><textual class="po-textual"> If xml interchange is like a conversation, than a closed system is like listening to
            the voices in your head. </textual></para></section><bibliography class="po-hcontainer e184 e184"><title class="po-block e185 e185"><textual class="po-textual">References</textual></title><bibliomixed class="po-block e186 e186" xml:id="PMC01"><textual class="po-textual">PubMed Central, </textual><link class="po-inline e187 e187" xlink:actuate="onRequest" xlink:href="http://www.ncbi.nlm.nih.gov/pmc/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.ncbi.nlm.nih.gov/pmc/</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e188 e188" xml:id="JATS01"><textual class="po-textual">NLM Archiving and Interchange DTD, </textual><link class="po-inline e189 e189" xlink:actuate="onRequest" xlink:href="http://dtd.nlm.nih.gov/archiving/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://dtd.nlm.nih.gov/archiving/</textual></link><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e190 e190" xml:id="Wiener01"><textual class="po-textual">Wiener, N. (1948). Cybernetics: or Control and Communication
            in the Animal and the Machine. Wiley.</textual></bibliomixed><bibliomixed class="po-block e191 e191" xml:id="Wiener02"><textual class="po-textual">Wiener, N. (1986). Human Use of Human Beings: Cybernetics and
            Society. Avon.</textual></bibliomixed><bibliomixed class="po-block e192 e192" xml:id="Foulger01"><textual class="po-textual">Foulger, Davis. (2004) "Models of the Communication
            Process." </textual><link class="po-inline e193 e193" xlink:actuate="onRequest" xlink:href="http://davis.foulger.info/research/unifiedModelOfCommunication.htm" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://davis.foulger.info/research/unifiedModelOfCommunication.htm</textual></link></bibliomixed><bibliomixed class="po-block e194 e194" xml:id="Bauman01"><textual class="po-textual">Bauman, Syd. (2010) "The 4 Levels of XML Rectitude", Balisage
            2010, poster.</textual></bibliomixed><bibliomixed class="po-block e195 e195" xml:id="Beck01"><textual class="po-textual">Beck, Jeff. “Report from the Field: PubMed Central, an
            XML-based Archive of Life Sciences Journal Articles.” Presented at International
            Symposium on XML for the Long Haul: Issues in the Long-term Preservation of XML,
            Montréal, Canada, August 2, 2010. In Proceedings of the International Symposium on XML
            for the Long Haul: Issues in the Long-term Preservation of XML. Balisage Series on
            Markup Technologies, vol. 6 (2010). doi:10.4242/BalisageVol6.Beck01. </textual><link class="po-inline e196 e196" xlink:actuate="onRequest" xlink:href="http://www.balisage.net/Proceedings/vol6/html/Beck01/BalisageVol6-Beck01.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.balisage.net/Proceedings/vol6/html/Beck01/BalisageVol6-Beck01.html</textual></link></bibliomixed></bibliography></article></classedDocument>