<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.2"><title class="po-block e1 e1"><textual class="po-textual">Automatic upconversion using XSLT 2.0 and XProc: A real world example</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2010</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 3 - 6, 2010</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">All too much of the data on the Web appears in unstructured presentation-centric formatting
    that isn't suited for structured searching and retrieval. Upconversion to a more data-centric
    information storage format offers a potential for many new uses of the data. The starting point
    of our work is a collection of HTML documents containing video game reviews. Our goal is to
    describe a target XML format that supports certain elements and attributes containing
    information that we consider valuable. Furthermore, the conversion process itself should be
    carried out automatically by means of an XProc pipeline. We conclude our paper with a
    demonstration of typical benefits of the highly structured data that results from our
    conversions.</textual></para></abstract><author class="po-record e8 e8"><personname class="po-record e9 e9"><firstname class="po-field e10 e10"><textual class="po-textual">Stefanie</textual></firstname><surname class="po-field e11 e11"><textual class="po-textual">Haupt</textual></surname></personname><personblurb class="po-container e12 e12"><para class="po-block e13 e13"><textual class="po-textual">Stefanie Haupt is currently finishing her education for an M.A. degree in Literary
     Criticism, Text Technology, and Sociology at Bielefeld University. Her main research interest
     focuses on markup and schema languages, with emphasis on XML databases and querying.</textual></para></personblurb></author><author class="po-record e14 e14"><personname class="po-record e15 e15"><firstname class="po-field e16 e16"><textual class="po-textual">Maik</textual></firstname><surname class="po-field e17 e17"><textual class="po-textual">Stührenberg</textual></surname></personname><personblurb class="po-container e18 e18"><para class="po-block e19 e19"><textual class="po-textual">Maik Stührenberg studied Computational Linguistics at Bielefeld University. After working
     for four years as research assistant at Giessen University in different text-technological
     projects, he is now a Ph. D. student and research assistant at Bielefeld University. His main
     research interests include XML schema languages and specifications for structuring and querying
     multi-dimensional annotated data.</textual></para></personblurb></author><legalnotice class="po-container e20 e20"><para class="po-block e21 e21"><textual class="po-textual">Copyright © 2010 by the authors.  Used with
permission.</textual></para></legalnotice></info><section class="po-hcontainer e22 e22" xml:id="Introduction"><title class="po-block e23 e23"><textual class="po-textual">Introduction</textual></title><para class="po-block e24 e24"><textual class="po-textual"> Vast collections of information are stored in HTML files distributed over millions of Web
   pages through the Internet. Among these quite valuable data can often be found; however, HTML
   does not offer a large pool of semantically motivated elements or attributes for annotating
   arbitrary data, since the language was originally created for hypertexts. Although CSS
   microformats </textual><xref class="po-milestone e25 e25" linkend="bibSuda2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> may be used to add semantic value to structuring
   elements (e.g. </textual><code class="po-atom e26 e26"><textual class="po-textual">div</textual></code><textual class="po-textual"> and </textual><code class="po-atom e27 e27"><textual class="po-textual">span</textual></code><textual class="po-textual">), most information is buried underneath a
   "tag soup" of </textual><code class="po-atom e28 e28"><textual class="po-textual">td</textual></code><textual class="po-textual">, </textual><code class="po-atom e29 e29"><textual class="po-textual">p</textual></code><textual class="po-textual"> or </textual><code class="po-atom e30 e30"><textual class="po-textual">div</textual></code><textual class="po-textual"> elements that allow no
   inference about their content. In contrast, we can have information that is highly structured in
   terms of very specialized XML markup using a document grammar (DTD </textual><xref class="po-milestone e31 e31" linkend="bibSGML"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">,
    </textual><xref class="po-milestone e32 e32" linkend="bibXML1.0"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, XSD </textual><xref class="po-milestone e33 e33" linkend="bibW3C.XMLSchemaPrimer"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> or RELAX NG </textual><xref class="po-milestone e34 e34" linkend="bibRelaxNG"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) that allows for easy retrieving of very specific information. A real
   world example where the origin of our data is a collection of (sometimes even invalid) HTML 4.01
    </textual><xref class="po-milestone e35 e35" linkend="bibHTML4.01"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> Web pages storing documents of video game reviews is a good
   candidate for demonstrating how value can be added through better markup. Our goal is to
   transform these into fully structured and valid XML instance documents that allow different
   queries about the information. Since we are confronted with several hundred reviews, an automated
   conversion process is valuable. As an additional goal, we would like to stay in the realm of XML
   techniques; for example, we would like to avoid using non-XML-aware software such as
   general-purpose scripting languages (e.g. Perl, Python). </textual></para></section><section class="po-hcontainer e36 e36" xml:id="data"><title class="po-block e37 e37"><textual class="po-textual">The data</textual></title><section class="po-hcontainer e38 e38"><title class="po-block e39 e39"><textual class="po-textual">Information content</textual></title><para class="po-block e40 e40"><textual class="po-textual">Video games are a part of today's culture and are available in a huge variety in terms of
    supported game system, genre and — of course — quality. Finding a game that fits both one's
    hardware requirements and favored genre is a relatively easy task to accomplish, but basing the
    decision to buy a specific game only on the text written on the back of its case is daring at
    least. Impartial (more or less) reviews of video games may help to clarify if the money is well
    spent in the long run by providing rating systems for features such as graphics, sound,
    atmosphere or overall score (usually higher scores are better). The team of the German </textual><emphasis class="po-inline e41 e41" role="ital"><textual class="po-textual">Mag'64</textual></emphasis><textual class="po-textual"> Web site </textual><footnote class="po-popup e42 e42"><para class="po-block e43 e43"><link class="po-inline e44 e44" xlink:actuate="onRequest" xlink:href="http://www.mag64.de/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></link><textual class="po-textual">, for the
      current site.</textual></para></footnote><textual class="po-textual"> has tested video games for over eight years, gathering over 1500 reviews, each
    consisting of a single HTML Web page. Each document contains information about the game being
    tested, the review, including a general judgement, and images and screenshots. This information
    is quite valuable since among the provided items are general ones such as the title, system, or
    publisher, but in addition more specific items such as number of players, genre, age rating and
    difficulty. The review consists of running text' while the final verdict and pros and cons are
    summarized in a tabular view. The data we have to deal with consists generally of two types of
    reviews, which we call "Type A" and "Type B". Type A was used during the years 2001 through
    2004, while Type B was introduced in the Autumn of 2004.</textual></para></section><section class="po-hcontainer e45 e45"><title class="po-block e46 e46"><textual class="po-textual">Technical analysis</textual></title><para class="po-block e47 e47"><textual class="po-textual">From a technical point of view the data is stored in HTML Web pages. Because HTML's
    original task is to structure hypertexts, it lacks specific elements and attributes for
    annotating the information we are interested in. Furthermore, the markup of our test data is
    very focussed on presentation, that is, general HTML elements such as </textual><code class="po-atom e48 e48"><textual class="po-textual">div</textual></code><textual class="po-textual">,
     </textual><code class="po-atom e49 e49"><textual class="po-textual">p</textual></code><textual class="po-textual">, </textual><code class="po-atom e50 e50"><textual class="po-textual">td</textual></code><textual class="po-textual"> are used for physically structuring the information according
    to a given layout. While the two review types, A and B, do not differ regarding their
    information content, there are differences in the markup techniques used.</textual></para><section class="po-hcontainer e51 e51"><title class="po-block e52 e52"><textual class="po-textual">Type A</textual></title><para class="po-block e53 e53"><textual class="po-textual">The Type A review was originally used as part of an HTML frameset. While one frame
     contained a menu for navigating through the whole service, the second frame stored a single
     review in the form of a HTML Page. This page lacks an HTML Doctype declaration, and typical
     copy and paste errors can be found, including end tags without preceding start tags, wrong
     attributes, etc. The </textual><code class="po-atom e54 e54"><textual class="po-textual">img</textual></code><textual class="po-textual"> element for embedded graphics lacks the required
      </textual><code class="po-atom e55 e55"><textual class="po-textual">alt</textual></code><textual class="po-textual"> attribute. </textual><footnote class="po-popup e56 e56"><para class="po-block e57 e57"><textual class="po-textual">Although the </textual><code class="po-atom e58 e58"><textual class="po-textual">alt</textual></code><textual class="po-textual"> attribute has been marked as optional in </textual><xref class="po-milestone e59 e59" linkend="bibHTML3.2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e60 e60" linkend="bibHTML4.01"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> introduced in 1999 and </textual><xref class="po-milestone e61 e61" linkend="bibHTML.ISO"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, requires its use.</textual></para></footnote><textual class="po-textual"> Furthermore, no information about the character encoding is given, which leads to
     encoding errors since German umlauts and other special characters were used. </textual></para><para class="po-block e62 e62"><xref class="po-milestone e63 e63" linkend="fig.html.start"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows an excerpt of an Type A review.</textual></para><figure class="po-container e64 e64" xml:id="fig.html.start"><title class="po-block e65 e65"><textual class="po-textual">Type A beginning of document</textual></title><programlisting class="po-block e66 e66" xml:space="preserve"><textual class="po-textual">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Mag64&lt;/title&gt;
&lt;/head&gt;
&lt;body bgcolor="#FFFFFF" text="#000000" link="#0000FF" 
vlink="#990099" alink="#FF0000" leftmargin="2" topmargin="2" 
marginwidth="2" marginheight="2"&gt;&lt;a name="page_top"&gt;
&lt;table width="98%" border="0" cellspacing="5" cellpadding="0" 
height="170" align="center"&gt;
  &lt;tr&gt;
    &lt;td width="35%" align="left" valign="top"&gt;
    &lt;img src="ray3logo.jpg"&gt;
    &lt;/td&gt;
    &lt;td width="33%" align="left" valign="top" bgcolor="#CCCCCC"&gt;
      &lt;p&gt;&lt;font face="Arial, Helvetica, sans-serif" size="3"&gt;&lt;u&gt;
      &lt;font face="Arial, Helvetica, sans-serif" size="3"&gt;SYSTEM:
      &lt;/font&gt;
      &lt;/u&gt;&lt;font face="Arial, Helvetica, sans-serif" size="3"&gt;
        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
        &amp;nbsp;&amp;nbsp;&lt;i&gt;GCN - PAL&lt;/i&gt;&lt;/font&gt;&lt;u&gt;&lt;br&gt;
        ENTWICKLER:&lt;/u&gt; &lt;i&gt;Ubi Soft&lt;/i&gt;&lt;/font&gt;&lt;br&gt;
        &lt;u&gt;&lt;font face="Arial, Helvetica, sans-serif" size="3"&gt;
        GENRE:&lt;/font&gt;&lt;/u&gt;&lt;font face="Arial, Helvetica, sans-serif" 
        size="3"&gt;
        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;i&gt;Jump'n Run&lt;/i&gt;&lt;/font&gt;
        &lt;font face="Arial, Helvetica, sans-serif" size="3"&gt;&lt;i&gt;&lt;br&gt;
        &lt;/i&gt;&lt;/font&gt;&lt;u&gt;&lt;font face="Arial, Helvetica, sans-serif" 
        size="3"&gt;SPIELER:&lt;/font&gt;&lt;/u&gt;&lt;font face="Arial, Helvetica, 
        sans-serif" size="3"&gt;
        &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
        &amp;nbsp;&lt;i&gt;1-4 Spieler&lt;/i&gt;&lt;/font&gt;&lt;br&gt;</textual></programlisting></figure><para class="po-block e67 e67"><textual class="po-textual">This markup we have to deal with is very presentation-focussed: semantic markup such as
      </textual><code class="po-atom e68 e68"><textual class="po-textual">h1</textual></code><textual class="po-textual"> or </textual><code class="po-atom e69 e69"><textual class="po-textual">h2</textual></code><textual class="po-textual"> that could be used for structuring the text is not used at
     all. The title of the game can only be found in the running text or in the graphic image
     referred by the </textual><code class="po-atom e70 e70"><textual class="po-textual">img</textual></code><textual class="po-textual"> element — and sometimes in external cheats or tricks documents
     that are referred to from the review page (the term "CHEATS: JA" in </textual><xref class="po-milestone e71 e71" linkend="fig.head"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). All useful information is buried deep inside HTML's </textual><code class="po-atom e72 e72"><textual class="po-textual">table</textual></code><textual class="po-textual"> elements, and the
     page lacks any </textual><code class="po-atom e73 e73"><textual class="po-textual">meta</textual></code><textual class="po-textual"> elements for storing additional information. Spacing between
     different parts of the text was introduced by using HTML's &amp;nbsp; entity, while the whole
     markup is layout oriented, using </textual><code class="po-atom e74 e74"><textual class="po-textual">font</textual></code><textual class="po-textual">, </textual><code class="po-atom e75 e75"><textual class="po-textual">i</textual></code><textual class="po-textual"> and </textual><code class="po-atom e76 e76"><textual class="po-textual">u</textual></code><textual class="po-textual"> elements.
     Sometimes font elements with identical formatting options are embedded into each other
     resulting in a tag soup. Emphases are arranged solely by selecting "size 3" fonts.</textual></para><para class="po-block e77 e77"><textual class="po-textual">The running text of the review is distributed among different </textual><code class="po-atom e78 e78"><textual class="po-textual">table</textual></code><textual class="po-textual"> elements,
     establishing a print-like layout. Each review begins with two blocks containing
     meta-information, such as system, genre, number of players, etc. </textual></para><figure class="po-container e79 e79" xml:id="fig.head"><title class="po-block e80 e80"><textual class="po-textual">Typical view of the beginning of a Type A document</textual></title><mediaobject class="po-container e81 e81"><imageobject class="po-container e82 e82"><imagedata class="po-meta e83 e83" fileref="../../../vol5/graphics/Haupt01/Haupt01-001.png" format="png" width="70%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e84 e84"><textual class="po-textual">The Type A review ends with a tabular overview, consisting of the "pros" and "cons" of the
     game.</textual></para></section><section class="po-hcontainer e85 e85"><title class="po-block e86 e86"><textual class="po-textual">Type B</textual></title><para class="po-block e87 e87"><textual class="po-textual">The Type B reviews were established in the Autumn of 2004, coinciding with the release of
     the </textual><trademark class="po-null e88 registered e88"><textual class="po-textual">Nintendo DS</textual></trademark><textual class="po-textual"> handheld console. Since this
     videogame console introduced some features that were unknown before (e.g. split-screen and the
     stylus input device), a new HTML template for reviewing video games was adapted. As a new
     meta-information item, an age rating was added, and the running text was subdivided by
     headings.</textual></para><para class="po-block e89 e89"><textual class="po-textual">Most of the HTML pages contain a doctype declaration (incorrect for HTML 4.01), a
     reference to an externally declared CSS stylesheet and information about the character encoding
     (ISO-8859-1 — although the specified encoding is sometimes not correct, since some documents
     are encoded using the Windows-1252 charset or even UTF-8). In addition to the external CSS
     file, local formatting using attributes such as </textual><code class="po-atom e90 e90"><textual class="po-textual">marginwidth</textual></code><textual class="po-textual">, </textual><code class="po-atom e91 e91"><textual class="po-textual">bg-color</textual></code><textual class="po-textual">
     or </textual><code class="po-atom e92 e92"><textual class="po-textual">border</textual></code><textual class="po-textual"> can still be found. In general, the HTML pages are not valid according
     to the W3C validation service. </textual><xref class="po-milestone e93 e93" linkend="exstylesheet"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the mixture of different
     formatting options used. </textual></para><para class="po-block e94 e94"><textual class="po-textual">
     </textual><figure class="po-container e95 e95" xml:id="exstylesheet"><title class="po-block e96 e96"><textual class="po-textual">Type B beginning of document</textual></title><programlisting class="po-block e97 e97" xml:space="preserve"><textual class="po-textual">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Strict//EN"
 "http://www.w3.org/TR/html4/strict.dtd"&gt;
&lt;html&gt;&lt;head&gt;&lt;title&gt;NDS 7 Wonders of the Ancient World&lt;/title&gt;
&lt;meta http-equiv="Content-Type" content="text/html; 
charset=iso-8859-1"&gt;
&lt;link rel="stylesheet" href="http://www.mag64.de/test.css" 
type="text/css"&gt;&lt;/head&gt;
&lt;body marginwidth="0" marginheight="0" leftmargin="0" 
topmargin="0" bgcolor="#CCCCCC"&gt;
&lt;table width="710" border="0" cellpadding="0" cellspacing="0" 
bgcolor="#CCCCCC"&gt;</textual></programlisting></figure></para><para class="po-block e98 e98"><textual class="po-textual">A positive difference from the Type A is the fact that the title of the game appears
     (together with the platform it was released for) in HTML's </textual><code class="po-atom e99 e99"><textual class="po-textual">title</textual></code><textual class="po-textual"> element.
     Important information such as price or age rating are hidden inside a single </textual><code class="po-atom e100 e100"><textual class="po-textual">div</textual></code><textual class="po-textual">
     element (</textual><xref class="po-milestone e101 e101" linkend="exstrings"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), divided by line breaks.</textual></para><para class="po-block e102 e102"><textual class="po-textual">
     </textual><figure class="po-container e103 e103" xml:id="exstrings"><title class="po-block e104 e104"><textual class="po-textual">Hidden information</textual></title><programlisting class="po-block e105 e105" xml:space="preserve"><textual class="po-textual">&lt;td width="226" valign="top" style="background-image:url (http://www.mag64.de/tr1.jpg)"&gt;
&lt;div style="padding-left: 20px;padding-top: 23px"&gt;
SPRACHH&amp;Uuml;RDE: Keine&lt;br&gt;
MIKRO SUPPORT: Nein&lt;br&gt;
ALTERSFREIGABE: &lt;a href="http://www.pegi.info" 
target="_blank"&gt;3+&lt;/a&gt;&lt;br&gt;
TERMIN: Erh&amp;auml;ltlich&lt;br&gt;
VIRTUAL SURROUND: Nein&lt;br&gt;
PREIS: ca.20 Euro&lt;br&gt;
KOMPLETTL&amp;Ouml;SUNG: Nein&lt;br&gt;
CHEATS / TIPPS: Nein&lt;br&gt;
LESERMEINUNGEN: Nein&lt;/td&gt;</textual></programlisting></figure><textual class="po-textual">
    </textual></para><para class="po-block e106 e106"><textual class="po-textual">In contrast to the Type A reviews, subheadings are included; however, these are not marked
     up by HTML's inherent </textual><code class="po-atom e107 e107"><textual class="po-textual">h1</textual></code><textual class="po-textual"> through </textual><code class="po-atom e108 e108"><textual class="po-textual">h6</textual></code><textual class="po-textual"> elements but by using formatting
     elements such as </textual><code class="po-atom e109 e109"><textual class="po-textual">b</textual></code><textual class="po-textual"> and </textual><code class="po-atom e110 e110"><textual class="po-textual">font</textual></code><textual class="po-textual">.</textual></para><para class="po-block e111 e111"><textual class="po-textual">Both review types show HTML's inherent lack of support for highly structured data.
     Although our example application deals with document-centric texts, the data under observation
     contains important information that should be marked up explicitly.</textual></para></section></section></section><section class="po-hcontainer e112 e112" xml:id="dataInXML"><title class="po-block e113 e113"><textual class="po-textual">Highly structured data</textual></title><para class="po-block e114 e114"><textual class="po-textual"> Our goal is to create an XML markup language capable of structuring the video game reviews
   of both Type A and B that have been discussed. This format should be used as representation
   format for the output of the conversion process that will be presented in the </textual><xref class="po-milestone e115 e115" linkend="conversion"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and could be used as a storage format for future review applications.
   Since we have already stated the input documents are often invalid (sometimes even not
   well-formed) and important information is buried inside HTML </textual><code class="po-atom e116 e116"><textual class="po-textual">table</textual></code><textual class="po-textual"> elements, having
   a document grammar for both validating the conversion process's output format and providing
   explicit markup of the important information is quite important for us. For these reasons, the
   use of a capable of full text search engine was not taken into account. We have chosen XML schema
   in favor of XML DTD because of its datatype library and especially for its support of
   user-defined simple and complexTypes </textual><xref class="po-milestone e117 e117" linkend="bibWalmsley2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. A RELAX NG schema (in
   combination with the XML schema datatype library) would have been another option, however, the
   broader support for XML schema supplied by the XSLT processor used during the conversion process
   tipped the scales for us (</textual><xref class="po-milestone e118 e118" linkend="fig.xsd.game"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><figure class="po-container e119 e119" xml:id="fig.xsd.game"><title class="po-block e120 e120"><textual class="po-textual">Game centered structure</textual></title><mediaobject class="po-container e121 e121"><imageobject class="po-container e122 e122"><imagedata class="po-meta e123 e123" fileref="../../../vol5/graphics/Haupt01/Haupt01-002.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e124 e124"><textual class="po-textual">Each game can be identified by a unique </textual><code class="po-atom e125 e125"><textual class="po-textual">xml:id</textual></code><textual class="po-textual"> attribute, further optional
   attributes correspond to </textual><code class="po-atom e126 e126"><textual class="po-textual">genre</textual></code><textual class="po-textual"> and </textual><code class="po-atom e127 e127"><textual class="po-textual">subgenre</textual></code><textual class="po-textual">, supporting an enumerated
   list of possible values which should help avoiding typical errors such as typos. Children of the
    </textual><code class="po-atom e128 e128"><textual class="po-textual">game</textual></code><textual class="po-textual"> element are the </textual><code class="po-atom e129 e129"><textual class="po-textual">title</textual></code><textual class="po-textual"> and </textual><code class="po-atom e130 e130"><textual class="po-textual">platforms</textual></code><textual class="po-textual"> elements, the
   latter consisting of at least either one </textual><code class="po-atom e131 e131"><textual class="po-textual">handheldGameConsole</textual></code><textual class="po-textual"> or
    </textual><code class="po-atom e132 e132"><textual class="po-textual">videoGameConsole</textual></code><textual class="po-textual">, allowing to combine reviews of the same video game released on
   multiple platforms </textual><footnote class="po-popup e133 e133"><para class="po-block e134 e134"><textual class="po-textual">The optional merging of different game instances can be carried out by an XQuery
     script.</textual></para></footnote><textual class="po-textual">. Both elements are derived by extension of the globally declared complexType
    </textual><code class="po-atom e135 e135"><textual class="po-textual">consoleType</textual></code><textual class="po-textual">, sharing common information present in stationary and handheld game
   consoles (see </textual><xref class="po-milestone e136 e136" linkend="fig.consoleType"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for a graphical overview of the shared
   information).</textual></para><figure class="po-container e137 e137" xml:id="fig.consoleType"><title class="po-block e138 e138"><textual class="po-textual">A closer look at the complexType </textual><code class="po-atom e139 e139"><textual class="po-textual">consoleType</textual></code></title><mediaobject class="po-container e140 e140"><imageobject class="po-container e141 e141"><imagedata class="po-meta e142 e142" fileref="../../../vol5/graphics/Haupt01/Haupt01-003.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e143 e143"><textual class="po-textual">The </textual><code class="po-atom e144 e144"><textual class="po-textual">release</textual></code><textual class="po-textual"> element stores information about the date of release (using an
    </textual><code class="po-atom e145 e145"><textual class="po-textual">xs:date</textual></code><textual class="po-textual"> Type Attribute), the different languages and price. Children of the
    </textual><code class="po-atom e146 e146"><textual class="po-textual">languages</textual></code><textual class="po-textual"> element are </textual><code class="po-atom e147 e147"><textual class="po-textual">spoken</textual></code><textual class="po-textual">, </textual><code class="po-atom e148 e148"><textual class="po-textual">text</textual></code><textual class="po-textual"> and
    </textual><code class="po-atom e149 e149"><textual class="po-textual">handbook</textual></code><textual class="po-textual"> elements, depicting information about the parts of the game that have been
   translated. The </textual><code class="po-atom e150 e150"><textual class="po-textual">price</textual></code><textual class="po-textual"> element has a </textual><code class="po-atom e151 e151"><textual class="po-textual">currency</textual></code><textual class="po-textual"> attribute that uses an
   enumerated list of possible values according to </textual><xref class="po-milestone e152 e152" linkend="bibISO4217"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><para class="po-block e153 e153"><textual class="po-textual">An optional </textual><code class="po-atom e154 e154"><textual class="po-textual">image</textual></code><textual class="po-textual"> element can be used to represent box pictures or screenshots
   of the game reviewed.</textual></para><para class="po-block e155 e155"><textual class="po-textual">As mentioned above, the </textual><code class="po-atom e156 e156"><textual class="po-textual">handheldGameConsole</textual></code><textual class="po-textual"> and </textual><code class="po-atom e157 e157"><textual class="po-textual">videoGameConsole</textual></code><textual class="po-textual">
   elements are derived from the complexType </textual><code class="po-atom e158 e158"><textual class="po-textual">consoleType</textual></code><textual class="po-textual"> by extension. Although the
   additional elements </textual><code class="po-atom e159 e159"><textual class="po-textual">techSpecs</textual></code><textual class="po-textual"> and </textual><code class="po-atom e160 e160"><textual class="po-textual">saving</textual></code><textual class="po-textual"> use the same names, their
   content models are different with respect to the video game console, since, for example, the
   requirements for storing save games are different between handheld and stationary consoles. Only
   the </textual><code class="po-atom e161 e161"><textual class="po-textual">videoGameConsole</textual></code><textual class="po-textual"> element allows for the </textual><code class="po-atom e162 e162"><textual class="po-textual">compatibleInputDevices</textual></code><textual class="po-textual">
   child element. Most of these elements use enumerated lists to eliminate possible typos and to
   ease the acquisition of new reviews.</textual></para><para class="po-block e163 e163"><textual class="po-textual">The main part of the review is stored underneath the </textual><code class="po-atom e164 e164"><textual class="po-textual">review</textual></code><textual class="po-textual"> element that
   consists of the </textual><code class="po-atom e165 e165"><textual class="po-textual">mainText</textual></code><textual class="po-textual"> and </textual><code class="po-atom e166 e166"><textual class="po-textual">conclusion</textual></code><textual class="po-textual"> elements and further optional
   screenshots and that has a </textual><code class="po-atom e167 e167"><textual class="po-textual">date</textual></code><textual class="po-textual"> attribute and an </textual><code class="po-atom e168 e168"><textual class="po-textual">author</textual></code><textual class="po-textual"> attribute
   group. The running text is subdivided into optional headers and paragraphs, allowing a fine
   grained division of text parts and representing both review types.</textual></para><para class="po-block e169 e169"><textual class="po-textual">The </textual><code class="po-atom e170 e170"><textual class="po-textual">conclusion</textual></code><textual class="po-textual"> element is used to store both further text (e.g. in a form of a
   final verdict similar to the Type B reviews) and the tabular-like lists of pros and cons,
   followed by the final </textual><code class="po-atom e171 e171"><textual class="po-textual">score</textual></code><textual class="po-textual"> element. Scoring can be expressed either via numeric
   values (using the </textual><code class="po-atom e172 e172"><textual class="po-textual">percent</textual></code><textual class="po-textual"> child element with its attributes </textual><code class="po-atom e173 e173"><textual class="po-textual">graphics</textual></code><textual class="po-textual">,
    </textual><code class="po-atom e174 e174"><textual class="po-textual">sound</textual></code><textual class="po-textual"> (optional), </textual><code class="po-atom e175 e175"><textual class="po-textual">multiplayer</textual></code><textual class="po-textual"> (optional) and </textual><code class="po-atom e176 e176"><textual class="po-textual">overall</textual></code><textual class="po-textual">) or
   through text, since both variants can be found in our sample data.</textual></para><para class="po-block e177 e177"><textual class="po-textual">This grammar can not only be used to store the information coded in both review types but
   also is highly flexible for future extensions. Possible future extensions of the schema may
   include XSD 1.1 assertions, for example, to ensure that multiplayer scoring information is only
   allowed when the maximum number of players is greater than "1".</textual></para></section><section class="po-hcontainer e178 e178" xml:id="conversion"><title class="po-block e179 e179"><textual class="po-textual">Upconversion</textual></title><para class="po-block e180 e180"><textual class="po-textual">Our upconversion process begins in the typical manner by using XSLT 2.0 / XPath 2.0 </textual><xref class="po-milestone e181 e181" linkend="bibKay2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Because it requires multiple steps and must be applied to many files, we
   have encapsulated it in XProc.</textual></para><section class="po-hcontainer e182 e182"><title class="po-block e183 e183"><textual class="po-textual">XSLT 2.0 benefits</textual></title><para class="po-block e184 e184"><textual class="po-textual">In his paper "Up-conversion using XSLT 2.0" Michael Kay points out the great advances XSLT
    made when shifting to XSLT 2.0, and he provides a real-world example that makes heavy use of the
    new features. The key features which produce benefit for upconversion are in short
    schema-awareness, support for regular expression processing, better manipulation of strings, and
    advanced grouping possibilities. So tasks that formerly were often solved by using a general
    purpose scripting language like Perl or Python, by loading XML modules can be done equally well
    or better with XSLT 2.0 [See </textual><xref class="po-milestone e185 e185" linkend="bibKay2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> for an elaborated example]. Our
    upconversion of the reviews mostly makes use of regular expression processing and string
    manipulation. </textual></para><para class="po-block e186 e186"><textual class="po-textual">The documents are preprocessed into well formed XML using HTML Tidy. </textual><footnote class="po-popup e187 e187"><para class="po-block e188 e188"><link class="po-inline e189 e189" xlink:actuate="onRequest" xlink:href="http://tidy.sourceforge.net" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://tidy.sourceforge.net</textual></link><textual class="po-textual"> for further details.</textual></para></footnote><textual class="po-textual"> For the upconversion, both functions as well as named templates are used widely. The
    following snippet demonstrates the massive clean-up the stylesheet performs. It is taken from
    the extensive </textual><code class="po-atom e190 e190"><textual class="po-textual">main</textual></code><textual class="po-textual"> template, which uses a variable to hold the string with
    information about the genre of the reviewed game (</textual><xref class="po-milestone e191 e191" linkend="fig.xslt.genretemp"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). This
    string is checked for both Type A and Type B data equally but it is applied differently with
    respect to the structure. </textual><figure class="po-container e192 e192" xml:id="fig.xslt.genretemp"><title class="po-block e193 e193"><textual class="po-textual">Extracting information</textual></title><programlisting class="po-block e194 e194" xml:space="preserve"><textual class="po-textual">&lt;xsl:variable name="genreTemp"&gt;
 &lt;xsl:choose&gt;
  &lt;!-- new type --&gt;
  &lt;xsl:when test="/descendant::table[3]/descendant::td[2]/descendant::div[contains(.,'GEN')]"&gt;
   &lt;xsl:analyze-string select="/descendant::table[3]/descendant::td[2]/descendant::div[contains(.,'GEN')]" 
      regex="GENRE:\s(.*)\sSPIEL"&gt; 
    &lt;xsl:matching-substring&gt; 
     &lt;xsl:value-of select="regex-group(1)"/&gt; 
    &lt;/xsl:matching-substring&gt;  
   &lt;/xsl:analyze-string&gt;     
  &lt;/xsl:when&gt;
  &lt;!-- old type --&gt;
   &lt;xsl:otherwise&gt;
    &lt;xsl:value-of select="/descendant::table[1]/descendant::font[contains(.,'GEN')]/following::i[1]"/&gt;
   &lt;/xsl:otherwise&gt;
 &lt;/xsl:choose&gt;
&lt;/xsl:variable&gt;</textual></programlisting></figure><textual class="po-textual"> This variable is then checked against regular expressions to assign the respective
    value from the defined enumerated list. </textual><xref class="po-milestone e195 e195" linkend="fig.xslt.genrechoose"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> demonstrates the
    assignment of some genres and a sub genre, implemented using case differentiation that takes
    advantage of the order of the test expressions. </textual><figure class="po-container e196 e196" xml:id="fig.xslt.genrechoose"><title class="po-block e197 e197"><textual class="po-textual">Structuring information</textual></title><programlisting class="po-block e198 e198" xml:space="preserve"><textual class="po-textual">&lt;xsl:when test="matches($genreTemp, 'A[\w\.\s]*Adv')"&gt;
 &lt;xsl:attribute name="genre"&gt;Action-Adventure&lt;/xsl:attribute&gt;
&lt;/xsl:when&gt;
&lt;!-- [...] --&gt;
&lt;xsl:when test="matches ($genreTemp, '[sS]port|[bB]all|board|Golf|Box|[hH]ock|[tT]enn|Wrest')"&gt;
 &lt;xsl:attribute name="genre"&gt;Sport&lt;/xsl:attribute&gt;
&lt;/xsl:when&gt;
&lt;xsl:when test="matches($genreTemp, '[Aa]ction|Hack|[sS]hoot|Ego|Prüg|FPS')"&gt;
 &lt;xsl:attribute name="genre"&gt;Action&lt;/xsl:attribute&gt; 
  &lt;xsl:choose&gt;
   &lt;xsl:when test="matches($genreTemp, 'Ego|FPS')"&gt;
    &lt;xsl:attribute name="subgenre"&gt;First Person Action&lt;/xsl:attribute&gt;
   &lt;/xsl:when&gt;
   &lt;!-- [...] --&gt;</textual></programlisting></figure><textual class="po-textual"> Because the data varies a lot throughout the transformation, many case
    differentiations are used. To find the title of some documents information stored into external
    documents has to be taken into account. In </textual><xref class="po-milestone e199 e199" linkend="fig.xslt.title"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, a linked "cheats"
    or "tips" document is accessed to extract the game title that is hidden in the backlink to the
    review document. </textual><figure class="po-container e200 e200" xml:id="fig.xslt.title"><title class="po-block e201 e201"><textual class="po-textual">Extracting the game title from an external document</textual></title><programlisting class="po-block e202 e202" xml:space="preserve"><textual class="po-textual">&lt;xsl:when test="/descendant::table[2]/descendant::td[1]/div[1]/
 descendant::a[doc-available(concat($filepath,(replace
 (attribute::href, '-i.htm', '-t.xml'))))]"&gt;
 &lt;xsl:variable name="doc" select="concat($filepath,replace
  (/descendant::table[2]/descendant::td[1]/div[1]/descendant::a/
  attribute::href, '-i.htm', '-t.xml'))"/&gt;
 &lt;xsl:value-of select="document($doc,.)/descendant::table[1]/descendant::a[1]"/&gt;
&lt;/xsl:when&gt;</textual></programlisting></figure><textual class="po-textual"> Throughout the transformation many more requirements are met in carrying out the
    upconversion. The examples above are simply illustrative of the process without going into
    complete detail. </textual></para></section><section class="po-hcontainer e203 e203" xml:id="pipelining"><title class="po-block e204 e204"><textual class="po-textual">Pipelining with XProc</textual></title><para class="po-block e205 e205"><textual class="po-textual">XProc a new standard for automating processes like ours through an XML pipeline has been
    developed by the W3 working group </textual><xref class="po-milestone e206 e206" linkend="bibW3C.XProc2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. It has reached the status
    of W3C Recommendation on 11 May 2010 after being advanced to Proposed Recommendation in March
    2010. The specification had been downgraded from Candidate Recommendation to Working Draft again
    in January to solve some issues. It has reached a fairly stable level now, and a book on XProc
    by Norman Walsh is in progress.</textual><footnote class="po-popup e207 e207"><para class="po-block e208 e208"><link class="po-inline e209 e209" xlink:actuate="onRequest" xlink:href="http://norman.walsh.name/2010/04/12/xprocbook" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://norman.walsh.name/2010/04/12/xprocbook</textual></link><textual class="po-textual"> and </textual><link class="po-inline e210 e210" xlink:actuate="onRequest" xlink:href="http://xprocbook.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://xprocbook.com/</textual></link><textual class="po-textual">.</textual></para></footnote><textual class="po-textual"> For our desired all-in-one XML solution, XProc is first choice to handle the
    pipeline.</textual></para><para class="po-block e211 e211"><textual class="po-textual">The pipeline should process the documents that are stored locally in the filesystem
    recursively (</textual><xref class="po-milestone e212 e212" linkend="fig.filesystem"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). There are documents other than game reviews
    (e.g. cheats and tricks), and we need some of them to extract the titles of games, but most of
    these documents are discarded. One problem here is that while we can say from the filename what
    is most likely </textual><emphasis class="po-inline e213 e213"><textual class="po-textual">not</textual></emphasis><textual class="po-textual"> a test, but not what actually is. </textual><figure class="po-container e214 e214" xml:id="fig.filesystem"><title class="po-block e215 e215"><textual class="po-textual">An overview of the filesystem</textual></title><mediaobject class="po-container e216 e216"><imageobject class="po-container e217 e217"><imagedata class="po-meta e218 e218" fileref="../../../vol5/graphics/Haupt01/Haupt01-004.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><textual class="po-textual"> The pipeline will apply the following tasks to each HTML document: </textual><itemizedlist class="po-table e219 e219"><listitem class="po-container e220 e220"><para class="po-block e221 e221"><textual class="po-textual">Use HTML Tidy to transform the HTML input into well-formed XML</textual></para></listitem><listitem class="po-container e222 e222"><para class="po-block e223 e223"><textual class="po-textual">Apply the XSLT script to the output of the former task using an XSLT 2.0
       processor</textual></para></listitem><listitem class="po-container e224 e224"><para class="po-block e225 e225"><textual class="po-textual">Validate the output files according to the XML schema</textual></para></listitem><listitem class="po-container e226 e226"><para class="po-block e227 e227"><textual class="po-textual">Separate valid from invalid documents</textual></para></listitem><listitem class="po-container e228 e228"><para class="po-block e229 e229"><textual class="po-textual">Provide a log of valid documents</textual></para></listitem></itemizedlist><textual class="po-textual"> XProc suits these needs well, and, as an XML language, ensures perfect XML
    compatibility. For processing we use XML Calabash version 0.9.21.</textual><footnote class="po-popup e230 e230"><para class="po-block e231 e231"><link class="po-inline e232 e232" xlink:actuate="onRequest" xlink:href="http://xmlcalabash.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://xmlcalabash.com/</textual></link><textual class="po-textual"> for further details.</textual></para></footnote><textual class="po-textual"> As another option, Calumet 1.0.11,</textual><footnote class="po-popup e233 e233"><para class="po-block e234 e234"><link class="po-inline e235 e235" xlink:actuate="onRequest" xlink:href="https://community.emc.com/community/edn/xmltech" xlink:show="new" xlink:type="simple"><textual class="po-textual">https://community.emc.com/community/edn/xmltech</textual></link><textual class="po-textual"> for further details.</textual></para></footnote><textual class="po-textual"> was taken into account, but since Calumet currently does not support XPath 2.0, we
    stick to XML Calabash. We prepared the documents so the encoding of the files is either
    ISO-8859-1 or UTF-8 and the special characters are masked as numeric entities for the moment.
    Otherwise there would be encoding errors in the result XML documents. Since the pipeline shall
    take HTML documents as input and shall process all of them in sequential order some preparatory
    steps are used to make the documents accessible inside the XML pipeline. </textual><xref class="po-milestone e236 e236" linkend="fig.pipelinepreparations"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> provides a simplified overview of the first steps of the
     pipeline.</textual><figure class="po-container e237 e237" xml:id="fig.pipelinepreparations"><title class="po-block e238 e238"><textual class="po-textual">Preparatory steps</textual></title><mediaobject class="po-container e239 e239"><imageobject class="po-container e240 e240"><imagedata class="po-meta e241 e241" fileref="../../../vol5/graphics/Haupt01/Haupt01-005.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><textual class="po-textual"> We chose </textual><code class="po-atom e242 e242"><textual class="po-textual">p:declare-step</textual></code><textual class="po-textual"> as root element for good control of input and
    output ports. Both are set to allow any number of documents. Since parameters are to be used for
    XSLT transformation, we need the optional input port "parameters" - because it is the only
    parameter port in the pipeline it is primary by default. The source directory HTML is bound to a
    variable and made accessible for the step </textual><code class="po-atom e243 e243"><textual class="po-textual">p:directory-list</textual></code><textual class="po-textual">, which here returns the
    system-folders in c-namespace (</textual><xref class="po-milestone e244 e244" linkend="fig.pipeline.c.start"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual><figure class="po-container e245 e245" xml:id="fig.pipeline.c.start"><title class="po-block e246 e246"><textual class="po-textual">Setting the basics</textual></title><programlisting class="po-block e247 e247" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0"?&gt;
&lt;p:declare-step xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step"
  name="main" version="1.0"&gt;
 &lt;p:input port="parameters" kind="parameter"/&gt; 
 &lt;p:input port="source" sequence="true"/&gt;
 &lt;p:output port="result" sequence="true"&gt;
  &lt;p:pipe port="result" step="loglast"/&gt;
 &lt;/p:output&gt;
 &lt;p:variable name="input" select="'HTML'"/&gt; 
 &lt;p:directory-list name="directories"&gt;
  &lt;p:with-option name="path" select="$input"/&gt;  
 &lt;/p:directory-list&gt;</textual></programlisting></figure><textual class="po-textual"> To advance deeper into the structure we use nested </textual><code class="po-atom e248 e248"><textual class="po-textual">p:for-each</textual></code><textual class="po-textual"> loops; of
    course, the output port needs to be set to accept sequences. Next we list the subdirectories,
    consisting mainly of game-folders (</textual><xref class="po-milestone e249 e249" linkend="fig.pipeline.c.loop"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual><figure class="po-container e250 e250" xml:id="fig.pipeline.c.loop"><title class="po-block e251 e251"><textual class="po-textual">The main loop</textual></title><programlisting class="po-block e252 e252" xml:space="preserve"><textual class="po-textual">&lt;p:for-each name="directoryloop"&gt;  
 &lt;p:output port="result" sequence="true"/&gt;
 &lt;p:iteration-source select="/c:directory/c:directory"/&gt;  
 &lt;p:variable name="dirpath"
  select="concat($input,'/', c:directory/@name)"/&gt;  
 &lt;p:directory-list name="subdirectories"&gt;
  &lt;p:with-option name="path" select="$dirpath"/&gt;
 &lt;/p:directory-list&gt;</textual></programlisting></figure><textual class="po-textual"> Now we loop over the game-folders (not shown due to space restrictions) and prepare
    the files for accessibility. First we add the base-uri to get the complete filepath using
     </textual><code class="po-atom e253 e253"><textual class="po-textual">p:make-absolute-uris</textual></code><textual class="po-textual">. Then we add slashes using </textual><code class="po-atom e254 e254"><textual class="po-textual">p:string-replace</textual></code><textual class="po-textual"> to
    ensure accordance to the file protocol. To make sure the file is accessible for the
     </textual><code class="po-atom e255 e255"><textual class="po-textual">p:http-request</textual></code><textual class="po-textual"> step we rename the element </textual><code class="po-atom e256 e256"><textual class="po-textual">c:file</textual></code><textual class="po-textual"> to
     </textual><code class="po-atom e257 e257"><textual class="po-textual">c:request</textual></code><textual class="po-textual">.</textual><footnote class="po-popup e258 e258"><para class="po-block e259 e259"><textual class="po-textual">We will need </textual><code class="po-atom e260 e260"><textual class="po-textual">p:http-request</textual></code><textual class="po-textual">, although we work on the filesystem. This is
      because </textual><code class="po-atom e261 e261"><textual class="po-textual">p:data</textual></code><textual class="po-textual">, which one could expect here, is not a step and therefore does not
      accept options.</textual></para></footnote><textual class="po-textual"> Furthermore, we need to add the proper attributes for the
     </textual><code class="po-atom e262 e262"><textual class="po-textual">p:http-request</textual></code><textual class="po-textual"> step to work. Since there is no server involved and we do not want
    to work with binary data, we need to add the attribute </textual><code class="po-atom e263 e263"><textual class="po-textual">override-content-type</textual></code><textual class="po-textual"> and
    attach the value </textual><code class="po-atom e264 e264"><textual class="po-textual">text/html</textual></code><textual class="po-textual"> (</textual><xref class="po-milestone e265 e265" linkend="fig.pipeline.c.HTMLpreparations"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).
     </textual><figure class="po-container e266 e266" xml:id="fig.pipeline.c.HTMLpreparations"><title class="po-block e267 e267"><textual class="po-textual">Preparing to process HTML</textual></title><programlisting class="po-block e268 e268" xml:space="preserve"><textual class="po-textual">&lt;p:make-absolute-uris match="c:file/@name"&gt;
 &lt;p:with-option name="base-uri" select="concat($subdirpath, '/', c:directory/@name)"/&gt;
&lt;/p:make-absolute-uris&gt;
&lt;p:string-replace match="c:file/@name" replace="replace(., 'file:', 'file://')" name="replace"/&gt;
&lt;p:rename match="c:file" new-name="c:request"/&gt;
&lt;p:rename match="@name" new-name="href"/&gt;
&lt;p:add-attribute match="c:request" attribute-name="method" attribute-value="get"/&gt;
&lt;p:add-attribute match="c:request" attribute-name="override-content-type" attribute-value="text/html"/&gt;</textual></programlisting></figure><textual class="po-textual"> Now we can process the HTML documents in sequence. We use a filter to exclude
    documents which are not reviews and will not help us to find game titles (</textual><xref class="po-milestone e269 e269" linkend="fig.pipeline.c.filter"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). These documents may be reader reviews that follow no
    certain structure, hardware reviews, or other texts. Files that may help us to find missing game
    titles contain these abbreviations: </textual><code class="po-atom e270 e270"><textual class="po-textual">opt|chea|tipp|herz|guid|pass</textual></code><textual class="po-textual">. </textual><figure class="po-container e271 e271" xml:id="fig.pipeline.c.filter"><title class="po-block e272 e272"><textual class="po-textual">Filtering documents not needed</textual></title><programlisting class="po-block e273 e273" xml:space="preserve"><textual class="po-textual">&lt;p:filter name="filter" select="//c:request[matches(@href, '-i.htm')] 
  except //c:request[matches(@href, 'les[0-9]|hardware|wifi|wiiware|leser|preview|xpl|wer\.')]"/&gt;
&lt;p:for-each name="fileloop"&gt;
 &lt;p:output port="result" sequence="true"/&gt;</textual></programlisting></figure><textual class="po-textual"> For the filtered documents, the second and, therefore, the main part of the pipeline
    is initiated (</textual><xref class="po-milestone e274 e274" linkend="fig.pipeline.main.part"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). If something goes wrong during the
    upconversion, we want to be able to check in which step and what the reason may be, so each of
    the main steps has its output stored apart from each other. We nest </textual><code class="po-atom e275 e275"><textual class="po-textual">try-catch</textual></code><textual class="po-textual">
    clauses to ensure the flow of the pipeline. </textual><figure class="po-container e276 e276" xml:id="fig.pipeline.main.part"><title class="po-block e277 e277"><textual class="po-textual">An overview of the main steps</textual></title><mediaobject class="po-container e278 e278"><imageobject class="po-container e279 e279"><imagedata class="po-meta e280 e280" fileref="../../../vol5/graphics/Haupt01/Haupt01-006.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><textual class="po-textual"> The variable </textual><code class="po-atom e281 e281"><textual class="po-textual">file</textual></code><textual class="po-textual"> holds the URI of each file. It will be available
    throughout the loop and not only serve to get each file but to store each file in its given
    folder. So first we convert these files that pass the filter through HTML Tidy via
     </textual><code class="po-atom e282 e282"><textual class="po-textual">p:exec</textual></code><textual class="po-textual">, which can take non-XML input and provides safety (</textual><xref class="po-milestone e283 e283" linkend="fig.pipeline.c.exec"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). We could use </textual><code class="po-atom e284 e284"><textual class="po-textual">p:unescape-markup</textual></code><textual class="po-textual"> in conjunction
    with Tagsoup 1.2</textual><footnote class="po-popup e285 e285"><para class="po-block e286 e286"><link class="po-inline e287 e287" xlink:actuate="onRequest" xlink:href="http://ccil.org/~cowan/XML/tagsoup/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://ccil.org/~cowan/XML/tagsoup/</textual></link><textual class="po-textual"> for
      further details.</textual></para></footnote><textual class="po-textual"> or HTML Tidy as an alternative solution here, but as XML Calabash so far only
    implemented Tagsoup for reading HTML and the results from HTML Tidy and Tagsoup differ slightly,
    we stick to </textual><code class="po-atom e288 e288"><textual class="po-textual">p:exec</textual></code><textual class="po-textual">. Calumet supports both HTML Tidy and Tagsoup for this step, but
    as we are using XPath 2.0 we cannot use this option. We set </textual><code class="po-atom e289 e289"><textual class="po-textual">source-is-xml</textual></code><textual class="po-textual"> to false
    and </textual><code class="po-atom e290 e290"><textual class="po-textual">result-is-xml</textual></code><textual class="po-textual"> to true. By default, result lines are wrapped, and the output of
    this step is also wrapped to ensure wellformed XML documents on the output port. We negate
     </textual><code class="po-atom e291 e291"><textual class="po-textual">wrap-result-lines</textual></code><textual class="po-textual"> and unwrap the output of the step. (Note that the arguments for
    HTML Tidy need to be in a single line.) </textual><figure class="po-container e292 e292" xml:id="fig.pipeline.c.exec"><title class="po-block e293 e293"><textual class="po-textual">Using </textual><code class="po-atom e294 e294"><textual class="po-textual">p:exec</textual></code><textual class="po-textual"> to do a first cleanup </textual></title><programlisting class="po-block e295 e295" xml:space="preserve"><textual class="po-textual">&lt;p:variable name="file" select="c:request/@href"/&gt;    
&lt;p:http-request/&gt;
&lt;p:exec command="/usr/bin/tidy" source-is-xml="false" result-is-xml="true" wrap-result-lines="false"&gt;
 &lt;p:with-option name="args" select=
  "'--quiet yes --show-warnings no --output-xml yes --bare yes --doctype omit 
  --numeric-entities yes --char-encoding utf8'"/&gt;
&lt;/p:exec&gt;
&lt;p:unwrap match="c:result"/&gt;</textual></programlisting></figure><textual class="po-textual">
   </textual></para><para class="po-block e296 e296"><textual class="po-textual"> The output of this step is saved to folder "Tidied" as "filename.xml" and chained to the
    next step </textual><code class="po-atom e297 e297"><textual class="po-textual">p:xslt</textual></code><textual class="po-textual">. As a precaution, this step along with the connected saving
    procedure is encapsulated into a try group. If any of this fails, we record the tidied file to
    the folder "Transform-failed". The </textual><code class="po-atom e298 e298"><textual class="po-textual">p:xslt</textual></code><textual class="po-textual"> step takes three input ports, one for the
    stylesheet, one for the XML document and one for parameters (</textual><xref class="po-milestone e299 e299" linkend="fig.pipeline.c.xslt"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). The filepath needs to be provided to the stylesheet to ensure reaching the documents that
    will be consulted for missing titles. The filename and system folder are processed inside the
    transformation as well. </textual></para><figure class="po-container e300 e300" xml:id="fig.pipeline.c.xslt"><title class="po-block e301 e301"><textual class="po-textual">Transformation using parameters</textual></title><programlisting class="po-block e302 e302" xml:space="preserve"><textual class="po-textual">&lt;p:xslt name="transform"&gt;
 &lt;p:input port="source"&gt;
  &lt;p:pipe port="result" step="tidy"/&gt;
 &lt;/p:input&gt;
 &lt;p:input port="stylesheet"&gt;
  &lt;p:document href="test2xml.xsl"/&gt;
 &lt;/p:input&gt;
 &lt;p:with-param name="xpr.platform" select="tokenize($file, '/')[last()-2]"&gt;
  &lt;p:pipe port="parameters" step="main"/&gt;
 &lt;/p:with-param&gt;
 &lt;p:with-param name="xpr.filename" select="substring-before(tokenize($file, '/')[last()], '-i.htm')"&gt;
  &lt;p:pipe port="parameters" step="main"/&gt;
 &lt;/p:with-param&gt;
 &lt;p:with-param name="xpr.filepath" select="$file"&gt;
  &lt;p:pipe port="parameters" step="main"/&gt;
 &lt;/p:with-param&gt;
&lt;/p:xslt&gt;</textual></programlisting></figure><para class="po-block e303 e303"><textual class="po-textual"> If the transformation and the saving process can be executed successfully, the output of
    this step serves as input for </textual><code class="po-atom e304 e304"><textual class="po-textual">p:validate-with-xml-schema</textual></code><textual class="po-textual"> (</textual><xref class="po-milestone e305 e305" linkend="fig.pipeline.c.validation"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Depending on the output of this step, the documents are
    saved separately. Valid documents can be found in the 'Schema-Valid' folder and the invalid in
    the 'Schema-Invalid' folder. (During the programming of the XSLT-Transformation, invalid
    documents give hints for expressions in need of improvement.) </textual><figure class="po-container e306 e306" xml:id="fig.pipeline.c.validation"><title class="po-block e307 e307"><textual class="po-textual">Schema validation of transformation result</textual></title><programlisting class="po-block e308 e308" xml:space="preserve"><textual class="po-textual">&lt;p:try&gt;
 &lt;p:group&gt;            
  &lt;p:validate-with-xml-schema mode="strict" name="validate"&gt;      
   &lt;p:input port="source"&gt;
    &lt;p:pipe port="result" step="transform"/&gt;
   &lt;/p:input&gt;
   &lt;p:input port="schema"&gt;
    &lt;p:document href="Struktur.xsd"/&gt;
   &lt;/p:input&gt;        
  &lt;/p:validate-with-xml-schema&gt;        
  &lt;p:store name="storeValid"&gt;&lt;!-- [...] --&gt;&lt;/p:store&gt; 
  &lt;p:identity&gt;
   &lt;p:input port="source"&gt;&lt;p:pipe step="storeValid" port="result"/&gt;&lt;/p:input&gt;
  &lt;/p:identity&gt; 
 &lt;/p:group&gt;       
 &lt;p:catch&gt;
  &lt;p:identity&gt;
   &lt;p:input port="source"&gt;&lt;p:pipe step="transform" port="result"/&gt;&lt;/p:input&gt;
  &lt;/p:identity&gt;        
  &lt;p:store name="storeInvalid"&gt;&lt;!-- [...] --&gt;&lt;/p:store&gt;
 &lt;/p:catch&gt;
&lt;/p:try&gt;</textual></programlisting></figure><textual class="po-textual"> The last steps of the pipeline follow after the loops and take the result of the loop
    started in </textual><xref class="po-milestone e309 e309" linkend="fig.pipeline.c.loop"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Here we create an XML document which takes the
     </textual><code class="po-atom e310 e310"><textual class="po-textual">c:result</textual></code><textual class="po-textual"> elements returned by the step </textual><code class="po-atom e311 e311"><textual class="po-textual">directoryloop</textual></code><textual class="po-textual"> and lists them
    for an overview (</textual><xref class="po-milestone e312 e312" linkend="pipeline.c.logvalid"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual><figure class="po-container e313 e313" xml:id="pipeline.c.logvalid"><title class="po-block e314 e314"><textual class="po-textual">Logging the valid files</textual></title><programlisting class="po-block e315 e315" xml:space="preserve"><textual class="po-textual">&lt;p:documentation&gt;Wrap result for info.&lt;/p:documentation&gt;
&lt;p:wrap-sequence wrapper="directoryloop"/&gt;
&lt;p:store name="loglast"&gt;
 &lt;p:with-option name="href" select="'file:///home/user/loglaststep.xml'"/&gt;
 &lt;p:with-option name="encoding" select="'UTF-8'"/&gt;
 &lt;p:with-option name="omit-xml-declaration" select="'false'"/&gt;
 &lt;p:with-option name="indent" select="'true'"/&gt;
&lt;/p:store&gt;</textual></programlisting></figure><textual class="po-textual">
   </textual></para><para class="po-block e316 e316"><textual class="po-textual">This pipeline takes approximately half an hour to process the data, and is relatively
    independent of CPU speed on an average actual system. It results in 1573 schema-valid files.
   </textual></para></section><section class="po-hcontainer e317 e317"><title class="po-block e318 e318"><textual class="po-textual">The result of the upconversion process</textual></title><para class="po-block e319 e319"><textual class="po-textual">
    </textual><xref class="po-milestone e320 e320" linkend="fig.instance"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows an excerpt of an instance coded in the target output format
    according to the XML schema. The critical information is marked up with the help of appropriate
    elements or attributes. Conversions of a game (i.e., the release on different platforms) are
    supported, as well, by separating the general information such as title and genre from the
    platform for which the review is written. The verdict contains the list of "pro" and "con" items
    and the score (depending on the input review type, subdivided into single figures for game
    graphics, sound, multiplayer and overall) in a highly-structured form that allows easy access to
    relevant criteria.</textual></para><figure class="po-container e321 e321" xml:id="fig.instance"><title class="po-block e322 e322"><textual class="po-textual">The result of the upconversion</textual></title><programlisting class="po-block e323 e323" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;game xml:id="d1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="Struktur.xsd" genre="Jump 'n' Run"&gt;
 &lt;title abbreviation="rayman3"&gt;Rayman3 Hoodlum Havoc&lt;/title&gt;
 &lt;platforms&gt;
  &lt;videoGameConsole type="GCN"&gt;
   &lt;developer&gt;Ubi Soft&lt;/developer&gt;
   &lt;difficulty min="1" max="6"/&gt;
   &lt;release&gt;
    &lt;languages&gt;
     &lt;spoken xml:lang="de"/&gt;
    &lt;/languages&gt;
    &lt;price currency="EUR"&gt;60&lt;/price&gt;
   &lt;/release&gt;
   &lt;player min="1" max="4"/&gt;
   &lt;techSpecs&gt;
    &lt;item&gt;PAL&lt;/item&gt;
    &lt;item&gt;GCN-GBA-Link&lt;/item&gt;
   &lt;/techSpecs&gt;
   &lt;saving mode="Memorycard" blocks="8"/&gt;
   &lt;compatibleInputDevices&gt;
    &lt;item&gt;Gamecube Controller&lt;/item&gt;
    &lt;item&gt;GBA&lt;/item&gt;
   &lt;/compatibleInputDevices&gt;
   &lt;review date="2003-02-24" authorFirstname="Matthias"
    authorLastname="Engert"&gt;
    &lt;mainText&gt;
     &lt;paragraph&gt;Bisher hat uns Ubi Soft ja (...)&lt;/paragraph&gt;
     &lt;paragraph&gt;Durch den Score werden (...)&lt;/paragraph&gt;
     &lt;paragraph&gt;(...)&lt;/paragraph&gt;
    &lt;/mainText&gt;
    &lt;conclusion&gt;
     &lt;pro&gt;
      &lt;item&gt;Unterhaltsames Gameplay&lt;/item&gt;
     &lt;/pro&gt;
     &lt;contra&gt;
      &lt;item&gt;Ende wird zu schnell erreicht&lt;/item&gt;
     &lt;/contra&gt;
     &lt;score&gt;
      &lt;percent graphics="85" sound="85" multiplayer="82"
       overall="82"/&gt;
     &lt;/score&gt;
    &lt;/conclusion&gt;
   &lt;/review&gt;
  &lt;/videoGameConsole&gt;
 &lt;/platforms&gt;
&lt;/game&gt;</textual></programlisting></figure></section></section><section class="po-hcontainer e324 e324" xml:id="benefits"><title class="po-block e325 e325"><textual class="po-textual">Benefits of highly structured data — searching for the game according to your
   flavour</textual></title><para class="po-block e326 e326"><textual class="po-textual">The result instances of the automatic upconversion process discussed in the </textual><xref class="po-milestone e327 e327" linkend="conversion"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> contains highly structured information. All relevant and important data
   that was formerly hidden inside HTML's </textual><code class="po-atom e328 e328"><textual class="po-textual">table</textual></code><textual class="po-textual"> element or as part of the running text
   can be accessed via XPath or XQuery expressions </textual><xref class="po-milestone e329 e329" linkend="bibChamberlin2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, allowing for
   easy retrieval of reviews of games of certain types or according to certain criteria such as
   genre, price, and score. While the original structure of the </textual><emphasis class="po-inline e330 e330" role="ital"><textual class="po-textual">Mag'64</textual></emphasis><textual class="po-textual"> Web site offered access to the review based on either the video game system
   or the name of the game, a full-text search engine was not implemented. We have </textual><textual class="po-textual">
   developed some sample XQuery queries that allow for a different kind of retrieval of game
   reviews.</textual></para><section class="po-hcontainer e331 e331"><title class="po-block e332 e332"><textual class="po-textual">Alternative access to the reviews</textual></title><para class="po-block e333 e333"><textual class="po-textual">The query </textual><code class="po-atom e334 e334"><textual class="po-textual">genres.xq</textual></code><textual class="po-textual"> uses two parameters, genre and platform, to search for
    games of a certain genre on a specific platform by using a collection of all valid XML instance
    documents. </textual><xref class="po-milestone e335 e335" linkend="genres.xq.result"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the output of the </textual><code class="po-atom e336 e336"><textual class="po-textual">genres.xq</textual></code><textual class="po-textual">
    with the value "Wii" for the platform parameter and the value "Puzzle"
    supplied for the genre paramater. Since this query was originally developed as a alternative
    access mechanism, the information returned is very sparse. However, in combination with
    </textual><textual class="po-textual"> (X)HTML output containing hyperlinks to the respective review page, it would be
    sufficient.</textual></para><figure class="po-container e337 e337" xml:id="genres.xq.result"><title class="po-block e338 e338"><textual class="po-textual">Result example for </textual><code class="po-atom e339 e339"><textual class="po-textual">genres.xq</textual></code></title><programlisting class="po-block e340 e340" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;games on="Wii" type="Puzzle"&gt;
 &lt;instance score="85" abbreviation="pqwii"&gt;Puzzle Quest: Challenge of the Warlords&lt;/instance&gt;
 &lt;instance score="80" abbreviation="jewel"&gt;Jewel Master: Cradle of Rom&lt;/instance&gt;
 &lt;instance score="79" abbreviation="phwwii"&gt;Professor Heinz Wolff's Gravity&lt;/instance&gt;
 &lt;instance score="76" abbreviation="bbawii"&gt;Big Brain Academy &lt;/instance&gt;
 &lt;instance score="50" abbreviation="jengawii"&gt;Jenga World Tour &lt;/instance&gt;
&lt;/games&gt;</textual></programlisting></figure></section><section class="po-hcontainer e341 e341"><title class="po-block e342 e342"><textual class="po-textual">Finding a game according to specific features</textual></title><para class="po-block e343 e343"><textual class="po-textual">Sometimes a user searches for games that support certain technical features, such as online
    content, multiplayer, etc. The </textual><code class="po-atom e344 e344"><textual class="po-textual">techspecs.xq</textual></code><textual class="po-textual"> query uses the parameter platform and
    techspec to retrieve only the reviews of games that include the provided feature. </textual><xref class="po-milestone e345 e345" linkend="techspecs.xq.result"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows an example result.</textual></para><figure class="po-container e346 e346" xml:id="techspecs.xq.result"><title class="po-block e347 e347"><textual class="po-textual">Result example for </textual><code class="po-atom e348 e348"><textual class="po-textual">techspecs.xq</textual></code></title><programlisting class="po-block e349 e349" xml:space="preserve"><textual class="po-textual">&lt;games on="NDS" featuring="Online"&gt;
 &lt;instance score="92" abbreviation="suik"&gt;Suikoden Tierkreis &lt;/instance&gt;
 &lt;instance score="90" abbreviation="layton"&gt;Professor Layton und das geheimnisvolle Dorf&lt;/instance&gt;
 &lt;instance score="89" abbreviation="fesd"&gt;Fire Emblem : Shadow Dragon&lt;/instance&gt;
 &lt;instance score="88" abbreviation="cpor"&gt;Castlevania: Portrait of Ruin&lt;/instance&gt;(...)
&lt;/games&gt;</textual></programlisting></figure></section><section class="po-hcontainer e350 e350"><title class="po-block e351 e351"><textual class="po-textual">A more elaborated example: a wish list</textual></title><para class="po-block e352 e352"><textual class="po-textual">Kids love video games these days, and often they leave their parents behind when it comes
    to choosing the right game for a present. We will demonstrate the benefits of highly structured
    data in this example. Consider a seven-year-old child with a </textual><trademark class="po-null e353 registered e353"><textual class="po-textual">Nintendo DS</textual></trademark><textual class="po-textual"> who wants to get a racing game for his system. The parents might agree
    but formula additional constraints: the game to be bought should have a score of at least 70%
    and should be appropriate for kids of his age. Furthermore, the difficulty should not be too
    high.</textual></para><para class="po-block e354 e354"><textual class="po-textual">For this query different parameters have to be taken into account: the platform, the genre,
    age rating, score, and difficulty. The </textual><code class="po-atom e355 e355"><textual class="po-textual">shoppingList.xq</textual></code><textual class="po-textual"> query provides all these
    parameters (</textual><xref class="po-milestone e356 e356" linkend="shoppinglist.xq.xq"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Using Saxon as XQuery processor with the
    following call results in the output shown in </textual><xref class="po-milestone e357 e357" linkend="shoppinglist.xq.result"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><figure class="po-container e358 e358" xml:id="shoppinglist.xq.xq"><title class="po-block e359 e359"><textual class="po-textual">Query for a shopping list</textual></title><programlisting class="po-block e360 e360" xml:space="preserve"><textual class="po-textual">XQuery.sh shoppingList.xq age=7 platform=NDS score=70 genre=Rennspiel maxDifficulty=7</textual></programlisting></figure><figure class="po-container e361 e361" xml:id="shoppinglist.xq.result"><title class="po-block e362 e362"><textual class="po-textual">Result example for </textual><code class="po-atom e363 e363"><textual class="po-textual">shoppinglist.xq</textual></code></title><programlisting class="po-block e364 e364" xml:space="preserve"><textual class="po-textual">&lt;games maxAgeRating="7" on="NDS" maxDifficulty="7" type="Rennspiel" scoreAtLeast="70"&gt;
 &lt;instance ageRating="3" score="82" maxDifficulty="7" abbreviation="augt2" minDifficulty="1"&gt;
  &lt;title&gt;Asphalt Urban GT 2&lt;/title&gt;
  &lt;notes&gt;
   &lt;pro&gt;62 Meisterschaften&lt;/pro&gt;
   &lt;pro&gt;Für Fans von Arcade Steuerung&lt;/pro&gt;
   &lt;pro&gt;Sehr gute Framerate/Technik&lt;/pro&gt;
   &lt;pro&gt;Fahrzeugmodelle/Anzahl&lt;/pro&gt;
   &lt;pro&gt;Grafische Präsentation&lt;/pro&gt;
   &lt;pro&gt;Verschiedene Rennmodi&lt;/pro&gt;
   &lt;pro&gt;Werkstatt Feature&lt;/pro&gt;
   &lt;pro&gt;Gamespeed/Straßenverkehr&lt;/pro&gt;
   &lt;pro&gt;Motorrad Inhalte&lt;/pro&gt;
   &lt;contra&gt;Leichter als der Vorgänger&lt;/contra&gt;
   &lt;contra&gt;Polizei in den Meisterschaften&lt;/contra&gt;
   &lt;contra&gt;Kein 1C Multiplayer&lt;/contra&gt;
  &lt;/notes&gt;
 &lt;/instance&gt;
 &lt;instance ageRating="3" score="77" maxDifficulty="7" abbreviation="cnr" minDifficulty="1"&gt;
  &lt;title&gt;Cartoon Network Racing&lt;/title&gt;
  &lt;notes&gt;
   &lt;pro&gt;Gute Grundsteuerung&lt;/pro&gt;
   &lt;pro&gt;Umfangreich duch 4 Cups&lt;/pro&gt;
   &lt;pro&gt;Steigende Gegner KI&lt;/pro&gt;
   &lt;pro&gt;Lange Strecken&lt;/pro&gt;
   &lt;pro&gt;11 gelungene Strecken&lt;/pro&gt;
   &lt;pro&gt;Gelungene Items&lt;/pro&gt;
   &lt;pro&gt;Viele Belohnungen&lt;/pro&gt;
   &lt;pro&gt;Kart Curling Minispiel&lt;/pro&gt;
   &lt;contra&gt;Kurventechnik per R-Taste&lt;/contra&gt;
   &lt;contra&gt;5 der 16 Strecken&lt;/contra&gt;
   &lt;contra&gt;Single Card MP&lt;/contra&gt;
   &lt;contra&gt;Zu abruptes Bremsen bei Crashs&lt;/contra&gt;
  &lt;/notes&gt;
 &lt;/instance&gt;
&lt;/games&gt;</textual></programlisting></figure><para class="po-block e365 e365"><textual class="po-textual">The results are sorted according to the score in descending order (with 100 representing
    the best value). Each </textual><code class="po-atom e366 e366"><textual class="po-textual">instance</textual></code><textual class="po-textual"> element contains the age rating, score, and
    information about the difficulty, encoded in attribute values. Child elements are the title and
    the review notes, consisting of the "pros" and "cons" of the game. The </textual><code class="po-atom e367 e367"><textual class="po-textual">notes</textual></code><textual class="po-textual">
    element, in particular, may contain information that is subjective; it may occur that our
    example parents will judge a certain feature higher or lower than the reviewer did (or even
    think of a "con" as a "pro").</textual></para></section></section><section class="po-hcontainer e368 e368" xml:id="conclusion"><title class="po-block e369 e369"><textual class="po-textual">Conclusion</textual></title><para class="po-block e370 e370"><textual class="po-textual">The results of our work are of many kinds: first, the newly introduced features such as
   regular expressions and string manipulations qualify XSLT 2.0 as a full-fledged conversion tool
   for transforming weak structured data into a highly structured format. Second, if a
   transformation process has to be carried out multiple times and if other processing is involved,
   automation by using the XProc pipelining language is highly recommended. Both the XProc
   specification and the supporting software tools are ready for a productive environment.
   Furthermore, the output of the upconversion clearly shows a high potential in terms of
   flexibility and of the ability to retrieve certain information, as shown by our example
   applications using XQuery.</textual></para><para class="po-block e371 e371"><textual class="po-textual">We are certain that minor problems such as the one caused by the character encoding will be
   fixed during the ongoing development of XProc software. From our point of view, future
   modifications could result in a XSD 1.1 compatible XML schema supporting more video game systems
   or textual content that is not review related, such as cheats, hints, or walk-throughs. Both the
   XSLT script and the XQuery queries could be modified in how they interact with each other. For
   example, the distinction of different cases that is carried out by the XSLT script could be
   reformulated as pipeline step, allowing for a more maintainable XSLT script.</textual></para><para class="po-block e372 e372"><textual class="po-textual">In general, the realization of the pipeline and query system as a Web service in conjunction
   with a native XML database would result in an alternative search and retrieval mechanism that
   would indeed </textual><emphasis class="po-inline e373 e373" role="ital"><textual class="po-textual">search for the game according to your
   flavour.</textual></emphasis></para></section><bibliography class="po-hcontainer e374 e374"><title class="po-block e375 e375"><textual class="po-textual">Literature</textual></title><bibliomixed class="po-block e376 e376" xml:id="bibChamberlin2004" xreflabel="Chamberlin et al. (2004)"><textual class="po-textual"> Chamberlin, D., D.
   Draper, M. F. Fernández, M. Kay, J. Robie, M. Rys, J. Siméon, J. Tivy, and P. Wadler, </textual><emphasis class="po-inline e377 e377" role="ital"><textual class="po-textual">XQuery from the Experts: A Guide to the W3C XML Query Language.</textual></emphasis><textual class="po-textual"> Pearson
   Education. Addison-Wesley, Boston, 2004.</textual></bibliomixed><bibliomixed class="po-block e378 e378" xml:id="bibHTML3.2" xreflabel="HTML 3.2 Reference Specification"><textual class="po-textual"> Raggett, D.
    </textual><emphasis class="po-inline e379 e379" role="ital"><textual class="po-textual">HTML 3.2 Reference Specification.</textual></emphasis><textual class="po-textual"> W3C Recommendation. </textual><link class="po-inline e380 e380" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/REC-html32" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/REC-html32</textual></link><textual class="po-textual">, 1997. </textual></bibliomixed><bibliomixed class="po-block e381 e381" xml:id="bibHTML4.01" xreflabel="HTML 4.01"><textual class="po-textual"> Raggett, D., A. L. Hors, and I. Jacobs,
    </textual><emphasis class="po-inline e382 e382" role="ital"><textual class="po-textual">HTML 4.01 Specification.</textual></emphasis><textual class="po-textual"> W3C Recommendation 24 December 1999,
   World Wide Web Consortium. </textual><link class="po-inline e383 e383" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/1999/REC-html401-19991224" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/1999/REC-html401-19991224</textual></link><textual class="po-textual">, 1999. </textual></bibliomixed><bibliomixed class="po-block e384 e384" xml:id="bibHTML.ISO" xreflabel="HTML (ISO), ISO/IEC    15445:2000"><emphasis class="po-inline e385 e385" role="ital"><textual class="po-textual">Information technology — Document description and processing languages — HyperText
    Markup Language (HTML).</textual></emphasis><textual class="po-textual"> ISO/IEC 15445:2000, International standard, International
   Organization for Standardization, Geneva, 2000.</textual></bibliomixed><bibliomixed class="po-block e386 e386" xml:id="bibISO4217" xreflabel="ISO Country Codes, ISO 4217:2008"><textual class="po-textual">
   </textual><emphasis class="po-inline e387 e387" role="ital"><textual class="po-textual">Codes for the representation of currencies and funds.</textual></emphasis><textual class="po-textual"> ISO
   4217:2008, International standard, International Organization for Standardization, Geneva,
   2008.</textual></bibliomixed><bibliomixed class="po-block e388 e388" xml:id="bibKay2004" xreflabel="Kay (2004)"><textual class="po-textual"> Kay, M. "Up-conversion using XSLT 2.0."
    </textual><link class="po-inline e389 e389" xlink:actuate="onRequest" xlink:href="http://www.saxonica.com/papers/ideadb-1.1/mhk-paper.xml" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.saxonica.com/papers/ideadb-1.1/mhk-paper.xml</textual></link><textual class="po-textual">, 2004. </textual></bibliomixed><bibliomixed class="po-block e390 e390" xml:id="bibKay2008" xreflabel="Kay (2008)"><textual class="po-textual"> Kay, M. </textual><emphasis class="po-inline e391 e391" role="ital"><textual class="po-textual">XSLT 2.0
    and XPath 2.0 Programmer’s Reference.</textual></emphasis><textual class="po-textual"> Wiley Publishing, Indianapolis, 4th edition,
   2008.</textual></bibliomixed><bibliomixed class="po-block e392 e392" xml:id="bibRelaxNG" xreflabel="RelaxNG, ISO/IEC 19757-2:2003)"><emphasis class="po-inline e393 e393" role="ital"><textual class="po-textual">Information technology - Document Schema Definition Language (DSDL) — Part 2:
    Regular-grammar-based validation — RELAX NG.</textual></emphasis><textual class="po-textual"> ISO/IEC 19757-2:2003, International
   standard, International Organization for Standardization, Geneva, 2003. </textual></bibliomixed><bibliomixed class="po-block e394 e394" xml:id="bibSGML" xreflabel="SGML, ISO 8879:1986"><textual class="po-textual">
   </textual><emphasis class="po-inline e395 e395" role="ital"><textual class="po-textual">Information Processing — Text and Office Information Systems — Standard
    Generalized Markup Language.</textual></emphasis><textual class="po-textual"> International standard, International Organization for
   Standardization, Geneva 1986.</textual></bibliomixed><bibliomixed class="po-block e396 e396" xml:id="bibSuda2006" xreflabel="Suda (2006)"><textual class="po-textual"> Suda, B. </textual><emphasis class="po-inline e397 e397" role="ital"><textual class="po-textual">Using
    microformats.</textual></emphasis><textual class="po-textual"> O'Reilly, Sebastopol, CA, USA, (2006).</textual></bibliomixed><bibliomixed class="po-block e398 e398" xml:id="bibWalmsley2002" xreflabel="Walmsley (2002)"><textual class="po-textual"> Walmsley, P. </textual><emphasis class="po-inline e399 e399" role="ital"><textual class="po-textual">Definitive XML Schema.</textual></emphasis><textual class="po-textual"> Prentice Hall PTR, Upper Saddle River, NJ, USA,
   2002.</textual></bibliomixed><bibliomixed class="po-block e400 e400" xml:id="bibXML1.0" xreflabel="XML 1.0"><textual class="po-textual"> Bray, T., J. Paoli, and C. M.
   Sperberg-McQueen, </textual><emphasis class="po-inline e401 e401" role="ital"><textual class="po-textual">Extensible Markup Language (XML) 1.0.</textual></emphasis><textual class="po-textual"> W3C
   Recommendation 10 February 1998. World Wide Web Consortium. </textual><link class="po-inline e402 e402" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/1998/REC-xml-19980210" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/1998/REC-xml-19980210</textual></link><textual class="po-textual">, 1998. </textual></bibliomixed><bibliomixed class="po-block e403 e403" xml:id="bibW3C.XMLSchemaPrimer" xreflabel="XML Schema Part 0: Primer"><textual class="po-textual"> Fallside, D.
   C., and P. Walmsley, </textual><emphasis class="po-inline e404 e404" role="ital"><textual class="po-textual">XML Schema Part 0: Primer Second Edition</textual></emphasis><textual class="po-textual">.
   W3C Recommendation 28 October 2004, World Wide Web Consortium. </textual><link class="po-inline e405 e405" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2004/REC-xmlschema-0-20041028/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2004/REC-xmlschema-0-20041028/</textual></link><textual class="po-textual">, 2004. </textual></bibliomixed><bibliomixed class="po-block e406 e406" xml:id="bibW3C.XProc2010" xreflabel="XProc"><textual class="po-textual"> Walsh, N., A. Milowski, and H. S.
   Thompson, </textual><emphasis class="po-inline e407 e407" role="ital"><textual class="po-textual">XProc: An XML Pipeline Language.</textual></emphasis><textual class="po-textual"> W3C Recommendation 11
   May 2010, World Wide Web Consortium. </textual><link class="po-inline e408 e408" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2010/REC-xproc-20100511/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2010/REC-xproc-20100511/</textual></link><textual class="po-textual">, 2010.</textual></bibliomixed></bibliography></article></classedDocument>