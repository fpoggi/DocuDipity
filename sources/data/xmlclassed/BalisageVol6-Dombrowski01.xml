<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.2"><title class="po-block e1 e1"><textual class="po-textual">A formal approach to XML semantics: implications for archive standards</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">International Symposium on XML for the Long Haul:  Issues in the Long-term Preservation of XML</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 2, 2010</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">Previous literature characterizing XML semantics (</textual><citation class="po-atom e8 e8" linkend="sperbergmcqueen2000"><textual class="po-textual">Sperberg-McQueen et al. 2000</textual></citation><textual class="po-textual">, </textual><citation class="po-atom e9 e9" linkend="renear2002"><textual class="po-textual">Renear et al. 2002</textual></citation><textual class="po-textual">, </textual><citation class="po-atom e10 e10" linkend="piez2002"><textual class="po-textual">Piez 2002</textual></citation><textual class="po-textual">) takes reasonably syntactically and semantically plausible
                markup and/or schemas as a starting point. In contrast, for this paper we aim to work
                towards such a schema as an idealized end goal, by characterizing the necessary—
                if not sufficient— semantic constraints that differentiate a schema intended for archival use from nonsense and implausible
                schemas, as well as schemas that fail to sufficiently take semantics into account.
                In addition to the goal of providing a novel approach to the perenially thorny
                problem of XML semantics, we are particularly concerned with the interaction between
                the goals of archival purposes and XML semantics.</textual></para></abstract><author class="po-record e11 e11"><personname class="po-record e12 e12"><firstname class="po-field e13 e13"><textual class="po-textual">Andrew</textual></firstname><surname class="po-field e14 e14"><textual class="po-textual">Dombrowski</textual></surname></personname><personblurb class="po-container e15 e15"><para class="po-block e16 e16"><textual class="po-textual">Andrew Dombrowski is a 4th year PhD student at the University of Chicago in
                    the Department of Slavic Languages and Literatures and the Department of
                    Linguistics. His research focuses on language change and contact between Slavic
                    and non-Slavic languages.</textual></para></personblurb><affiliation class="po-record e17 e17"><jobtitle class="po-field e18 e18"><textual class="po-textual">PhD student</textual></jobtitle><orgname class="po-block e19 e19"><textual class="po-textual">Department of Slavic Languages and Literatures and Department of
                    Linguistics, University of Chicago</textual></orgname></affiliation><email class="po-field e20 e20"><textual class="po-textual">adombrow@uchicago.edu</textual></email></author><author class="po-record e21 e21"><personname class="po-record e22 e22"><firstname class="po-field e23 e23"><textual class="po-textual">Quinn</textual></firstname><surname class="po-field e24 e24"><textual class="po-textual">Dombrowski</textual></surname></personname><personblurb class="po-container e25 e25"><para class="po-block e26 e26"><textual class="po-textual">Quinn Dombrowski is the manager of the Scholarly Technology group in the
                    University of Chicago's IT Services organization. She has an MA in Slavic
                    Linguistics from the University of Chicago, and an MLS from the University of
                    Illinois at Urbana-Champaign.</textual></para></personblurb><affiliation class="po-record e27 e27"><jobtitle class="po-field e28 e28"><textual class="po-textual">Manager, Scholarly Technology</textual></jobtitle><orgname class="po-block e29 e29"><textual class="po-textual">University of Chicago</textual></orgname></affiliation><email class="po-field e30 e30"><textual class="po-textual">quinnd@uchicago.edu</textual></email></author><legalnotice class="po-container e31 e31"><para class="po-block e32 e32"><textual class="po-textual">Copyright © 2010 by the authors. Licensed under Creative Commons’ attribution, non-commercial, share-alike license (</textual><link class="po-inline e33 e33" xlink:actuate="onRequest" xlink:href="http://creativecommons.org/licenses/by-sa/3.0/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://creativecommons.org/licenses/by-sa/3.0/</textual></link><textual class="po-textual">).</textual></para></legalnotice></info><section class="po-hcontainer e34 e34"><title class="po-block e35 e35"><textual class="po-textual">0. Introduction</textual></title><para class="po-block e36 e36"><textual class="po-textual">In contrast to syntax, which is explicitly (and machine-readably) defined for XML
            documents through use of a schema, XML semantics is notoriously difficult to pin down.
                </textual><citation class="po-atom e37 e37" linkend="sperbergmcqueen2000"><textual class="po-textual">Sperberg-McQueen, et al. 2000</textual></citation><textual class="po-textual">
            takes the approach of describing semantics by defining some of the processes one goes
            through unconsciously when interpreting the semantics of XML: what meaning elements and
            attributes convey, how one makes sense of seemingly conflicting statements, the
            different behavior of distributed and non-distributed features, etc. </textual><citation class="po-atom e38 e38" linkend="renear2002"><textual class="po-textual">Renear, et al. 2002</textual></citation><textual class="po-textual"> presents the issue of XML
            semantics in its historic context, identifies important aspects of semantics (class
            relationships, feature propagation, context and reference, etc.) that are usually only
            specified in accompanying prose documentation—if at all, and argues for the value of a
            machine-readable representation scheme for markup semantics, which is one of the
            research goals of the BECHAMEL Project. </textual><citation class="po-atom e39 e39" linkend="piez2002"><textual class="po-textual">Piez
                2002</textual></citation><textual class="po-textual"> takes a more philosophical approach to XML semantics, drawing on the
            work of Ferdinand de Saussure and the Structuralist movement by describing markup as a
            layered sign system. All of these approaches take reasonably syntactically and
            semantically plausible markup and/or schemas as their starting point. In contrast, for this paper we aim to work
            towards such a schema as an idealized end goal, by characterizing the necessary—
            if not sufficient— semantic constraints that differentiate a schema intended for archival use from nonsense and implausible
            schemas, as well as schemas that fa(i.e.,il to sufficiently take semantics into account. In addition to the goal of 
            providing a novel approach to the perenially
            thorny problem of XML semantics, we are particularly concerned with the interaction
            between the goals of archival purposes and XML semantics.</textual></para><para class="po-block e40 e40"><textual class="po-textual">We argue that for archival purposes, XML semantics are non-trivial - i.e., (1) that
            the problem of XML semantics cannot be reduced to the set of all possible use cases, (2)
            that XML syntax and semantics differ with regard to crucial structural properties, and
            (3) that semantics and syntax impose independent well-formedness constraints on schemas. We examine these properties in the context of a hypothetical long-haul archival situation in which documentation may not have been preserved – and in which the agendas underpinning the original markup may not be easy to reconstruct. In such circumstances, the interpretation of a given XML markup schema will be facilitated by an ability to explicitly delineate plausible markup schemas from non-plausible schemas independent of subject-specific knowledge. </textual></para><para class="po-block e41 e41"><textual class="po-textual">With this in mind, we provide a formal semantic characterization of traits found in good (reasonably plausible, as
            contrasted with merely syntactically valid) schemas, and finally propose a set of properties that characterize such schemas in a way that incorporates both semantic and syntactic considerations. We hope
            that specifically considering what semantic characteristics should exclude a schema from
            consideration as a plausible archive standard will indirectly shed light on the nature
            of XML semantics more broadly. However, it is not our goal in this paper to propose an exhaustive treatment of XML semantics – instead, rather to elucidate the bare minimum necessary for a scheme to be plausible. This paper is informed by linguistic methodology in the
            broad sense – i.e., the proposition that a characterization of the bare minimum of “grammaticality” can yield insight of broader interest. In particular, we draw upon notions developed in the modern school of semantics that began with Montague Grammar. As
            such, we hope that some of the developments in the field of linguistics in the last 50
            years, as reflected herein, prove as insightful a lens onto markup as the earlier
            Structuralist school.</textual></para></section><section class="po-hcontainer e42 e42"><title class="po-block e43 e43"><textual class="po-textual">1. Why semantics?</textual></title><para class="po-block e44 e44"><textual class="po-textual">The characterization of archive-appropriate schemas necessitates separating "good" (i.e.,
            plausibly useful) schemas from the infinitely large space of valid XML schemas. At any
            given point in time, practical and case-specific evaluations of the utility of a given
            schema should suffice for most purposes. However, long-term preservation also means
            planning for environments in which significant amount of case-specific detail may have
            been lost. Lexical semantics are particularly mutable over time; the description of
            "symbol" provided by TEI, </textual><quote class="po-inline e45 e45"><textual class="po-textual">documents the intended significance of a particular
                character or character sequence within a metrical notation, either explicitly or in
                terms of other symbol elements in the same metDecl</textual></quote><textual class="po-textual">
            </textual><citation class="po-atom e46 e46" linkend="teip4"><textual class="po-textual">TEI P4</textual></citation><textual class="po-textual"> is easier to intuitively grasp given the
            modern English meaning of the word than based on the 15th century usage, meaning "creed,
            summary, religious belief" </textual><citation class="po-atom e47 e47" linkend="onlinetym"><textual class="po-textual">Online Etymology
                Dictionary</textual></citation><textual class="po-textual">. The assumptions underlying research programs are even less
            stable than lexical semantics; the concern with structuralist semantics was superseded
            in the 1960's by the controversial and short-lived generative semantics research program
            which was itself eventually superseded (in the 1980s and onward) by more modern schools
            of semantics, beginning with Montague grammar, that have drawn on techniques of formal
            logic for their basis. An illustrative thought experiment here is to imagine projecting
            markup technologies into the past to be coextensive with literacy. What XML schemas
            would have been created by, for instance: a Greek dramatist, St. Augustine, an early
            medieval Chinese chronicler, and an alchemist? And how would these schemas differ from,
            say, TEI? While a single modern guideline such as TEI may be able to encode the written
            records of this diverse group of individuals in a way that is meaningful to the modern
            scholar, a TEI encoding of these texts informed by modern scholarly interests would not
            only fail to be interoperable with the schemas devised by the original authors, but may
            perhaps not even be comprehensible to them.</textual></para><para class="po-block e48 e48"><textual class="po-textual">A rich knowledge of the specific situations (intended use, cultural context, concept
            of authorship/citation, etc.)  in which these hypothetical schemas were created would
         ameliorate the situation. However, a goal of long-term preservation standards is to allow a certain
            degree of interoperability without crucial context-specific knowledge. One step in doing
            so is to separate out the relatively small set of plausibly useful schemas from the
            potentially vast space of valid schemas; it is the goal of this paper to outline a way
            of doing so. </textual></para><para class="po-block e49 e49"><textual class="po-textual">To illustrate this, we can consider example XML using completely ridiculous schemas
            and some using merely implausible schemas. Examples using completely ridiculous schemas
            are shown below (1-3). In each of these schemas, the permitted content type of each
            element is the actual object, action, or part of specified by the name of the element (i.e.    
            </textual><code class="po-atom e50 e50"><textual class="po-textual">&lt;branch /&gt;</textual></code><textual class="po-textual"> can only contain such a protrusion from a
            tree, </textual><code class="po-atom e51 e51"><textual class="po-textual">&lt;simplify /&gt;</textual></code><textual class="po-textual"> can only contain the act of
            simplification, etc.)</textual></para><orderedlist class="po-table e52 e52"><listitem class="po-container e53 e53"><para class="po-block e54 e54"><textual class="po-textual"> the tree-list schema: </textual><code class="po-atom e55 e55"><textual class="po-textual">&lt;trunk /&gt;&lt;oak
                        /&gt;&lt;maple /&gt;&lt;branch /&gt;</textual></code></para></listitem><listitem class="po-container e56 e56"><para class="po-block e57 e57"><textual class="po-textual">the command-list schema: </textual><code class="po-atom e58 e58"><textual class="po-textual">&lt;simplify /&gt;&lt;eat
                        /&gt;&lt;breathe /&gt;</textual></code></para></listitem><listitem class="po-container e59 e59"><para class="po-block e60 e60"><textual class="po-textual">the English conjunctions schema: </textual><code class="po-atom e61 e61"><textual class="po-textual">&lt;and /&gt;&lt;but
                        /&gt;&lt;however /&gt;</textual></code></para></listitem></orderedlist><para class="po-block e62 e62"><textual class="po-textual">Some structurally similar schemas are intuitively less ridiculous, although also
            implausible. Examples of XML using implausible schemas are given below (4-7).</textual></para><orderedlist class="po-table e63 e63" startingnumber="4"><listitem class="po-container e64 e64"><para class="po-block e65 e65"><textual class="po-textual">the word-length schema: </textual><code class="po-atom e66 e66"><textual class="po-textual">&lt;word length="x"/&gt;</textual></code><textual class="po-textual">, where x
                    = # of letters in word</textual></para></listitem><listitem class="po-container e67 e67"><para class="po-block e68 e68"><textual class="po-textual">the "broken clock is right twice a day" incorrect word-length schema:
                        </textual><code class="po-atom e69 e69"><textual class="po-textual">&lt;word length="x*sin(n°)"/&gt;</textual></code><textual class="po-textual"> where of x = # of
                    letters in the n-th word in the document</textual></para></listitem><listitem class="po-container e70 e70"><para class="po-block e71 e71"><textual class="po-textual">the count-words-by-threes schema: </textual><code class="po-atom e72 e72"><textual class="po-textual">&lt;word1 /&gt;&lt;word2
                        /&gt;&lt;word3 /&gt;&lt;word1 /&gt;&lt;word2
                        /&gt;&lt;word3 /&gt;&lt;word1 /&gt;</textual></code><textual class="po-textual"> etc...</textual></para></listitem><listitem class="po-container e73 e73"><para class="po-block e74 e74"><textual class="po-textual">the conspiracy-theorist schema: </textual><code class="po-atom e75 e75"><textual class="po-textual">&lt;word(n) /&gt;
                        &lt;word(n+k)/&gt; &lt;word(n+2k)/&gt;</textual></code><textual class="po-textual">, etc., where n
                    is the n-th word in the text and k is a number imbued with some significance
                    (e.g. 666, 42, (with a few tweaks) a succession of prime numbers, etc...)</textual></para></listitem></orderedlist><para class="po-block e76 e76"><textual class="po-textual">How, then, to distinguish between the ridiculous, the implausible, and the
            plausible?</textual></para><para class="po-block e77 e77"><textual class="po-textual">An immediate and intuitive objection to these schemas might be that they can be ruled
            out on the grounds that no one would possibly be interested in them. However, that
            explanation, which can be termed the "practical usability explanation" is not fully
            adequate. First, it is not necessarily clear that this approach would capture the
            difference between the ridiculous and the merely implausible. On a certain level, the
            English conjunctions schema could be thought to be more plausible than the "broken clock
            is right twice a day" incorrect word-length schema, insofar as it is much easier to
            imagine why someone would be interested in conjunctions than in looking at the result of
            multiplying word-length figures by the sine function. However, the English conjunctions
            schema is clearly bad in a way that the "broken clock is right twice a day" incorrect
            word-length schema isn't. Intuitively speaking, we might say that conjunctions are a
            reasonable area of interest, but given an interest in conjunctions, the English
            conjunctions schema is unlikely to be your choice. On the other hand, being interested in
            multiplying word-length figures by the sine function is bizarrely implausible, but if
            for some reason one wanted to do that, the "broken clock is right twice a day" incorrect
            word-length schema would work.</textual></para><para class="po-block e78 e78"><textual class="po-textual">The "practical usability explanation" is especially problematic in the context of
            archival preservation. Part of the reason why long-term archival preservation of XML is
            a non-trivial task is precisely the fact that it is not always obvious what future
            generations of researchers will find interesting or useful. Furthermore, the
            establishment of practical usability will always to a certain extent be in the eye of
            the beholder. Schemas like our conspiracy-theorist schema could be of potential interest
            - Dan Brown, for instance, could testify to the wide public appeal of conspiracy
            theories. More seriously, debates about intuitive assessments of practical utility are
            unlikely to be a fundamentally productive line of discussion.</textual></para><para class="po-block e79 e79"><textual class="po-textual">Another possible objection is that by definition XML markup is performed on text. This renders the tree-list schema and the command-list schema impossible insofar as it is a feature of the real world that tree parts and actions are not composed of combinations of characters. While this is a reasonable objection, the degree to which these assertions are based on potentially contestible real-world knowledge is problematic. It may be difficult to imagine a situation in which a sane person would assert that trees are composed out of characters in an ontologically real sense, but one can more easily imagine a lively argument about whether actions can be expressed with words in an ontologically real sense (e.g. performatives). Regardless, this line of reasoning is only applicable with difficulty in a hypothetical long-haul preserval scenario – assumptions about real-world phenomena have been known to change over time.</textual></para><para class="po-block e80 e80"><textual class="po-textual">What criteria, then, can we use to distinguish ridiculous, implausible, and plausible
            schemas without reference to practical utility or related questions? Syntax could help; an intuitive
            observation about schemas (1) - (7) is that they are structurally flat, an observation
            which leads to the suggestion that more elaborate syntactic structure may be
            characteristic of plausible schemas. While this may be the case, it is also the case
            that equally absurd examples could be constructed to an arbitrary degree of syntactic
            nestedness, and not all flat schemas are absurd (i.e. Dublin Core). This illustrates
            that syntactic considerations are not sufficient to the task at hand. The rest of this
            paper develops a proposal that employs semantics to characterize plausible schemas, as
            opposed to syntactically valid but ridiculous or implausible schemas.</textual></para></section><section class="po-hcontainer e81 e81"><title class="po-block e82 e82"><textual class="po-textual">2. Syntax-Semantics Mismatches in XML</textual></title><para class="po-block e83 e83"><textual class="po-textual">A prerequisite to any discussion of XML syntax versus XML semantics is to determine
            whether or not XML syntax and XML semantics are on some level equivalent. If a
            generalization about XML semantics could be restated making reference only to XML
            syntax, this would render any mention of semantics irrelevant. In this section, it is
            shown that there are at least two senses in which syntax and semantics are crucially
            distinct in XML. (A note on representation; in the field of semantics, angled brackets
            are are used to refer to words, while square brackets refer to what the words mean, or
            their denotation. Therefore, in this context, &lt;cat&gt; refers to an element
            that could be employed in a schema, while [[cat]] refers to the furry animal, and </textual><code class="po-atom e84 e84"><textual class="po-textual">&lt;cat&gt;</textual></code><textual class="po-textual"> refers to an XML representation. </textual></para><para class="po-block e85 e85"><textual class="po-textual">First, XML syntax is strictly hierarchical, but XML semantics does not have to be. An
            example where both syntax and semantics are hierarchal can be seen in paragraph
            structure: &lt;sentence&gt; ∊ &lt;paragraph&gt; (in XML,
                </textual><code class="po-atom e86 e86"><textual class="po-textual">&lt;paragraph&gt;&lt;sentence
                /&gt;&lt;paragraph&gt;</textual></code><textual class="po-textual">) and [[sentence]] ⊂ [[paragraph]] (a
            sentence is a subset of a paragraph). However, when elements refer to properties that
            are not inherently hierarchical, this is not the case. For instance,
            &lt;damage&gt; ∊ &lt;sentence&gt; but [[damage]] ⊄ [[sentence]] - i.e.,
            the element &lt;damage&gt; may be the parent element for
            &lt;sentence&gt;, but it does not make sense to say that the concept of damage
            is a subset of the concept of sentence. This can be formalized as follows: if the subset
            relationship holds between the denotations of two or more elements (like [[sentence]]
            and [[paragraph]]), let these elements be called semantically hierarchical. If not (like
            [[damage]] and [[sentence]]), then let these elements be called semantically
            non-hierarchical. The semantic hierarchy can be captured by arranging semantically
            hierarchical elements on the semantic levels s, s(1), s(2), ..., s(k) for k levels of
            specificity (proceeding from general to specific) - i.e., the semantic hierarchy
            consists of semantically hierarchical elements, arranged accordingly.</textual></para><para class="po-block e87 e87"><textual class="po-textual">As an aside, it can be noted that proposals have been made for XML syntax to be
            non-strictly hierarchical in order to accommodate different kinds of structures in a
            document </textual><citation class="po-atom e88 e88" linkend="renear1993"><textual class="po-textual">Renear, et al. 1993</textual></citation><textual class="po-textual">, which stands in
            contrast to earlier conceptions of a document as containing a single logical hierarchy
            of content objects </textual><citation class="po-atom e89 e89" linkend="derose1990"><textual class="po-textual">DeRose, et al. 1990</textual></citation><textual class="po-textual">.
            Non-hierarchical syntax involves the use of different (concurrent) structures that may
            overlap with one another but share the same content </textual><citation class="po-atom e90 e90" linkend="chatti2007"><textual class="po-textual">Chatti, et al 2007</textual></citation><textual class="po-textual">.  Syntactic non-hierarchicality applies only to
            interactions between different syntactic levels of the schema (although, in extreme
            cases, such as the Dublin Core, there may only be one level of syntax at all), and does
            not obviate hierarchicality in the semantics. </textual></para><para class="po-block e91 e91"><textual class="po-textual">Syntax and semantics also impose independent constraints on the well-formedness of
            schemas (where well-formedness is understood as the property that characterizes
            plausible schemas). The independence of syntactic and semantic constraints are
            illustrated below; again, here the element </textual><code class="po-atom e92 e92"><textual class="po-textual">&lt;every&gt;</textual></code><textual class="po-textual"> can only
            contain the concept of every-ness:</textual></para><orderedlist class="po-table e93 e93" startingnumber="8"><listitem class="po-container e94 e94"><para class="po-block e95 e95"><textual class="po-textual">good syntax + good semantics: </textual><code class="po-atom e96 e96"><textual class="po-textual">&lt;paragraph&gt;&lt;sentence
                        /&gt;&lt;/paragraph&gt;</textual></code></para></listitem><listitem class="po-container e97 e97"><para class="po-block e98 e98"><textual class="po-textual">bad syntax + good semantics:
                        </textual><code class="po-atom e99 e99"><textual class="po-textual">&lt;paragraph&gt;&lt;sentence&gt;&lt;/paragraph&gt;&lt;/sentence&gt;</textual></code></para></listitem><listitem class="po-container e100 e100"><para class="po-block e101 e101"><textual class="po-textual">good syntax + bad semantics: </textual><code class="po-atom e102 e102"><textual class="po-textual">&lt;paragraph&gt;&lt;every
                        /&gt;&lt;/paragraph&gt;</textual></code></para></listitem><listitem class="po-container e103 e103"><para class="po-block e104 e104"><textual class="po-textual">bad syntax + bad semantics:
                        </textual><code class="po-atom e105 e105"><textual class="po-textual">&lt;paragraph&gt;&lt;every&gt;&lt;/paragraph&gt;&lt;/every&gt;</textual></code></para></listitem></orderedlist><para class="po-block e106 e106"><textual class="po-textual">These considerations demonstrate that XML syntax and semantics must be analyzed as
            separate domains. The restrictions that hold on valid XML syntax have been well
            documented </textual><citation class="po-atom e107 e107" linkend="W3C2008"><textual class="po-textual">W3C 2008</textual></citation><textual class="po-textual">, whereas the restrictions
            that must hold on the semantics of plausible schemas are less well described.</textual></para></section><section class="po-hcontainer e108 e108"><title class="po-block e109 e109"><textual class="po-textual">3. Formal Semantics of XML</textual></title><section class="po-hcontainer e110 e110"><title class="po-block e111 e111"><textual class="po-textual">3.1 Semantic Types</textual></title><para class="po-block e112 e112"><textual class="po-textual">In this section, we propose that attributes and elements in plausible XML schemas
                must be of type &lt;e, t&gt;, where the notation &lt;e, t&gt; is
                understood as indicating a function from individuals (&lt;e&gt;) onto truth
                values (&lt;t&gt;).</textual><footnote class="po-popup e113 e113"><para class="po-block e114 e114"><textual class="po-textual">The use of angled brackets to indicate
                        semantic types is common practice in the field of modern semantics. To avoid
                        inventing a new notation system just for this paper, we adopt the same
                        practice despite the risk of confusion with markup notation. In this paper,
                        &lt;e, t&gt; indicates semantic type, &lt;e&gt; indicates
                        and individual, and &lt;t&gt; indicates a truth
                    value.</textual></para></footnote><textual class="po-textual"> This is the semantic type generally postulated to
                characterize common nouns and adjectives in English. For instance, [[dog]] can be
                thought of as the set of all things that are dogs - i.e., a function f from
                individuals (any and all conceivable entities in this world) onto truth values (1 =
                true, 0 = false) such that f(x) = 1 iff [[x]] is a dog. One could object that it
                would be simpler to state this proposal in terms of nouns and adjectives - i.e., to
                propose that attributes and elements should be nouns and adjectives. However, it is
                preferable to state this in terms of semantics, because we need to keep our terms
                straight. "Nouns" and "adjectives" are terms taken from English syntax, which is not
                optimal when what we really want to talk about is XML semantics - i.e., neither
                English nor syntax. This proposal rules out absurd schemas (2) and (3) from the
                introduction, and captures the intuition that attributes and elements should be
                statements about things.</textual></para><para class="po-block e115 e115"><textual class="po-textual">Beyond the intuitive appeal of this proposal, it can be derived in a bottom-up
                fashion, based only on the assumptions that (1) texts are made up of things, and (2)
                that markup says things about things. Assumption (1) shows that texts are made up of
                basic components of type &lt;e&gt;. Assumption (2) leads directly to a
                semantic type of &lt;e, t&gt; for elements and attributes; i.e., something
                is tagged </textual><code class="po-atom e116 e116"><textual class="po-textual">&lt;paragraph&gt;</textual></code><textual class="po-textual"> only if it is true that it is a
                paragraph, modulo whatever definition of paragraph is appropriate in context. A
                formal definition of "tag abuse" can also fall out from assumption (2), i.e., tag
                abuse is the mapping of an individual onto a truth value of zero.  In a situation
                where </textual><code class="po-atom e117 e117"><textual class="po-textual">&lt;ship&gt;</textual></code><textual class="po-textual"> is being used to cause some arbitrary text
                (other than a ship name) to be rendered in italics </textual><citation class="po-atom e118 e118" linkend="piez2001"><textual class="po-textual">Piez
                    2001</textual></citation><textual class="po-textual">, the user has misunderstood that the element
                &lt;ship&gt; is a function that assigns the value 1 to its contents, if and
                only if it is true that the denotation of the contents is a ship. </textual></para><para class="po-block e119 e119"><textual class="po-textual">Translated into the terms above, the element &lt;paragraph&gt; is a
                function from individual bits of text onto truth values such that
                &lt;paragraph&gt;(x) = 1 iff [[x]] is a paragraph. Assumptions (1) and (2)
                should be basic for all archival purposes. Denying assumption (2) could lead to the
                emergence of bizarre surrealist schemas, but it seems safe to conclude that ruling
                out such schemas is precisely the goal for developing archival standards. It is not
                clear what denying assumption (1) would even mean ontologically.</textual></para><para class="po-block e120 e120"><textual class="po-textual">    More complicated functions are of course conceivable, but they are the domain
                of the processing language rather than the XML itself. An example of this would be a
                function of the type &lt;&lt;e, t&gt;, &lt;e, t&gt;&gt; -
                i.e., a function that takes one element/attribute and returns another. For instance,
                one such function would take a nested element and return the element one level
                higher.</textual></para><para class="po-block e121 e121"><textual class="po-textual">It should be noted that in the above proposal XML schemas are not assumed to be compositional semantically. To some extent, it is an open question whether or not a compositional minimal semantics for XML is a desirable feature. Compositional semantics would inevitably result in a proliferation of types, thereby obviating the proposed distinction between &lt;e, t&gt; elements that belong to XML and other elements that are the domain of the processing language. On the other hand, non-compositional semantics means that the concept of function admissible in XML must be wide enough to include input from outside the local domain of the element. For instance, the attribute </textual><code class="po-atom e122 e122"><textual class="po-textual">lang = "en"</textual></code><textual class="po-textual"> must valued by referring to something beyond the string of characters "en". Similarly, an element containing many sub-elements would have to be evaluable in terms of its sub-elements. To a certain extent, it remains to be seen whether non-compositional semantics makes undesirable predictions. Absent such evidence, the more parsimonious option is not to include compositionality as an explicit requirement.
        </textual></para></section><section class="po-hcontainer e123 e123"><title class="po-block e124 e124"><textual class="po-textual">3.2 Semantic Coherence</textual></title><para class="po-block e125 e125"><textual class="po-textual">The requirement that attributes and elements in plausible XML schemas be of type
                &lt;e, t&gt; is necessary but not sufficient to the task of ruling in
                plausible schemas while ruling out implausible schemas. To illustrate the point,
                consider the XML in (12) and (13):</textual></para><orderedlist class="po-table e126 e126" startingnumber="12"><listitem class="po-container e127 e127"><para class="po-block e128 e128"><textual class="po-textual">
                        </textual><code class="po-atom e129 e129"><textual class="po-textual">&lt;title /&gt;&lt;creator /&gt;&lt;subject
                            /&gt;&lt;description /&gt;&lt;publisher /&gt;</textual></code><textual class="po-textual">
                    </textual></para></listitem><listitem class="po-container e130 e130"><para class="po-block e131 e131"><textual class="po-textual">
                        </textual><code class="po-atom e132 e132"><textual class="po-textual">&lt;title /&gt;&lt;giraffe /&gt;&lt;arsenic
                            /&gt;&lt;starvation /&gt;&lt;King of France
                            /&gt;</textual></code><textual class="po-textual">
                    </textual></para></listitem></orderedlist><para class="po-block e133 e133"><textual class="po-textual">Example (12) is an excerpt from the well-known Dublin Core schema for marking up
                metadata, while schema (13) is nonsense that satisfies the requirement that
                attributes and elements be of semantic type &lt;e, t&gt;. How, then, to rule
                out (13) as compared to (12)? In this section, we attempt to develop the intuition
                that there exists a real-world object such that the traits [[title]], [[creator]],
                [[subject]], [[description]], and [[publisher]] can be predicated of it or its constituent parts with a truth
                value of 1 (i.e., there exists at least one object that has all of these traits),
                but there is no real-world object such that [[title]], [[giraffe]], [[arsenic]],
                [[starvation]], and [[King of France]] can be predicated of it with a truth value of
                1. As a reminder, the notation [[title]] should be understood as meaning roughly "something that is a title".</textual></para><para class="po-block e134 e134"><textual class="po-textual">In order to formalize this insight, it is necessary to take a closer look at how
                entities of type &lt;e, t&gt; operate. The denotation of such an entity
                ([[x]] where x is of type &lt;e, t&gt;) is either 1 or 0 (corresponding to
                true or false). Such an entity must give a truth value based on an entity of type
                &lt;e&gt; - i.e., a chunk of text. The only restriction on this process is
                that it be a function, which for these purposes only means that some individual x
                cannot be assigned to both true and false - i.e., it cannot be simultaneously true
                and false that a chunk of text is a paragraph. Within this very wide scope, it is
                possible to distinguish multiple types of functions. Structural-type functions
                assign truth values based on whether or not the individual entity under evaluation
                meets certain structural criteria; i.e., x is a paragraph if and only if x is a
                paragraph. Predicative-type functions assign truth values based on a
                non-definitional but inherent property of the entity under evaluation; i.e., x is in
                German if and only if x is in German (as distinct from being a sentence, a
                paragraph, a word, etc.) Attributive-type functions assign truth values based on a
                non-definitional and non-inherent property of the entity under evaluation - i.e., x
                is the title if and only if x is the title, a bit of information that requires
                specific real-world context to determine.</textual></para><para class="po-block e135 e135"><textual class="po-textual">With this in mind, we can return to the main topic and provide a more precise
                characterization of semantic coherence. A schema S is said to be semantically
                coherent iff for each element or attribute {a1, a2, a3, ..., an} ∊ S there exists a
                set of entities (of type &lt;e&gt;) {x1, x2, x3, ..., xn} such that
                [[ak(xk)]] = 1 for all e ∊ S. The concrete interpretation of this will vary
                depending on whether the elements or attributes in question are structural,
                predicative, or attributive.  This rules out example 13, because there are no
                real-world objects such that each element could assign those objects to a truth
                condition of 1 simultaneously (i.e. there is no thing that literally consists of or contains a
                title, a giraffe, arsenic, starvation, and the King of France, all at the same
                time.)</textual></para></section><section class="po-hcontainer e136 e136"><title class="po-block e137 e137"><textual class="po-textual">3.3 Semantic Hierarchies</textual></title><para class="po-block e138 e138"><textual class="po-textual">At least one more issue must be discussed in order to fully characterize plausible
                schemas. Compare (14) and (15):</textual></para><orderedlist class="po-table e139 e139" startingnumber="14"><listitem class="po-container e140 e140"><para class="po-block e141 e141"><textual class="po-textual">
                        </textual><code class="po-atom e142 e142"><textual class="po-textual">&lt;paragraph&gt;&lt;sentence/&gt;&lt;/paragraph&gt;</textual></code><textual class="po-textual">
                    </textual></para></listitem><listitem class="po-container e143 e143"><para class="po-block e144 e144"><textual class="po-textual">
                        </textual><code class="po-atom e145 e145"><textual class="po-textual">&lt;sentence&gt;&lt;paragraph/&gt;&lt;/sentence&gt;</textual></code><textual class="po-textual">
                    </textual></para></listitem></orderedlist><para class="po-block e146 e146"><textual class="po-textual">(14) is obviously corresponds to a common schema while (15) is nonsense. Syntax
                cannot help here, nor does it suffice to appeal to the claim that (15) is not
                plausible because it is not plausible. The reason why (15) is not plausible is
                because syntax is conflicting with semantics. In order to get a precise handle on
                this, it is necessary to formalize the notion of semantic hierarchies.</textual></para><para class="po-block e147 e147"><textual class="po-textual">The semantic representation of an XML tree may be considered to consist of the
                linearly arranged denotations of the elements and attributes present within an XML
                tree. In other words, &lt;element&gt; → [[element]] and
                &lt;attribute&gt; → [[attribute]]. As applied to (14) and (15), this yields
                the following table.</textual></para><table cellspacing="10px" class="po-container e148 e148"><thead class="po-container e149 e149"><tr class="po-table e150 e150"><th class="po-field e151 e151"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></th><th class="po-field e152 e152"><textual class="po-textual">Linear Representation</textual></th><th class="po-field e153 e153"><textual class="po-textual">Hierarchical Representation</textual></th></tr></thead><tbody class="po-table e154 e154"><tr class="po-table e155 e155"><th class="po-field e156 e156"><textual class="po-textual">Syntax of (14)</textual></th><td class="po-block e157 e157"><textual class="po-textual">
                            </textual><code class="po-atom e158 e158"><textual class="po-textual">&lt;paragraph&gt;&lt;sentence/&gt;&lt;/paragraph&gt;</textual></code><textual class="po-textual">
                        </textual></td><td class="po-block e159 e159"><textual class="po-textual">
                            </textual><code class="po-atom e160 e160"><textual class="po-textual">&lt;sentence&gt; ∊ &lt;paragraph&gt;</textual></code><textual class="po-textual">
                        </textual></td></tr><tr class="po-table e161 e161"><th class="po-field e162 e162"><textual class="po-textual">Semantics of (14)</textual></th><td class="po-block e163 e163"><textual class="po-textual">[[paragraph]][[sentence]]</textual></td><td class="po-block e164 e164"><textual class="po-textual">[[sentence]] ⊂ [[paragraph]] </textual></td></tr><tr class="po-table e165 e165"><th class="po-field e166 e166"><textual class="po-textual">Syntax of (15)</textual></th><td class="po-block e167 e167"><textual class="po-textual">
                            </textual><code class="po-atom e168 e168"><textual class="po-textual">&lt;sentence&gt;&lt;paragraph/&gt;&lt;/sentence&gt;</textual></code><textual class="po-textual">
                        </textual></td><td class="po-block e169 e169"><textual class="po-textual">
                            </textual><code class="po-atom e170 e170"><textual class="po-textual">&lt;paragraph&gt; ∊ &lt;sentence&gt;</textual></code><textual class="po-textual">
                        </textual></td></tr><tr class="po-table e171 e171"><th class="po-field e172 e172"><textual class="po-textual">Semantics of (15)</textual></th><td class="po-block e173 e173"><textual class="po-textual">[[sentence]][[paragraph]]</textual></td><td class="po-block e174 e174"><textual class="po-textual">[[sentence]] ⊂ [[paragraph]]</textual></td></tr></tbody></table><para class="po-block e175 e175"><textual class="po-textual">Table I gives an indication of what the problem is with (15) - we can freely
                change the syntax of (14), but as much as we change the syntax, we cannot change
                what "paragraph" and "sentence" mean - in particular, we cannot change the fact that
                [[paragraph]] and [[sentence]] are semantically hierarchical. The only remaining
                step is to smooth over the notational discrepancy between hierarchical syntactic
                relationships and hierarchical semantic relationships.</textual></para><para class="po-block e176 e176"><textual class="po-textual">Below is a formal characterization of semantic hierarchies as conceived more
                abstractly as ordering relationships: given a set of entities E = {e1, e2, e3, ...,
                en}, a hierarchy can be defined as an ordered k-tuple (ei, ej, ek) made up of
                elements of E. An XML schema S is then made up of both syntactic elements/attributes
                and their denotations: S = {&lt;e1&gt;, [[e1], &lt;e2&gt;, [[e2]],
                &lt;e3&gt;, [[e3]], &lt;e4&gt;, [[e4]], ..., &lt;en&gt;,
                [[en]]}. We can then state that any ordering that holds for a syntactic element
                &lt;ek&gt; in S must also hold for its semantic correspondent [[ek]]. If the
                above holds, we may then state that semantic hierarchies respect syntactic
                hierarchies- i.e., while the syntactic and semantic hierarchies don’t need to
                correspond, they can’t be contradictory. This rules out (15).</textual></para></section></section><section class="po-hcontainer e177 e177"><title class="po-block e178 e178"><textual class="po-textual">4. Some Very Basic Features of Archive Standards</textual></title><para class="po-block e179 e179"><textual class="po-textual">In this section, we summarize the above points and add some other criteria that must
            be met by plausible archive standards.</textual></para><orderedlist class="po-table e180 e180"><listitem class="po-container e181 e181"><para class="po-block e182 e182"><emphasis class="po-inline e183 e183"><textual class="po-textual">Syntax is arbitrarily nested</textual></emphasis><textual class="po-textual">. If the most general level
                    is p, let the more specific levels be denoted by p, p(1), p(2) ..., p(k) for k
                    levels of specificity. It is not necessarily the case that one and only one
                    element correspond to each syntactic level. For instance, it is possible that
                    elements like &lt;sentence&gt; and &lt;metaphor&gt; are on the
                    same level.</textual></para></listitem><listitem class="po-container e184 e184"><para class="po-block e185 e185"><textual class="po-textual">
                    </textual><emphasis class="po-inline e186 e186"><textual class="po-textual">Elements and attributes are of semantic type &lt;e,
                        t&gt;.</textual></emphasis><textual class="po-textual">
                </textual></para></listitem><listitem class="po-container e187 e187"><para class="po-block e188 e188"><textual class="po-textual">
                    </textual><emphasis class="po-inline e189 e189"><textual class="po-textual">Schemas must be semantically coherent.</textual></emphasis><textual class="po-textual">
                </textual></para></listitem><listitem class="po-container e190 e190"><para class="po-block e191 e191"><textual class="po-textual">
                    </textual><emphasis class="po-inline e192 e192"><textual class="po-textual">Syntactic hierarchies must respect semantic hierarchies.</textual></emphasis><textual class="po-textual">
                </textual></para></listitem><listitem class="po-container e193 e193"><para class="po-block e194 e194"><emphasis class="po-inline e195 e195"><textual class="po-textual">Elements and attributes are assigned at the highest possible
                        level.</textual></emphasis><textual class="po-textual"> This is an obvious insight that is not trivial to
                    formalize, the insight being that elements and attributes should not be
                    gratuitously repeated</textual><footnote class="po-popup e196 e196"><para class="po-block e197 e197"><textual class="po-textual">This is similar to the insight that
                            "distributed properties" (as we classify them, predicative, and some
                            attributive, attributes and elements) are non-countable, i.e, </textual><quote class="po-inline e198 e198"><textual class="po-textual">If
                                an element type x marks a distributed property, then any two
                                adjacent x elements may be joined, or one x element may be split:
                                &lt;x&gt;abc&lt;/x&gt;&lt;x&gt;def&lt;/x&gt;
                                means exactly the same thing as
                                &lt;x&gt;abcdef&lt;/x&gt;.</textual></quote><textual class="po-textual">
                            </textual><citation class="po-atom e199 e199" linkend="sperbergmcqueen2000"><textual class="po-textual">Sperberg-McQueen, et al.
                                2000</textual></citation></para></footnote><textual class="po-textual">.Sometimes (in the case of
                    structural elements), this is because to do otherwise would be semantically
                    invalid (i.e.,
                    </textual><code class="po-atom e200 e200"><textual class="po-textual">&lt;paragraph&gt;&lt;paragraph&gt;&lt;/paragraph&gt;&lt;/paragraph&gt;</textual></code><textual class="po-textual">.)
                    For transitive predicative attributes or elements, it would be redundant (i.e., not
                    everything needs to be redundantly marked for language). Thus, for most elements
                    and attributes, it is sufficient to state that an element or attribute that maps
                    onto t = 1 (true) at level {p + k} maps onto t = 0 (untrue) at level {p + (k -
                    1)}. This will handle structural elements like &lt;paragraph&gt; and
                    predicative attributes like &lt;language&gt;. The situation is more
                    complex with regard to attributive elements and attributes like
                    &lt;metaphor&gt; or &lt;damage&gt;. One can imagine situations in
                    which these elements might occur on two structurally contiguous levels -
                    metaphors within metaphors or damage within damage. Ontologically, the situation
                    could be saved by positing that underlyingly, different metaphors or different
                    types of damage are being denoted. The details of how to formalize this is not
                    entirely clear but would likely capitalize on the intuition that metaphors
                    inside metaphors only work if the two metaphors are different.</textual></para></listitem></orderedlist></section><section class="po-hcontainer e201 e201"><title class="po-block e202 e202"><textual class="po-textual">5. Conclusion</textual></title><para class="po-block e203 e203"><textual class="po-textual">Starting our exploration of XML semantics from the perspective of all syntactically
            valid schemas has allowed us to formalize some semantic traits shared by mostly
            widely-used schemas that are easy to overlook, but of great significance when assessing
            how useful a schema might be for archival purposes - and reverse-engineering the interpretation of schemas that have been used for archival purposes, but for which adequate documentation is lacking. This may also have implications for
            ongoing work towards machine-interpretation of XML semantics. If an XML document uses a
            schema that conforms to our proposed archive standards, stronger statements can be made
            about the relationship between the elements in that document. The fact that the
            syntactic hierarchy of elements is compatible with a real-world semantic hierarchy, in
            combination with the other generalizations that we have made about archive-appropriate
            XML semantics, facilitates the development of automatizable processes of analysis, and
            enables developers to bring to bear existing tools used for classifying the real
            world.</textual></para></section><bibliography class="po-hcontainer e204 e204"><title class="po-block e205 e205"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e206 e206" xml:id="chatti2007"><textual class="po-textual"> Chatti, Noureddine; Suha Kaouk, Sylvie Calabretto and Jean
            Marie Pinon. "MultiX: an XML based formalism to encode multi-structured documents" In
            Proceedings of Extreme Markup Languages 2007.
                </textual><link class="po-inline e207 e207" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://conferences.idealliance.org/extreme/html/2007/Chatti01/EML2007Chatti01.html</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e208 e208" xml:id="derose1990"><textual class="po-textual">DeRose, S. J., Durand, D. G., Mylonas, E., and Renear A. H.
            (1990), 'What is Text, Really?', Journal of Computing in Higher Education, 1.2:
            3-26. doi: </textual><biblioid class="po-atom e209 doi e209"><textual class="po-textual">10.1007/BF02941632</textual></biblioid></bibliomixed><bibliomixed class="po-block e210 e210" xml:id="onlinetym"><textual class="po-textual">Online Etymology Dictionary. "Symbol". Accessed 15 April
            2010. </textual><link class="po-inline e211 e211" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.etymonline.com/index.php?term=symbol</textual></link></bibliomixed><bibliomixed class="po-block e212 e212" xml:id="piez2001"><textual class="po-textual"> Piez, Wendell. "Beyond the “descriptive vs. procedural”
            distinction." In Proceedings of Extreme Markup Languages 2001.
                </textual><link class="po-inline e213 e213" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://conferences.idealliance.org/extreme/html/2001/Piez01/EML2001Piez01.html</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e214 e214" xml:id="piez2002"><textual class="po-textual"> Piez, Wendell. "Human and Machine Sign Systems." In
            Proceedings of Extreme Markup Languages 2002.
                </textual><link class="po-inline e215 e215" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://conferences.idealliance.org/extreme/html/2002/Piez01/EML2002Piez01.html</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e216 e216" xml:id="renear1993"><textual class="po-textual">Renear, Allen; Elli Mylonas, and David Durand. "Refining
            our Notion of What Text Really Is: The Problem of Overlapping Hierarchies."
                </textual><link class="po-inline e217 e217" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.stg.brown.edu/resources/stg/monographs/ohco.html</textual></link></bibliomixed><bibliomixed class="po-block e218 e218" xml:id="renear2002"><textual class="po-textual">Renear, Allen; David Dubin, and C.M. Sperberg-McQueen.
            "Towards a semantics for XML markup". Proceedings of the 2002 ACM symposium on Document
            engineering. doi: </textual><biblioid class="po-atom e219 doi e219"><textual class="po-textual">10.1145/585058.585081</textual></biblioid></bibliomixed><bibliomixed class="po-block e220 e220" xml:id="sperbergmcqueen2000"><textual class="po-textual">Sperberg-McQueen, C.M.; Claus Huitfeldt, Allen
            Renear. "Meaning and interpretation of markup." Markup Languages: Theory &amp;
            Practice 2.3 (2000): 215-234. </textual><link class="po-inline e221 e221" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://cmsmcq.com/2000/mim.html</textual></link><textual class="po-textual">. doi: </textual><biblioid class="po-atom e222 doi e222"><textual class="po-textual">10.1162/109966200750363599</textual></biblioid></bibliomixed><bibliomixed class="po-block e223 e223" xml:id="teip4"><textual class="po-textual">Text Encoding Initiative: The XML Version of the TEI Guidelines:
            5 The TEI Header. Accessed 15 April 2010.
                </textual><link class="po-inline e224 e224" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.tei-c.org/cms/Guidelines/P4/html/HD.html</textual></link></bibliomixed><bibliomixed class="po-block e225 e225" xml:id="W3C2008"><textual class="po-textual">Extensible Markup Language (XML) 1.0 (Fifth Edition). W3C
            Recommendation 26 November 2008
            </textual><link class="po-inline e226 e226" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/2008/REC-xml-20081126/</textual></link></bibliomixed></bibliography></article></classedDocument>