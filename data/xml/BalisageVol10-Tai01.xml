<?xml version="1.0" encoding="UTF-8"?><article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" version="5.0-subset Balisage-1.3"><title>WebVTT versus TTML: XML considered harmful for web captions?</title><info><confgroup><conftitle>Balisage: The Markup Conference 2013</conftitle><confdates>August 6 - 9, 2013</confdates></confgroup><abstract><para>This paper investigates why the XML standard TTML was rejected as timed text format by the WHATWG and it shows the relation to the discussion about the use of XML on the web.</para></abstract><author><personname><firstname>Andreas</firstname><surname>Tai</surname></personname><personblurb><para/></personblurb><affiliation><orgname>Institut fuer Rundfunktechnik, Munich</orgname></affiliation></author><legalnotice><para>Copyright © 2013 Institut fuer Rundfunktechnik GmbH</para></legalnotice></info><section xml:id="sec.Introduction"><title>Introduction</title><para>In 2010 the WHATWG mailing list discussed which existing timed text format should be used as a base to distribute timed text with the newly defined track element in HTML5 [<xref linkend="PfeifIntro2010"/>]. The most important use case for timed text was the display of captions and subtitles with a related video.<footnote><para>The term “captions” describes on screen text for use by deaf and hard of hearing audiences. The term “subtitles” describes on screen text for translation purposes. For easier reading only the term “subtitles” is used in this article and the term "captions” may be used interchangeably for the term “subtitles".</para></footnote>
		</para><para>In the end not the existing XML standard for timed text, TTML [<xref linkend="TTMLCandidate2010"/>] (formerly specified as DFXP) was chosen, but SRT, a text-based format for subtitles that originated from the web user community and had been implemented already in a large range of video players [<xref linkend="HickVideo2010"/>]. After the adoption of SRT by the WHATWG the timed text format was first called WebSRT and later renamed to WebVTT.</para><para>The arguments exchanged in mailing threads were not limited to timed text and the domain of subtitling. The decision against TTML also was a decision against XML and other standards from the XML-family.</para><para>The importance of having a new timed text format is driven by the large increase of video content distribution over IP-based networks. The demand for subtitles to show with that video is rising as well. In some regions provisioning of subtitles with online content even is an obligation from the regulator (see for example [<xref linkend="FCC2012"/>]).</para><para>Left aside proprietary formats, for the distribution of subtitles on the web the TTML and the WebVTT standards currently are receiving the biggest attention from the market. The competition of these two standards follows a pattern which is similar to the one seen with the adoption of XML for the web. More than a competition between different technologies, it appears to be a clash of the ‘web culture’ with the ‘XML culture’. The unresolved problems in this relationship could have a blocking effect on the progress of IP-based delivery of subtitles and on web-accessibility in general.</para></section><section xml:id="sec.TTML"><title>TTML</title><para>In 2003 the W3C set up a working group to specify a timed text markup language [<xref linkend="W3CTTCharta2003"/>]. According to the requirements, which were laid out already in 2002 [<xref linkend="W3CTT2002"/>], the goal was to define a non-proprietary, standardized format that could be used for displaying text synchronized with other elements such as audio and video.</para><para>In the requirements use cases such as karaoke, credit rolls and text overlays were listed next to the main use case: the display of subtitles. One of the top priorities for the targeted architecture was to have an XML representation of the format.</para><para>Members of the working group represented, amongst others, a broadcaster, a professional engineering association from the moving picture industry, a research institution on accessible media and vendors of existing video players for the web. TTML was published as a detailed standard in November 2010 as Timed Text Markup Language (TTML) 1.0 [<xref linkend="TTMLFinal2010"/>].</para><para>A simple TTML example illustrates the expression of a two line subtitle:<footnote xml:id="footTTMLSamp"><para>Complete TTML and WebVTT documents can be found in <xref linkend="app.A"/>. Note that examples in this article shall only illustrate the design principles of the different standards. They do not always reflect the complete syntax. For implementation the relevant standards shall be consulted.</para></footnote>
		</para><programlisting xml:space="preserve">
&lt;p begin="00:00:00.000" end="00:00:02.000"&gt;
    This is a subtitle&lt;br/&gt;
    on two lines
&lt;/p&gt;
		</programlisting><para>In the TTML presentation semantics a <code>p</code> element represents a block level element and the <code>br</code> element inserts a line break. The <code>begin</code> and <code>end</code> attributes specify the timecodes between which the subtitle should be shown.</para><para>As for other local names of TTML elements that represent subtitle content <code>p</code> and <code>br</code> are derived from  (X)HTML.<footnote><para>See Appendix J1 of [<xref linkend="TTMLCandidate2010"/>]</para></footnote> And although they are defined in a different namespace, their semantics are similar. </para><para>TTML uses a subset of the XML Infoset to formalize the data model.<footnote><para>See Appendix A of [<xref linkend="TTMLCandidate2010"/>]</para></footnote>
		</para><para>A reduced notation of the <code>p</code> information element would be:<footnote><para>The type <code>&lt;timeExpression&gt;</code> is defined in section 10.3.1 of  [<xref linkend="TTMLCandidate2010"/>]</para></footnote>
		</para><programlisting xml:space="preserve">
&lt;p&gt;
    begin = &lt;timeExpression&gt;
    end = &lt;timeExpression&gt;
    Content: (#PCDATA | br )*
&lt;/p&gt;		
		</programlisting></section><section xml:id="sec.Webvtt"><title>WebVTT</title><para>In 2004 a group of W3C members decided to split off from the W3C HTML specification and to push HTML outside of, but in close collaboration with the W3C. The Web Hypertext Application Technology Working Group (WHATWG) was set up with the goal to “create technical specifications that are intended for implementation in mass-market web browsers, in particular Safari, Mozilla, and Opera” [<xref linkend="WHATList2004"/>].</para><para>Although WebVTT is currently specified by the W3C Web Media Text Tracks Community Group [<xref linkend="W3CWebvtt2013"/>], the decision to use SRT as its base had been taken by the WHATWG and the initial specification has been written with Ian Hickson as responsible editor. Priorities for the choice of a timed text format included: simplicity, compatibility with existing players and integration into the HMTL5 specification effort [<xref linkend="HickVideo2010"/>].</para><para>
A simple two line subtitle would be expressed in WebVTT as a text cue:</para><programlisting xml:space="preserve">
00:00:00.000 --&gt; 00:00:02.000
This is a subtitle
on two lines
		</programlisting><para>
The delimiter for begin and end timecodes is the string “--&gt;”. A character sequence representing a newline (LF, CR or CRLF) separates the timing information from subtitle text and breaks a subtitle text line.<footnote><para>The syntax in the sample is equivalent to what was already defined in SRT, the base format of WebVTT.</para></footnote>
		</para><para>WebVTT does not use a formal grammar to describe the syntax but a sequence of rules written in normative prose. A reduced definition of the text cue shown in the example would be:</para><programlisting xml:space="preserve">
A WebVTT timestamp representing the start time offset of the cue.
The string "--&gt;" (U+002D HYPHEN-MINUS, U+002D HYPHEN-MINUS, U+003E GREATER-THAN SIGN).
A WebVTT timestamp representing the end time offset of the cue.
A WebVTT line terminator
Zero or more WebVTT cue text span, representing the text of the cue each optionally separated from the next by a WebVTT line terminator.
	</programlisting></section><section xml:id="sec.Established"><title>Established industries versus emerging user communities</title><para>While XML has been well received and is used in established industries, it has at least a disputable role on the web. The most prominent areas of debate are the draconian error handling implemented by XHMTL supporting web browsers ( see [<xref linkend="KestXML2012"/>, <xref linkend="W3CWiki2010"/>]) and the growing suppression of XML through JSON as an interchange format for data on the web (see [<xref linkend="CrockJson2006"/>, <xref linkend="VlistJson2013"/>]).</para><para>Similar to these debates the origin of the recent failure of TTML to be adopted by HTML5 can be found in the separation of user communities.</para><para>At the same time when the WHATWG decided against TTML, other standardization committees from the broadcast and movie domain adopted and promoted TTML as format for subtitles. The Society of Motion Picture (SMPTE) extended TTML to  SMPTE-TT [<xref linkend="SMPTETimedText2010"/>], YouView defined a profile of TTML for delivery to interactive TV sets and set-top boxes in the UK [<xref linkend="Youview2011"/>], the Digital Entertainment Content Ecosystem  consortium (DECE) defined a TTML profile for the common file format (CFF-TT) [<xref linkend="DECECff2013"/>] and the EBU published the TTML subset EBU-TT [<xref linkend="EBUTT2012"/>] for the interchange, archiving and production of subtitles.</para><para>
The adoption of TTML by the European Broadcasting Union (EBU) is a good example of why an XML standard was chosen by the different standardization initiatives. The EBU was looking for a successor of the binary subtitle format EBU STL [<xref linkend="EBUSTL1991"/>] and the TTML standard met the requirements for a reference standard. It was expressive enough to cover the desired semantics and at the same time it had the option to be constrained. Furthermore the XML standard has a well-documented Unicode support (something missing in the binary EBU STL format) and is ideally suited to implement the “Create once, publish everywhere” strategy. While the translation process of spoken text into subtitles still requires a large amount of manual work, the deployment of subtitles in different subtitle formats for linear and non-linear TV is only practically feasible when it is automated. 	
		</para><para>Similar to other professional sectors with a highly automated production process the broadcast industry depends on reliable and stable standards to guarantee the quality of their services. The benefit of a formal standard that uses XML as an established technology in this context outbalances the extra effort to implement its potential complexities.</para><para>The web environment however, is home to a deeply-rooted “everybody can do it” philosophy. Anyone can and should be able to be a sender. The belief that it should be easy to publish and to distribute content without high investments is shared with the open source movement. From this point of view the hurdle to apply an XML standard is high (especially if it references other XML standards). Implementation may require an academic background or special training. Furthermore free and user friendly authoring tools for XML are rare. Therefore the WHATWG preferred a subtitle format with an easier to understand notation that could be used with a simple text editor.</para><para>Another difference to the TTML use case is, that WebVTT is designed to only serve as a web distribution format for subtitles. There is no ambition for it to be used as an intermediary format. And although later in the specification process documents and extensions were published to support the translation from existing US broadcast standards into WebVTT[<xref linkend="PfeifIntro2012"/>], support for legacy formats had not been a requirement from the beginning.</para></section><section xml:id="sec.Quality"><title>Quality control versus non-draconian error handling</title><para>The XML specification, together with grammar-based or rule-based constraining languages such as W3C XML Schema 1.0, Relax NG or Schematron, forms a framework to test information which is exchanged between applications and/or organizations for standard conformance. In highly professionalized sectors such as the broadcast industry this support for QC processes is well-appreciated and used.</para><para>Paradoxically the strictness of the XML specification in guaranteeing ‘well-formedness’ could be seen as a reason for its bad reputation in the web developer community. The behaviour of some web browsers which do not recover gracefully from ill-formed errors in XHTML documents but instead interrupt the rendering process has resulted in distracting user experiences (see [<xref linkend="TantekDrac2010"/>, <xref linkend="BovensXML2011"/>]). The return of the HTML5 spec to a more "forgiving" parser behavior can be seen as a direct result of these problems.</para><para>The strictness of XML was one reason for the decision against TTML on the WHATWG mailing list. Well-formedness errors and namespace problems were marked as potential problems for authors. As in general discussions related to "XML in the browser", the expectation was that amateur developers will want to provide content and therefore the format has to be kept simple.</para><para>For professional content providers, including broadcasting stations, automated QC is becoming increasingly important. A strict format such as TTML therefore is preferred both at the production side, and as well for distribution. It gives broadcast stations the means to guarantee the quality of their online-services and to live up to the expectation of their audience. Note that the reputation of most broadcasters has been established not through the web, but rather by the use of high-quality broadcast standards.</para><para>TTML and WebVTT provide different options to handle document conformance. TTML provides an informative W3C XML Schema and Relax NG Schema to support automatic document validation while WebVTT integrates conformance testing and error handling in a normative text parsing algorithm.</para><para>A good illustration for the different concepts is the specification of text alignment.</para><para>In TTML text alignment of subtitle text can be expressed through the attribute <code>textAlign</code>:</para><programlisting xml:space="preserve">
&lt;p begin="00:00:00.000" end="00:00:02.000" tts:textAlign="left" &gt;
    One line aligned to the left.
&lt;/p&gt;		
		</programlisting><para>A simplified type definition of the <code>tts:textAlign</code> attribute in the TTML XML Schema is shown below:</para><!-- More values are allowed--><programlisting xml:space="preserve">
&lt;xs:attribute name="textAlign"&gt;
    &lt;xs:simpleType&gt;
	    &lt;xs:restriction base="xs:token"&gt;
		    &lt;xs:enumeration value="start"/&gt;
		    &lt;xs:enumeration value="end"/&gt;
		    &lt;xs:enumeration value="left"/&gt;  
		    &lt;xs:enumeration value="center"/&gt;
		    &lt;xs:enumeration value="right"/&gt;	    
        &lt;/xs:restriction&gt;
    &lt;/xs:simpleType&gt;
  &lt;/xs:attribute&gt;
		</programlisting><para>
The validation of a TTML document where the <code>textAlign</code> attribute contains another value than "start", "end", "left", "center" or "right" would fail. Depending of the implementation a TTML decoder could stop further processing of the document or continue parsing but reject the document at the end because the conformance test was negative.
		</para><para>In WebVTT text alignment can be controlled by the <code>alignment</code> cue setting:</para><programlisting xml:space="preserve">
00:00:00.000 --&gt; 00:00:02.000 align:left
One line aligned to the left.		
		</programlisting><para>
There are two sources for document conformance tests in the WebVTT spec: the syntax definition and the parsing algorithm. The syntax definition is intended as authoring instruction, while the parsing algorithm is a guideline for the implementation of WebVTT decoders.</para><para>The syntax for the <code>alignment</code> cue setting is as follows:</para><programlisting xml:space="preserve">
WebVTT vertical text cue setting consists of the following components, in the order given:
    The string "align".
    A U+003A COLON character (:).
    One of the following strings: "start", "middle", "end", "left", "right".
</programlisting><para>The setting should be parsed as shown below:</para><programlisting xml:space="preserve">
Let name be the leading substring of setting up to and excluding the first U+003A COLON character (:) in that string.

Let value be the trailing substring of setting starting from the character immediately after the first U+003A COLON character (:) in that string.

Run the appropriate substeps that apply for the value of name, as follows:

If name is a case-sensitive match for "align"

        If value is a case-sensitive match for the string "start", then let cue's text track cue alignment be start alignment.
        If value is a case-sensitive match for the string "middle", then let cue's text track cue alignment be middle alignment.
        If value is a case-sensitive match for the string "end", then let cue's text track cue alignment be end alignment.
        If value is a case-sensitive match for the string "left", then let cue's text track cue alignment be left alignment.
        If value is a case-sensitive match for the string "right", then let cue's text track cue alignment be right alignment.

</programlisting><para>Following the WebVTT text parsing algorithm the setting will simply be ignored if a value is not defined. The parsing of the document continues and the writing direction of the text cue will not be changed.</para><para>There is no recommendation if and how this error should be signaled.</para></section><section xml:id="sec.Simple"><title>Don´t reinvent the wheel versus keep it simple</title><para>One principle in standardization is not to reinvent the wheel. If a required functionality has been defined elsewhere, it would be appropriate to reference it. Often a compromise is necessary because not all requirements are covered by existing standards and also because it is sometimes neither easy nor desirable to extend them. This compromise typically is acceptable for the goals of technology dissemination and future interoperability between systems.</para><para>The XML ecosystem makes use of this principle and there are a lot of cross references between the different core standards of the ‘XML family’, such as XPATH, W3C XML Schema and XSLT.</para><para>From the start the Timed Text Working Group (TTWG) has had the requirement to use existing W3C technologies. This has been implemented by the integration of SMIL as the semantic reference for the timing model and by the integration of XSL:FO for the semantics of the formatting model.</para><para>In the ‘WHATWG versus TTML’-debate, especially the reference to XSL:FO and the claimed incompatibility between XSL:FO and CSS have been important arguments. Furthermore the re-use of TTML was blocked by critical comments about the use of XML. In this sense the re-use of standards actually let to the rejection to be used by another standard (!).</para><para>Although WebVTT also makes uses of other standards and has the design goal to integrate well with HTML5  and CSS, it also duplicates the functionality of TTML without making a reference to this existing standard.</para></section><section xml:id="sec.Readability"><title>Readability: curse or blessing?</title><para>When comparing the advantages of WebVTT and SRT versus TTML readability is often highlighted as a difference. The construction principle of simple WebVTT/SRT files seems easy to understand, while a TTML document which expresses the same semantics appears to be more verbose and opaque, especially to a reader who is not familiar with XML.</para><para>While comprehensibility of a format by reading it may be important when the manual creation of conformant documents is an important option, the ease of parsing and implementation is crucial for automated processing.</para><para>The readability argument leads back to the differences in requirements between established industries and emerging user communities, but in any case it seems more relevant for the creation than for the interpretation of a format. While a document with subtitles can be directly created by a human being, the decoding and rendering of the document will always be done by an automated process. It is therefore questionable how the complexity of a format can be judged by taking human readability as the criterion.</para><para>As a side note it should be mentioned that in Europe the binary (so not human-readable at all!) EBU-STL format is highly trusted as an exchange format for subtitles. Actually, some concerns exist regarding its replacement with a human readable XML format! It would be an interesting field of investigation if under special circumstances an opaque format is more likely to gain trust and therefore adoption than a transparent format like XML.</para></section><section><title>Conclusion</title><para>Besides the technical and semantic differences between TTML and WebVTT, the sheer existence of two standards with duplicated functionality lowers the speed of adoption, blocks specification processes and in the long run affects interoperability between systems.</para><para>Although it not likely that the two formats will be merged, the efforts to combine both activities in one W3C working group can be seen as a promising step. This nevertheless leaves one problem still unresolved: the divergence between the XML and the web world. These two worlds should not only meet at conferences, but they should be represented in the same standard committees. That could improve the interoperability perspective for new standards right from the beginning.</para></section><appendix xml:id="app.A"><title>TTML and WebVTT document samples</title><para>Two short but complete examples for TTML and WebVTT are documented below. Both documents represent the same formatting semantics for a timed, two-line subtitle:
				<itemizedlist><listitem><para>The virtual box for the subtitle is 80% of the video frame width.</para></listitem><listitem><para>The virtual box of the subtitle has a 10% offset to the left edge of the video frame.</para></listitem><listitem><para>The subtitle text is centered.</para></listitem><listitem><para>The subtitle has an identifier with the value "sub1".</para></listitem><listitem><para>A color of green is applied to one word by the use of an inline-style.</para></listitem><listitem><para>An italic typeface is applied to one word by the use of a referenced style definition.</para></listitem><listitem><para>The vertical position is in the lower third of the video frame.<footnote><para>Because of different positioning concepts the represented vertical position is only approximately the same.</para></footnote>
					</para></listitem></itemizedlist>
		</para><para>The representation in TTML would be:</para><programlisting xml:space="preserve">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;tt xml:lang="en" xmlns="http://www.w3.org/ns/ttml" xmlns:tts="http://www.w3.org/ns/ttml#styling" xmlns:tt="http://www.w3.org/ns/ttml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
    &lt;head&gt;
        &lt;styling&gt;
            &lt;tt:style xml:id="s1" tts:color="green"/&gt;
        &lt;/styling&gt;
        &lt;layout&gt;
            &lt;tt:region tts:extent="80% 80%" tts:origin="10% 10%" tts:displayAlign="after"/&gt;
        &lt;/layout&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div&gt;
            &lt;p xml:id="sub1" begin="00:00:00.000" end="00:00:02.000"&gt;
                This is a green &lt;span style="s1"&gt;word.&lt;/span&gt;.&lt;br/&gt;
                This is an italic &lt;span tts:fontStyle="italic"&gt;word&lt;/span&gt;.
            &lt;/p&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/tt&gt;
 </programlisting><para>The representation in WebVTT would be:</para><programlisting xml:space="preserve">
WEBVTT
Style:
@import(foo.css)
##
Language: en

sub1
00:00:00.000 --&gt; 00:00:02.000 size:80% position:10% line:70% align:middle 
This is a green &lt;c.s1&gt;word&lt;/c&gt;.
This is an italic &lt;i&gt;word&lt;/i&gt;.
</programlisting><para>WebVTT has the option to use CSS style sheet definitions. Currently these definitions are not embedded in the WebVTT document. In the example they are included in the WebVTT file by the use of the @import rule.</para><para>The content of the imported file in the example would be as follows:</para><programlisting xml:space="preserve">
::cue(c.s1) {
  color: green;
}
</programlisting></appendix><bibliography><title>References</title><bibliomixed xml:id="BovensXML2011" xreflabel="B11">Bovens, Andreas, No more "XML parsing failed" errors, 28 September 2011.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://my.opera.com/ODIN/blog/2011/09/28/no-more-xml-parsing-failed-errors</link>
		</bibliomixed><bibliomixed xml:id="TantekDrac2010" xreflabel="TA10">Çelik, Tantek, XHTML Is Dead, Long Live XML-Valid HTML5, 29 October 2010.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://tantek.com/2010/302/b1/xhtml-dead-long-live-xml-valid-html5</link>
		</bibliomixed><bibliomixed xml:id="CrockJson2006" xreflabel="D06">Crockford, Douglas, JSON: The Fat-Free Alternative to XML, XML 2006 Boston, 6 December 2010.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.json.org/fatfree.html</link>
		</bibliomixed><bibliomixed xml:id="DECECff2013" xreflabel="D12">Digital Entertainment Content Ecosystem (DECE) LLC, Common File Format &amp; Media Formats Specification, Version 1.0.6, 23 February 2013.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.uvvuwiki.com/images/f/f6/CFFMediaFormat-C1.0.6.pdf</link>
		</bibliomixed><bibliomixed xml:id="EBUSTL1991" xreflabel="E13">European Broadcasting Union (EBU), EBU Tech 3264, Specification of the EBU Subtitling data exchange format, February 1991.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://tech.ebu.ch/docs/tech/tech3264.pdf</link>
		</bibliomixed><bibliomixed xml:id="EBUTT2012" xreflabel="E12">European Broadcasting Union (EBU), EBU Tech 3350, EBU-TT Part 1 Subtitling format definition, Version 1.0, July 2012.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://tech.ebu.ch/docs/tech/tech3350.pdf?vers=1.0</link>
		</bibliomixed><bibliomixed xml:id="TTMLCandidate2010" xreflabel="TC10">Glenn Adams (ed.), Timed Text Markup Language (TTML) 1.0, W3C Candidate Recommendation 23 February 2010.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.w3.org/TR/2010/CR-ttaf1-dfxp-20100223/</link>
		</bibliomixed><bibliomixed xml:id="TTMLFinal2010" xreflabel="TF10">Glenn Adams (ed.), Timed Text Markup Language (TTML) 1.0, W3C Recommendation 18 November 2010.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.w3.org/TR/2010/REC-ttaf1-dfxp-20101118/</link>
		</bibliomixed><bibliomixed xml:id="FCC2012" xreflabel="FCC12">Federal Communications Commission, Small Entity Compliance Guide, Closed Captioning of Internet Protocol Delivered Video Programming: Implementation of the Twenty First Century Communications and Video Accessibility Act of 2010, MB Docket No. 11 - 154, FCC 12 - 9.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.fcc.gov/document/closed-captioning-internet-protocol-delivered-video-programming-1</link>
		</bibliomixed><bibliomixed xml:id="HickVideo2010" xreflabel="H10">Hickson, Ian, Timed tracks for  &lt;video&gt;, Email on the Public mailing list for the WHAT working group, 2010-04-09.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-July/027386.html</link>
		</bibliomixed><bibliomixed xml:id="W3CWebvtt2013" xreflabel="W13">Hickson, Ian, Pfeiffer, Silvia, WebVTT: The Web Video Text Tracks Format, W3C Community Group Draft Report.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://dev.w3.org/html5/webvtt/</link>
		</bibliomixed><bibliomixed xml:id="PfeifIntro2012" xreflabel="P11">Pfeiffer, Silvia, Conversion of 608/708 captions to WebVTT. Draft Community Group Specification 11 July 2013.<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html</link>
		</bibliomixed><bibliomixed xml:id="PfeifIntro2010" xreflabel="P10">Pfeiffer, Silvia, Introduction of media accessibility features, Email thread started by Silvia Pfeiffer on the Public mailing list for the WHAT working group, 2010-04-09. <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-April/025898.html</link>
		</bibliomixed><bibliomixed xml:id="SMPTETimedText2010" xreflabel="S10">Society of Motion Picture and Television Engineers (SMPTE), SMPTE Standard for Television - Timed Text Format (SMPTE-TT), SMPTE ST 2052-1:2010.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.smpte.org/sites/default/files/st2052-1-2010.pdf</link>
		</bibliomixed><bibliomixed xml:id="VlistJson2013" xreflabel="V13">Van der Vlist, Eric, Embracing JSON? Of course, but how?, XML Prague 2013, Conference Proceedings, p.163-188.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://archive.xmlprague.cz/2013/files/xmlprague-2013-proceedings.pdf</link>
		</bibliomixed><bibliomixed xml:id="KestXML2012" xreflabel="K12">Van Kesteren, Anne, XML5's Story, XML Prague 2012, Conference Proceedings, p. 23-25.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://archive.xmlprague.cz/2012/files/xmlprague-2012-proceedings.pdf</link>
		</bibliomixed><bibliomixed xml:id="WHATList2004" xreflabel="W04">Web Hypertext Application Technology Working Group (WHATWG), WHAT open mailing list announcement, June 4th 2004.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.whatwg.org/news/start</link>
		</bibliomixed><bibliomixed xml:id="W3CWiki2010" xreflabel="W12">World Wide Web Consortium (W3C), DraconianErrorHandling, W3C Wiki, 9 February 2010.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.w3.org/html/wg/wiki/index.php?title=DraconianErrorHandling&amp;oldid=1526</link>
		</bibliomixed><bibliomixed xml:id="W3CTTCharta2003" xreflabel="TT03">World Wide Web Consortium (W3C), W3C Timed Text Working Group Charter (TTWG), Initial Vesion.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.w3.org/AudioVideo/TT/ttcharter20020901.html. 
		</link>
		</bibliomixed><bibliomixed xml:id="W3CTT2002" xreflabel="TT02">World Wide Web Consortium (W3C), Standardized Timed-text Format, W3C Working Draft 21 March 2002.
		 <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.w3.org/AudioVideo/timetext.html</link>
		</bibliomixed><bibliomixed xml:id="Youview2011" xreflabel="Y11">YouView TV Ltd, YouView Core Technical Specification, For Launch, Version 1.0, 14 April 2011.
		<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://industry.youview.com/resources/YouView_Core_Technical_Specification_1.0.pdf</link>
		</bibliomixed></bibliography></article>