<?xml version="1.0" encoding="UTF-8"?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0-subset Balisage-1.3" xml:id="HR-23632987-8973"><title>Finally — an XML Markup Solution for Design-Based Publishers: Introducing the PRISM Source Vocabulary</title><info><confgroup><conftitle>Balisage: The Markup Conference 2012</conftitle><confdates>August 7 - 10, 2012</confdates></confgroup><abstract><para>In the late 1980's, when computer technologies began to find application in publishing, the universe split into two very distinct worlds; content-based publishing and design-based publishing.  Content-based publishers gravitated toward "SGML/XML First" workflows employing automated layout while design-based publishers adopted design-based desktop publishing solutions.  This divide remains today.  While it is obvious to those on the content side that all publishers should be standardizing publishing based on document models and moving to XML-first, this remains highly problematic when art directors, not the editorial staff rule in the magazine publishing world!</para><para>But on April 2010, the design-based publishing world was rocked when the iPad became the first of many new digital publishing platforms for magazine publishers.  Finally it became clear that in order to publish simultaneously in print and across all a range of diverse mobile platforms with different aspect ratios, sizes and op systems, workflows must shift to a model where a platform agnostic content XML source is used feed all platforms and designs.  This session will focus on the new dynamic, design-based publishing architecture, the PRISM Source Vocabulary, developed over the past 2 years and just posted as a final public draft in mid June 2012.  Learn how PSV leverages rich metadata and controlled vocabulary semantics coupled with HTML5 to enable a new paradigm for design-based publishing.</para></abstract><author><personname><firstname>Dianne</firstname><surname>Kennedy</surname></personname><personblurb><para>Dianne Kennedy is the Vice President of Media and Emerging Technologies for IDEAlliance.  Ms. Kennedy oversees and guides the development of emerging technology specifications and best practices to support platform agnostic, cross-media publishing.  Her nextPubT publishing industry technology incubator fosters the development of next-generation publishing tools that can make multi-channel publishing simple and efficient.  Ms. Kennedy serves as technical editor for PRISM 3.0 Specifications, PRISM Source Vocabulary Specifications, mailXML Specification and the ADAM Specification.</para></personblurb><affiliation><jobtitle>Vice President of Media and Emerging Technologies</jobtitle><orgname>IDEAlliance</orgname></affiliation><email>dkennedy@idealliance.org</email></author><legalnotice><para>Copyright © 2012 IDEAlliance</para></legalnotice><keywordset role="author"><keyword>PRISM</keyword><keyword>PRISM Source Vocabulary</keyword><keyword>PSV</keyword><keyword>Metadata</keyword><keyword>Design-based Publishing</keyword></keywordset></info><section><title>In the Beginning</title><para>When publishing moved from linotype to computer assisted composition, the publishing split into two different and distinct worlds.  On one side publishers developed and adopted structured markup technologies.  But another major sector of publishing focused on moving publications to new levels of layout and design.  Each faction had a very different philosophy.  Each nurtured the development of very different publishing tool sets and hence distinctly different skillsets and workflows.</para></section><section><title>Content-Based Publishing</title><para>In one world, the world of content-based publishing, the content is the whole point of publishing.  Technical publishing is a prime example of content-based publishing.  Technical publishing encompasses technical documentation such as maintenance and operational technical manuals as well as reference publishing such as legal publishing, financial reports and product information along with content that is assembled from databases such as course catalogs, racing forms and even television show guides.  Content-based publications are often quite lengthy, being made up of hundreds and often thousands of pages of highly structured content.</para><para>Another characteristic of a content-based publication is that it can be formatted automatically by applying style sheets or templates.  Style sheets are designed to enable a reader to quickly access information in lengthy publications. Publishers with large volumes of structured content adopted publishing tools and systems based on ISO 8879:SGML and later on W3C's XML markup language.  Content could be created in XML first, stored in XML content management systems that were modeled on the XML document structure.  Content could then be assembled from the XML content repositories and the layout and styling were automated through the use of high-speed computerized pagination engines.  Docbook, adapted for the encoding of Balisage papers, is an example of one such structured markup specification.</para><figure xml:id="content" xreflabel="Content"><title>Content-Based Publications</title><mediaobject><imageobject><imagedata format="jpg" fileref="../../../vol8/graphics/Kennedy01/Kennedy01-001.jpg"/></imageobject></mediaobject><caption><para>Content-based publications are highly structured and can be formatted through the application of style sheets or templates.</para></caption></figure><para>For many years, I worked in the world of content-based publishing.  As an employee of Datalogics, I was involved in early SGML designs and pioneering SGML implementations for the US Air Force (ATOS), ATA 100 SGML tagging for aircraft maintenance manuals and served as chairperson for the Society of Automotive Engineering (SAE) J2008 SGML Specification.  While deeply engaged in technical and reference publishing projects, I could not imagine why all publishers didn't standardize their content so they could reap the benefits that implementing structured-markup based systems could provide. And my guess is that many Balisage delegates maintain that same perspective.</para></section><section><title>Design-Based Publishing</title><para>Until 2003, I worked almost exclusively in the world of content-based publishing.  Then in 2003 I joined the staff of IDEAlliance.  My first assignments moved me into magazine publishing and advertising.  This was a very different place for me.  The tools were not at all familiar.  I began working with "creatives" who developed a concept and design for everything they published.  Once the creative specifications were established, content creation began.  Writers were given assignments and photographers set up shoots to illustrate the concepts and complement the design.  And suprisingly, other than a few standard "department" assignments such as book and movie reviews, content was relatively free flowing.</para><figure xml:id="design" xreflabel="Design"><title>Design-Based Publications</title><mediaobject><imageobject><imagedata format="jpg" fileref="../../../vol8/graphics/Kennedy01/Kennedy01-002.jpg"/></imageobject></mediaobject><caption><para>Design-based publications are often unique creations and standardizing structure is quite difficult.</para></caption></figure><para>I had entered the twilight zone, the very different world of publishing that based on design not content.  Most magazines fall into this category along with highly designed books such as cook books, travel books and other "coffee table" books.  For this type of publishing, design comes first. Here the Art Director rules.  Standard style sheets that would give each issue the same look month after month would simply not do.  And because design comes first, content structures cannot be effectively standardized either.  Hence, very few publishers of design-based publications have adopted "XML-first" workflows.  And in fact until recently very few members of this community employed XML at all. Process automation has been held to the minimum as well.  In this world publishing technology is focused on enabling design.</para></section><section><title>The iPad Impact</title><para>In April 2010, the design-based publishing world was rocked when the iPad became the first of many new digital publishing platforms for magazine publishers.  Publishers had only 80 days to figure out how to publish magazines in print and on the iPad simultaneously.  Additionally they were challenged to move from the 2D to the 3D world of articles and advertising enhanced by slideshows, videos and highly interactive content. And the iPad was only the beginning.  Nearly 2 years later we have a wide array of tablet devices available as new publishing platforms.</para><para>Until the tablet-publishing tsunami hit, design-based publications were able to justify their labor-intensive design-based publication process.  But the challenge of producing well-designed publications, not only in print, but on a growing number of digital devices with different resolutions, aspect ratios and sizes soon became overwhelming. Finally it became clear that in order to publish simultaneously in print and across all a range of diverse mobile platforms with different aspect ratios, sizes and op systems, workflows must shift to a model where a platform agnostic content, an XML source format, is used feed all platforms and designs. The challenge for magazine publishers was to figure out how to leverage the benefits realized from the XML-First publishing model while protecting the seminal importance of high-quality design.</para></section><section><title>About the nextPub Initiative</title><para>nextPub, the publishing industry's technology incubator, was launched in 2010 by IDEAlliance and is supported by the Magazine Media Association, the 4A's/Ad-ID and the Japanese Magazine Publishing Association.  nextPub enables publishers to engage directly with their industry peers and leading publishing technologists to foster the development of next-generation design-based publishing tools by embracing emerging technologies, developing best practices and establishing new industry specifications to serve as the foundation for tomorrow's publishing workflows.</para><para>When the nextPub Initiative began, the immediate goal was to make multi-channel publishing both simple and efficient.  That is, to meet the iPad challenge.  But as the Working Group explored standards and technologies, strategists began to envision monetizing content beyond today's publishing channels by utilizing a "Dynamic Content Architecture" from which additional publishing channels can emerge when new content collections are assembled based on topics from across magazines or based on personal preferences as foreshadowed by the Flipboard, Pulse or Zite models.</para></section><section><title>Assumptions</title><para>Over the past 2 years, the nextPub Initiative has developed a major set of new specifications to serve as the next generation for design-based publishing.  These specifications are based on the following assumptions:</para><itemizedlist><listitem><para>
	We have come to believe the Source is the Solution.  We must capture and store platform-agnostic content as early as possible.  For design-based publications, this will likely not mean XML First, but it certainly implies XML Early.
	  </para></listitem><listitem><para>Since design-based content cannot be highly structured, </para></listitem><listitem><para>We must foster the development of new dynamic display/layout technologies that enable simultaneous design for multiple publishing platforms and automatic content layout capabilities supporting high-quality design aesthetics</para></listitem></itemizedlist></section><section><title>The nextPub Design-Based Publishing Model</title><para>nextPub Publishing Model is based on digital capture and management of all content and associated rich media.  Source content must be semantically rich enough to enable the publisher to select content and automate layout and delivery to a wide variety of publishing platform in platform-native formats.  To support the nextPub publishing model, the Working Group has developed the PRISM Source Vocabulary (PSV) Specification.  PSV has been designed to support today's issue-based publications as well as to enable publishers to aggregate content in new ways to create new digital content channels that extend beyond the traditional publication models.</para><para>The PRISM Source Vocabulary (PSV) Specification, defines a framework of robust metadata elements and controlled vocabularies that can be used to configure federated source content / rich media repositories.  Metadata fields and values used in this specification are drawn from the IDEAlliance PRISM 3.0 Metadata and Controlled Vocabulary Specifications.  In order to future-proof content, nextPub recommends encoding content using HTML5 tagging enhanced with PRISM-based class semantics.</para><figure xml:id="model" xreflabel="Model"><title>nextPub Design-Based Publishing Model</title><mediaobject><imageobject><imagedata format="jpg" fileref="../../../vol8/graphics/Kennedy01/Kennedy01-003.jpg"/></imageobject></mediaobject><caption><para>The nextPub Publishing Model is based on digital capture and management of all content and associated rich media.</para></caption></figure></section><section><title>About the PRISM Source Vocabulary (PSV)</title><para>When designing the PRISM Source Vocabulary, the nextPub Working Group was committed to build on existing publishing infrastructures.  This meant basing our work on the PRISM (Publishing Requirements for Industry Standard Metadata) Specification which is already in wide use by design-based publishers.  Since most major magazine publishers have implemented today's publishing systems based on this robust IDEAlliance metadata specification, it was deemed to be the ideal starting point to build on for the future.</para><para>nextPub was also committed to leveraging emerging technologies.  Most of the current publishing systems based on PRISM use an XHTML-based content coding scheme that publishers to deliver content to aggregators.  But the nextPub Working Group found great limitations in remaining with XHTML and great opportunity to move to HTML5, a semantically-based Vocabulary for HTML and XML /[HTML5/].  HTML5, working in conjunction with CSS3 and JS, provided the support for rich media and interactivity that design-based publishers require for the future.
	</para><figure xml:id="foundation" xreflabel="Foundation"><title>The PSV Foundation</title><mediaobject><imageobject><imagedata format="jpg" fileref="../../../vol8/graphics/Kennedy01/Kennedy01-004.jpg"/></imageobject></mediaobject><caption><para>PSV is based on PRISM 3.0 metadata and HTML5 enhanced with PRISM semantics</para></caption></figure><para>While some from the content-based publishing world may question the use of HTML5 for encoding magazine article content based on what they view as a limited functionality due to the high degree of structural flexibility and limited hierarchy of HTML5, it is that very flexibility plus the ability to carry semantics on any structure tag that makes HTML5 a perfect fit for design-based content.  Because of the high variability of content developed as part of a creative design process, the magic of the dynamic c5 ontent architecture is in the metadata not in the XML structured tagging.  In addition PSV adds PRISM semantics to the HTML5 to enhance functionality.</para><section><title>A Flexible Framework</title><para>Another principle behind the design of PSV was the requirement for flexibility.  Each publisher has their own business models and publishing strategies.  So a single, rigidly defined framework will not work for anyone.  Rather, the PSV design provides a framework and the building blocks required to implement a dynamic publishing system that can easily be tailored for the business requirements of each publisher.  By selecting appropriate PSV metadata building blocks, a publisher can build a federated digital content repository that satisfies their unique business requirements and strategies.  And the publisher is free to use any conformant HTML5 to semantically encode source content.</para><para>PSV's modular design provides the building blocks for a publisher to implement a dynamic, cross-platform publishing system.  PSV can easily be tailored for the business requirements of each publisher.  Blocks shown in dark colors are required.  These blocks are minimal and include a unique ID for the content object, a specification of the content type (or object type) and of course the HTML5-encoded content.</para><figure xml:id="buildingblocks" xreflabel="BuildingBlocks"><title>PSV Building Blocks</title><mediaobject><imageobject><imagedata format="jpg" fileref="../../../vol8/graphics/Kennedy01/Kennedy01-005.jpg"/></imageobject></mediaobject><caption><para>PSV is flexible framework of building blocks</para></caption></figure></section><section><title>About Content Types</title><para>PSV states that an article is the basic unit of content storage.  But it is important to note that we are referring to a generic article rather than a physical article of a magazine.    In the early days of PRISM, it could be assumed the unit was an article of a magazine, journal or other serial publication.  Now, expanding the scope to cover the broader publishing use cases, the unit-of-content is not so obvious.  This is particularly true when advertising material, blog or book content is added to the scope. In order to refine what we mean by the generic term article, the PRISM Content Type Controlled Vocabulary has been developed.  A content type identifies the highest-level indicator of the nature of the asset that is tagged.  Some content types that describe the unit-of-storage include an advertisement, article, blog entry, book chapter, cover, masthead, introduction and navigational aid.
	</para></section><section><title>About Where Used Metadata</title><para>The Where Used metadata block allows for usage tracking.  Many companies that you think of as magazine publishers are really media companies that own television shows, websites and book content channels.  So tracking usage is critical.  Key metadata choices for the publisher include tracking content usage by the publication name, its ISBN, ISSN, product code and issue name.  PSV allows for tracking the platform and even the device where the content was published.  PSV also allows for tracking the section or page of the publication where the content appeared.  Altogether, PSV offers nearly 40 optional fields to describe where content was used.</para></section><section><title>About Usage Rights</title><para>When publishing content across platforms and publication titles, the publisher's right to use the content is not always guaranteed. This is especially true when content is enhanced with images and videos.   The Usage Rights metadata block provides optional metadata fields that can be used by publishers to track usage rights of content in a repository.  The 15 optional metadata fields in this block are based on the PRISM Usage Rights Metadata Specification -/[PRISMURMS/]</para></section><section><title>Inside Each Metadata Building Block</title><para>Each of the PSV metadata building blocks is made up of PRISM 3.0 metadata fields.  Again the design is flexible so each publisher can select the fields that they need to use to manage and assemble content from a PSV repository.  All possible metadata fields for each building block are doucumented in the PSV Specification.  For example the description metadata includes fields such as dc:subject, prism:publicationName and prism:genre.</para><figure xml:id="description" xreflabel="Description"><title>PSV Description Metadata</title><mediaobject><imageobject><imagedata format="jpg" fileref="../../../vol8/graphics/Kennedy01/Kennedy01-006.jpg"/></imageobject></mediaobject><caption><para>The description block is made up of 25 metadata fields</para></caption></figure></section><section><title>HTML5 for Content Encoding</title><para>The HTML5 Body is one of the required PSV building blocks and is used to encode content.  Unlike EPUB3, PSV makes no extensions to HTML5 and has no restrictions.  PSV recommends that the new HTML5 &lt;article tag be used as the root element for any content unit.  According to the latest HTML5 Draft, "The article element represents a section of a page that consists of a composition that forms an independent part of a document, page, or site. This could be a forum post, a magazine or newspaper article, a Web log entry, a user-submitted comment, or any other independent item of content."  PSV also recommends using a number of the other new HTML5 tags including &lt;section, &lt;nav and &lt;aside that are representative of general magazine article structures.</para><para>To enable semantic content encoding, HTML5 has added a "class" attribute on every element.  PSV recommends a number of PRISM semantic classes that you can use to qualify any HTML5 element.  Examples include box, caption, dateline, credit, and pull quote.</para><programlisting xml:space="preserve">
	&lt;aside class="prism:pullQuote"&gt;
		&lt;p&gt;WE TALK ALL THE TIME ABOUT HOW TO SET THE RIGHT TONE FOR OUR PLAYERS&lt;/p&gt;
	&lt;/aside&gt;
  </programlisting></section></section><appendix><title>References</title><section><title>
THE PSV 1.0 DOCUMENTATION PACKAGE</title><para>The IDEAlliance nextPub Initiative has developed a series of specifications collectively known as the PRISM Source Vocabulary or PSV.  The use case for PSV is to encode semantically rich content for assembly, transformation and delivery to any platform. This Specification is made up of a modular documentation package that builds on PRISM 3.0 and HTML5.  Over time new modules may be added to the documentation package.  The documentation package for the nextPub PRISM Source Vocabulary Specification consists of:</para><table><col align="right" valign="top" span="1"/><col align="right" valign="top" span="1"/><tbody><tr><td>PRISM Source Vocabulary Specification Overview /[PSVSO/]</td><td>The Overview to the PRISM Source Vocabulary provides an introduction and a non-technical overview of the PRISM Source Vocabulary.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.nextpub.org/specifications/1.0/PSV_Overview_1.0_NEW.htm</link></td></tr><tr><td>
PRISM Source Vocabulary Specification /[PSVS/] </td><td>The PRISM Source Vocabulary Specification defines semantically rich for source metadata and content markup that can be transformed and served to a wide variety of output devices including eReaders, mobile tablet devices, smart phones and print.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.nextpub.org/specifications/1.0/PSV_Specification_1.0_NEW.htm</link></td></tr><tr><td>PRISM Source Vocabulary Markup Specification /[PSVMS/]</td><td>The PSV Markup Specification documents the XML tags in the PSV namespace that are used to encode XML Source Content.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.nextpub.org/specifications/1.0/PSV_Markup_1.0_NEW.htm</link></td></tr><tr><td>
PAM to PSV Guide /[PAMPSVGUIDE/]</td><td>This Guide documents mappings from PAM XML to PSV XML.  It is normative only.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.nextpub.org/specifications/1.0/PAM_to_PSV_1.0_NEW.htm</link></td></tr></tbody></table></section><section><title>
THE PRISM DOCUMENTATION PACKAGE:</title><para>Because PSV is built on PRISM 3.0, there is a close relationship between the two specifications.  In fact, access to the PRISM 3.0 Documentation Package is critical to the implementation of PSV.  The PRISM 3.0 Documentation Package consists of:</para><section><title>GENERAL PRISM DOCUMENTATION</title><para>This is a set of general or overview documents that apply to PRISM.</para><table><col align="right" valign="top" span="1"/><col align="right" valign="top" span="1"/><tbody><tr><td>
PRISM Introduction /[PRISMINT/]</td><td>
Overview, background, purpose and scope of PRISM; examples; contains no normative material. 
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Introduction_3.0_NEW.htm</link>
</td></tr><tr><td>
PRISM Compliance /[PRISMCOMP/]</td><td> 
Describes three profiles of PRISM compliance for content and systems; includes normative material.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Compliance_3.0_NEW.htm</link>
</td></tr></tbody></table></section><section><title>
PRISM METADATA SPECIFICATIONS</title><para>This is the set of documents that outline the prism metadata fields and values by PRISM metadata category.  PRISM has modularized its metadata specification by namepace so users may pick those modules that meet their unique business requirements without having to implement the entire PRISM specification.</para><table><col align="right" valign="top" span="1"/><col align="right" valign="top" span="1"/><tbody><tr><td>
The PRISM Basic Metadata Specification /[PRISMBMS/]</td><td>
Describes the basic metadata elements contained in the PRISM namespace to describe article content; includes normative material.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Basic_Metadata_3.0_NEW.htm</link>
</td></tr><tr><td>
PRISM Advertising Metadata Specification /[PRISMADMS/]</td><td>
Describes advertising metadata elements including those drawn from Ads-ML, GWG and Ad-ID; includes normative material.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Advertising_Metadata_3.0_NEW.htm</link>
</td></tr><tr><td>
The PRISM Subset of Dublin Core Metadata Specification /[PRISMDCMS/]</td><td>
Describes metadata elements from the Dublin Core namespace that are included in PRISM; includes normative material.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Dublin_Core_Metadata_3.0_NEW.htm</link>
</td></tr><tr><td>
The PRISM Image Metadata Specification /[PRISMIMS/] </td><td>
Describes the metadata elements contained in the PRISM Metadata for Images Namespace and other related image namespaces, includes normative material.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Image_Metadata_3.0_NEW.htm</link>
</td></tr><tr><td>
The PRISM Recipe Metadata Specification /[PRISMRMS/]</td><td>
Describes the metadata elements contained in the PRISM Recipe Metadata Namespace, includes normative material.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Recipe_Metadata_3.0_NEW.htm</link>
</td></tr><tr><td>
The PRISM Usage Rights Metadata Specification /[PRISMURMS/]</td><td> 
Describes the metadata elements contained in the PRISM Usage Rights Namespace; includes normative material. This namespace will supersede elements in both the prism: and prl: namespaces in version 3.0 of the specification.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Usage_Rights_Metadata_3.0_NEW.htm</link>
</td></tr></tbody></table></section><section><title>
PRISM CONTROLLED VOCABULARY SPECIFICATIONS</title><para>These modules are new with PRISM 3.0.  Previously both the Controlled Vocabulary Markup and the documentation of controlled vocabularies were published as a single document.  All controlled vocabularies and their terms are documented in this publication set.</para><table><col align="right" valign="top" span="1"/><col align="right" valign="top" span="1"/><tbody><tr><td>
The PRISM Controlled Vocabulary Markup Specification /[PRISMCVMS/]</td><td> 
Describes metadata fields in the PRISM Controlled Vocabulary Namespace that can be used to describe a controlled vocabulary.   Actual PRISM controlled vocabularies are now placed in the PRISM Controlled Vocabularies Specification /[PRISMCVS/]  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_Controlled_Vocabulary_Markup_3.0_NEW.htm</link>
</td></tr><tr><td>
The PRISM Controlled Vocabularies Specification /[PRISMCVS/] </td><td>
The PRISM Controlled Vocabularies are now documented in this document.  
<link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.prismstandard.org/specifications/3.0/PRISM_CV_Spec_3.0_NEW.htm</link>
</td></tr></tbody></table><para>NOTE: In addition to the PSV and PRISM Specification a series of implementation guides are provided by IDEAlliance.</para></section></section></appendix></article>