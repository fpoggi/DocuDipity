<?xml version="1.0" encoding="UTF-8"?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0-subset Balisage-1.2"><title>Formal and informal meaning from documents through skeleton
	 sentences</title><subtitle>Complementing formal tag-set descriptions with intertextual
	 semantics and vice-versa</subtitle><info><confgroup><conftitle>Balisage: The Markup Conference 2009</conftitle><confdates>August 11 - 14, 2009</confdates></confgroup><abstract><para>In [<xref linkend="SHR2000a"/>], Sperberg-McQueen et al. describe a
		  framework in which the semantics of a structured document is represented by the
		  set of <emphasis role="ital">inferences</emphasis> (statements)
		  <emphasis role="ital">licensed</emphasis> by the document, that is, statements
		  which can be considered to hold on the basis of the document. 
		<!--In principle, the set of inferences licensed by a
		document could be infinite, and thus, not directly manipulable.
		However, as the authors note, it consists of the closure, under
		logical inference (with appropriate rules), of a <emphasis
		role="ital">finite</emphasis> set of basic inferences <emphasis
		role="ital">directly</emphasis> licensed by the document. -->
		  The authors suggest that an adequate set of basic inferences can be
		  generated from the document itself by a fairly simple <emphasis role="ital">skeleton sentence</emphasis> and <emphasis role="ital">deictic
		  expression</emphasis> mechanism. These ideas were taken up and developed in
		  various ways and contexts in later work (see for example [<xref linkend="SDHR2002"/>]) and came to be called the “Formal tag-set
		  description” approach (FTSD). The approach is independent of any
		  particular logical system, and the possibility that the statements licensed by
		  a document be in natural language has been mentioned and exemplified, though
		  not to a large extent.</para><para>With a different set of preoccupations in mind (namely, providing
		  semantic support to an author during the document creation process), Marcoux
		  introduced in [<xref linkend="eml2006"/>] <emphasis role="ital">intertextual
		  semantics</emphasis> (IS), a framework in which the meaning of a document is
		  entirely and exclusively represented by natural language segments.</para><para>In this paper, we compare the IS and FTSD approaches, and argue
		  that the insights into the meaning of a document supplied by the two approaches
		  actually complement each other. We give a number of concrete examples of
		  increasing complexity, including the set of formal and informal statements
		  derivable in each case, to substantiate our claim.</para></abstract><author><personname><firstname>Yves</firstname><surname>Marcoux</surname></personname><personblurb><para>Yves Marcoux is a faculty member at EBSI, University of Montréal,
			 since 1991. He is mainly involved in teaching and research activities in the
			 field of document informatics. Prior to his appointment at EBSI, he has worked
			 for 10 years in systems maintenance and development, in Canada, the U.S., and
			 Europe. He obtained his Ph.D. in theoretical computer science from University
			 of Montréal in 1991. His main research interests are document semantics,
			 structured document implementation methodologies, and information retrieval in
			 structured documents. Through GRDS, his research group at EBSI, he has been
			 principal architect for the Governmental Framework for Integrated Document
			 Management, a project funded by the National Archives of Québec and by the
			 Québec Treasury Board.</para></personblurb><affiliation><jobtitle>Associate professor</jobtitle><orgname>Université de Montréal, Canada</orgname></affiliation><email>yves.marcoux@umontreal.ca</email></author><author><personname><firstname>C. M.</firstname><surname>Sperberg-McQueen</surname></personname><personblurb><para>Sperberg-McQueen, C. M. is an independent consultant for Black
			 Mesa Technologies LLC. He currently serves as an editor of the W3C XML Schema
			 Definition Language (XSD) 1.1.</para></personblurb><affiliation><orgname>Black Mesa Technologies LLC</orgname></affiliation><email>cmsmcq@blackmesatech.com</email></author><author><personname><firstname>Claus</firstname><surname>Huitfeldt</surname></personname><personblurb><para>Claus Huitfeldt is Associate Professor at the Department of
			 Philosophy of the University of Bergen. His research interests are within
			 philosophy of language, philosophy of technology, text theory, editorial
			 philology and markup theory. He was founding Director (1990-2000) of the
			 Wittgenstein Archives at the University of Bergen, for which he developed the
			 text encoding system MECS as well as the editorial methods for the publication
			 of Wittgenstein's Nachlass - The Bergen Electronic Edition (Oxford University
			 Press, 2000). He was active in the Text Encoding Initiative (TEI) since 1991,
			 and was centrally involved in the foundation of the TEI Consortium. Huitfeldt
			 was Research Director (2000-2002) of Aksis (Section for Culture, Language and
			 Information Technology at the Bergen University Research Foundation).</para></personblurb><affiliation><jobtitle>Associate professor</jobtitle><orgname>University of Bergen, Norway</orgname></affiliation><email>claus.huitfeldt@fof.uib.no</email></author><legalnotice><para>Copyright © 2009 by the authors.  Used with
  			permission.</para></legalnotice></info><section><title>Introduction</title><para>What is the “meaning” of markup? How is the meaning of a
		document augmented or otherwise affected by the presence of markup? Those
		questions have preoccupied markup theorists (and many others) for probably as
		long as markup conventions have existed.</para><para>Fundamentally, two approaches can be taken. First, one can devise a
		<emphasis role="ital">formal</emphasis> framework in which the meaning of a
		document is represented by a set of formal statements. Second, one can seek an
		<emphasis role="ital">informal</emphasis> framework in which the meaning of a
		document is represented by a set of sentences in an informal language. An
		example of suitable formal framework is first-order logic; an example of
		suitable informal framework is any natural language. In both cases, the
		statements may or may not say something about “the world” beyond
		the document as such.</para><para>The two approaches are not aimed at the same goals. If automatic
		inferencing (through an inference engine) is in sight, then the formal approach
		probably has a leading edge. However, if some other use of the
		“meaning” of the document is envisioned, which for example involves
		showing that meaning to humans, then it is possible the informal approach has a
		leading edge.</para><para>In [<xref linkend="SHR2000a"/>], Sperberg-McQueen et al. describe a
		framework in which the semantics of a structured document is represented by the
		set of <emphasis role="ital">inferences</emphasis> (statements)
		<emphasis role="ital">licensed</emphasis> by the document, that is, statements
		which can be considered to hold on the basis of the document. The authors
		suggest that an adequate set of basic inferences can be generated from the
		document itself by a fairly simple <emphasis role="ital">skeleton
		sentence</emphasis> and <emphasis role="ital">deictic expression</emphasis>
		mechanism. These ideas were taken up and developed in various ways and contexts
		in later work (see for example [<xref linkend="SDHR2002"/>] and [<xref linkend="eml2004"/>]), which we here call the “Formal tag-set
		description” approach (FTSD). The approach is independent of any
		particular logical system, and the possibility that the statements licensed by
		a document be in natural language has been mentioned and exemplified, though
		not systematically.</para><para>With a different set of preoccupations in mind (namely, showing a
		“preview” of the meaning of a document to an author during the
		writing process), Marcoux introduced in [<xref linkend="eml2006"/>]
		<emphasis role="ital">intertextual semantics</emphasis> (IS), a framework in
		which the meaning of a document is entirely and exclusively represented by
		natural language segments.</para><para>In this paper, we compare the IS and FTSD approaches, and argue that
		the insights into the meaning of a document supplied by the two approaches
		actually complement each other. After a brief review of each approach (this
		paper is not meant to be a complete introduction to either), we give a number
		of concrete examples of increasing complexity, including the set of formal and
		informal statements derivable in each case, to substantiate our claim.</para></section><section><title>Formal tag-set descriptions</title><para>The essential ideas of the FTSD approach are: 
		<itemizedlist><listitem><para>The <quote>meaning</quote> of a markup construct <emphasis role="ital">M</emphasis> in an
				instance document can be identified with the set of sentences <emphasis role="ital">S</emphasis> true because
				of <emphasis role="ital">M</emphasis>, or (equivalently) the set of sentences that can be inferred from
				<emphasis role="ital">M</emphasis>.<footnote><para>To avoid having all logical truths show up as part of the
					 meaning of every markup construct, in practice we take <quote>the set of
					 sentences <emphasis role="ital">S</emphasis> true because of <emphasis role="ital">M</emphasis></quote> to mean sentences we can infer, given
					 <emphasis role="ital">M</emphasis>, that cannot be inferred without <emphasis role="ital">M</emphasis>.</para><para>The set of inferences possible, given <emphasis role="ital">M</emphasis>, also depends on
					 what other premises are available; the result is to make the set of inferences
					 and thus the meaning of <emphasis role="ital">M</emphasis> vary with what else is known; this resembles at
					 least vaguely the idea expounded by Wrightson's application of situation
					 semantics [<xref linkend="AW2001"/>, <xref linkend="AW2005"/>]. If <emphasis role="ital">M</emphasis> is
					 completely redundant with other information, its net addition to our stock of
					 inferences may be nil.</para></footnote> When necessary, we distinguish the sentences in <emphasis role="ital">S</emphasis>
				from other sentences by calling the former <emphasis>instance
				sentences</emphasis>. </para></listitem><listitem><para>The <quote>meaning</quote> of a markup construct <emphasis role="ital">M</emphasis> in the
				abstract can be captured effectively by <quote>skeleton sentences</quote>,
				sentence schemata with blanks to be filled in appropriately for each instance
				of construct <emphasis role="ital">M</emphasis> in a document instance. </para><para>The skeleton sentences are generalizations of the instance
				sentences mentioned in the preceding point; each instance sentence should be an
				instantiation of some skeleton sentence.</para></listitem><listitem><para>For existing colloquial XML vocabularies, when the inferences
				licensed by a particular element instance are being tabulated, the values to be
				inserted for the blanks in the appropriate skeleton sentences often vary with
				the element's position; XPath expressions can be used to specify a concise rule
				for finding the appropriate values, given a particular element as context node.
				Because the value of the XPath expressions varies with context, they are (in
				the linguistic sense) <quote>deictic</quote> expressions. </para></listitem><listitem><para>Skeleton sentences, together with the deictic expressions used
				to specify how to fill in their blanks, can provide useful documentation of a
				markup vocabulary. They could be integrated, for example, into the Tag Set
				Documentation (TSD) vocabulary defined by the Text Encoding Initiative. If the
				skeleton sentences are written in a formal notation like predicate calculus,
				the conventional tag set documentation (TSD) becomes a <quote>formal</quote>
				tag set documentation (or FTSD), which can provide the kind of formal
				definition of the semantics of an XML vocabulary which some observers have
				occasionally desired, and which some others (who give signs of wishing to
				displace colloquial XML and replace it with RDF or some other formalism
				instead) have simply claimed does not or cannot exist. </para></listitem></itemizedlist> </para></section><section><title>Intertextual semantics</title><para>The intertextual semantics (IS) approach is based on a view of which
		traces can be found in, among other places, the works of Wirzbicka [<xref linkend="wirzbicka2"/>], Smedslund [<xref linkend="smedslund"/>] and even
		Wittgenstein [<xref linkend="wittg1"/>]. This is the view that humans
		ultimately <quote>make sense</quote> of artefacts through the use of
		<emphasis role="ital">natural language</emphasis>, or rather, that to the
		extent that they can make sense of an artefact, this sense can be expressed in
		natural language (NL). Thus, in designing artefacts such as markup, one should
		be preoccupied by how, and how easily and with how much ambiguity (or
		unambiguity), humans can understand those artefacts in NL terms. No matter how
		useful intermediate formal representations of meaning (including marked-up
		documents) may be for conciseness, machine processing, etc., they must
		ultimately be translatable (not necessarily translat<emphasis role="ital">ed</emphasis>) to NL, and are ever only as “meaningful”
		as such NL expressions of them are.</para><para>In the realm of markup, IS suggests the creators of tag-sets
		(modelers) must be preoccupied by how markup can be translated to NL. Even if
		“end users” never see any marked-up document, some other humans,
		for example, processing software developers, or archivists, will have to deal
		with them directly or indirectly, unless the documents are totally pointless.
		One might say it is even more important to be preoccupied by that translation
		as the number of intermediate representations increases, because there are then
		more opportunities for misinterpretations. Dubin et al. have recently
		illustrated some difficulties that can arise from failures in automatic
		translation from one representation to another [<xref linkend="dubin2006"/>].</para><para>IS proposes a mechanism by which NL passages (or whole documents) are
		generated from marked-up documents, according to an <emphasis role="ital">IS
		specification</emphasis> for the tag-set. So far, only very weak NL generation
		mechanisms have been explored, <emphasis role="ital">and it is extremely
		important that those mechanisms be weak</emphasis>, because too powerful
		mechanisms would “hide under the carpet” inherent interpretation
		complications which IS, in contrast, seeks to uncover.</para><para>In the current state of the IS framework, an IS specification takes
		the form of a table giving, for each element type two NL segments: a
		“text-before” segment and a “text-after” segment
		(generically called “peritexts”). Attributes are handled by the
		possibility of including in the peritexts “guarded segments,”
		segments guarded by an attribute name, that are only included if the
		corresponding attribute is specified on the element, and that can refer to the
		attribute value. “Local” elements (in the sense of W3C schemas) are
		supported, so that different peritexts can be assigned depending on the
		ancestors of the element. The IS generation process is similar to styling the
		document with the peritexts, concatenating peritexts <emphasis role="ital">and</emphasis> element contents as the document tree is traversed
		depth-first. The <emphasis role="ital">IS</emphasis>, or <emphasis role="ital">IS-meaning</emphasis>, <emphasis role="ital">of the
		document</emphasis> is the resulting character string.</para><para>IS has similarities with various mechanisms aimed at presenting
		markup in more or less explicit or explicated forms, such as Piez's
		<quote>false-color proofs</quote> [<xref linkend="piez2006"/>, slide 12].
		However, it is important to stress that the preoccupations of IS are not at the
		presentational level, but really at the semantic level. The
		“presentation” obtained through the IS mechanism
		<emphasis role="ital">defines</emphasis> the meaning of a document. In the
		other approaches we are aware of, the presentation (if successful) accurately
		<emphasis role="ital">represents</emphasis> the meaning of a document, but that
		meaning is defined elsewhere.</para><para>It is also important to mention that IS is not first and foremost
		intended to give interpretations of existing tag-sets, but is mostly meant to
		assist in the development of new tag-sets. Applying it to existing tag-sets
		often gives rise to improbable or awkward formulations in the IS (meaning) of
		documents, in part because such tag-sets were not in the first place designed
		with IS preoccupations in mind. In our view, this only brings to light the
		inherent complexities of the tag-set, or the difficulty or possible variability
		(sometimes deliberate, it is important to say) in interpreting conforming
		documents.</para><!--<para>Another aspect of IS is that a marked-up document should stand as an
		<emphasis role="ital">at least plausible</emphasis> &ldquo;abbreviation&rdquo;
		of its IS-meaning. This is related to document independence and to the
		interpretability of the document by itself, and thus, ultimately, to
		information perennity.<footnote>
		  <para>We believe this is true even when deliberate obfuscation is
			 sought. Obfuscation should be viewed as part of the dissemination process, not
			 of the document production process.</para></footnote> This suggests that the
		choice of <emphasis role="ital">marker names</emphasis> (generic identifiers,
		attribute names, etc.) should be the last step in the development of a tag-set,
		and that they should be chosen on the basis of what they are intended to
		mean.</para>--><para>A full presentation of IS in general can be found in [<xref linkend="jasist"/>]. For structured documents, it is defined in [<xref linkend="eml2006"/>] and [<xref linkend="eml2007"/>].</para></section><section><title>Comparison of FTSD and IS</title><para>Suppose document <emphasis role="ital">D</emphasis> conforms to a certain tag-set <emphasis role="ital">TS</emphasis>, to which
		corresponds a collection <emphasis role="ital">F</emphasis> of formal skeleton sentences. We will denote by
		<emphasis role="ital">F</emphasis>(<emphasis role="ital">D</emphasis>) the set of actual formal sentences (not skeleton ones) generated by
		applying <emphasis role="ital">F</emphasis> to <emphasis role="ital">D</emphasis>. Now, let <emphasis role="ital">I</emphasis> be an IS specification for <emphasis role="ital">TS</emphasis>, and let us
		denote by <emphasis role="ital">I</emphasis>(<emphasis role="ital">D</emphasis>) the set of (natural language, or “informal”)
		sentences generated by <emphasis role="ital">I</emphasis> when applied to <emphasis role="ital">D</emphasis>.<footnote><para>We should point out here that, since we assume that generating
			 each of <emphasis role="ital">I</emphasis>(<emphasis role="ital">D</emphasis>) and <emphasis role="ital">F</emphasis>(<emphasis role="ital">D</emphasis>) is a terminating process, we are implicitly
			 assuming that they both are finite sets, which in practice they are. Moreover,
			 each member of each set is also of finite length.</para></footnote></para><para>What can we say about how <emphasis role="ital">I</emphasis>(<emphasis role="ital">D</emphasis>) compares to <emphasis role="ital">F</emphasis>(<emphasis role="ital">D</emphasis>)? Of course,
		it all depends on exactly how <emphasis role="ital">F</emphasis> and <emphasis role="ital">I</emphasis> are constructed, that is, ultimately,
		on what the actual meaning of markup is intended to be. However, we can say
		something about what <emphasis role="ital">I</emphasis> and <emphasis role="ital">F</emphasis> would <emphasis role="ital">typically</emphasis> look like.</para><itemizedlist><listitem><para><emphasis>Ordering</emphasis></para><para>Typically, <emphasis role="ital">F</emphasis>(<emphasis role="ital">D</emphasis>) is an <emphasis role="ital">unordered</emphasis> set of discrete statements in some formal
			 language. In our examples (as in most of previous work on FTSD), we will use
			 first-order logic sentences. Even when natural language is suggested as a
			 potential language for statements, <emphasis role="ital">F</emphasis>(<emphasis role="ital">D</emphasis>) is first and foremost envisoned as
			 an <emphasis role="ital">unordered</emphasis> set of sentences.</para><para>In contrast, <emphasis role="ital">I</emphasis>(<emphasis role="ital">D</emphasis>) is typically a single string of characters,
			 possibly forming multiple sentences (in natural language), in which case,
			 however, the <emphasis role="ital">order</emphasis> of the sentences matters.
			 <emphasis role="ital">I</emphasis>(<emphasis role="ital">D</emphasis>) is first and foremost meant to be readable sequentially, as normal
			 text (as opposed to hypertext). That being said, <emphasis role="ital">I</emphasis>(<emphasis role="ital">D</emphasis>) <emphasis role="ital">can</emphasis> contain hypertext links, but they must only be used
			 to point to “background” or “complementary” material,
			 which more or less forms a whole, and not in a way that disrupts
			 sequentiality.</para></listitem><listitem><para><emphasis>Universe of discourse and target
			 community</emphasis></para><para>In the FTSD approach, the actual set of predicates used in the
			 sentences for a given tag-set depends on the “universe of
			 discourse” of the documents, that is, the collection of things and
			 concepts the documents in that tag-set “talk about.” For example,
			 in defining the meaning of the OAI 2.0 tag-set [<xref linkend="oai"/>],
			 predicates to the effect that something “is an OAI-server,”
			 “is an OAI-request,” or “is a response sent by an
			 OAI-server,” are naturally introduced. In addition to defining predicates
			 (which include types and relations), characterizing the universe of discourse
			 in the FTSD approach involves making assertions about that universe (facts or
			 inference rules), e.g., assertions that certain individuals satisfying certain
			 predicates exist.</para><para>In IS, the rough equivalent of defining the universe of discourse
			 is identifying the <emphasis role="ital">target community</emphasis> of users
			 of the documents (“users” is used here in a generic sense, which
			 includes authors, readers, analysts, processing software developers,
			 information managers, archivists, etc.). Intuitively, one can view the universe
			 of discourse as the intersection of what the community members know or, at
			 least, can name. In identifying the target community, one is required to make
			 (preferably explicit, but at least implicit) assumptions about what vocabulary
			 and level of language is appropriate for the community members, what their
			 previous knowledge is, what profiles they have, through which use cases will
			 they interact with the documents, etc. Note how similar assumptions are
			 involved in making a sensible and useful selection of predicates and other
			 elements in the FTSD approach.</para></listitem><listitem><para><emphasis>Deixis and locality of references</emphasis></para><para>In the context of markup, <emphasis role="ital">deictic
			 expressions</emphasis> are expressions pointing to various
			 “locations” within a document (usually in a relative way). Relative
			 XPath expressions provide a good approximation of what deictic expressions are.
			 For example, a deictic expression evaluated at some given element in a document
			 may point to a specific attribute of that element, or to the first child of
			 that element, or to a specific attribute of the last child of that element,
			 etc.</para><para>Although far from exploiting the full expressive power of
			 XPath 1.0 (let alone XPath 2.0), deictic expressions in the FTSD
			 approach often point outside of “the current element.” For example,
			 they might point to the parent, a child, or a sibling of the current element.
			 In contrast, if we were to express the “pointing” power of the IS
			 generation mechanism as deictic expressions, the only expressions allowed would
			 be “the current element,” or “the attribute named X of the
			 current element.” So, the <emphasis role="ital">reach</emphasis> of a
			 skeleton sentence in IS is very limited. But that limitation is quite
			 deliberate; in a nutshell, it stems from the assumption that the closer the
			 artificial (marked-up) form of knowledge is to its informal (natural-language)
			 form, the higher the odds it will be properly understood. Any complexity in the
			 deictic expressions used in the skeleton sentences translates (or, at least, so
			 goes the IS story) into complexity for anyone required to comprehend the
			 tag-set (whether they be readers, authors, archivists, software developers, or
			 what have you).</para></listitem></itemizedlist></section><section><title>Examples</title><para>We now compare FTSD and IS through examples.</para><section><title>A single paragraph</title><para>For simplicity, we start with a very simple example, perhaps
		  trivial. (But its simplicity allows the machinery to be more readily
		  understood.) Let <emphasis role="ital">D</emphasis> be the following document:</para><para>Example 1:</para><blockquote><programlisting xml:space="preserve">
  &lt;doc&gt;
    &lt;para&gt;Elizabeth went to Sussex.&lt;/para&gt;
  &lt;/doc&gt;
</programlisting></blockquote><para>We have just two tags in the tag-set, <code>doc</code> and
		  <code>para</code>. With such a simple example, the similarity between FTSD and
		  IS can be quite high. The minimal universe of discourse for this example is
		  that of documents, paragraphs, and character strings. We assume for purposes of
		  the example that these are primitive notions that convey interesting
		  information about the nature of certain objects. Documents contain sequences of
		  paragraphs. Paragraphs have character-string values.<footnote><para>The number and kind of the primitive notions assumed in the
				semantic description of a vocabulary, and the explicit relations among them,
				may vary with the design and purpose of the vocabulary or with those of the
				FTSD itself. In some cases, it may be desired to specify the meanings of some
				concepts in terms of a small number of primitives. In other cases, it may be
				better to allow the precise relations among concepts to remain unspecified, by
				treating them all as primitives.</para><para>In this case, for example, one could stipulate that a
				<emphasis>document</emphasis> is, by definition, a sequence of
				<emphasis>paragraphs</emphasis> (in which case its title, authorship
				attribution, language, etc., would be, by definition, not part of the document
				but extraneous to it), or that a <emphasis>paragraph</emphasis> is, by
				definition, a subdivision of a <emphasis>document</emphasis> (in which case one
				might argue that no two documents can ever contain the same paragraph).
				Similarly, some might prefer to say not that a paragraph <quote>has</quote> a
				character-string value, but that a paragraph <emphasis>consists of</emphasis> a
				string of characters (which others, in turn, would resist on the grounds that
				in reality a paragraph is a linguistic and/or rhetorical object, of which a
				character string can never be more than an approximate representation. By
				positing <emphasis>document</emphasis>, <emphasis>paragraph</emphasis>, and
				<emphasis>character string</emphasis> as primitive notions, we avoid specifying
				such details and allow the markup language to be compatible with different
				views of the precise nature of documents and paragraphs. </para></footnote> </para><section><title>Intertextual semantics</title><para>An IS specification for our tag-set just has to specify a
			 text-before segment and a text-after segment for the two elements
			 <code>doc</code> and <code>para</code>. We will present IS specifications using
			 the format adopted in [<xref linkend="inprep"/>], which is pretty much
			 self-explanatory<footnote><para> The attribute name <code>paths</code> is used because local
				  elements would be identified not only by their generic ID, but also by part or
				  whole of their ancestral line (thus, effectively, by a <emphasis role="ital">path</emphasis>; later examples will illustrate that). The plural
				  form (<code>path</code><emphasis role="ital">s</emphasis>) is used because a
				  rule might be applicable to more than one element, in which case the paths
				  identifying them would be separated from one another by spaces in the attribute
				  value.</para></footnote>:</para><blockquote><programlisting xml:space="preserve">&lt;rule paths="doc"
    text-before=" This is a document: "
    text-after=" End of the document. " /&gt;

&lt;rule paths="para"
    text-before=" This is a paragraph: "
    text-after=" End of the paragraph. " /&gt;</programlisting></blockquote><para>which would produce the following IS for our document:</para><blockquote><programlisting xml:space="preserve">
<emphasis role="ital">This is a document:</emphasis>

  <emphasis role="ital">This is a paragraph:</emphasis>

     <emphasis role="bold">Elizabeth went to Sussex.</emphasis>

  <emphasis role="ital">End of the paragraph.</emphasis>

<emphasis role="ital">End of the document.</emphasis>
</programlisting></blockquote><para>Note that the <emphasis role="ital">peritexts</emphasis>
			 (text-before and text-after segments) are shown differently from actual
			 contents coming from the document; this is an integral and essential feature of
			 the IS framework (formally, we could say the strings forming the IS of
			 documents comprise characters from two different alphabets, or of two different
			 colors). Note also that some indentation is performed, for increased
			 readability. This is <emphasis role="ital">not</emphasis> at the moment an
			 integral feature of the framework, but it has been the usual presentation of IS
			 so far [<xref linkend="eml2006"/>] [<xref linkend="eml2007"/>]. In fact, the
			 implementation described in [<xref linkend="inprep"/>] does perform an
			 automatic indentation of the IS.</para></section><section><title>FTSD</title><para>In all our examples, we will use normal first-order logic as a
			 formalism for FTSD. For this first example, we need only a few predicates to
			 capture the documented meaning of the markup:<variablelist><varlistentry><term>is_document(<emphasis role="ital">x</emphasis>)</term><listitem><para><emphasis role="ital">x</emphasis> is a document.</para></listitem></varlistentry><varlistentry><term>document_content(<emphasis role="ital">x</emphasis>,<emphasis role="ital">y</emphasis>)</term><listitem><para>Document <emphasis role="ital">x</emphasis> contains <emphasis role="ital">y</emphasis> (a sequence of paragraphs
						— or in larger vocabularies, sections, heading, tables, and other
						paragraph-level objects).</para></listitem></varlistentry><varlistentry><term>is_paragraph(<emphasis role="ital">x</emphasis>)</term><listitem><para><emphasis role="ital">x</emphasis> is a paragraph.</para></listitem></varlistentry><varlistentry><term>paragraph_string(<emphasis role="ital">x</emphasis>, <emphasis role="ital">y</emphasis>)</term><listitem><para>The character-string value of the paragraph <emphasis role="ital">x</emphasis> is the
						string <emphasis role="ital">y</emphasis>.</para><para>We will write strings enclosed in quotation marks in the
						conventional way.</para></listitem></varlistentry></variablelist> </para><para>In order to write out the second argument of
			 <code>document_content</code>, we will need a way to write a sequence of
			 objects (or rather, of expressions denoting objects) as a sequence. Where
			 possible, we adopt the convention that sequences are written with commas
			 separating the expressions denoting the items in the sequence, and enclosed in
			 parentheses: the sequence consisting of <emphasis role="ital">a</emphasis>, <emphasis role="ital">b</emphasis>, and <emphasis role="ital">c</emphasis> in that order, is
			 written <quote><code>(</code><emphasis role="ital">a</emphasis><code>,</code> <emphasis role="ital">b</emphasis><code>,</code>
			 <emphasis role="ital">c</emphasis><code>)</code></quote>. In some circumstances, it proves simpler to give the
			 sequence a name and specify the position of its items with a predicate like
			 <code>seq_pos_item(</code><emphasis role="ital">x</emphasis><code>,</code> <emphasis role="ital">y</emphasis><code>,</code>
			 <emphasis role="ital">z</emphasis><code>)</code>. (We will start counting at 1.) </para><para> Assuming two individuals to which we assign the arbitrary
			 identifiers <code>d</code> and <code>p</code>, we can write the instance
			 sentences for this document instance thus: 
			 <blockquote><programlisting xml:space="preserve">
is_document(d)
is_paragraph(p)
document_content(d, (p) )
paragraph_string(p,"Elizabeth went to Sussex.")
</programlisting></blockquote> or equivalently (assuming an individual <emphasis role="ital">s</emphasis>) 
			 <blockquote><programlisting xml:space="preserve">
is_document(d)
is_paragraph(p)
document_content(d, s)
seq_pos_item(s,1,p)
paragraph_string(p,"Elizabeth went to Sussex.")
</programlisting></blockquote> </para><para> A more rigorous and detailed account might include character
			 tokens and character types in the universe of discourse, so that if (for
			 example) two paragraphs in the same document had the same text, the formal
			 representation of the document could make clear that while the two different
			 paragraphs had the same string-value at the character type level, they were
			 realized by different sequences of character <emphasis>tokens</emphasis>. Such
			 rigor is necessary to achieve clarity and satisfactory treatment of some topics
			 (e.g., the relation between a transcription and its exemplar), but it requires
			 a great deal of machinery to achieve results that were intuitively obvious to
			 start with, and we omit it here to spare our readers the ennui of working
			 through it. </para><para> For similar reasons, we refrain here from offering a fuller
			 development of character strings, with definitions of length, concatenation,
			 and substring functions, which we do not need for now. Some universes of
			 discourse may need them. At this moment, all we have are string individuals,
			 denoted by the usual straightforward notation <code>"a string"</code>.</para><para>If we decide the document means no more than that the content of
			 the <code>para</code> element is a paragraph, which in turn makes up the sole
			 content of the document, then we can be happy to say that <emphasis role="ital">F</emphasis>(<emphasis role="ital">D</emphasis>), the meaning
			 of the document, is the set of sentences given above.</para><para>For this purpose, a set <emphasis role="ital">F</emphasis> of a single formal skeleton sentence
			 will suffice. For convenience, we will write skeleton sentences as literals,
			 filling in blanks with their associated deictic expressions and distinguishing
			 the deictic expressions from their context by enclosing them in braces (in the
			 style of XSLT attribute-value templates). </para><para> Our <emphasis role="ital">F</emphasis> for this vocabulary might contain these skeleton
			 sentences:</para><variablelist><varlistentry><term>for <code>doc</code> elements</term><listitem><para>is_document( <code>{generate-id()}</code> )</para><para>document_content( <code>{generate-id()}</code>,
					 <code>{concat(generate-id(),'-children')}</code> )</para></listitem></varlistentry><varlistentry><term>for <code>para</code> elements</term><listitem><para>is_paragraph( <code>{generate-id()}</code> )</para><para>seq_pos_item(
					 <code>{concat(generate-id(..),'-children')}</code>, <code>{1 +
					 count(preceding-sibling::*)}</code>, <code>{generate-id()}</code> )</para><para>paragraph_string( <code>{generate-id()}</code>,
					 <code>{string(.)}</code>)</para></listitem></varlistentry></variablelist><para>In general, we assume that each of the skeleton sentences given
			 will be instantiated once for each element that matches the pattern. Here, each
			 <code>doc</code> element will generate one <code>is_document</code> sentence
			 and one <code>document_content</code> sentence, and each <code>para</code>
			 element will generate three sentences. As each skeleton sentence is
			 instantiated, each deictic expression will be evaluated with the current
			 element instance as the context node, and the instance sentence will be written
			 out with the value replacing the deictic expression.</para></section></section><section><title>Phrase-level markup</title><para>The “challenges” of our next example are phrase-level
		  markup and the use of attributes.</para><para>Example 2:</para><blockquote><programlisting xml:space="preserve">
&lt;doc&gt;
  &lt;para&gt;
    &lt;person key="E.I.Regina"&gt;Elisabeth&lt;/person&gt; went to
    &lt;place key="getty:7008133"&gt;Sussex&lt;/place&gt;.
    &lt;person&gt;Elizabeth&lt;/person&gt;, on her part, went to
    &lt;person&gt;Sussex&lt;/person&gt;, and told him the whole story.
  &lt;/para&gt;
&lt;/doc&gt;
</programlisting></blockquote><para>The <code>doc</code> and <code>para</code> elements here have the
		  same meaning as in the preceding example; the <code>person</code> and
		  <code>place</code> elements mark personal names and place names in the running
		  text.<!--* , and the optional <code>key</code> attribute
		provides an alternative identifier for the person or place 
		named.  Often, the key will be the record key for a database
		record for the person or place in question. *--></para><para>The optional <code>key</code> attribute, used for both
		  <code>person</code> and <code>place</code>, introduces a notion of
		  <emphasis>registry</emphasis> of persons and places. The value of that
		  attribute is the “access key” of a person or place in some known
		  “registry,” which establishes a univocal correspondence between
		  <emphasis>keys</emphasis> and entities (persons or places, in our case). A
		  single entity can have many different keys “pointing” to it, but
		  any given key points to only one entity of a given type. It would be possible
		  to introduce registries as individuals in our universe of discourse; however,
		  it is not necessary and, for simplicity, we will not do it.<!--* It suffices to be able to say that a given key identifies a
		given person or place. We can do that with two 2-place predicates:
		<code>is_key_for_person</code> and <code>is_key_for_place</code>. (In fact, we could
		make do with just one, is_key_for; as with is_named, that the same key may be
		used for both a person and a place is not a difficulty.)--></para><section><title>FTSD</title><para>The predicate-calculus sentences for this document will use the
			 following predicates (in addition to those defined in the preceding section): 
			 <variablelist><varlistentry><term>is_personname(<emphasis role="ital">s</emphasis>)</term><listitem><para><emphasis role="ital">s</emphasis> (typically a string of characters) is (here) a proper
						noun denoting a person.</para></listitem></varlistentry><varlistentry><term>is_person(<emphasis role="ital">x</emphasis>)</term><listitem><para><emphasis role="ital">x</emphasis> is a person.</para></listitem></varlistentry><varlistentry><term>is_placename(<emphasis role="ital">s</emphasis>)</term><listitem><para><emphasis role="ital">s</emphasis> (typically a string of characters) is (here) a proper
						noun denoting a place.</para></listitem></varlistentry><varlistentry><term>is_place(<emphasis role="ital">x</emphasis>)</term><listitem><para><emphasis role="ital">x</emphasis> is a place.</para></listitem></varlistentry><varlistentry><term>denotes(<emphasis role="ital">s</emphasis>,<emphasis role="ital">x</emphasis>)</term><listitem><para>The string of character tokens <emphasis role="ital">s</emphasis> here denotes the
						object or individual <emphasis role="ital">x</emphasis>.</para></listitem></varlistentry><varlistentry><term>person_dbkey(<emphasis role="ital">x</emphasis>, <emphasis role="ital">y</emphasis>)</term><listitem><para>The person <emphasis role="ital">x</emphasis> is denoted by the identifier <emphasis role="ital">y</emphasis>.</para></listitem></varlistentry><varlistentry><term>place_dbkey(<emphasis role="ital">x</emphasis>, <emphasis role="ital">y</emphasis>)</term><listitem><para>The place <emphasis role="ital">x</emphasis> is denoted by the identifier <emphasis role="ital">y</emphasis>.</para></listitem></varlistentry></variablelist> </para><para>Note that the formulations of <code>is_personname</code>,
			 <code>is_placename</code>, and especially of <code>denotes</code>, are not
			 entirely satisfactory. Earlier, we simplified the discussion by not
			 distinguishing systematically between sequences of character tokens and
			 sequences of character types. Here, we pay the price for that simplification.
			 Strictly speaking, what is needed here is a way to specify that <emphasis>a
			 particular instance or occurrence</emphasis> of string <emphasis role="ital">s</emphasis> (i.e., a particular
			 sequence of character <emphasis>tokens</emphasis>) is used as a proper noun and
			 denotes individual <emphasis role="ital">x</emphasis>. Not all occurrences of the string <emphasis role="ital">s</emphasis> will necessarily
			 be proper nouns (consider the personal name <quote>Brown</quote> and the place
			 name <quote>Bath</quote>), nor will they all denote the same individual.
			 Without a rather tedious treatment of tokens and types, it is not possible to
			 make the necessary distinction properly; we content ourselves with the
			 hand-waving visible in the glosses above and in this explanatory
			 paragraph.<footnote><para>A fuller treatment of the type / token distinction, in the
				  context of markup and rich document structures, will be found in [<xref linkend="dh2009"/>].</para><!--
				<para>Note to reviewers: we thought we could get away in this paper
				  without going into the type/token distinction here, and found out too
				late that
				  we were wrong. We expect to supply the necessary machinery for the final
				paper
				  and make this hand-waving unnecessary. Sorry about that. </para>--></footnote> </para><para>The predicates <code>person_dbkey</code> and
			 <code>place_dbkey</code>, by contrast, need an identifier (viewed as a sequence
			 of character types) not a sequence of tokens, as their second argument.</para><para>Armed with these predicates, we can say in predicate calculus
			 terms<!--<footnote> 
				<para>Modulo the hand-waving mentioned above.</para> 
			 </footnote>--> not only that the string
			 <quote><code>Elizabeth</code></quote> is (here) a personal name, but also that
			 that name denotes a particular individual, also identified by a particular
			 prosopographical key in some known registry. And similarly, we can say that
			 <quote><code>Sussex</code></quote> here is used once to denote the country, and
			 once the nobleman. </para><para>The skeleton sentences for the new element and attribute types
			 can be formulated thus:<variablelist><varlistentry><term><code>person</code></term><listitem><para>is_personname( <code>{string(.)}</code>)</para><para>is_person( <code>{concat('ref-',generate-id(.))}</code>
						)</para><para>denotes( <code>{string(.)}</code>,
						<code>{concat('ref-',generate-id(.))}</code>)</para></listitem></varlistentry><varlistentry><term><code>person/@key</code></term><listitem><para>person_dbkey(
						<code>{concat('ref-',generate-id(.))}</code>, <code>{string(.)}</code> )</para></listitem></varlistentry><varlistentry><term><code>place</code></term><listitem><para>is_placename( <code>{string(.)}</code>)</para><para>is_place( <code>{concat('ref-',generate-id(.))}</code>
						)</para><para>denotes( <code>{string(.)}</code>,
						<code>{concat('ref-',generate-id(.))}</code>)</para></listitem></varlistentry><varlistentry><term><code>place/@key</code></term><listitem><para>place_dbkey(
						<code>{concat('ref-',generate-id(.))}</code>, <code>{string(.)}</code> )</para></listitem></varlistentry></variablelist> </para><para>The result of instantiating the skeleton sentences for the
			 example document is 
			 <programlisting xml:space="preserve">
is_paragraph(id17806)
seq_pos_item(id19125-children, 1, id17806)
paragraph_string(id17806, "
    Elisabeth went to Sussex.
    Elizabeth, on her part, went to Sussex, and told him the whole story.
")
is_personname("Elisabeth")
is_person(ref-id17651)
denotes("Elisabeth", ref-id17651)
person_dbkey(ref-id17651, "E.I.Regina")
is_placename("Sussex")
is_place(ref-id19390)
denotes("Sussex", ref-id19390)
place_dbkey(ref-id19390, "getty:7008133")
is_personname("Elizabeth")
is_person(ref-id19224)
denotes("Elizabeth", ref-id19224)
is_personname("Sussex")
is_person(ref-id19558)
denotes("Sussex", ref-id19558)
</programlisting> </para></section><section><title>Intertextual semantics</title><para>The IS specification is as follows:</para><programlisting xml:space="preserve">
 &lt;rule paths="doc"
  text-before="This is a document:"
  text-after="End of the document." /&gt;
 
 &lt;rule paths="para"
  text-before="This is a paragraph:"
  text-after="End of the paragraph." /&gt;
 
 &lt;rule paths="person"
  text-before="THE PERSON NAMED "
  text-after=" @key[ (identified by the registry record
   {{http://my.person.registry/?@}})]" /&gt;
 
 &lt;rule paths="place"
  text-before="THE PLACE NAMED "
  text-after=" @key[ (identified by the registry record
   {{http://my.place.registry/?@}})]" /&gt;
</programlisting><para>The strings <code>"{{"</code> and <code>"}}"</code> delimit
			 hyperlinks in peritexts. Passages of the form <code>@</code><emphasis role="ital">attrib-name</emphasis><code>[...@...]</code> are
			 “guarded,” and only appear in the IS if the named attribute in
			 present on the element.</para><para>Note that two text-before segments have been written in uppercase
			 to make them independent of their position in a sentence.</para><para>Here is the resulting IS:</para><para><mediaobject><imageobject><imagedata format="png" fileref="../../../vol3/graphics/Sperberg-McQueen01/Sperberg-McQueen01-001.png"/></imageobject></mediaobject></para></section></section><section><title>A sonnet</title><para>Here is a more realistic example, a TEI (P5) encoded sonnet by
		  Québécois poet Émile Nelligan (1879-1941).</para><para>Example 3:</para><programlisting xml:space="preserve">
&lt;TEI xmlns="http://www.tei-c.org/ns/1.0" xml:lang="fr-CA"&gt;
    &lt;teiHeader&gt;
        &lt;fileDesc&gt;
            &lt;titleStmt&gt;
                &lt;title&gt;Le Vaisseau d'or&lt;/title&gt;
                &lt;author&gt;Émile Nelligan&lt;/author&gt;
                &lt;editor&gt;Luc Lacourcière&lt;/editor&gt;
            &lt;/titleStmt&gt;
            &lt;publicationStmt&gt;
                &lt;pubPlace&gt;Montréal (Québec, Canada)&lt;/pubPlace&gt;
                &lt;publisher&gt;Fides&lt;/publisher&gt;
                &lt;date&gt;1952&lt;/date&gt;
            &lt;/publicationStmt&gt;
            &lt;sourceDesc&gt;
                &lt;bibl&gt;
                    &lt;author&gt;Émile Nelligan&lt;/author&gt;
                    &lt;title&gt;Poésies complètes 1896-1899&lt;/title&gt;
                    &lt;edition&gt;Texte établi et annoté par Luc Lacourcière&lt;/edition&gt;
                    &lt;editor&gt;Luc Lacourcière&lt;/editor&gt;
                    &lt;pubPlace&gt;Montréal (Québec, Canada)&lt;/pubPlace&gt;
                    &lt;publisher&gt;Fides&lt;/publisher&gt;
                    &lt;date&gt;1952&lt;/date&gt;
                    &lt;biblScope&gt;page 44&lt;/biblScope&gt;
                &lt;/bibl&gt;
            &lt;/sourceDesc&gt;
        &lt;/fileDesc&gt;
    &lt;/teiHeader&gt;
    &lt;text&gt;
        &lt;front&gt;
            &lt;head&gt;LE VAISSEAU D'OR&lt;/head&gt;
        &lt;/front&gt;
        &lt;body&gt;
            &lt;lg&gt;
                &lt;l&gt;Ce fut un grand Vaisseau taillé dans l'or massif :&lt;/l&gt;
                &lt;l&gt;Ses mâts touchaient l'azur, sur des mers inconnues ;&lt;/l&gt;
                &lt;l&gt;La Cyprine d'amour, cheveux épars, chairs nues,&lt;/l&gt;
                &lt;l&gt;S'étalait à sa proue, au soleil excessif.&lt;/l&gt;
            &lt;/lg&gt;
            &lt;lg&gt;
                &lt;l&gt;Mais il vint une nuit frapper le grand écueil&lt;/l&gt;
                &lt;l&gt;Dans l'Océan trompeur où chantait la Sirène,&lt;/l&gt;
                &lt;l&gt;Et le naufrage horrible inclina sa carène&lt;/l&gt;
                &lt;l&gt;Aux profondeurs du Gouffre, immuable cercueil.&lt;/l&gt;
            &lt;/lg&gt;
            &lt;lg&gt;
                &lt;l&gt;Ce fut un Vaisseau d'Or, dont les flancs diaphanes&lt;/l&gt;
                &lt;l&gt;Révélaient des trésors que les marins profanes,&lt;/l&gt;
                &lt;l&gt;Dégoût, Haine et Névrose, entre eux ont disputés.&lt;/l&gt;
            &lt;/lg&gt;
            &lt;lg&gt;
                &lt;l&gt;Que reste-t-il de lui dans la tempête brève ?&lt;/l&gt;
                &lt;l&gt;Qu'est devenu mon c&amp;#x153;ur, navire déserté ?&lt;/l&gt;
                &lt;l&gt;Hélas! Il a sombré dans l'abîme du Rêve!&lt;/l&gt;
            &lt;/lg&gt;
        &lt;/body&gt;
    &lt;/text&gt;
&lt;/TEI&gt;
</programlisting><section><title>Intertextual semantics</title><para>The IS specification is:</para><programlisting xml:space="preserve">
 &lt;rule paths="TEI"
  text-before="This electronic document is a TEI document. @xmlns[It obeys
   the general structure and definitions associated with the XML
   namespace {{@}}.] @xml:lang[Its textual contents are written (except
   where otherwise stated) in the natural language which, according to the
   IETF RFC 1766 specification (accessible at
   {{http://www.ietf.org/rfc/rfc1766.txt}}), is denoted by &amp;quot;@&amp;quot;.]"
  text-after="This concludes the TEI document." /&gt;
 
 &lt;rule paths="teiHeader" 
  text-before="This section gives general information about how the
   document came into existence, the way it is identified, its status,
   and trail of modifications."
  text-after="This concludes the section giving information about how
   this document came into existence, the way it is identified, its
   status, and trail of modifications." /&gt;

 &lt;rule paths="fileDesc" 
  text-before="The document, as a computer file, can be described as
   follows:"
  text-after="This concludes the description of the document as a
   computer file." /&gt;
 
 &lt;rule paths="titleStmt" 
  text-before="The key identifying elements of this document are:"
  text-after="End of the key identifying elements." /&gt;
 
 &lt;rule paths="titleStmt/title" 
  text-before="its title, which is "
  text-after=" " /&gt;
 
 &lt;rule paths="titleStmt/author" 
  text-before="its author name, which is "
  text-after=" " /&gt;
 
 &lt;rule paths="titleStmt/editor" 
  text-before="its editor name, which is "
  text-after=" " /&gt;

 &lt;rule paths="publicationStmt" 
  text-before="This document corresponds to a published work"
  text-after=" " /&gt;

 &lt;rule paths="pubPlace" 
  text-before="which has been published in the place "
  text-after=" " /&gt;
 
 &lt;rule paths="publisher" 
  text-before="by the publisher "
  text-after=" " /&gt;
 
 &lt;rule paths="date" 
  text-before="on the date "
  text-after=" " /&gt;
 
 &lt;rule paths="sourceDesc" 
  text-before="This document is derived from another document, called
   &amp;quot;the source&amp;quot;."
  text-after="End of the indentification of the source." /&gt;
 
 &lt;rule paths="sourceDesc/bibl" 
  text-before="That source corresponds to the following bibliographic
   data:"
  text-after=" " /&gt;
 
 &lt;rule paths="author" 
  text-before="Author: "
  text-after=" " /&gt;
 
 &lt;rule paths="title" 
  text-before="Title: "
  text-after=" " /&gt;
 
 &lt;rule paths="edition" 
  text-before="Edition: "
  text-after=" " /&gt;
 
 &lt;rule paths="editor" 
  text-before="Editor: "
  text-after=" " /&gt;
 
 &lt;rule paths="bibl/pubPlace" 
  text-before="Publication place: "
  text-after=" " /&gt;

 &lt;rule paths="bibl/publisher" 
  text-before="Publisher: "
  text-after=" " /&gt;
 
 &lt;rule paths="bibl/date" 
  text-before="Publication date: "
  text-after=" " /&gt;
 
 &lt;rule paths="biblScope" 
  text-before="Part used as a source: "
  text-after=" " /&gt;
 
 &lt;rule paths="text" 
  text-before="The document &amp;quot;per se&amp;quot; starts here."
  text-after="End of the document &amp;quot;per se&amp;quot;." /&gt;
 
 &lt;rule paths="front" 
  text-before="Front matter:"
  text-after=" " /&gt;
 
 &lt;rule paths="front/head" 
  text-before="General heading: "
  text-after=" " /&gt;
 
 &lt;rule paths="body" 
  text-before="Main body of the document:"
  text-after="End of the main body of the document." /&gt;
 
 &lt;rule paths="l" 
  text-before="Line: "
  text-after=" " /&gt;
 
 &lt;rule paths="lg" 
  text-before="Stanza:"
  text-after=" " /&gt;
</programlisting><para>Here is the resulting IS:</para><para><mediaobject><imageobject><imagedata format="png" fileref="../../../vol3/graphics/Sperberg-McQueen01/Sperberg-McQueen01-002.png"/></imageobject></mediaobject></para><para><mediaobject><imageobject><imagedata format="png" fileref="../../../vol3/graphics/Sperberg-McQueen01/Sperberg-McQueen01-003.png"/></imageobject></mediaobject></para><para><mediaobject><imageobject><imagedata format="png" fileref="../../../vol3/graphics/Sperberg-McQueen01/Sperberg-McQueen01-004.png"/></imageobject></mediaobject></para><para>Note that we have taken advantage of the fact that
			 <code>http://www.tei-c.org/ns/1.0</code> is a dereferenceable URL, in order to
			 convert it into a clickable link in the IS.</para><para>It may be an appropriate place to note that a given IS
			 specification (and this is also true of FTSDs) need not be tied to a tag-set
			 <emphasis role="ital">in the absolute</emphasis>. It can actually mirror a
			 certain <emphasis role="ital">usage</emphasis> of a given tag-set (e.g.,
			 tag-set + writing protocol). The current example illustrates that in a number
			 of ways, for example by the fact that the IS specification takes for granted
			 that <code>lg</code> are all stanzas.</para></section><section><title>FTSD</title><para>Like many vocabularies, the one shown here (a simple adaptation
			 of the TEI) divides a document into a header providing metadata and the text
			 proper. Taking <quote>TEI documents</quote>, metadata, and <quote>text
			 proper</quote> as primitive notions, we can express the overall structure of a
			 TEI document using these predicates:<variablelist><varlistentry><term>is_TEI_document(<emphasis role="ital">x</emphasis>)</term><listitem><para>The individual <emphasis role="ital">x</emphasis> (an XML document) is a TEI document
						(i.e., it's encoded following the TEI <emphasis>Guidelines</emphasis>).</para></listitem></varlistentry><varlistentry><term>TEIdoc_metadata(<emphasis role="ital">x</emphasis>, <emphasis role="ital">y</emphasis>)</term><listitem><para>The individual <emphasis role="ital">y</emphasis> (a TEI header) provides the metadata
						for the individual <emphasis role="ital">x</emphasis> (a TEI document). </para></listitem></varlistentry><varlistentry><term>TEIdoc_textproper(<emphasis role="ital">x</emphasis>, <emphasis role="ital">y</emphasis>)</term><listitem><para>The individual <emphasis role="ital">y</emphasis> is the <quote>text proper</quote>
						portion of the individual <emphasis role="ital">x</emphasis> (a TEI document). </para></listitem></varlistentry></variablelist> </para><para>Skeleton sentences for this information are straightforward; as
			 in the preceding examples, we use the <code>generate-id()</code> function of
			 XSLT to generate arbitrary identifiers for various individuals, with or without
			 concatenating various prefixes or suffixes.<variablelist><varlistentry><term><code>TEI</code> elements</term><listitem><para>is_TEI_document( <code>{generate-id()}</code> )</para></listitem></varlistentry><varlistentry><term><code>teiHeader</code> elements</term><listitem><para>TEIdoc_metadata( <code>{generate-id(..)}</code>,
						<code>{generate-id()}</code> )</para></listitem></varlistentry><varlistentry><term><code>text</code> elements which are children of
					 <code>TEI</code> elements</term><listitem><para>TEIdoc_textproper( <code>{generate-id(..)}</code>,
						<code>{generate-id()}</code> )</para></listitem></varlistentry></variablelist> If, as is plausible, we assume that every TEI
			 document is a document in the more general sense, as well as being an XML
			 element, we could also infer that <code>is_document(</code><emphasis role="ital">x</emphasis><code>)</code>
			 and <code>is_XML_element(</code><emphasis role="ital">x</emphasis><code>)</code>, for any <emphasis role="ital">x</emphasis> which is a TEI
			 document. These could be added to the skeleton sentences in the FTSD, or we
			 could assume (as background knowledge) an inference rule which can be given in
			 the following form:<footnote><para>If the sentences above the line are given, then the sentences
				  below the line may be inferred.</para><para>Some readers may be more familiar with the convention of
				  writing such rules as conditionals; expressed as a conditional, the rule given
				  in the text would read (∀ <emphasis role="ital">x</emphasis>)(is_TEI_document(<emphasis role="ital">x</emphasis>) ⇒
				  (is_document(<emphasis role="ital">x</emphasis>) ∧ is_XML_element(<emphasis role="ital">x</emphasis>))) </para></footnote> 
			 <programlisting xml:space="preserve">
is_TEI_document(<emphasis role="ital">x</emphasis>)
________________________________________

is_document(<emphasis role="ital">x</emphasis>)
is_XML_element(<emphasis role="ital">x</emphasis>)
</programlisting> This is a relatively simple example of what proves to be a
			 general fact about the specification of FTSDs (and also of IS specifications):
			 there is a certain latitude about what is said where, so that producing a
			 formal tag-set description requires choices and judgement. </para><para>The actual text of the document has a simple regular structure,
			 readily representable with the predicates: 
			 <variablelist><varlistentry><term>is_textproper(<emphasis role="ital">x</emphasis>)</term><listitem><para>The individual <emphasis role="ital">x</emphasis> is the textual part of a TEI document
						(as opposed to the metadata in the TEI header). </para></listitem></varlistentry><varlistentry><term>text_contents(<emphasis role="ital">x</emphasis>,<emphasis role="ital">y</emphasis>)</term><listitem><para>The text <emphasis role="ital">x</emphasis> contains <emphasis role="ital">y</emphasis> (a sequence of objects).</para></listitem></varlistentry><varlistentry><term>is_linegroup(<emphasis role="ital">s</emphasis>)</term><listitem><para>The sequence <emphasis role="ital">s</emphasis> is a group of verse lines (possibly with
						nested line groups, and possibly with title or other heading material). (The
						most common form of line group is a stanza, but in itself, without a
						<code>type</code> attribute, the <code>is_linegroup</code> predicate says
						nothing about stanza structure.) </para></listitem></varlistentry><varlistentry><term>lg_contents(<emphasis role="ital">x</emphasis>,<emphasis role="ital">y</emphasis>)</term><listitem><para>The line group <emphasis role="ital">x</emphasis> contains <emphasis role="ital">y</emphasis> (a sequence of lines,
						line groups, etc.)</para></listitem></varlistentry><varlistentry><term>is_verseline(<emphasis role="ital">x</emphasis>)</term><listitem><para>The individual <emphasis role="ital">x</emphasis> is one line of verse
						(<emphasis>not</emphasis> necessarily a typographic line!) </para></listitem></varlistentry><varlistentry><term>line-string(<emphasis role="ital">x</emphasis>,<emphasis role="ital">s</emphasis>)</term><listitem><para>The verse line <emphasis role="ital">x</emphasis> has (can be realized as) the character
						string <emphasis role="ital">s</emphasis>. </para></listitem></varlistentry></variablelist> </para><!--* MSM decides to spare our readers the skeleton sentences here. *--><para>These are used in the obvious way. A small sample of instance
			 sentences will illustrate the result: 
			 <programlisting xml:space="preserve">
    is_textproper(id21050)
    TEIdoc_textproper(id20965, id21050)
    is_sequence(id21050-children)
    text_contents(id21050, id21050-children)
    
    seq_pos_item(id21050-children, 1, id21053 )
    
    is_title("LE VAISSEAU D'OR")
    doc_title(id20965, "LE VAISSEAU D'OR")
    
    seq_pos_item(id21050-children, 2, id21060 )
    
    is_linegroup(id21062)
    lg_contents(id21062, id21062-children)
    seq_pos_item(id21060-children, 1, id21062)
    
    is_verseline(id21064)
    line_string(id21064, "Ce fut un grand Vaisseau taillé dans l'or massif :")
    seq_pos_item(id21062-children, 1, id21064)
    
    is_verseline(id21069)
    line_string(id21069, "Ses mâts touchaient l'azur, sur des mers inconnues ;")
    seq_pos_item(id21062-children, 2, id21069)
    
    is_verseline(id21074)
    line_string(id21074, "La Cyprine d'amour, cheveux épars, chairs nues,")
    seq_pos_item(id21062-children, 3, id21074)
    
    is_verseline(id21080)
    line_string(id21080, "S'étalait à sa proue, au soleil excessif.")
    seq_pos_item(id21062-children, 4, id21080)
    
    is_linegroup(id21085)
    lg_contents(id21085, id21085-children)
    seq_pos_item(id21060-children, 2, id21085)
    
    is_verseline(id21088)
    line_string(id21088, "Mais il vint une nuit frapper le grand écueil")
    seq_pos_item(id21085-children, 1, id21088)
    
    is_verseline(id21093)
    line_string(id21093, "Dans l'Océan trompeur où chantait la Sirène,")
    seq_pos_item(id21085-children, 2, id21093)

    ...
    
    is_verseline(id21136)
    line_string(id21136, "Hélas! Il a sombré dans l'abîme du Rêve!")
    seq_pos_item(id21125-children, 3, id21136)
</programlisting></para><para>The TEI header can contain a great deal of metadata, but it would
			 be tedious to work through all the details needed even for this simple example,
			 let alone to work through the variations in structure and semantics allowed by
			 the TEI vocabulary. So we will pass over the TEI header almost in silence. A
			 fragment of an FTSD for this example is given in the appendix; it covers the
			 elements and attributes used in the example's header. </para></section></section></section><section><title>Conclusion</title><para>What can we conclude from the exercices we have been going through in
		this article? Obviously, FTSD and IS have quite different goals. Yet, as we
		hope to have shown, they are strikingly similar, especially with respect to the
		type of intellectual effort that goes into writing a specification. Empirical
		“evidence” in support of this view is that, in the FTSD approach,
		the names chosen for predicates often have the look-and-feel of very compact
		peritexts, such as <code>is_document</code>, <code>seq_pos_item</code>, and
		<code>paragraph_string</code>. We think we have brought out the fact that the
		same kind of knowledge of the “user community,” of their profiles,
		of the use cases through which they interact with the documents, are necessary
		to write both a useful FTSD and a useful IS specification for a given
		tag-set.</para><para>We suggest the following complementarity between IS and FTSD: if the
		IS approach is used in the process of developing a tag-set, then, much of the
		work needed to devise a suitable universe of discourse for FTSD will have been
		done already, and the task of mapping that universe to predicates and other
		formal objects will be much simplified. It is even possible that the IS
		specification worked out might constitute valuable material for documenting the
		formal apparatus developed for the FTSD.</para></section><appendix><title>Fragment of a formal tag set description</title><para>This fragmentary FTSD includes entries for the elements and
		attributes used in the third example of the paper and provides skeleton
		sentences covering simple straightforward uses of those elements and
		attributes. For simplicity's sake, however, it does not attempt to cover all
		the cases foreseen in the full TEI <emphasis>Guidelines</emphasis>.</para><para>The basic structure of the FTSD is as given in [<xref linkend="teip4"/>], and the descriptions of elements and attributes are taken
		from that source, but detailed information has been omitted for brevity. The
		<code>skeletons</code> and <code>ss</code> elements have been added as
		extensions; it is hoped that after the discussion above their syntax and
		semantics will be clear enough without further documentation.</para><programlisting xml:space="preserve">
&lt;tsd xmlns:t="http://www.tei-c.org/ns/1.0"&gt;
 &lt;tagDoc id="TEI.2"&gt;
  &lt;gi&gt;TEI&lt;/gi&gt;
  &lt;rs&gt;TEI document&lt;/rs&gt;
  &lt;desc&gt;Contains a single TEI-conformant document,
   comprising a TEI header and a text, either in isolation
   or as part of a &lt;gi&gt;teiCorpus&lt;/gi&gt; element.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;is_document(&lt;deixis&gt;generate-id()&lt;/deixis&gt;)&lt;/ss&gt;
   &lt;ss lang="pc"&gt;is_TEI_document(&lt;deixis&gt;generate-id()&lt;/deixis&gt;)&lt;/ss&gt;
   &lt;ss lang="pc"&gt;is_XML_element(&lt;deixis&gt;generate-id()&lt;/deixis&gt;)&lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="teiHeader"&gt;
  &lt;gi&gt;teiHeader&lt;/gi&gt;
  &lt;rs&gt;TEI Header&lt;/rs&gt;
  &lt;desc&gt;supplies the descriptive and declarative information
   making up an &lt;soCalled&gt;electronic title page&lt;/soCalled&gt;
   prefixed to every TEI-conformant text.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;is_XML_element(&lt;deixis&gt;generate-id(.)&lt;/deixis&gt;)&lt;/ss&gt;
   &lt;ss lang="pc"&gt;TEIdoc_metatdata(&lt;deixis&gt;generate-id(..)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)&lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="fileDesc"&gt;
  &lt;gi&gt;fileDesc&lt;/gi&gt;
  &lt;rs&gt;File Description&lt;/rs&gt;
  &lt;desc&gt;contains a full bibliographic description of an
   electronic file.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;is_XML_element(&lt;deixis&gt;generate-id(.)&lt;/deixis&gt;)&lt;/ss&gt;
   &lt;ss lang="pc"&gt;is_bibliographic_description(&lt;deixis
     &gt;generate-id(.)&lt;/deixis&gt;)&lt;/ss&gt;
   &lt;ss lang="pc"&gt;is_isbd(&lt;deixis&gt;generate-id(.)&lt;/deixis&gt;)&lt;/ss&gt;
   &lt;ss lang="pc"&gt;doc_bibldesc(&lt;deixis
     &gt;generate-id(ancestor::t:TEI[1])&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)&lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="titleStmt"&gt;
  &lt;gi&gt;titleStmt&lt;/gi&gt;
  &lt;rs&gt;title statement&lt;/rs&gt;
  &lt;desc&gt;groups information about the title of a work and
   those responsible for its intellectual content&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;isbd_titlestatement(&lt;deixis&gt;generate-id(..)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)&lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="title"&gt;
  &lt;gi&gt;title&lt;/gi&gt;
  &lt;desc&gt;contains the title of a work, whether article, book,
   journal, or series, including any alternative titles or
   subtitles.&lt;/desc&gt;
  &lt;attList&gt;
   &lt;attDef&gt;
    &lt;attName&gt;level&lt;/attName&gt;
    &lt;rs&gt;bibliographic level (or class) of title)&lt;/rs&gt;
    &lt;desc&gt;indicates whether this is the title of an article,
     book, journal, series, or unpublished material&lt;/desc&gt;
    &lt;datatype&gt;(a | m | j | s | u)&lt;/datatype&gt;
    &lt;valList&gt;
     &lt;val&gt;a&lt;/val&gt;
     &lt;desc&gt;analytic title (article, poem, or other item
      published as part of a larger item)&lt;/desc&gt;
     &lt;val&gt;m&lt;/val&gt;
     &lt;desc&gt;monographic title (book, colection, or other item
      published as a distinct item, including single volumes
      of multi-volume works)&lt;/desc&gt;
     &lt;val&gt;j&lt;/val&gt;
     &lt;desc&gt;journal title&lt;/desc&gt;
     &lt;val&gt;s&lt;/val&gt;
     &lt;desc&gt;series title&lt;/desc&gt;
     &lt;val&gt;u&lt;/val&gt;
     &lt;desc&gt;title of unpublished material (including theses
      and dissertations unless published by a commercial
      press)&lt;/desc&gt;
    &lt;/valList&gt;
    &lt;default&gt;#IMPLIED&lt;/default&gt;
    &lt;skeletons&gt;
    &lt;/skeletons&gt;
   &lt;/attDef&gt;
  &lt;/attList&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc" match="t:fileDesc/t:titleStmt/t:title"&gt;
    is_title("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    doc_title(&lt;deixis&gt;generate-id(../../../..)&lt;/deixis
     &gt;, "&lt;deixis&gt;string(.)&lt;/deixis&gt;")
   &lt;/ss&gt;
   &lt;ss lang="pc" match="t:bibl/t:title"&gt;
    is_title("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    doc_title(&lt;deixis&gt;concat('ref-',generate-id(..))&lt;/deixis
     &gt;, "&lt;deixis&gt;string(.)&lt;/deixis&gt;")
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="author"&gt;
  &lt;gi&gt;author&lt;/gi&gt;
  &lt;desc&gt;in a bibliographic reference, contains the name of the author(s),
   personal or corporate, of a work; the primary
   &lt;term&gt;sttement of responsibility&lt;/term&gt; for any bibliographic item.&lt;/desc&gt;
  &lt;skeletons&gt;

   &lt;ss lang="pc" match="t:fileDesc/t:titleStmt/t:author"&gt;
    is_authorname("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_author("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;",&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_author(&lt;deixis&gt;generate-id(../../../..)&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
   &lt;ss lang="pc" match="t:bibl/t:author"&gt;
    is_authorname("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_author("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;",&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_author(&lt;deixis&gt;concat('ref-',generate-id(..))&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="editor"&gt;
  &lt;gi&gt;editor&lt;/gi&gt;
  &lt;desc&gt;secondary &lt;term&gt;statement of responsibility&lt;/term&gt;
   for a bibliographic item, for example the name of an
   individual, institution, or organization (or of several
   such) acting as editor, compiler, translator, etc.&lt;/desc&gt;
  &lt;skeletons&gt;

   &lt;ss lang="pc" match="t:fileDesc/t:titleStmt/t:editor"&gt;
    is_editorname("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_editor("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;", &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_editor(&lt;deixis&gt;generate-id(../../../..)&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
   &lt;ss lang="pc" match="t:bibl/t:editor"&gt;
    is_editorname("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_editor("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;", &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_editor(&lt;deixis&gt;concat('ref-',generate-id(..))&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="publicationStmt"&gt;
  &lt;gi&gt;publicationStmt&lt;/gi&gt;
  &lt;rs&gt;publication statement&lt;/rs&gt;
  &lt;desc&gt;groups information concerning the publication or
   distribution of an electronic or other text.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;isbd_pubstatement(&lt;deixis&gt;generate-id(..)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)&lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="pubPlace"&gt;
  &lt;gi&gt;pubPlace&lt;/gi&gt;
  &lt;rs&gt;place of publication&lt;/rs&gt;
  &lt;desc&gt;contains the name of the place where a bibliographic
   item was published&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc" match="t:fileDesc/t:publicationStmt/t:pubPlace"&gt;
    is_placename("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_place("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;", &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_pubplace(&lt;deixis&gt;generate-id(../../../..)&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
   &lt;ss lang="pc" match="t:fileDesc/t:publicationStmt/t:pubPlace"&gt;
    is_placename("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_place("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;", &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_pubplace(&lt;deixis&gt;concat('ref-',generate-id(..))&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="publisher"&gt;
  &lt;gi&gt;publisher&lt;/gi&gt;
  &lt;desc&gt;provides the name of the organization responsible for the publication
   or distribution of a bibliographic item.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc" match="t:fileDesc/t:publicationStmt/t:publisher"&gt;
    is_orgname("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_organization("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    is_publisher("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;", &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_publisher(&lt;deixis&gt;generate-id(../../../..)&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
   &lt;ss lang="pc" match="t:bibl/t:publisher"&gt;
    is_orgname("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    is_organization("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    is_publisher("&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;")
    denotes("&lt;deixis&gt;string(.)&lt;/deixis
     &gt;", &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_publisher(&lt;deixis&gt;concat('ref-',generate-id(..))&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="date"&gt;
  &lt;gi&gt;date&lt;/gi&gt;
  &lt;desc&gt;contains a date in any format.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc" match="t:fileDesc/t:publicationStmt/t:date"&gt;
    doc_publicationdate(&lt;deixis&gt;generate-id(../../../..)&lt;/deixis
     &gt;, &lt;deixis&gt;string(.)&lt;/deixis&gt;)
   &lt;/ss&gt;
   &lt;ss lang="pc" match="t:fileDesc/t:publicationStmt/t:date"&gt;
    doc_publicationdate(&lt;deixis&gt;concat('ref-',generate-id(..))&lt;/deixis
     &gt;, &lt;deixis&gt;string(.)&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="sourceDesc"&gt;
  &lt;gi&gt;sourceDesc&lt;/gi&gt;
  &lt;rs&gt;source description&lt;/rs&gt;
  &lt;desc&gt;supplies a bibliographic description of the copy text(s) 
   from which an electronic text was derived or generated.&lt;/desc&gt;
  &lt;skeletons&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="bibl"&gt;
  &lt;gi&gt;bibl&lt;/gi&gt;
  &lt;desc&gt;contains a loosely structured bibliographic citation of which the 
   sub-components may or may not be explicitly tagged.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc" match="t:teiHeader/t:fileDesc/t:sourceDesc/t:bibl"&gt;
    is_document(&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
    doc_bibldesc(&lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)
    is_transcription(&lt;deixis&gt;generate-id(../../../..)&lt;/deixis&gt;)
    transcribes(&lt;deixis&gt;generate-id(../../../../..)&lt;/deixis
     &gt;, &lt;deixis&gt;concat('ref-',generate-id())&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="edition"&gt;
  &lt;gi&gt;edition&lt;/gi&gt;
  &lt;desc&gt;describes the particularities of one edition of a text.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc" match="t:bibl/t:edition"&gt;
    doc_edition_desc(&lt;deixis&gt;concat('ref-',generate-id(..))&lt;/deixis
     &gt;, "&lt;deixis&gt;string(.)&lt;/deixis&gt;")
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="biblScope"&gt;
  &lt;gi&gt;biblScope&lt;/gi&gt;
  &lt;desc&gt;defines the scope of a bibliographic refeence, for example 
   as a list of page numbers, or a named subdivision of a larger work.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;// omitting biblScope for now ...  &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="text"&gt;
  &lt;gi&gt;text&lt;/gi&gt;
  &lt;desc&gt;contains a single text of any kind, whether unitary or composite,
   for example a poem or drama, a collection of essays, a novel,
   a dictionary, or a corpus sample.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss match="t:TEI/t:text" lang="pc"&gt;
    is_textproper(&lt;deixis&gt;generate-id()&lt;/deixis&gt;)
    TEIdoc_textproper(&lt;deixis&gt;generate-id(..)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)
    is_sequence(&lt;deixis&gt;concat(generate-id(),'-children')&lt;/deixis&gt;)
    text_contents(&lt;deixis&gt;generate-id()&lt;/deixis
     &gt;, &lt;deixis&gt;concat(generate-id(),'-children')&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="front"&gt;
  &lt;gi&gt;front&lt;/gi&gt;
  &lt;desc&gt;contains any prefatory matter (headers, title page,
   prefaces, dedications, etc.) found efore the start of a
   text proper.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;
    seq_pos_item(&lt;deixis&gt;concat(generate-id(..),'-children')&lt;/deixis
     &gt;, &lt;deixis&gt;1 + count(preceding-sibling::*)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt; )&lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="head"&gt;
  &lt;gi&gt;head&lt;/gi&gt;
  &lt;desc&gt;contains any heading, for example, the title of a section,
   or the heading of a list or glossary.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss match="t:front/t:head" lang="pc"&gt;
    is_title("&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    doc_title(&lt;deixis&gt;generate-id(ancestor::t:TEI)&lt;/deixis
     &gt;, "&lt;deixis&gt;string(.)&lt;/deixis&gt;")
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="body"&gt;
  &lt;gi&gt;body&lt;/gi&gt;
  &lt;desc&gt;contains the whole body of a single unitary text, excluding
   any front or back matter.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;
    seq_pos_item(&lt;deixis&gt;concat(generate-id(..),'-children')&lt;/deixis
     &gt;, &lt;deixis&gt;1 + count(preceding-sibling::*)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt; )&lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="lg"&gt;
  &lt;gi&gt;lg&lt;/gi&gt;
  &lt;desc&gt;contains a group of verse lines functioning as a
   formal unit, e.g., a stanza, refrain, verse paragraph,
   etc.
  &lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;
    is_linegroup(&lt;deixis&gt;generate-id()&lt;/deixis&gt;)
    lg_contents(&lt;deixis&gt;generate-id()&lt;/deixis
     &gt;, &lt;deixis&gt;concat(generate-id(),'-children')&lt;/deixis&gt;)
    seq_pos_item(&lt;deixis&gt;concat(generate-id(..),'-children')&lt;/deixis
     &gt;, &lt;deixis&gt;1 + count(preceding-sibling::*)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

 &lt;tagDoc id="l"&gt;
  &lt;gi&gt;l&lt;/gi&gt;
  &lt;desc&gt;contains a single, possibly incomplete, line of verse.&lt;/desc&gt;
  &lt;skeletons&gt;
   &lt;ss lang="pc"&gt;
    is_verseline(&lt;deixis&gt;generate-id()&lt;/deixis&gt;)
    line_string(&lt;deixis&gt;generate-id()&lt;/deixis
     &gt;, "&lt;deixis&gt;string(.)&lt;/deixis&gt;")
    seq_pos_item(&lt;deixis&gt;concat(generate-id(..),'-children')&lt;/deixis
     &gt;, &lt;deixis&gt;1 + count(preceding-sibling::*)&lt;/deixis
     &gt;, &lt;deixis&gt;generate-id()&lt;/deixis&gt;)
   &lt;/ss&gt;
  &lt;/skeletons&gt;
  &lt;elemDecl&gt;...&lt;/elemDecl&gt;
 &lt;/tagDoc&gt;

&lt;/tsd&gt;</programlisting></appendix><bibliography><title>References</title><!-- 	 <bibliomixed xml:id="DRSH2002" xreflabel="Dubin et al. 2002">Dubin, D.,
		Renear, A., Sperberg-McQueen, C. M., &amp; Huitfeldt, C. &ldquo;A logic
		programming environment for document semantics and inference.&rdquo; Presented
		at ALLC/ACH, Tübingen, Germany, July 2002.</bibliomixed> 
 --><bibliomixed xml:id="dubin2006" xreflabel="Dubin et al. 2006">Dubin, D.,
		Futrelle, J., &amp; Plutchak, J. “Metadata Enrichment for Digital
		Preservation.” <emphasis role="ital">Proceedings of Extreme Markup
		Languages 2006</emphasis> (Montréal, Canada, August 2006). 
		<link xlink:href="http://conferences.idealliance.org/extreme/html/2006/Dubin01/EML2006Dubin01.html" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://conferences.idealliance.org/extreme/html/2006/Dubin01/EML2006Dubin01.html</link></bibliomixed><bibliomixed xml:id="eml2006" xreflabel="Marcoux 2006">Marcoux, Y. “A
		natural-language approach to modeling: Why is some XML so difficult to
		write?” <emphasis role="ital">Proceedings of Extreme Markup Languages
		2006</emphasis> (Montréal, Canada, August 2006). 
		<link xlink:href="http://conferences.idealliance.org/extreme/html/2006/Marcoux01/EML2006Marcoux01.html" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://conferences.idealliance.org/extreme/html/2006/Marcoux01/EML2006Marcoux01.html</link></bibliomixed><bibliomixed xml:id="inprep" xreflabel="Marcoux 2009">Marcoux, Y.
		“Intertextual semantics generation for structured documents: a complete
		implementation in XSLT.” To appear in <emphasis role="ital">Proceedings
		of the 12th Colloque International sur le Document Electronique</emphasis>
		(Université de Montréal, Canada, October 2009).</bibliomixed><bibliomixed xml:id="eml2007" xreflabel="Marcoux &amp; Rizkallah 2007">Marcoux, Y. &amp; Rizkallah, É.
		“Exploring intertextual semantics: a reflection on attributes and
		optionality.” <emphasis role="ital">Proceedings of Extreme Markup
		Languages 2007</emphasis> (Montréal, Canada, August 2007). 
		<link xlink:href="http://conferences.idealliance.org/extreme/html/2007/Marcoux01/EML2007Marcoux01.html" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://conferences.idealliance.org/extreme/html/2007/Marcoux01/EML2007Marcoux01.html</link></bibliomixed><bibliomixed xml:id="jasist" xreflabel="Marcoux &amp; Rizkallah 2009">Marcoux, Y. &amp; Rizkallah, É.
		“Intertextual semantics: A semantics for information design.”
		<emphasis role="ital">Journal of the American Society for Information Science
		&amp; Technology</emphasis>, Volume 60, Issue 9, 2009, pp. 1895-1906.
		Published Online: 21 Aug 2009. 
	   <biblioid class="doi">10.1002/asi.21134</biblioid>.</bibliomixed><bibliomixed xml:id="piez2006" xreflabel="Piez 2006">Piez, W. “XSLT
		for Quality Checking in the Publication Workflow.” Online presentation,
		Mulberry Technologies, Inc., 2006. 
		<link xlink:href="http://www.mulberrytech.com/papers/XSLTforQA/" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.mulberrytech.com/papers/XSLTforQA/</link></bibliomixed><bibliomixed xml:id="smedslund" xreflabel="Smedslund 2004">Smedslund, J.
		<emphasis role="ital">Dialogues about a new psychology</emphasis>. Chagrin
		Falls, Ohio: Taos Institute. 2004.</bibliomixed><bibliomixed xml:id="oai" xreflabel="Sperberg-McQueen 2005">Sperberg-McQueen, C. M. “The meaning of
		OAI 2.0 Markup: An exercise in markup interpretation.” 
		<link xlink:href="http://www.w3.org/2004/04/em-msm/ioai.xml" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.w3.org/2004/04/em-msm/ioai.xml</link></bibliomixed><bibliomixed xml:id="SDHR2002" xreflabel="Sperberg-McQueen et al. 2002">Sperberg-McQueen, C. M., Dubin, D.,
		Huitfeldt, C., &amp; Renear, A. “Drawing inferences on the basis of
		markup.” In <emphasis role="ital">Proceedings of Extreme Markup Languages
		2002</emphasis> (Montréal, Canada, August 2002), B. T. Usdin and S. R. Newcomb,
		Eds. 
		<link xlink:href="http://conferences.idealliance.org/extreme/html/2002/CMSMcQ01/EML2002CMSMcQ01.html" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://conferences.idealliance.org/extreme/html/2002/CMSMcQ01/EML2002CMSMcQ01.html</link></bibliomixed><bibliomixed xml:id="dh2009" xreflabel="Sperberg-McQueen et al. 2009">Sperberg-McQueen, C. M., Huitfeldt,
		C., &amp; Marcoux, Y. “What is Transcription? (part 2)” In
		preparation. Abstract available in <emphasis role="ital">Conference Abstracts
		of Digital Humanities 2009</emphasis> (University of Maryland, College Park,
		June 2009), Claire Warwick, Ed. 
		<link xlink:href="http://www.mith2.umd.edu/dh09/wp-content/uploads/dh09_conferencepreceedings_final.pdf" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.mith2.umd.edu/dh09/wp-content/uploads/dh09_conferencepreceedings_final.pdf</link></bibliomixed><!-- 	 <bibliomixed xml:id="SHR2000"
	 xreflabel="Sperberg-McQueen et al. 2000">Sperberg-McQueen, C. M., Huitfeldt,
		C., &amp; Renear, A. &ldquo;Meaning and interpretation of markup.&rdquo; Markup
		Languages: Theory and Practice 2, 3 (2000), 215&ndash;234.</bibliomixed> 
 --><bibliomixed xml:id="SHR2000a" xreflabel="Sperberg-McQueen et al. 2000a">Sperberg-McQueen, C. M., Huitfeldt,
		C., &amp; Renear, A. “Meaning and Interpretation of Markup: Not as Simple
		as You Think.” <emphasis role="ital">Proceedings of Extreme Markup
		Languages 2000</emphasis> (Montréal, Canada, August 2000).</bibliomixed><!-- 	 <bibliomixed xml:id="SHR2001"
	 xreflabel="Sperberg-McQueen et al. 2001">Sperberg-McQueen, C. M., Huitfeldt,
		C., &amp; Renear, A. &ldquo;Practical extraction of meaning from markup.&rdquo;
		Paper delivered at ACH/ALLC 2001, New York, 2001.</bibliomixed> 
 --><bibliomixed xml:id="eml2004" xreflabel="Sperberg-McQueen &amp; Miller 2004">Sperberg-McQueen, C. M. &amp;
		Miller, E. “On mapping from colloquial XML to RDF using XSLT.”
		<emphasis role="ital">Proceedings of Extreme Markup Languages 2004</emphasis>
		(Montréal, Canada, August 2004). 
		<link xlink:href="http://conferences.idealliance.org/extreme/html/2004/Sperberg-McQueen01/EML2004Sperberg-McQueen01.html" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://conferences.idealliance.org/extreme/html/2004/Sperberg-McQueen01/EML2004Sperberg-McQueen01.html</link></bibliomixed><!-- 	 <bibliomixed xml:id="SRHD2002"
	 xreflabel="Sperberg-McQueen et al. 2002">Sperberg-McQueen, C. M., Renear, A.,
		Huitfeldt, C., &amp; Dubin, D. &ldquo;Skeletons in the closet: Saying what
		markup means.&rdquo; Presented at ALLC/ACH, Tübingen, Germany, July
		2002.</bibliomixed> 
 --><bibliomixed xml:id="teip4" xreflabel="TEI P4">The TEI Consortium / The
		Association for Computers and the Humanities (ACH); The Association for
		Computational Linguistics (ACL); The Association for Literary and Linguistic
		Computing (ALLC). <emphasis role="ital">TEI P4: Guidelines for Electronic Text
		Encoding and Interchange XML-compatible edition</emphasis>. Ed. C. M.
		Sperberg-McQueen and Lou Burnard; XML conversion by Syd Bauman, Lou Burnard,
		Steven DeRose, and Sebastian Rahtz. Oxford, Providence, Charlottesville,
		Bergen: TEI Consortium, December 2001. 
		<link xlink:href="http://www.tei-c.org/release/doc/tei-p4-doc/html/" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.tei-c.org/release/doc/tei-p4-doc/html/</link>
		</bibliomixed><bibliomixed xml:id="wirzbicka2" xreflabel="Wirzbicka 1992">Wierzbicka, A.
		<emphasis role="ital">Semantics, culture, and cognition : universal human
		concepts in culture-specific configurations</emphasis>. Oxford University
		Press. 1992.</bibliomixed><bibliomixed xml:id="wittg1" xreflabel="Wittgenstein 1953">Wittgenstein, L.
		<emphasis role="ital">Philosophical investigations</emphasis>. Oxford:
		Blackwell. 1953.</bibliomixed><bibliomixed xml:id="AW2001" xreflabel="Wrightson 2001">Wrightson, A.
		“Some Semantics for Structured Documents, Topic Maps and Topic Map
		Queries.” <emphasis role="ital">Proceedings of Extreme Markup Languages
		2001</emphasis> (Montréal, Canada, August 2001). 
		<link xlink:href="http://conferences.idealliance.org/extreme/html/2001/Wrightson01/EML2001Wrightson01.html" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://conferences.idealliance.org/extreme/html/2001/Wrightson01/EML2001Wrightson01.html</link></bibliomixed><bibliomixed xml:id="AW2005" xreflabel="Wrightson 2005">Wrightson, A.
		“Semantics of Well Formed XML as a Human and Machine Readable Language:
		Why is some XML so difficult to read?” <emphasis role="ital">Proceedings
		of Extreme Markup Languages 2005</emphasis> (Montréal, Canada, August 2005). 
		<link xlink:href="http://conferences.idealliance.org/extreme/html/2005/Wrightson01/EML2005Wrightson01.html" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://conferences.idealliance.org/extreme/html/2005/Wrightson01/EML2005Wrightson01.html</link></bibliomixed></bibliography></article>