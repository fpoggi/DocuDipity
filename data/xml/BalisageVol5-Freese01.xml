<?xml version="1.0" encoding="UTF-8"?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0-subset Balisage-1.2"><title>Multi-channel eBook production as a function of diverse target device capabilities</title><info><confgroup><conftitle>Balisage: The Markup Conference 2010</conftitle><confdates>August 3 - 6, 2010</confdates></confgroup><abstract><para>Publishers have a history of managing data for the long-term.  In the past this meant warehouses of proof sheets.  As the publishing process became electronic, assets were archived on tape or disk in the event of a need to re-release (perhaps due to a popular subsequent movie or other event).  However, the challenge shifted from storage of materials to file compatibility and management of software versions.  Then along came XML, which offered a vendor-agnostic format in which to, at a minimum, archive data if not becoming the format in which the data was authored.  Now that publishers find themselves in the midst of an eBook boom they find themselves, yet again, dealing with managing different formats and, to complicate matters, dealing with different implementations of the same standard.  This paper will discuss the current state of the trade, textbook, and journal publishing industry as it pertains to creating eBooks for current and backlist resources.  It will also discuss the challenges faced by publishers as the technology continues to move forward toward “enhanced eBooks” at a pace faster than the standards can be updated.</para><para>A sample project will be presented which presents the challenges of producing eBooks in the current environment as well as demonstrates how current standards might support the next generation of eBooks. </para></abstract><author><personname><firstname>Eric</firstname><surname>Freese</surname></personname><personblurb><para>Eric Freese is a veteran of publishing production optimization. From the early days of SGML, he has worked in roles as varied as consultant, software developer, content architect and semantic web technologist in industries including technical publishing, defense, commercial software and legal publishing. In his role as Director/Solutions Architect, Eric helps Aptara customers efficiently transition to cost-saving digital publishing models that simultaneously support eBook and other electronic delivery platforms, as well as traditional print production. </para></personblurb><affiliation><jobtitle>Director/Solutions Architect</jobtitle><orgname>Aptara</orgname></affiliation><email>eric.freese@aptaracorp.com</email></author><legalnotice><para>Copyright © 2010 by the author.  Used with
permission.</para></legalnotice></info><section><title>Introduction</title><para><emphasis role="bold">December 25, 2009</emphasis> – Amazon reports that for the first time ever, they sold more eBooks than paper books in a single day.</para><para><emphasis role="bold">June 22, 2010</emphasis> – Apple announces the sale of the 3 millionth iPad after just 80 days on the market (coincidentally the day after the iBooks app was made availale to iPhone users).</para><para>These news items are just further indicator of how the eBook market has experienced explosive growth over the past couple of years and shows few signs of slowing.  For publishers, this growth presents many opportunities as well as challenges.  The opportunities include: 1) new revenue streams; 2) new income from older assets; and, 3) being seen as a technology leader. The challenges are just as numerous, if not more so: 1) conversions of data to one or more formats; 2) an environment where new devices seem to appear almost weekly; 3) issues in pricing and distribution; 4) creation of new multimedia content to accompany previously available text.  The differences in tha capabilities between the Kindle and the iPad illustrate the opportunities and challenges for publishers.</para><para>The paper will use the conversion of the World English Bible to create an “enhanced” eBook to discuss and demonstrate many of these opportunities and challenges, as well as provide guidance to content owners as to how best to manage their content assets in order to provide maximum flexibility of target outputs at a minimal cost.</para></section><section><title>eBooks Explained</title><para>Ebooks really aren't anything new.  Project Gutenberg was started in 1971 with a goal to digitize and archive cultural works and to encourage the creation and distribution of eBooks. Designs for general purpose portable reading devices where first developed at PARC in the 1970s.  In 1998 the first commercial eBook readers were made available.  In 1999, the first version of the Open eBook Publication Structure (OEBPS) was released with 3 goals:
	<itemizedlist><listitem><para>to give content providers (e.g., publishers, and others who have content to be displayed) and tool providers minimal and common guidelines which ensure fidelity, accuracy, accessibility, and presentation of electronic content over various electronic book platforms.</para></listitem><listitem><para>to reflect established content format standards.</para></listitem><listitem><para>to provide the purveyors of electronic-book content (publishers, agents, authors et al.) a format for use in providing content to multiple reading systems.</para></listitem></itemizedlist>
		</para><para>Since then, many document formats have been introduced by many software vendors.  Also even more devices were developed and marketed. But it wasn't until 2007, when Amazon launched the Kindle, that eBooks and eBook readers seemed to capture the consumer's imagination.  In the last couple of years, the industry has grown and matured at a very rapid pace.  While there is still a plethora of file formats, three have become the leading formats:  EPUB, AZW, and PDF.</para><section><title>Leading eBook Formats</title><section><title>EPUB</title><para>The EPUB standard, developed by the International Digital Publishing forum (IDPF) is actually a combination of 3 standards:<orderedlist><listitem><para>OEBPS Container Format (OCF) - describes the general-purpose container technology in the context of encapsulating OEBPS publications and OPTIONAL alternate renditions thereof</para></listitem><listitem><para>Open Packaging Format (OPF) - defines the mechanism by which the various components of an OPS publication are tied together and provides additional structure and semantics to the electronic publication</para></listitem><listitem><para>Open Publication Structure (OPS) – the current version of OEBPS</para></listitem></orderedlist>
				</para><para>EPUB files allow the text to be reflowed to allow for different font and sizes and screen sizes and orientations.  As a user changes the font size or screen orientation, the data in the screen is redrawn to accommodate the request.</para><para>An EPUB file can essentially be thought of as a "web site in a box".  In most cases, an EPUB file (which is a zipped file) consists of a set of XML (usually XHTML) files plus any contained image or media files and CSS stylesheets.  There is also a set of files defined within the EPUB standard that must also reside within the EPUB file. The data within the EPUB file provide the information needed to present the data on an eReader device.</para></section><section><title>AZW/MOBI</title><para>In 2007, when Amazon launched the Kindle eBook reader, they created the AZW format. It is based on the Mobipocket standard, with a slightly different serial number scheme and its own Digital Rights Management (DRM) formatting. It is perhaps somewhat ironic that the Mobipocket e-book format is based on the OEBPS standard.  It uses XHTML and can include JavaScript and frames. It also supports native SQL queries to be used with embedded databases. Notably, Eastern European letters with diacritical marks and Pacific rim characters are not supported.  AZW files can also be reflowed, just as EPUB files can be.</para></section><section><title>PDF</title><para>The Portable Document Format was created by Adobe Systems, initially to provide a standard form for storing and editing printed publishable documents. Because PDF documents can easily be viewed and printed by users on a variety of computer platforms, they are very common on the World Wide Web. The specification of the format is available without charge from Adobe.</para><para>PDF files are able to embed fonts, images, and other documents, making them well-suited for eBook delivery. A PDF file contains one or more zoomable page images.</para><para>The format is designed to reproduce page images, therefore text traditionally could not be re-flowed to fit the screen width or size. As a result PDF files designed for printing on standard paper sizes are less easily viewed on screens with limited size or resolution, such as those found on mobile phones and PDAs. Adobe has addressed this by adding a re-flow facility to its Acrobat Reader software, but for this to work the document must be marked for re-flowing at creation, which means existing PDF documents will not benefit unless they are tagged and resaved.</para></section></section><section><title>Survey of Devices</title><para>There are many different eBook reader devices available and seemingly more every day.  These devices can be divided into 2 basic classes.  The first is based on an E Ink electronic paper display.  These displays can currently only show shades of gray (although research is being done on color E Ink), are viewable in direct sunlight, and require no power to maintain a static image. There is no back lighting, which reduces eye strain, but makes them unreadable in the dark. The Amazon Kindle and Sony Reader are examples of this class of reader.  Many within this class of reader can play MP3 and other types of audio files. The second class uses backlit LCD screens and are often more than dedicated eBook reading devices.  For this project 8 devices were included in the test set.  These devices come from both classes and provide a mix of different features and capabilities.</para><section><title>Amazon Kindle</title><para>Amazon Kindle is a software and hardware platform developed by Amazon.com for the rendering and displaying of e-books and other digital media. It was one of the first widely accepted eBook readers. The Kindle supports several ebook file formats including AZW/MOBI and PDF. The first version of the device was first sold in the U.S. in 2007.  The Kindle hardware device uses an E Ink brand electronic paper display that features 16 shades of gray and a six inch E Ink display. It downloads content over Amazon's Whispernet.  The Kindle hardware device is used without a computer connection, and Amazon Whispernet is accessible without any monthly fee or wireless subscription. Because the eBooks bought on the Kindle are delivered over its wireless system, the user does not see the AZW files during the download process.</para><para>Kindle software applications exist for Windows, iOS, BlackBerry, Android and Mac OS X. This allows Kindle content to be read on devices running any of these operating systems. In software updates released in June 2010, capabilities were added to the Kindle software applications that are not supported by the Kindle device, most noteably the inclusion of audio and video. In doing so, Amazon created a requirement for graceful degradation within eBook files. Through a technology called "Whispersync," customers can connect reading progress, bookmarks, and other information across Kindle hardware devices and other mobile devices.</para><para>Amazon's use of a proprietary format has allowed them to optimize the reader software to work extremely well with their data format.  The Kindle also has access to perhaps the largest online bookstore, as well as various independent sources and free content providers.  Also, for some time, Amazon was seen as the industry leader and therefore able to dictate to publishers what the prices on eBooks should be. With the advent of the Apple iPad, Amazon has been working to add more online capabilities to the Kindle device, such as an improved browser and social networking applications such as Facebook and Twitter.</para></section><section><title>Barnes &amp; Noble nook</title><para>The nook is an eBook reader developed by Barnes &amp; Noble and was one of the first eBook readers based on the Android platform. The nook supports several eBook file formats including EPUB and PDF. The device was first sold in the U.S. 2009. The nook includes Wi-Fi and 3G wireless connectivity, a six inch E Ink display, and a separate, smaller color touchscreen that serves as the primary input device and controls much of the navigation within the reading device itself..</para><para>One differentiating feature of the nook is the "LendMe" feature: some books are licensed by their publishers for sharing. In those cases, the purchaser is permitted to share a book once, with one other user, for up to two weeks. Barnes &amp; Noble also developed reader application software for iOS platforms, Mac, and Windows. </para><para>This device utilizes Adobe DRM for protected files. The DRM rules allow any purchased e-book to be read on up to six devices, at least one of which must be a personal computer running Windows or Mac OS X.</para></section><section><title>Sony Reader</title><para>The Sony Reader is an e-book reader manufactured by Sony. It can display PDF and EPUB format, as well as personal documents, blogs, RSS newsfeeds, JPEGs, and Sony's proprietary BBeB ("BroadBand eBook") format, although Sony has converted all the books in their online bookstore to the EPUB format, seemingly deprecating the BBeB format. The Reader is usable in portrait or landscape orientation. The reader uses an iTunes Store-like interface to purchase books from Sony Connect eBook store. The PRS-600 (Touch Edition) model used in this project can display 8-levels of grayscale and has a six inch E Ink display.</para><para>This device also utilizes Adobe DRM for protected files.</para></section><section><title>Apple iPod Touch/iPhone</title><para>The iPod Touch is a portable media player, personal digital assistant, and Wi-Fi mobile platform designed and marketed by Apple Inc.  The device features a color multi-touch graphical user interface on a 3.5 inch LED backlit display. It allows wireless access to the iTunes Store, and also has access to Apple's App Store, enabling content to be purchased and downloaded directly on the device. Apple Inc. has sold more than 20 million iPod Touch units.</para><para>The iPod Touch and the iPhone, a smartphone by Apple, share the same hardware platform and run the same iOS operating system. The iPod Touch lacks some of the iPhone's features and associated apps, such as access to cellular networks and a built-in camera (and microphone on older models). As a result, the iPod Touch is slimmer and lighter than the iPhone. Multimedia, which is available as a single "iPod" app on the iPhone, is split into music and movies on the iPod Touch.</para><para>While not originally marketed as an eBook reader devices, Apple changed directions in June 2010 when they released their iBooks app (using Apple's Fairplay DRM) to these devices as part of the iOS4 release. In addition, several apps have been developed which allow eBooks to be read on the Touch including Stanza which is able to read many formats including AZW, EPUB and PDF as long as there is no DRM present.  With number of units sold, some have called it the mostly widely sold eBook reading device, although it is impossible to say how many users actually use it as such.</para></section><section><title>Apple iPad</title><para>The iPad is a tablet computer developed by Apple Inc. Similar in functionality to the iPhone or iPod Touch, it currently runs the 3.2 version of iOS, with a user interface redesigned to take advantage of the larger screen. The iPad can display EPUB files natively and uses Apple's Fairplay DRM scheme.  The iPad has a 9.7-inch LED backlit multi-touch display.</para><para>As Apple's first device to use its iBookstore service and companion iBooks eBook reading application, the iPad has been compared to the Kindle and the nook. Users can load their own EPUB files by loading them into iTunes and then syncing to the device.  Amazon has released a Kindle for iPad app. Barnes and Noble, Kobo, and Borders also provide apps that provide access to their eBooks as well. This range of readers makes the iPad a common platform on which eBooks from different vendors and different formats can be read.</para></section><section><title>T-mobile G1 (HTC Dream)</title><para>The G1 is an Internet-enabled 3G smartphone with hardware designed by HTC. It was the first phone to the market that uses the Android mobile device platform. It features a 3.2 inch color touchscreen.  Like the iPhone is was not originally marketed as an eBook reader, but several apps have also been developed for it including Aldiko, FBReader and WordPlayer.  These apps can all read non-DRM EPUB and have various features such as night-time reading (white text on black screen) and other preference-base customizations.</para></section><section><title>enTourage eDGe</title><para>The eDGe is a “dualbook” which combines the functions of an e-reader, netbook, notepad, and audio/video recorder and player into a single unit. The eDGe has a clamshell design (that can flip to be used as a book or as tablet) and two displays, a 9.7-inch E Ink display and a 10.1-inch LCD. The device runs Android software which controls both screens.  The E Ink display is used to display eBooks and also provides an onscreen note-taking/drawing capability.  This feature also allows the user to take notes and make annotations and save the markings as PDF.</para><para>The reader software within the eDGe can display both EPUB and PDF. This device also utilizes Adobe DRM for protected files.</para></section><section><title>OLPC XO</title><para>The OLPC XO-1 is an inexpensive subnotebook computer intended to be distributed to children in developing countries around the world, to provide them with access to knowledge, and opportunities to "explore, experiment and express themselves" (constructionist learning).</para><para>The subnotebooks are designed for sale to government-education systems which then give each primary school child their own laptop. These rugged, low-power computers use flash memory instead of a hard drive, and come with a distribution of Linux derived from Red Hat's Fedora. Mobile ad-hoc networking via 802.11s WiFi mesh networking protocol is used to allow many machines to share Internet access as long as at least one of them can see and connect to a router or other access point. The first-generation OLPC laptops have a novel low-cost LCD screen. This screen has teh abiity to switch modes. When lit primarily from the rear with the white LED backlight, the display shows a color image composed of both RGB and grayscale information. When lit primarily from the front by ambient light, for example from the sun, the display shows a monochromatic (aka black and white) image composed of just the grayscale information.</para><para>Applications on the XO are called activities. One of the activites that is available is the Read activity which can read EPUB and PDF files. The ability to use this device as a reader in any environment made it an interesting possibility for this project.</para></section></section><section><title>Enhanced eBooks</title><para>The term “enhanced” eBooks has been used to mean many different things.  For example, David Baldacci released his book “Deliver Us from Evil” as an enhanced eBook.  In this case, in addition to the story, he included behind the scenes looks at how a book is written including audio, video, photos and an alternate ending, much like the special features found on many DVDs.</para><para>Essentially an enhanced eBook is a combination of media and book content that utilizes any mixture of text, audio, still images, animation, video, and interactivity content forms. The formats used to create a literary fiction eBook can include the addition of audio-visual elements and interactive contents allowing new form of creativity. The user (e.g., reader) might have an opportunity to participate in events occurring to characters, to feel influence of a musical part of a narration and graphic part. </para></section></section><section><title>The Project</title><para>The goal of the project was to develop an eBook that demonstrates a number of enhanced eBook capabilities, but still works on a standard eBook reader, such as those mentioned above, to the greatest extent possible.  The functionality to be attempted includes:<itemizedlist><listitem><para>substantial table of contents - tests folding and other navigation capabilities</para></listitem><listitem><para>footnotes - test navigation within the eBook and presentation. Two different methods were evaluated: bi-directional footnotes and embedded footnotes.</para></listitem><listitem><para>illustrations – test graphics capabilities and memory management</para></listitem><listitem><para>creation of hidden text – tests CSS support and search capabilities</para></listitem><listitem><para>external links – tests support of linking to web pages outside of the eBook</para></listitem><listitem><para>media links – test support of audio and video</para></listitem><listitem><para>interactivity - test methods for including interactive content within the eBook</para></listitem></itemizedlist>
Another requirement of the project was that it should include public domain or freely available source material.  This allows the final product to be freely distributed without concern for licensing issues.</para><para>The World English Bible was selected as the source text.  The text is available in XML from the World English Bible website (<link xlink:href="http://worldenglishbible.org" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://worldenglishbible.org</link>) in the Open Scriptural Information Standard (OSIS) format.  This version of the Bible also includes footnotes throughout along with cross reference between verses.  Images are available from the LaVista, Nebraska, Church of Christ website (<link xlink:href="http://www.lavistachurchofchrist.org/Picture.htm" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.lavistachurchofchrist.org/Picture.htm</link>).  The staff of the church have scanned images from several books that are now in the public domain and have made them available.  Many of these images were downloaded for insertion into the eBook file.  MP3 recordings of each chapter are available from Audio Treasure (<link xlink:href="http://www.audiotreasure.com/webindex.htm" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.audiotreasure.com/webindex.htm</link>).  External links include place names shown on Google Maps. KML files that connect verses to locations are available from the Bible Geocoding project (<link xlink:href="http://www.openbible.info/geo" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.openbible.info/geo</link>).  Links to video lessons are also available at theBible.net (<link xlink:href="http://www.thebible.net/video/" xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.thebible.net/video/</link>).</para><section><title>Text Conversion (aka Overlap Happened)</title><para>The text conversion from OSIS XML to XHTML for inclusion in the eBook file appeared to be fairly straightforward at first glance.  However, further analysis revealed that there was a minimal amount of structure contained within the file. Also, the entire Bible was contained within a single file. The snippet below shows many of the markup problems: </para><programlisting xml:space="preserve">
1  &lt;p&gt;
2	&lt;verse eID="Luke.20.47"/&gt;
3	&lt;chapter eID="Luke.20"/&gt;
4	&lt;chapter sID="Luke.21" osisID="Luke.21"/&gt;
5	&lt;verse sID="Luke.21.1" osisID="Luke.21.1"/&gt;He looked up, and saw the rich people 
6	  who were putting their gifts into the treasury.&lt;verse eID="Luke.21.1"/&gt;
7	&lt;verse sID="Luke.21.2" osisID="Luke.21.2"/&gt;He saw a certain poor widow casting in 
8	&lt;milestone type="x-noteStartAnchor"/&gt;two small brass coins.
9	&lt;note type="translation"&gt;literally, “two lepta.” 2 lepta was about 1% of a day’s wages 
10	  for an agricultural laborer.&lt;/note&gt;&lt;verse eID="Luke.21.2"/&gt;
11	&lt;verse sID="Luke.21.3" osisID="Luke.21.3"/&gt;He said, 
12 	&lt;q sID="Luke.21.3.149" who="Jesus" n="" type="x-doNotGeneratePunctuation"/&gt;“Truly I 
13 	  tell you, this poor widow put in more than all of them,&lt;verse eID="Luke.21.3"/&gt;
14	&lt;verse sID="Luke.21.4" osisID="Luke.21.4"/&gt;for all these put in gifts for God from their 
15	  abundance, but she, out of her poverty, put in all that she had to live on.”
16	&lt;q eID="Luke.21.3.149" n=""/&gt;
17 &lt;/p&gt;
</programlisting><para>Within this &lt;p&gt; element, we see &lt;verse&gt; and &lt;chapter&gt; elements.  However, these tags are simply empty boundary markers, denoted by the sID (e.g. line 5) and eID (e.g. line 6) attributes.  Notice the verse end (line 2) and the chapter end (line 3) and beginning (line 4) at the start of the &lt;p&gt;.  The &lt;milestone&gt; element (line 8) marks the beginning of the anchor text, but the end of the text is identified by the &lt;note&gt; start tag (line 9).  In many cases, &lt;note&gt; elements do not have &lt;milestone&gt; elements to identify any text.  Also notice the &lt;q&gt; (quote) elements.  The starting indicator (line 12) occurs in one “verse” and the ending indicator (line 16) occurs within a different “verse”. </para><para>These overlapping structures presented a challenge in converting the data to XHTML. It was desired that verse numbers be inserted into the text in order to allow readers to more easily navigate the text. Since the primary use of the data is for human reading, there was not a need to specifically delineate the verse boundaries, as this could be determined programmatically later, if needed. Also paragraphs would be kept intact as much as possible.</para><para>The process of converting the OSIS markup took several steps.  First of all, an XSLT stylesheet was written that attempted to convert the OSIS markup into nested XHTML structure.  The stylesheet processed the beginning and ending marker elements and converted them to character sequences within the output text.  The stylesheet also created the separate files for each chapter.  Since output from the stylesheet needed to be well-formed in order to be processed further by other stylesheets, angle brackets were replaced with "~~" to delineate markup.  Some markup was also removed including the verse ends.
<programlisting xml:space="preserve">
&lt;p&gt;~~ENDchapter~~~~chapter osisID="Luke.21" sID="Luke.21"~~&lt;verse osisID="Luke.21.1" 
sID="Luke.21.1"/&gt;He looked up, and saw the rich people who were putting their gifts into the 
treasury.&lt;verse osisID="Luke.21.2" sID="Luke.21.2"/&gt;He saw a certain poor widow casting in 
&lt;milestone type="x-noteStartAnchor"/&gt;two small brass coins.&lt;note type="translation" 
xid="w1aab1b7b5d709c14"&gt; literally, “two lepta.” 2 lepta was about 1% of a day’s wages for an 
agricultural laborer.&lt;/note&gt;&lt;verse osisID="Luke.21.3" sID="Luke.21.3"/&gt; He said, &lt;q n="" 
sID="Luke.21.3.149" type="x-doNotGeneratePunctuation" who="Jesus"/&gt;“Truly I tell you, this poor 
widow put in more than all of them, &lt;verse osisID="Luke.21.4" sID="Luke.21.4"/&gt;for all these 
put in gifts for God from their abundance, but she, out of her poverty, put in all that she had to 
live on.”&lt;q eID="Luke.21.3.149" n=""/&gt;&lt;/p&gt;
</programlisting>
The data above shows the output of the original snippet after it had been transformed by the first XSLT stylesheet.
			</para><para>Next a series of sed commands was run on the file to convert the character sequences into XML tags.  For example the "~~ENDchapter~~" sequence was changed to &lt;/chapter&gt;. Other sed commands were used to arrange the tags into the correct nesting order in order to be well-formed (e.g. moving &lt;/chapter&gt; tags before &lt;p&gt; tags. The sed tool was used as a quick and dirty method for manipulating the overlapping markup in order to prepare the data for further XML processing.
			<programlisting xml:space="preserve">
&lt;chapter osisID="Luke.21" sID="Luke.21"&gt;
	&lt;p&gt;
		&lt;verse osisID="Luke.21.1" sID="Luke.21.1"/&gt;He looked up, and saw the rich people 
		  who were putting their gifts into the treasury.
		&lt;verse osisID="Luke.21.2" sID="Luke.21.2"/&gt;He saw a certain poor widow casting 
		  in &lt;milestone type="x-noteStartAnchor"/&gt;two small brass coins.
		&lt;note type="translation" xid="w1aab1b7b5d709c14"&gt;literally, “two lepta.” 2 lepta 
		  was about 1% of a day’s wages for an agricultural laborer.&lt;/note&gt;
		&lt;verse osisID="Luke.21.3" sID="Luke.21.3"/&gt;He said, 
		&lt;q n="" sID="Luke.21.3.149" type="x-doNotGeneratePunctuation" who="Jesus"/&gt;
		  “Truly I tell you, this poor widow put in more than all of them,
		&lt;verse osisID="Luke.21.4" sID="Luke.21.4"/&gt;for all these put in gifts for God 
		  from their abundance, but she, out of her poverty, put in all that she had to 
                  live on.”
		&lt;q eID="Luke.21.3.149" n=""/&gt;
	&lt;/p&gt;
	...
&lt;/chapter&gt;
			</programlisting>
			The data above show the data after it has been provcessed by the sed batch commands.  The &lt;chapter&gt; markup now surrounds the &lt;p&gt; and &lt;verse&gt; markup now occurs within the &lt;p&gt;.  However, the overlapping &lt;q&gt; markup still exists.
			</para><para>Finally another XSLT script took the well-formed XML source file to prepare the files needed to build the EPUB collection. Spans with class attributes were also added into the markup to allow CSS formatting of the text. For example the span with the “jesus” class (formerly &lt;q&gt; markup) allows for red-letter marking of the words of Jesus on eBook readers that display color. Each book, chapter and verse were also given IDs to provide anchor points for linking (e.g. footnote returns).  Since milestones do not occur consistently, it was decided to drop them and simply insert a marker indicating that a footnote is present.  In cases where quotes span over several paragraphs or chapters, the quotes are closed at the end of the larger structure and restarted in the preceding one.  For example, the quote was closed at the end of each verse and reopened after the next verse number markup had been inserted.  This prevents the verse numbers from being displayed in red. The single XML was divided into individual files, each containing one chapter.</para><para>Two different methods were considered for footnotes.  In the first method, footnotes would be displayed separately from the text, but be linked via a footnote marker.  The footnotes were extracted from the source XML and stored in a separate file with bi-directional links from the source to the footnotes and from the footnotes back to the referring source.  The markup shown below is an example of the final product of the source text and its associated footnote.

<programlisting xml:space="preserve">
&lt;div class="chapter"&gt;
	&lt;span id="Luke.21"/&gt;
	&lt;h2 class="chapter-title"&gt;Chapter 21&lt;/h2&gt;
	&lt;p&gt;
		&lt;span id="Luke.21.1" class="verse"&gt;1&lt;/span&gt;
	             He looked up, and saw the rich people who were putting their gifts into the 
	             treasury.
		&lt;span id="Luke.21.2" class="verse"&gt;2&lt;/span&gt;     
		He saw a certain poor widow casting in two small brass coins.
		&lt;span id="fnref-w1aab1b7b5d709c14"&gt;
			&lt;a href="../footnotes.xml#fn-w1aab1b7b5d709c14" class="footnote" 
			title="Footnote Luke.21.2"&gt;ƒ&lt;/a&gt;
		&lt;/span&gt;
		&lt;span id="Luke.21.3" class="verse"&gt;3&lt;/span&gt; 
		  He said, &lt;span class="jesus"&gt;“Truly I tell you, this poor widow put in more 
		  than all of them,&lt;/span&gt;
		&lt;span id="Luke.21.4" class="verse"&gt;4&lt;/span&gt;
		&lt;span class="jesus"&gt;for all these put in gifts for God from their abundance, but 
		  she, out of her poverty, put in all that she had to live on.”&lt;/span&gt;
	&lt;/p&gt;
&lt;/div&gt;

&lt;div class="footnotes"&gt;
	&lt;h3 class="chapter-title"&gt;Footnotes&lt;/h3&gt;
	...
           &lt;div id="fn-w1aab1b7b5d709c14"&gt;
		&lt;p&gt;&lt;a href="Luke/Luke.21.xml#Luke.21.2"&gt;Luke.21.2 ⇑ &lt;/a&gt;literally, “two lepta.” 
		2 lepta was about 1% of a day’s wages for an agricultural laborer.&lt;/p&gt;
	&lt;/div&gt;
	...
&lt;/div&gt;
</programlisting>
One problem that was encountered in using this format was the tendency of human readers to hit the "previous page" button, thinking it was a back button.  This would turn the previous page in the footnotes section of the book, rather than returning back to the original text.
			</para><para>In the second footnote scenario, embedded footnotes were used to keep the information together and reduce the need for jumping back and forth (and confusion about the use of the "previous page" functionality.  In this case the footnote appears on screen with the text, but is differentiated by a different color and spacing.

<programlisting xml:space="preserve">
&lt;div class="chapter"&gt;
	&lt;span id="Luke.21"/&gt;
	&lt;h2 class="chapter-title"&gt;Chapter 21&lt;/h2&gt;
	&lt;p class="text"&gt;
		&lt;span id="Luke.21.1" class="verse"&gt;1&lt;/span&gt;
	             He looked up, and saw the rich people who were putting their gifts into the 
	             treasury.
		&lt;span id="Luke.21.2" class="verse"&gt;2&lt;/span&gt;     
		He saw a certain poor widow casting in two small brass coins.
		&lt;span class="notes"&gt;&lt;span class="noteverse"&gt;2&lt;/span&gt;literally, “two lepta.” 
		2 lepta was about 1% of a day’s wages for an agricultural laborer.
		&lt;/span&gt;
		&lt;span id="Luke.21.3" class="verse"&gt;3&lt;/span&gt; 
		  He said, &lt;span class="jesus"&gt;“Truly I tell you, this poor widow put in more 
		  than all of them,&lt;/span&gt;
		&lt;span id="Luke.21.4" class="verse"&gt;4&lt;/span&gt;
		&lt;span class="jesus"&gt;for all these put in gifts for God from their abundance, but 
		  she, out of her poverty, put in all that she had to live on.”&lt;/span&gt;
	&lt;/p&gt;
&lt;/div&gt;
</programlisting>
This method worked well on color displays, but required some extra styling in order to work well on grayscale devices.
			</para><para>In addition to the preparation of the source text, the final stylesheet also generated several metadata files needed to construct a valid EPUB file.  This includes the OSF file which contains the Dublin Core metadata, the file manifest and the spine (which lists the files in the order in which they appear).  An NCX file is also generated which is used by the eBook reader to present the table of contents.  Some readers are able to present collapsible TOCs, so it is important to nest the entries in order to allow that functionality when possible.</para></section><section><title>Insertion of Illustrations</title><para>Artists through the ages have used the Bible as a source for subject matter.  Since the source text contains no illustrations at all, a method was developed to insert graphic images at the correct places within the text.  As stated previously, most of the source material (approximately 350 images) was found on a website of the LaVista Church of Christ.  These images are mostly black and white which will display well on the E Ink screens of the devices.</para><para>An XML markup scheme was developed to allow an XSLT stylesheet to insert the graphic links at appropriate places.  An example of the insertion markup is shown below as is a sample of the resulting image markup in the text.  The stylesheet also added the graphics to the manifest information within the OSF file. 
<programlisting xml:space="preserve">
&lt;links&gt;
	&lt;image verse="Luke 16.21" file="Luke.16.21.jpg" caption="Lazarus and the Rich Man"/&gt;
	&lt;image verse="Luke.22.61" file="Luke.22.61.jpg" caption="Peter's Denial"/&gt;
	&lt;image verse="Luke.23.5" file="Luke.23.5.jpg" caption="Jesus Before Pontius Pilate"/&gt;
	&lt;image verse="Luke.23.23" file="Luke.23.23.jpg" caption="Jesus Beaten"/&gt;
&lt;/links&gt;
</programlisting>
<programlisting xml:space="preserve">
&lt;br/&gt;&lt;span&gt;
	&lt;img src="../images/Luke.16.21.jpg" alt="Lazarus and the Rich Man"/&gt;
&lt;/span&gt;&lt;br/&gt;
</programlisting>
			</para></section><section><title>Creation of Hidden Text</title><para>In most eBook readers, when searching capability is provided, it only indexes the PCDATA text, not attribute values.  In order to make navigation of the Bible file easier, it was suggested that hidden text be added at each book, chapter, and verse containing alternate search strings that would allow users to go directly to any anchor point.  This hidden text would also allow alternate spellings and abbreviations to be used, making navigation even more intuitive.  For example, a reference to Paul's second letter to Timothy, could be entered by a user as “2 Timothy”, "2nd Timothy”, “II Timothy”, “2 Tim”, “2nd Tim”, “II Tim”, etc.  These different variations are added to each anchor point in a &lt;span&gt; element with an class attribute set to “hidden”.  The CSS stylesheet then attempts to hide the text, while making it searchable.  Our Luke example with the hidden text is shown below.

<programlisting xml:space="preserve">
&lt;div class="chapter"&gt;
	&lt;span id="Luke.21"/&gt;
	&lt;h2 class="chapter-title"&gt;Chapter 21&lt;/h2&gt;
	&lt;p&gt;
		&lt;span id="Luke.21.1" class="verse"&gt;1&lt;/span&gt;
		&lt;span class="hidden"&gt;Luke 21:1&lt;/span&gt; He looked up, and saw the rich people who 
		  were putting their gifts into the treasury.
		&lt;span id="Luke.21.2" class="verse"&gt;2&lt;/span&gt;     
		&lt;span class="hidden"&gt;Luke 21:2&lt;/span&gt; He saw a certain poor widow casting in two 
		  small brass coins.&lt;span id="fnref-w1aab1b7b5d709c14"&gt;
		&lt;span id="fnref-w1aab1b7b5d709c14"&gt;
			&lt;a href="../footnotes.xml#fn-w1aab1b7b5d709c14" class="footnote" 
			title="Footnote Luke.21.2"&gt;ƒ&lt;/a&gt;
		&lt;/span&gt;
		&lt;span id="Luke.21.3" class="verse"&gt;3&lt;/span&gt; 
		&lt;span class="hidden"&gt;Luke 21:3&lt;/span&gt; He said, &lt;span class="jesus"&gt;“Truly I 
		  tell you, this poor widow put in more than all of them,&lt;/span&gt;
		&lt;span id="Luke.21.4" class="verse"&gt;4&lt;/span&gt;
		&lt;span class="hidden"&gt;Luke 21:4&lt;/span&gt;
		&lt;span class="jesus"&gt;for all these put in gifts for God from their abundance, but 
		  she, out of her poverty, put in all that she had to live on.”&lt;/span&gt;
	&lt;/p&gt;
&lt;/div&gt;
</programlisting>
			</para><para>This intentionally introduced redundancy met with various degrees of success.  Some devices didn't support the “display:none” directive in the CSS file and displayed the text.  Some didn't display the text, but also didn't index it and others performed as had been hoped.</para></section><section><title>Insertion of External Links</title><para>The ability to link to outside materials is seen as a “must-have” for enhanced eBooks.  In designing this functionality, it was already known that most of the first generation readers (nook, Kindle, Sony) would not be able to perform this task.  Therefore, a new facet of the project was introduced: the ability to specify which features to include in an eBook and which to skip.  More on that below in the sidetrack.</para><para>Geographical names occur throughout the Bible.  Many places mentioned either no longer exist or are known by different names, making it difficult for a reader to know where an even might have occurred.  The Bible Geocoding project uses information from several reference sources to build KML files for use in Google Maps and Google Earth.   The snippet below shows the information contained within the KML files for two locations mentioned in the book of Luke.
<programlisting xml:space="preserve">
&lt;Placemark&gt;
	&lt;name&gt;Abilene&lt;/name&gt;
	&lt;description&gt;&amp;lt;a href="http://www.gnpcb.org/esv/search/?q=Luke+3%3A1"&amp;gt;Luke 3:1
	  &amp;lt;/a&amp;gt;&lt;/description&gt;
	&lt;styleUrl&gt;#obi-normal&lt;/styleUrl&gt;
	&lt;Point&gt;
		&lt;coordinates&gt;36.091710,33.587300&lt;/coordinates&gt;
	&lt;/Point&gt;
&lt;/Placemark&gt;
&lt;Placemark&gt;
	&lt;name&gt;Arimathea&lt;/name&gt;
	&lt;description&gt;&amp;lt;a href="http://www.gnpcb.org/esv/search/?q=Luke+23%3A50"&amp;gt;Luke 23:50
	  &amp;lt;/a&amp;gt;&lt;/description&gt;
	&lt;styleUrl&gt;#obi-normal&lt;/styleUrl&gt;
	&lt;Point&gt;
		&lt;coordinates&gt;35.180162,31.832739&lt;/coordinates&gt;
	&lt;/Point&gt;
&lt;/Placemark&gt;
</programlisting>
			</para><para>An XSLT stylesheet was developed that would convert the KML into a form that would be easier for the insertion mechanism to process.  This stylesheet also reversed the order of the coordinates to work in the URL call to Google Maps.  The XML scheme developed for the geographic points resembles that for the image insertion.
<programlisting xml:space="preserve">
&lt;links&gt;
	&lt;geo verse="Luke.3.1" point="33.587300,36.091710" name="Abilene"/&gt;
	&lt;geo verse="Luke.23.50" point="31.832739,35.180162" name="Arimathea"/&gt;
&lt;/links&gt;
</programlisting>
			</para><para>The links to Google Maps are built on the place name within the flowing text.  Another XSLT stylesheet uses the verse attributes shown above to locate the starting point from where to search in the text.  Recall that the only thing marking the beginning of a verse is the &lt;span class='verse'&gt; markup.  Once the appropriate starting point is located in the tree, each text node until the following verse marker is examined to determine if it contains the value in the name attribute.  If so, an HTML &lt;a&gt; element is wrapped around the text pointed to a coordinate in Google Maps.  When the link is activated, a web browser can be opened and the page displayed.</para><para>As expected, this functionality did not work in the first generation eBook readers since they have limited browser capabilities.  However, in the others, there were various degrees of success.  On the iPad, the user is asked if they would like to leave the iBooks app to open the browser.  On the eDGe, the map opens on the LCD screen, as expected.</para><section><title>Sidetrack: Device Specific Builds and Graceful Degradation</title><para>As mentioned in the previous section, the hidden text worked differently in different devices.  Therefore, it too, might be a candidate for the include/don't include list.  As this concept was considered further, it seemed that almost any of the additional functionality beyond the straight text could be managed in this fashion.  This would also allow differences in functionality to be recognized and items inserted based on the target device.  Another example of this might be to have colorized versions of the graphics for the readers with color screens and black and white for the gray scale displays. While device specific builds allow the production of EPUB files that are more efficient with space by not including data that a device cannot use, it also increases the complexity of distribution.  For example, the devices that support the Adobe DRM can interchange eBooks between them, but have different capabilities. It would not make sense to add capabilities for the eDGe to a file that was being distributed on the Barnes &amp; Noble site, since most buyers would be plannig to use the nook.</para><para>In addition, Amazon has also added to the debate.  When they updated the platform-specific Kindle software applications in June, they introduced capabilities that are not supported on the current Kindle devices.  They do not allow publishers to upload different versions of the the files to the Amozon website.  This forces publishers to adopt a strategy of graceful degradation within books in which they want to add audio and video capabilites. Graceful degradation essentially means that there is markup that identifies enhanced capabilities and the devices or software must know to either attempto handle the markup or ignore it.  If the markup is to be ignored, information can be provided to let the reader know that they might be missing something.</para><para>As more eBooks are enhanced with media and other capabilities, this debate will continue to occur.</para></section></section><section><title>Media Links</title><para>Another hallmark of enhanced eBooks is the use of multimedia resources to improve the reading experience. Many people believe that EPUB does not support media, which is simply wrong.  The EPUB supports inclusion of different media types and can select the appropriate player based on the mimtype given to a particular file.  The limitation is most often with the reading devices themselves.  The Kindle device does not include codecs for video, while the iPad cannot run Flash. Both of these can be embedded into an EPUB file..</para><para>There is some debate in the eBook community about the best way to include media files in EPUB files.  There are essentially two options: 1) include the files in the EPUB file itself; 2) reference the resources via HTML &lt;a&gt; tags.  Each option has its benefits and drawbacks.</para><para>The inclusion of the files in the EPUB file assures that the resource is available, whether the eBook reader is online or not.  It also reduces the reliance on a web browser to retrieve the information.  It is also faster since there is not delay while waiting to download.  The chief drawback is the impact this has on the EPUB file itself.  As mentioned earlier, the EPUB file is essentially a zip file with a specified set up internal files and a “.epub” file suffix.  Most audio and video formats are already compressed, so therefore they do not compress significantly inside the EPUB file.  This requires memory overhead to open the files inside the readers.  It also requires longer download times for the books when they are first loaded onto the eBook reader.</para><para>Referencing files produces smaller EPUB files, but requires a mechanism (usually a web browser) to retrieve and present the resources.  This requires that the eBook reader be online.  There will also be a lag between the time the link is selected and the resource is downloaded.  This is especially noticeable with large video files.</para></section></section><section><title>Future work</title><para>Once the base functionality has been implemented and tested on all the devices, some possible additions have already been considered.  This work will be used to test possible updates to the EPUB standard being considered now.  We would like to include inter eBook reference which allow the reader to start in one eBook and open another.  This would be useful in this context for reference materials such as concordances, dictionaries, topical indexes, biblical names lists, etc.</para><para>Of course an app may be considered as the ultimate enhanced eBook.  It has not been decided at this point whether an app will be attempted and on which platform.  It would probably be either iPad or Android.</para></section><section><title>Conclusion</title><para>The work done on this project demonstrated the strengths and weaknesses of the different reading devices and evaluated different strategies for working around any weaknesses.  It also highlighted the various ways in which the implementation of the same standard can lead to inconsistent results, which brings into question the effectiveness of the standard in the first place.  In a market that is new and largely consumer oriented, these inconsistencies can only increase confusion. It would seem imperative that the industry work on methods to reduce the perceived inconsistency without limiting innovation or reducing competition.</para></section></article>