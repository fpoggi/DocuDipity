<?xml version="1.0" encoding="UTF-8"?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0-subset Balisage-1.3" xml:id="HR-23632987-8973"><title>Poio API and GraF-XML</title><subtitle>A radical stand-off approach in language documentation and language typology</subtitle><info><confgroup><conftitle>Balisage: The Markup Conference 2013</conftitle><confdates>August 6 - 9, 2013</confdates></confgroup><abstract><para>
        This paper presents an ongoing CLARIN project that implements a library and web
        application for data management in language documentation and language typology. The
        project uses annotation graphs as pivot format, as described by ISO 24612 "Language
        resource management - Linguistic annotation framework (LAF)". The standard contains
        an XML representation of annotation graphs. We will show hwo we map common file
        formats onto annotation graphs and how this stand-off approach will improve
        linguistic workflows and data management in language documentation and typology.
      </para></abstract><author><personname><firstname>Jonathan</firstname><surname>Blumtritt</surname></personname><personblurb><para>Jonathan Blumtritt is a software developer at the Cologne
        Center for eHumanities.</para></personblurb><affiliation><orgname>Cologne Center for eHumanities, University of Cologne</orgname></affiliation><email>‎jonathan.blumtritt@uni-koeln.de</email></author><author><personname><firstname>Peter</firstname><surname>Bouda</surname></personname><personblurb><para>Peter Bouda is general linguist and co-founder of
        the Centro Interdisciplinar de Documentação Linguística e Social in
        Minde/Portugal. He is also working as a researcher in
        project Quantitative Historical Linguistics at the University of Marburg.</para></personblurb><affiliation><orgname>Centro Interdisciplinar de Documentação Linguística e Social</orgname></affiliation><email>pbouda@cidles.eu</email></author><author><personname><firstname>Felix</firstname><surname>Rau</surname></personname><personblurb><para>Felix Rau is a PhD student at the University of Cologne.</para></personblurb><affiliation><orgname>Department of Linguistics, University of Cologne</orgname></affiliation><email>f.rau@uni-koeln.de</email></author><legalnotice><para>Copyright © 2013 by the authors. Used with permission.</para></legalnotice></info><section><title>Introduction</title><para>
      Field linguists in language documentation projects have increasingly adopted the latest
      technologies and tools. Their work have led to remarkable developments in digital corpora,
      exemplified by The Language Archive at the MPI in Nijmegen. The next step in research is
      now the analysis and theoretical exploitation of the huge amount of data that has been
      collected in numerous language documentation projects. This research will rely on
      computer-based strategies, as data is already available in digital formats.
    </para><para>
      In our talk we will present a recent project within the CLARIN framework
      ("Common Language Ressources and Technology Infrastructure") that develops a solution
      for researchers to access the data collected in language documentation
      projects via GrAF data structures. Our project consists of three parts:
      <itemizedlist><listitem><para>
            graf-python: a Python implementation of GrAF as defined in the ISO document;
          </para></listitem><listitem><para>
            Poio API: a Python library that maps data formats used in language documentation to
            GrAF and back again;
          </para></listitem><listitem><para>
            CLASS: a web application that provides a REST and user interface to access, search
            and modify the data.
          </para></listitem></itemizedlist>
      We will focus on the advantages of the radical stand-off approach (internally and via its
      XML representation) for collaboration in language documentation and analysis projects. We
      will also show how our project connects to existing infrastructure via building a bridge
      to existing identity providers within the linguistic, scientific environment.
    </para></section><section><title>A Common Research Infrastructure</title><para>
      The project was developed by the German section of the European CLARIN project
      <footnote><para><link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://clarin-d.net/</link>, accessed 19.4.2013</para></footnote>. The CLARIN
      project aims at establishing a web-based research infrastructure for the social sciences
      and humanities. The infrastructure embraces existing standards and focusses on loosely
      coupled REST-style web services. To assure interoperability, Text Corpus Format (TCF)
      <footnote><para><link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://weblicht.sfs.uni-tuebingen.de/weblichtwiki/index.php/The_TCF_Format</link>,
        accessed 19.4.2013</para></footnote> –  an exchange format for annotations – has been
        defined. TCF is fully compatible with the Linguistic Annotation Format (LAF) and
        Graph­based Format for Linguistic Annotations (GrAF).
    </para><para>
      The DoBeS-Archive <footnote><para><link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.mpi.nl/DOBES</link>, accessed 19.4.2013</para></footnote>,
      one of the biggest digital archives for data from language documentation projects, is
      part of this infrastructure project. The CLASS webservice
      interfaces with this archive as part of the CLARIN infrastructure.
    </para></section><section><title>GrAF and Poio API</title><para>
      One problem that our research field faces at the moment is that the data and annotations
      show a highly heterogeneous layout. Not only are there different file formats in the
      archives, but the structure of "tiers" and the annotation schemes used differ
      from project to project. Our implementation aims at unifying the existing data formats and
      the existing tier hierarchies into a standardized pivot format as defined by ISO 24612
      "Language resource management - Linguistic annotation framework (LAF)"
      <footnote><para><link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.iso.org/iso/catalogue_detail.htm?csnumber=37326</link>,
      accessed 21.3.2013</para></footnote>. This standard
      is based on annotation graphs and was developed as an underlying data model
      for linguistic annotations [<xref linkend="idesuderman2007"/>]. The "Graph Annotation Framework"
      (GrAF), an implementation of LAF, was originally developed to publish the "Manually Annotated Subcorpus" (MASC)
      of the American National Corpus
      <footnote><para><link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.americannationalcorpus.org/MASC/Home.html</link>, accessed 19.4.2013</para></footnote>,
      and consists of three parts:
      <itemizedlist><listitem><para>
            an abstract data model;
          </para></listitem><listitem><para>
            an API for manipulating the data model;
          </para></listitem><listitem><para>
            a simple XML serialization of the data model.
          </para></listitem></itemizedlist>
      As the data model and its specification is somewhat liberal regarding the layout of the
      data, we had to define a common annotation graph structure for data from language documentation
      projects in the beginning (for the advantages of the liberal approach of GrAF for our
      purposes see <xref linkend="seclangdoc"/>.). In our project we use the Graph Annotation Framework
      version 1.0<footnote><para><link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.xces.org/ns/GrAF/1.0/</link>,
      accessed 3.7.2013</para></footnote>.
    </para><section><title>Converting from and to GrAF and GrAF-XML</title><para>
        We started with the XML representation
        of a software called Elan <footnote><para>Elan uses an XML format called EAF:
        <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.mpi.nl/tools/elan/EAF_Annotation_Format.pdf</link>, accessed 19.4.2013</para></footnote>, which
        is the de-facto standard in language documentation at the moment. First, we separated the metadata content of Elan's
        EAF files from the bare content with data and annotations. Most meta-data contained in Elan
        describes the types and restrictions on linguistic tiers, which we store seperately to the
        graphs. The graphs itself capture two items: The tier hierarchy in the EAF file and
        the content of the annotations.
      </para><para>
        The following listing shows the start of one tier that stores "utterances" in the EAF file:

        <programlisting xml:space="preserve">
  &lt;TIER DEFAULT_LOCALE="en" LINGUISTIC_TYPE_REF="utterance" PARTICIPANT="" TIER_ID="W-Spch"&gt;
    &lt;ANNOTATION&gt;
      &lt;ALIGNABLE_ANNOTATION ANNOTATION_ID="a8" TIME_SLOT_REF1="ts4" TIME_SLOT_REF2="ts23"&gt;
        &lt;ANNOTATION_VALUE&gt;so you go out of the Institute to the Saint Anna Straat.&lt;/ANNOTATION_VALUE&gt;
      &lt;/ALIGNABLE_ANNOTATION&gt;
    &lt;/ANNOTATION&gt;
    &lt;ANNOTATION&gt;
      [...]
    &lt;/ANNOTATION&gt;
  &lt;/TIER&gt;
        </programlisting>

        The tokenization into individual words are stored in a seperate child tier for "words":

        <programlisting xml:space="preserve">
  &lt;TIER DEFAULT_LOCALE="en" LINGUISTIC_TYPE_REF="words" PARENT_REF="W-Spch" PARTICIPANT="" TIER_ID="W-Words"&gt;
    &lt;ANNOTATION&gt;
      &lt;ALIGNABLE_ANNOTATION ANNOTATION_ID="a23" TIME_SLOT_REF1="ts4" TIME_SLOT_REF2="ts6"&gt;
        &lt;ANNOTATION_VALUE&gt;so&lt;/ANNOTATION_VALUE&gt;
      &lt;/ALIGNABLE_ANNOTATION&gt;
    &lt;/ANNOTATION&gt;
    &lt;ANNOTATION&gt;
      [...]
    &lt;/ANNOTATION&gt;
  &lt;/TIER&gt;      
        </programlisting>

        Both tiers being time-aligned, the basic video or audio data serves as reference
        point to describe which annotations of a child tier are contained in one annotation
        of the parent tier. As this layout is already a stand-off annotation (although
        everything is stored in a single file) the transformation to annotation graph is
        an easy task. The utterance is stored as a GrAF node with an annotation that
        contains a feature structure. The first annotation of the tier W-Spch with the
        annotation value "so you go out of the Institute to the Saint Anna Straat." looks
        like this in GrAF:

        <programlisting xml:space="preserve">
  &lt;node xml:id="utterance..W-Spch..na8"&gt;
   &lt;link targets="utterance..W-Spch..ra8"/&gt;
  &lt;/node&gt;
  &lt;region anchors="780 4090" xml:id="utterance..W-Spch..ra8"/&gt;
  &lt;a as="utterance" label="utterance" ref="utterance..W-Spch..na8" xml:id="a8"&gt;
   &lt;fs&gt;
     &lt;f name="annotation_value"&gt;so you go out of the Institute to the Saint Anna Straat.&lt;/f&gt;
   &lt;/fs&gt;
  &lt;/a&gt;
        </programlisting>

        The <code>&lt;node&gt;</code> is linked to a <code>&lt;region&gt;</code> that contains the values of the time slots
        of the original EAF file. The annotation <code>&lt;a&gt;</code> for the node has a feature structure
        <code>&lt;fs&gt;</code> with one feature <code>&lt;f&gt;</code> for the annotation
        value. The corresponding annotation for the "word" annotation in EAF looks
        like this:

        <programlisting xml:space="preserve">
  &lt;node xml:id="words..W-Words..na23"&gt;
   &lt;link targets="words..W-Words..ra23"/&gt;
  &lt;/node&gt;
  &lt;region anchors="780 1340" xml:id="words..W-Words..ra23"/&gt;
  &lt;edge from="utterance..W-Spch..n8" to="words..W-Words..na23" xml:id="ea23"/&gt;
  &lt;a as="words" label="words" ref="words..W-Words..na23" xml:id="a23"&gt;
   &lt;fs&gt;
     &lt;f name="annotation_value"&gt;so&lt;/f&gt;
   &lt;/fs&gt;
  &lt;/a&gt;
        </programlisting>

        The node for the word annotation is similar to the utterance node, except for
        an additional <code>&lt;edge&gt;</code> tag that links the node to the corresponding
        utterance node. Nodes and edges are created for all annotations of tiers that have
        time slots and a parent tier in EAF (those tiers have the stereotype
        "Time Subdivision" in EAF).
      </para><para>
        Poio API contains a plugin mechanism to allow future support of other file formats
        that can be mapped onto GrAF structures. This mechanism consists of base classes
        for <code>Reader</code> and <code>Writer</code> classes that are used by a general
        <code>Converter</code> class which constructs the graph. This architecture minimizes
        the amount of work needed to implement support for new file formats. The basic
        idea is that we map the semantics of file formats in language documentation onto
        annotation graphs, thus creating a certain subset of general annotation
        graphs that is suitable to store the information from the original files.
        The notion of "tiers" also has to be mapped and stored in annotation graphs
        during conversion. This will be explained in the next section.
      </para></section><section><title>Tier hierarchies</title><para>
        In Elan, information about the tier hierarchy is stored only implicitly with the
        layout of our graph. However, there is no restriction in GrAF itself that would
        disallow a node in the word tier to connect to any other node in other tiers but
        the utterance tier. This is not possible in Elan. To describe those restrictions
        we added another data structure in Poio API that we call "data structure type".
        This data structure separately stores information about any tier hierarchy that we
        can extract from the graph later. A simple data structure type indicating that the
        researcher wants to tokenize a text into words before adding a word-for-word
        translation and a translation for the whole utterance looks like this:
        <programlisting xml:space="preserve">
[ 'utterance', [ 'word', 'wfw' ], 'translation' ]
        </programlisting>
        One advantage in representing annotation schemes through those simple trees
        is that the linguists instantly understand how such a tree works and they can give a
        representation of "their" annotation schema. In language documentation and
        general linguistics researchers tend to create ad-hoc annotation schemes according to
        their background and then normally start to create only those annotations related
        to their current research project. This is for example reflected in an annotation
        software like Elan, where the user can freely create tiers with any names and
        arrange them in custom hierarchies. As we need to map those data into our internal
        representation, we try to ease the creation of custom annotation schemes which are
        easy to understand for users. Subsequently, users can create their own
        data structure types and derive the annotation schemes for GrAF files from those
        structures.
      </para><para>
        The node IDs in our GrAF data have a prefix that also contains the
        tier name (for example the utterance node: <code>&lt;node xml:id="utterance..W-Spch..na8"&gt;</code>).
        In the case of Elan the tier name in the node ID is preceeded
        by another string, the so-called "Linguistic Type" of Elan. This is a general restriction
        of our annotation graphs: we use those string IDs to be able to query the
        graphs quickly, for example to get all annotations which are children
        of another annotation on a certain tier, or to get all annotations for a "Linguistic Type".
        In other words we apply the semantics of tier-based annotation
        onto annotation graphs and make sure that the graphs we create and that the user
        handles in Poio API are a valid subset of general annotation graphs, as we defined it.
        The advantage of this approach is that within Poio API we are sure that the annotation
        graphs show a certain layout. The following sections will give an outlook on how this
        basic unification will support collaborations and scientific workflows in the future.
      </para><para>
        We also want to mention that we store the annotations of each tier in a separate file
        in GrAF-XML. This radical stand-off approach allows easy sharing of annotation files
        and unsupervised collaboration, as discussed in <xref linkend="secworkflows"/>. Still,
        we do not propose to introduce GrAF-XML as another file format for software tools
        or archiving in language documentation, but as an easy way to serialize annotation
        graphs for later processing in a scientific workflow.
      </para><para>
        All in all, it was an easy task to map an Elan
        EAF file to an annotation graph in GrAF. Those graphs are now the basis for other
        mappings of file formats onto GrAF. We are currently working on mapping from SIL
        Toolbox files, Typecraft XML files and Weblicht TCF files.
      </para></section></section><section xml:id="secworkflows"><title>Annotation graphs in linguistic workflows and collaborative projects</title><para>
      Annotation graphs have long been discussed as the underlying data model for
      linguistic annotations [<xref linkend="birdliberman2001"/>]. Furthermore, the graphs
      itself can be used to extend and augment existing corpora without a central,
      supervising instance. As the XML representation of GrAF constitutes a radical
      stand-off approach, it is possible to add and mix annotation tiers in collaborative
      projects without administrative overhead (for advantages of radical stand-off
      solutions against previous approaches see [<xref linkend="caylesssoroka2010"/>]
      and [<xref linkend="banski2009"/>]). The amount of work to
      manage and synchronize the data is thereby kept as minimal as possible.
    </para><para>
      In contrast to Elan we store each tier in a separate XML files, so that users can
      share annotations independently from any other tier and across sources. With this stand-off
      approach, a common data structure and unified access via an API facilitate the
      analysis of linguistic data, for example in typological research.
      GrAF itself was developed with interoperability in mind, so researchers
      can also use existing workflow tools like GATE and Apache UIMA in analysis
      [<xref linkend="idesuderman2009"/>].
    </para><para>
      Last but not least, existing graph-based methods can now be applied directly on
      the linguistic graphs in analysis, for example graph-traversal algorithms to
      generate co-occurrence statistics of annotations (for preliminary thoughts in
      that direction see also [<xref linkend="idesuderman2007"/>]). Graph visualization
      techniques can be instantly used by researchers to gain insight into their data
      and allow distant reading.
    </para></section><section xml:id="seclangdoc"><title>Language Documentation and Language Typology</title><para>
      Data used in documentary linguistics and language typology is different from data
      used in other areas of linguistics. The data produced in language documentation
      projects consists mostly of audio and video recordings with time-aligned annotations.
      This predominance of time-aligned annotations determines the requirements for data
      structures. Because of these requirements an annotation format used in this area
      of linguistics should allow the definition of regions of media recordings using timestamps
      as well as string ranges of annotations.
    </para><para>
      The linguistic diversity of the data in documentary linguistics and language
      typology makes the creation of standardized tag sets difficult, if not impossible,
      and even tier hierarchies differ considerably. Furthermore, many documented and
      analyzed languages will be subjected to further research and projects need to work with competing annotations
      and analyses. The specifics of the data and research questions require a format that
      can represent these complex and varied structures, while providing a unified access
      to data and annotation.
    </para><para>
      We hope that the usage of annotation graphs as pivot structures and the unification
      of tier-based annotation via our subset of graphs will help in the ongoing task
      to unify tier structures and annotation schemes. The
      annotation graphs that our library constructs may be augmented, for example,
      with ISOcat links, added as regular features to already existing feature
      structures. : This way, the mapping between different tier structures and annotation
      schemes remains very general and does not depend on any file format.
      In this sense we see Poio API as one important building block to support cross-corpus
      research projects in the future.
    </para></section><section><title>CLASS web application as gateway to the archive</title><para>
      The CLASS web application implements tools for search and analysis based on
      Poio API, provides easy-to-use web interfaces to facilitate field linguist's
      research and integrates with CLARIN service infrastructure. In order to offer
      a convenient web based workflow it is desirable that the users of the application
      may access resource files for analysis directly from CLARIN data centers and
      other sources.
    </para><para>
      The main target of this effort is currently the DoBeS corpus, a core resource
      maintained by the TLA (The Language Archive) at the MPI (Max-Planck-Institute
      for Psycholinguistics, Nijmegen, NL). Since most of the collections within the
      corpus are protected on a personalized level for privacy and ethical reasons and
      may only be accessed by the corresponding owner or research group, the retrieval
      of data by external services has not been viable in the past.
    </para><para>
      The CLASS web application will introduce a solution to this problem using single
      sign-on technology in a delegated scenario. The implementation will enable users
      to allow the CLASS service to access the data without exposing their credentials
      to the service itself. This behavior has become increasingly popular with social
      networks and cloud services (Google, Dropbox, Twitter, Facebook etc.) and is widely
      accepted by internet users but has had little impact on scientific practice.
    </para><para>
      The infrastructure for Federated Authentication in scientific networks has already
      been established by national and international programs such as CLARIN using the
      Shibboleth/SAML protocol. Maintenance and configuration of delegated scenarios in
      large federations however prove impractical and the underlying profile ECP
      (Enhanced Client or Proxy) is currently not supported by the majority of Identity
      Provides within CLARIN and DFN-AAI (German Authentication and Authorization
      Infrastructure). To reach the goals of this project we are collaborating with
      the TLA in introducing a SAML/OAuth2 bridge, thus combining Federated Authentication
      with the benefits of OAuth2 delegation. The experimental nature of this implementation
      comes with the risk of the first-mover but will largely improve accessibility of
      research data in field linguistics once successfully established.
    </para></section><section><title>Summary and outlook</title><para>
    We have shown how our project maps data from a common XML format in language documentation to a
    unified data structure and its XML representation as defined in ISO 24612. Those annotation
    graphs are a big step forward on the way to unified access to data and annotations from language
    documentation projects. Future projects in language typology and quantitative language comparison
    can make use of this unified access via the easy-to-use programming interface as defined
    in Poio API, without having to handle and parse different file formats. As soon as the data
    was transformed into annotation graphs as defined by GrAF, the individual tiers can be shared
    as GrAF-XML and extended independently without any supervising instance. Our hope is that this
    will foster collaboration in future analysis projects. GrAF-XML can then be used as a common
    interchange format in those projects.
    </para></section><bibliography><title>Bibliography</title><bibliomixed xml:id="banski2009" xreflabel="Banski/Przepiórkowski 2009">
       Banski, Piotr and Przepiórkowski (2009).
      <emphasis role="ital">Stand-off TEI annotation: the case of the national corpus of polish</emphasis>;
      in <quote>Proceedings of the Third Linguistic Annotation Workshop (LAW III)</quote>, pp. 65–67.
    </bibliomixed><bibliomixed xml:id="birdliberman2001" xreflabel="Bird/Liberman 2009">
       Bird, Sptehen and Liberman, Mark (2001).
      <emphasis role="ital">A formal framework for linguistic annotation</emphasis>;
      in <quote>Speech Communication 33</quote>, pp. 23-60. doi:<biblioid class="doi">10.1016/S0167-6393(00)00068-6</biblioid>.
    </bibliomixed><bibliomixed xml:id="caylesssoroka2010" xreflabel="Cayless/Soroka 2010">
      Cayless, Hugh A. and Soroka, Adam (2010).
      <emphasis role="ital">On implementing string-range() for TEI</emphasis>;
      in <quote>Proceedings of Balisage: The Markup Conference 2010</quote>
      [online] [cited 19 April 2013].
      <link xlink:type="simple" xlink:show="new" xlink:actuate="onRequest">http://www.balisage.net/Proceedings/vol5/html/Cayless01/BalisageVol5-Cayless01.html</link>. doi:<biblioid class="doi">10.4242/BalisageVol5.Cayless01</biblioid>.
    </bibliomixed><bibliomixed xml:id="idesuderman2007" xreflabel="Ide/Suderman 2007">
      Ide, Nancy and Suderman, Keith (2007).
      <emphasis role="ital">GrAF: A graph-based format for linguistic annotations</emphasis>;
      in <quote>Proceedings of the Linguistic Annotation Workshop</quote>, pp. 1–8,
      Prague, Czech Republic, June. Association for Computational Linguistics. doi:<biblioid class="doi">10.3115/1642059.1642060</biblioid>.
    </bibliomixed><bibliomixed xml:id="idesuderman2009" xreflabel="Ide/Suderman 2009">
      Ide, Nancy and Suderman, Keith (2009).
      <emphasis role="ital">Bridging the gaps: interoperability for GrAF, GATE, and UIMA</emphasis>;
      in <quote>Proceedings of the Third Linguistic Annotation Workshop</quote>, pp. 27–34,
      Suntec, Singapore, August 6-7. Association for Computational Linguistics. doi:<biblioid class="doi">10.3115/1698381.1698385</biblioid>.
    </bibliomixed></bibliography></article>