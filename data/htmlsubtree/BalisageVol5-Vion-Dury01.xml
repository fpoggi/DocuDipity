<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#StandaloneEncodingofDocumentHistoryANCHOR" name="StandaloneEncodingofDocumentHistoryTOC">Stand-alone Encoding of Document History </a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#OverviewANCHOR" name="OverviewTOC">Overview</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ModellingAbstractDifferencingOperationsANCHOR" name="ModellingAbstractDifferencingOperationsTOC">Modelling Abstract Differencing Operations</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DocumentmodelANCHOR" name="DocumentmodelTOC">Document model</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DiffEngineANCHOR" name="DiffEngineTOC">Diff Engine</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AbstractingoverDeltaOperationsANCHOR" name="AbstractingoverDeltaOperationsTOC">Abstracting over Delta Operations</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ExtensionofbasicvocabularyANCHOR" name="ExtensionofbasicvocabularyTOC">Extension of basic vocabulary</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#InversionofbasicoperationsandsnapshotsANCHOR" name="InversionofbasicoperationsandsnapshotsTOC">Inversion of basic operations and snapshots</a></div>
               </div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#FundamentalOperationsoverEncapsulatedDocumentsANCHOR" name="FundamentalOperationsoverEncapsulatedDocumentsTOC">Fundamental Operations over Encapsulated Documents </a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#CreationofahistoryfromaninitialXMLdocumentANCHOR" name="CreationofahistoryfromaninitialXMLdocumentTOC">Creation of a history from an initial XML document</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#VersioningANCHOR" name="VersioningTOC">Versioning</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ExtractionANCHOR" name="ExtractionTOC">Extraction</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#FocusingANCHOR" name="FocusingTOC">Focusing</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MergingbranchesANCHOR" name="MergingbranchesTOC">Merging branches</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#EncodingGraphsofDeltasinXMLANCHOR" name="EncodingGraphsofDeltasinXMLTOC">Encoding Graphs of Deltas in XML</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#StateoftheArtANCHOR" name="StateoftheArtTOC">State of the Art</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionANCHOR" name="ConclusionTOC">Conclusion</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AcknowledgmentANCHOR" name="AcknowledgmentTOC">Acknowledgment</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ProofofpropositionANCHOR" name="ProofofpropositionTOC">Proof of proposition </a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AnRelaxNGschema(compactsyntax)capturingourmodelANCHOR" name="AnRelaxNGschema(compactsyntax)capturingourmodelTOC">An RelaxNG schema (compact syntax ) capturing our model</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#anISOSchematronschemaANCHOR" name="anISOSchematronschemaTOC">an ISO Schematron schema </a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">A comparative study for XML change detection</div>
         <div class="singletermTERMS">A Formal Investigation of diff3</div>
         <div class="singletermTERMS">A Web-Based Version Editor for XML Documents</div>
         <div class="singletermTERMS">August 3 - 6, 2010</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">body</div>
         <div class="singletermTERMS">bwd</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2010</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">copy</div>
         <div class="singletermTERMS">create-history</div>
         <div class="singletermTERMS">create-version</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">delete(p)</div>
         <div class="singletermTERMS">delete(p')</div>
         <div class="singletermTERMS">document history</div>
         <div class="singletermTERMS">diff</div>
         <div class="singletermTERMS">d’</div>
         <div class="singletermTERMS">delete</div>
         <div class="singletermTERMS">d'</div>
         <div class="singletermTERMS">delta</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">extract</div>
         <div class="singletermTERMS">Efficient Change Control of XML Documents</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">focus</div>
         <div class="singletermTERMS">fwd</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
         <div class="singletermTERMS">get</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">history</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">insert(p,A)</div>
         <div class="singletermTERMS">insert(p',B)</div>
         <div class="singletermTERMS">insert</div>
         <div class="singletermTERMS">invar</div>
         <div class="singletermTERMS">insert-attr</div>
         <div class="singletermTERMS">insert, insert-attr</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
         <div class="singletermTERMS">jean-yves.vion-dury@xeroxlabs.com</div>
         <div class="singletermTERMS">Jean-Yves</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">move</div>
         <div class="singletermTERMS">merge</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">nm</div>
         <div class="singletermTERMS">node()[1]/node()[2]/node()[1]</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">PDF</div>
         <div class="singletermTERMS">pp</div>
         <div class="singletermTERMS">Path based, extensional equivalence over trees</div>
         <div class="singletermTERMS">Proof</div>
         <div class="singletermTERMS">past history</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">replace</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">snapshot</div>
         <div class="singletermTERMS">Saxonica, XSLT and XQuery processing</div>
         <div class="singletermTERMS">Senior Scientist</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">Tree automata techniques and applications</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">version</div>
         <div class="singletermTERMS">v0… v3</div>
         <div class="singletermTERMS">v1.1, v1.2</div>
         <div class="singletermTERMS">v0</div>
         <div class="singletermTERMS">v1</div>
         <div class="singletermTERMS">v2</div>
         <div class="singletermTERMS">Vion-Dury</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">x-body</div>
         <div class="singletermTERMS">XQuery Update Facility 1.0</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="StandaloneEncodingofDocumentHistoryANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2">
      <div class="title e1">Stand-alone Encoding of Document History </div>
      <div class="subtitle e2">(or One Step Beyond XML Diff)</div>
      <div class="info e3">
         <div class="confgroup e4">
            <div class="conftitle e5">Balisage: The Markup Conference 2010</div>
            <div class="confdates e6">August 3 - 6, 2010</div>
         </div>
         <div class="abstract e7">
            <div class="para e8">This paper describes an approach to encapsulate together an XML document and its
               history (i.e. the various significant states it adopted along its life cycle) into
               a
               single standalone XML document. Our proposal introduces an XML data model suited to
               capture versioning information combined with an operational model to handle such
               encapsulated data. We describe basic operators involved along the transformation
               process of the document/history pair, mainly designed around the principle of
               maintaining coherence properties. 
            </div>
         </div>
         <div class="author e9">
            <div class="personname e10">
               <div class="firstname e11">Jean-Yves</div>
               <div class="surname e12">Vion-Dury</div>
            </div>
            <div class="personblurb e13">
               <div class="para e14"> Jean-Yves Vion-Dury holds an CS engineering degree from the "Conservatoire
                  National des Arts et Métiers, Paris" (1993) and graduated with a PhD in CS from
                  Université Joseph Fourier, Grenoble in 1999. He has been working at Xerox
                  Research Centre Europe (in Grenoble, France) since 1995, as a research
                  scientist; he has also been on a two year sabbatical with Vincent Quint's team
                  at INRIA in 2002-2004. His research interests relate to various aspect of XML
                  including models, the impact of standards, validation/transformation languages
                  and architectures, with theoretical background in programming languages,
                  compilation, type systems and formal logics. 
               </div>
               <div class="para e15">Jean-Yves was Program Chair of DocEng (ACM Document Engineering Symposium ) in
                  2004, is member of its Program Committee since 2003, and member of its Steering
                  Committee since 2005. 
               </div>
            </div>
            <div class="affiliation e16">
               <div class="jobtitle e17">Senior Scientist</div>
               <div class="orgname e18">Xerox Research Centre Europe</div>
            </div>
            <div class="email e19">jean-yves.vion-dury@xeroxlabs.com</div>
         </div>
         <div class="legalnotice e20">
            <div class="para e21">Copyright © 2010 Xerox.  All rights reserved.</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e22">
         <div class="title e23">Introduction</div>
         <div class="para e24">XML being recognized today as the lingua franca of computerized information, some
            key
            basic functionalities become of universal interest and will predictably gain momentum
            in
            the upcoming XML related economy.
         </div>
         <div class="para e25">One of these functionalities is the computation of differences between two XML
            documents, and more generally, the management of the history of a given document.
            In
            particular, this functions as a cornerstone of any system aiming at offering long
            term
            preservation.
         </div>
         <div class="para e26">Today, such functionality is achieved through content management systems or databases.
            Models and operations are therefore hidden inside a black box, and up to the author's
            knowledge, no standard mechanism makes this information explicit and accessible to
            human
            users neither to external algorithms and processors.
         </div>
         <div class="para e27">Our proposal addresses this issue by associating a target document instance together
            with its history inside a standalone and consistent document, thus gaining strong
            potential for current or future interoperability.
         </div>
         <div class="para e28">The notion of 
            <div class="emphasis e29" role="ital">history</div>, when applied to a document,
            calls for a deeper understanding of the global context, intents and social processes
            underpinning the creation, evolution and maintenance of documents (see 
            <div class="xref e30" linkend="pédauque03"></div>). Hence, the relevant structure of a meaningful 
            <div class="emphasis e31" role="ital">document history</div> highly depends on the document typology and
            usages.
         </div>
         <div class="para e32">In addition, the criterion that founds any document history is the permanence of some
            key deep invariants (for a general, ontological, reflection around this line, see
            
            <div class="xref e33" linkend="pédauque05"></div>). Those invariants define the identity of the document itself
            and their loss inevitably ends the versioning process and calls for a new creation
            cycle.
         </div>
         <div class="para e34">The method we describe in this paper takes into consideration the key points above,
            especially through a flexible calculus of difference descriptors, and through offering
            high level transformation operations that preserve the consistency of both the document
            instance and its whole history.
         </div>
      </div><a name="OverviewANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e35">
         <div class="title e36">Overview</div>
         <div class="para e37">The target document (also called 
            <div class="emphasis e38" role="ital">body</div> hereafter),
            i.e. any XML document using any namespace, is encapsulated inside a dedicated packaging
            XML document. The body always consistently relates to a given state of its history
            (not
            necessarily the most recent one) thanks to a dedicated attribute that refers to a
            version label and makes this relation explicit. 
         </div>
         <div class="para e39"> The history itself is encoded as interrelated nodes (XML elements) and has the
            structure of a directed acyclic graph (DAG); each node of this graph models a versioning
            point, i.e. a particular significant state that the document reached during its lifetime
            and for which a version has been recorded. The meaning of any versioning point with
            respect to the document life cycle is application dependent, as discussed above, and
            the
            proposed approach abstracts over application semantics, just considering that a new
            version is built when some actor in the document life cycle decided it makes sense
            to do
            so. Arcs that connect the nodes are decorated with deltas, and these arcs model the
            transformation that allows changing the document from one versioning point to the
            other.
            Thus arcs are oriented. Deltas descriptors are combinations of low level operations
            on
            the document tree, mainly based on deletion and insertion of subtrees.
         </div>
         <div class="para e40"> Thanks to a set of transformations qualitatively described in this paper, it is
            possible to navigate inside the history of the document and to consistently extract
            any
            version of the document captured in the history graph. It is also possible to create
            new
            versioning points, new branches or to merge existing branches, all these operations
            producing novel consistent encapsulations of the target document.
         </div>
      </div><a name="ModellingAbstractDifferencingOperationsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e41">
         <div class="title e42">Modelling Abstract Differencing Operations</div><a name="DocumentmodelANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e43">
            <div class="title e44">Document model</div>
            <div class="para e45"> The encapsulating XML document can be represented (in an abstract way) as a tree
               like this: 
            </div>
            <div class="figure e46" xml:id="tree-structure">
               <div class="title e47">Abstract tree structure of the document history</div>
               <div class="para e48">x-version[x-body
                  <div class="subscript e49">v
                     <div class="subscript e50">i</div>
                  </div>[d],x-history[…v
                  <div class="subscript e51">i</div>…]]
               </div>
            </div>
            <div class="para e52">where 
               <div class="emphasis e53" role="ital">d</div> represent the target document and
               
               <div class="emphasis e54" role="ital">v
                  <div class="subscript e55">i</div>
               </div> a versioning point.
               The full syntax of our encapsulation is available through a RelaxNG Schema (see
               appendix). The examples 
               <div class="xref e56" linkend="Ex1"></div>, 
               <div class="xref e57" linkend="Ex2"></div>, 
               <div class="xref e58" linkend="Ex3"></div> and 
               <div class="xref e59" linkend="Ex4"></div> illustrate concretely the way we
               propose to encode the history graph (DAG) in XML, and the way delta operations are
               attached to transition arcs.
            </div>
         </div><a name="DiffEngineANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e60">
            <div class="title e61">Diff Engine</div>
            <div class="para e62">We assume that a diff engine is able to operate as a black box function. Its
               abstract signature could be for instance: 
            </div>
            <div class="figure e63">
               <div class="title e64">Abstracting over diff operation</div>
               <div class="informaltable e65">
                  <div class="tr e66">
                     <div class="td e67">
                        
                        <div class="emphasis e68" role="bold">diff</div>(config, d, d’) 
                     </div>
                     <div class="td e69"> → </div>
                     <div class="td e70"> Δ </div>
                  </div>
               </div>
            </div>
            <div class="para e71">with config being some input information used to configure the processor (e.g.
               filter to apply, mode commutative/non-commutative,…). The notation Δ represents a
               set of basic delta operations, formally described hereafter.
            </div>
         </div><a name="AbstractingoverDeltaOperationsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e72">
            <div class="title e73">Abstracting over Delta Operations</div>
            <div class="figure e74">
               <div class="title e75">Syntax of delta operations</div>
               <div class="informaltable e76">
                  <div class="tr e77">
                     <div class="td e78">Δ</div>
                     <div class="td e79">::= </div>
                     <div class="td e80"> { } </div>
                     <div class="td e81">no operation</div>
                  </div>
                  <div class="tr e82">
                     <div class="td e83">
                        
                     </div>
                     <div class="td e84">
                        
                     </div>
                     <div class="td e85">| { δ
                        <div class="subscript e86">1</div> … δ
                        <div class="subscript e87">i</div> } 
                     </div>
                     <div class="td e88">commutative snapshots</div>
                  </div>
                  <div class="tr e89">
                     <div class="td e90">
                        
                     </div>
                     <div class="td e91">
                        
                     </div>
                     <div class="td e92">| Δ ; Δ </div>
                     <div class="td e93">sequences</div>
                  </div>
                  <div class="tr e94">
                     <div class="td e95">δ</div>
                     <div class="td e96">::= </div>
                     <div class="td e97"> insert (pp, A)</div>
                     <div class="td e98">subtree insertion</div>
                  </div>
                  <div class="tr e99">
                     <div class="td e100">
                        
                     </div>
                     <div class="td e101">
                        
                     </div>
                     <div class="td e102">| insert-attr(pp/@nm, A)</div>
                     <div class="td e103">attribute insertion</div>
                  </div>
                  <div class="tr e104">
                     <div class="td e105">
                        
                     </div>
                     <div class="td e106">
                        
                     </div>
                     <div class="td e107">| delete(p)</div>
                     <div class="td e108">subtree deletion</div>
                  </div>
               </div>
            </div>
            <div class="para e109">The delta operation use paths, noted 
               <div class="emphasis e110" role="ital">p</div>, to
               designate the tree location where the modification should be applied. Those paths
               are describe by the following grammar (
               <div class="emphasis e111" role="ital">i</div> is a
               positive integer, 
               <div class="emphasis e112" role="ital">nm</div> an attribute name, 
               <div class="emphasis e113" role="ital">pp</div> denotes "pure paths"):
            </div>
            <div class="figure e114">
               <div class="title e115">Syntax of path description</div>
               <div class="informaltable e116">
                  <div class="tr e117">
                     <div class="td e118">p </div>
                     <div class="td e119">::=</div>
                     <div class="td e120">pp | pp/@nm</div>
                  </div>
                  <div class="tr e121">
                     <div class="td e122">pp </div>
                     <div class="td e123">::=</div>
                     <div class="td e124">i/pp | i</div>
                  </div>
               </div>
            </div>
            <div class="para e125">These paths are interpreted as relative to the root of the encapsulated document,
               and can be easily translated as XPath expressions. For example, 1/2/1 is translated
               into *[1]/*[2]/*[1], and 1/3/@id into *[1]/*[3]/@id 
               <div class="popupBox e126">
                  <div class="popupLabel" onmouseover="$('#d1e237').show('1000');" onmouseout="$('#d1e237').hide('1000');">[ footnote ]</div>
                  <div id="d1e237" style="display: none;">
                     <div class="footnote">
                        <div class="para e127">the XPath translation of 
                           <div class="emphasis e128" role="ital">1/2/1</div> could also
                           be 
                           <div class="emphasis e129" role="ital">node()[1]/node()[2]/node()[1]</div> in order
                           to consider all possible nodes as allowed by the XML document tree
                           model.
                        </div>
                     </div>
                  </div>
               </div>. 
            </div>
            <div class="para e130">Each delta belonging to a snapshot must comply with a structural constraint that
               ensures orthogonality (thus making the snapshot indeed commutative). In particular,
               it is enough to verify that two paths in a snapshot do not designate sibling trees,
               and one path does not designate a sibling tree of the parent node designated by the
               other path. We assume that this constraint is part of the well-formedness condition
               assured for all definitions 
               <div class="popupBox e131">
                  <div class="popupLabel" onmouseover="$('#d1e249').show('1000');" onmouseout="$('#d1e249').hide('1000');">[ footnote ]</div>
                  <div id="d1e249" style="display: none;">
                     <div class="footnote" xml:id="refined-calculus">
                        <div class="para e132">Actually the calculus can be refined in such a way that this condition can
                           be relaxed thanks to a particular rewriting of conflicting deltas. This
                           suppose a particular semantic interpretation of conflicting
                           information.
                        </div>
                     </div>
                  </div>
               </div>.
            </div>
            <div class="para e133">The semantics of delta operations expresses changes that occur on the operand (an
               XML tree) ; we note this transformation of 
               <div class="emphasis e134" role="ital">d</div> into
               
               <div class="emphasis e135" role="ital">d’</div> by applying 
               <div class="emphasis e136" role="ital">Δ</div> as follows: 
            </div>
            <div class="figure e137">
               <div class="title e138">Transformation by Delta application</div>
               <div class="informaltable e139">
                  <div class="tr e140">
                     <div class="td e141" align="center">
                        
                     </div>
                     <div class="td e142">d › Δ › d’</div>
                  </div>
               </div>
            </div>
            <div class="para e143">More precisely, the previous notation is a logical assertion saying that a
               well-formed document 
               <div class="emphasis e144" role="ital">d</div> is changed into a
               well-formed document 
               <div class="emphasis e145" role="ital">d’</div> after application of the
               well-formed 
               <div class="emphasis e146" role="ital">Δ</div> operation.
            </div>
            <div class="para e147">Formally, for all subtree 
               <div class="emphasis e148" role="ital">A</div>, path 
               <div class="emphasis e149" role="ital">p</div>, documents 
               <div class="emphasis e150" role="ital">d</div> and
               
               <div class="emphasis e151" role="ital">d’</div>, deltas 
               <div class="emphasis e152" role="ital">Δ
                  <div class="subscript e153">i</div>
               </div> and 
               <div class="emphasis e154" role="ital">δ
                  <div class="subscript e155">i</div>
               </div>, the transformations verify the following
               abstract properties: 
            </div>
            <div class="figure e156" xml:id="abs-property">
               <div class="title e157">Abstract properties of delta transformations</div>
               <div class="informaltable e158">
                  <div class="tr e159">
                     <div class="td e160">(a-seq) </div>
                     <div class="td e161"> d › Δ
                        <div class="subscript e162">1</div>;Δ
                        <div class="subscript e163">2</div> › d’
                     </div>
                     <div class="td e164"> ⇔ </div>
                     <div class="td e165"> ∃ d’’ , d › Δ
                        <div class="subscript e166">1</div> › d’’ ⋀ d’’›
                        Δ
                        <div class="subscript e167">2</div> › d’ 
                     </div>
                     <div class="td e168">
                        
                     </div>
                  </div>
                  <div class="tr e169">
                     <div class="td e170">(a-snap) </div>
                     <div class="td e171"> d › { δ
                        <div class="subscript e172">1</div> ... δ
                        <div class="subscript e173">i</div>} › d’
                     </div>
                     <div class="td e174"> ⇔ </div>
                     <div class="td e175"> d › {δ
                        <div class="subscript e176">π
                           <div class="subscript e177">1</div>
                        </div>} ; {
                        δ
                        <div class="subscript e178">π
                           <div class="subscript e179">i</div>
                        </div>} › d’
                     </div>
                     <div class="td e180">for any permutation π defined over the sequence of indexes [1,…,i]</div>
                  </div>
                  <div class="tr e181">
                     <div class="td e182">(a-void) </div>
                     <div class="td e183"> d › { } › d’</div>
                     <div class="td e184"> ⇔ </div>
                     <div class="td e185"> d ≈ d’</div>
                     <div class="td e186">
                        
                     </div>
                  </div>
                  <div class="tr e187">
                     <div class="td e188">(a-ins) </div>
                     <div class="td e189"> d › { 
                        <div class="emphasis e190" role="bold">insert</div>(pp,A)} › d’
                     </div>
                     <div class="td e191"> ⇒ </div>
                     <div class="td e192">
                        
                        <div class="emphasis e193" role="bold">get</div>(d',pp)≈A ⋀ 
                        <div class="emphasis e194" role="bold">invar</div>(d,d',pp,f)
                     </div>
                     <div class="td e195"> with f = ζ(pp)</div>
                  </div>
                  <div class="tr e196">
                     <div class="td e197">(a-ins-@) </div>
                     <div class="td e198"> d › { 
                        <div class="emphasis e199" role="bold">insert-attr</div>(pp/@nm,A)} › d’
                     </div>
                     <div class="td e200"> ⇒ </div>
                     <div class="td e201">
                        
                        <div class="emphasis e202" role="bold">get</div>(d',pp/@nm) = A ⋀ 
                        <div class="emphasis e203" role="bold">invar</div>(d,d',pp/@nm)
                     </div>
                     <div class="td e204">
                        
                     </div>
                  </div>
                  <div class="tr e205">
                     <div class="td e206">(a-del) </div>
                     <div class="td e207"> d › { 
                        <div class="emphasis e208" role="bold">delete</div>(pp)} › d’
                     </div>
                     <div class="td e209"> ⇒ </div>
                     <div class="td e210">
                        
                        <div class="emphasis e211" role="bold">get</div>(d',pp)≈
                        <div class="emphasis e212" role="bold">get</div>(d,pp ⊕ f) ⋀ 
                        <div class="emphasis e213" role="bold">invar</div>(d,d',pp,-f)
                     </div>
                     <div class="td e214"> with f = ζ(pp)</div>
                  </div>
                  <div class="tr e215">
                     <div class="td e216">(a-del-@) </div>
                     <div class="td e217"> d › { 
                        <div class="emphasis e218" role="bold">delete</div>(pp/@nm)} › d’
                     </div>
                     <div class="td e219"> ⇒ </div>
                     <div class="td e220">
                        
                        <div class="emphasis e221" role="bold">get</div>(d',pp/@nm) = ε
                     </div>
                     <div class="td e222">
                        
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e223">Note that the definition of 
               <div class="emphasis e224" role="bold">insert</div> operator makes
               use of the function 
               <div class="emphasis e225" role="bold">get</div>, which extracts the subtree
               rooted at a given location 
               <div class="emphasis e226" role="ital">p</div>, as well as a path
               addition function ⊕ and a so called fingerprint extraction ζ . The invar operator
               deals with locality of the transformation (see Invariance Property Fig 
               <div class="xref e227" linkend="invariance-prop"></div> and associated explanations). Moreover, ≈ (the
               equivalence of trees) is defined extensionally using quantification of paths, and
               is
               insensitive to attribute order, according to path definition.
            </div>
            <div class="figure e228" xml:id="definition-tree-equivalence">
               <div class="title e229">Tree equivalence</div>
               <div class="informaltable e230">
                  <div class="tr e231">
                     <div class="td e232">d ≈ d’ </div>
                     <div class="td e233"> ⇔ </div>
                     <div class="td e234"> ∀ p, 
                        <div class="emphasis e235" role="bold">get</div>(d,p) = 
                        <div class="emphasis e236" role="bold">get</div>(d’,p)
                     </div>
                  </div>
               </div>
               <div class="para e237">
                  <div class="emphasis e238" role="ital">Path based, extensional equivalence over
                     trees
                  </div>
               </div>
            </div>
            <div class="para e239">The path addition is defined over pure paths (paths designating element nodes
               only, noted 
               <div class="emphasis e240" role="ital">pp</div>), can deal with operands of various
               depth and is commutative: 
            </div>
            <div class="para e241">
               
               <div class="figure e242">
                  <div class="title e243">Path addition</div>
                  <div class="informaltable e244">
                     <div class="tr e245">
                        <div class="td e246">i/pp </div>
                        <div class="td e247"> ⊕ </div>
                        <div class="td e248">j/pp’ </div>
                        <div class="td e249">=</div>
                        <div class="td e250"> (i + j)/(pp ⊕ pp’)</div>
                     </div>
                     <div class="tr e251">
                        <div class="td e252">i/pp </div>
                        <div class="td e253"> ⊕ </div>
                        <div class="td e254"> j</div>
                        <div class="td e255">=</div>
                        <div class="td e256"> (i + j)/pp</div>
                     </div>
                     <div class="tr e257">
                        <div class="td e258">i </div>
                        <div class="td e259"> ⊕ </div>
                        <div class="td e260"> j</div>
                        <div class="td e261">=</div>
                        <div class="td e262"> (i + j)</div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e263">Also fingerprints capture some structural information, and more precisely, the
               depth level of a path:
            </div>
            <div class="figure e264">
               <div class="title e265">Fingerprint computation</div>
               <div class="informaltable e266">
                  <div class="tr e267">
                     <div class="td e268">ζ(i/pp)</div>
                     <div class="td e269"> = </div>
                     <div class="td e270">0/ζ(pp)</div>
                  </div>
                  <div class="tr e271">
                     <div class="td e272">ζ(i)</div>
                     <div class="td e273"> = </div>
                     <div class="td e274">1</div>
                  </div>
               </div>
            </div>
            <div class="para e275">Thus ζ (1/2/3) = 0/0/1 and 1/2/3 ⊕ ζ(1/2/3) = 1/2/4 and 1/2/3/2 ⊕ ζ(1/2/3) =
               1/2/4/2
            </div>
            <div class="para e276">The property 
               <div class="emphasis e277" role="ital">(a-snap)</div> holds for all permutations
               over indexes. It simply means that the set of deltas must be commutative with
               respect to their sequential application. In other words, all basic deltas of a
               snapshot are pairwise orthogonal.
            </div>
            <div class="para e278">The property 
               <div class="emphasis e279" role="ital">(a-del)</div> involves a minus operator
               over paths. This one is easily defined as inverting all integers found in the path.
            </div>
            <div class="figure e280">
               <div class="title e281">Path inversion</div>
               <div class="informaltable e282">
                  <div class="tr e283">
                     <div class="td e284">-(i/pp)</div>
                     <div class="td e285"> = </div>
                     <div class="td e286">(-i)/-(pp)</div>
                  </div>
                  <div class="tr e287">
                     <div class="td e288">-(i)</div>
                     <div class="td e289"> = </div>
                     <div class="td e290">-i</div>
                  </div>
               </div>
            </div>
            <div class="para e291">The 
               <div class="emphasis e292" role="bold">invar</div> property used in (a-ins), (a-ins-@) and
               (a-del) expresses that other parts of the tree are not modified by the operation.
               This is defined as follows:
            </div>
            <div class="figure e293" xml:id="invariance-prop">
               <div class="title e294">Invariance property</div>
               <div class="informaltable e295">
                  <div class="tr e296">
                     <div class="td e297">
                        <div class="emphasis e298" role="bold">invar</div>(d, d’, pp/@nm)
                     </div>
                     <div class="td e299"> ≡ </div>
                     <div class="td e300">∀ nm' [ 
                        <div class="emphasis e301" role="bold">get</div>(d, pp/@nm’) = 
                        <div class="emphasis e302" role="bold">get</div>(d’, pp/@nm’) ]
                     </div>
                  </div>
                  <div class="tr e303">
                     <div class="td e304">
                        <div class="emphasis e305" role="bold">invar</div>(d, d’, pp, f)
                     </div>
                     <div class="td e306"> ≡ </div>
                     <div class="td e307">∀ p' [ 
                        <div class="para e308">
                           
                           <div class="informaltable e309">
                              <div class="tr e310">
                                 <div class="td e311">p' ≪ pp </div>
                                 <div class="td e312"> ⇒ </div>
                                 <div class="td e313">
                                    <div class="emphasis e314" role="bold">get</div>(d, p’) =
                                    <div class="emphasis e315" role="bold"> get</div>(d’,p’)
                                 </div>
                              </div>
                              <div class="tr e316">
                                 <div class="td e317">⋀</div>
                                 <div class="td e318">
                                    
                                 </div>
                                 <div class="td e319">
                                    
                                 </div>
                              </div>
                              <div class="tr e320">
                                 <div class="td e321"> pp ≪ p'</div>
                                 <div class="td e322"> ⇒</div>
                                 <div class="td e323">
                                    <div class="emphasis e324" role="bold">get</div>(d, p’) = 
                                    <div class="emphasis e325" role="bold">get</div>(d’,p’ ⊕ f) 
                                 </div>
                              </div>
                           </div>
                           
                        </div> ] 
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e326"> The relation ≪ is a strict total order over (pure) paths, which is sound with
               respect to the standard total order over document nodes as defined by the XML
               document model.
            </div>
            <div class="figure e327">
               <div class="title e328">Strict total order on paths</div>
               <div class="para e329"> for all i, j integers, pp, pp' pure paths, </div>
               <div class="table e330" rules="rows">
                  <div class="tr e331">
                     <div class="th e332">
                        
                     </div>
                     <div class="th e333">
                        
                     </div>
                     <div class="th e334">
                        
                     </div>
                     <div class="th e335">
                        
                     </div>
                     <div class="th e336" align="center"> i &lt; j </div>
                     <div class="th e337" align="center"> i = j </div>
                     <div class="th e338" align="center"> i &gt; j </div>
                  </div>
                  <div class="tr e339">
                     <div class="td e340" align="right"> i/pp</div>
                     <div class="td e341" align="center">≪</div>
                     <div class="td e342" align="left"> j/pp'</div>
                     <div class="td e343">
                        
                     </div>
                     <div class="td e344" align="center"> true </div>
                     <div class="td e345" align="center"> pp ≪ pp' </div>
                     <div class="td e346" align="center"> false </div>
                  </div>
                  <div class="tr e347">
                     <div class="td e348" align="right"> i</div>
                     <div class="td e349" align="center">≪</div>
                     <div class="td e350" align="left"> j/pp'</div>
                     <div class="td e351">
                        
                     </div>
                     <div class="td e352" align="center"> true </div>
                     <div class="td e353" align="center"> false </div>
                     <div class="td e354" align="center"> false </div>
                  </div>
                  <div class="tr e355">
                     <div class="td e356" align="right"> i/pp</div>
                     <div class="td e357" align="center">≪</div>
                     <div class="td e358" align="left"> j</div>
                     <div class="td e359">
                        
                     </div>
                     <div class="td e360" align="center"> true </div>
                     <div class="td e361" align="center"> false </div>
                     <div class="td e362" align="center"> false </div>
                  </div>
                  <div class="tr e363">
                     <div class="td e364" align="right"> i</div>
                     <div class="td e365" align="center">≪</div>
                     <div class="td e366" align="left"> j</div>
                     <div class="td e367">
                        
                     </div>
                     <div class="td e368" align="center"> true </div>
                     <div class="td e369" align="center"> false </div>
                     <div class="td e370" align="center"> false </div>
                  </div>
               </div>
            </div>
            <div class="para e371">The intuitive notion of path prefix relation captures the idea of tree embedding</div>
            <div class="figure e372">
               <div class="title e373">Path prefix relation</div>
               <div class="informaltable e374">
                  <div class="tr e375">
                     <div class="td e376">pp
                        <div class="subscript e377">1</div> ≺ pp
                        <div class="subscript e378">2</div>
                     </div>
                     <div class="td e379"> iff </div>
                     <div class="td e380"> ∃ pp | pp
                        <div class="subscript e381">1</div> = pp
                        <div class="subscript e382">2</div>/pp
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e383">We now define the notion of path orthogonality as a binary boolean operator that
               captures the notion that a path is not a subpath of another (or equivalently, a
               subtree is not included into another subtree)
            </div>
            <div class="figure e384">
               <div class="title e385">Path orthogonality</div>
               <div class="informaltable e386">
                  <div class="tr e387">
                     <div class="td e388"> pp
                        <div class="subscript e389">1</div> ⊥ pp
                        <div class="subscript e390">2</div>
                        
                     </div>
                     <div class="td e391"> iff </div>
                     <div class="td e392"> not [ pp
                        <div class="subscript e393">1</div> ≺ pp
                        <div class="subscript e394">2</div> ⋁
                        pp
                        <div class="subscript e395">2</div> ≺ pp
                        <div class="subscript e396">1</div>] 
                     </div>
                  </div>
               </div>
            </div><a name="ExtensionofbasicvocabularyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e397">
               <div class="title e398">Extension of basic vocabulary</div>
               <div class="para e399">In order to ease understanding and increase the generality of descriptions, we
                  propose now to extend the vocabulary through definitions based on the
                  fundamental operations described above: 
                  <div class="emphasis e400" role="bold">move</div>,
                  
                  <div class="emphasis e401" role="bold">copy</div> and 
                  <div class="emphasis e402" role="bold">replace</div>
                  
                  <div class="popupBox e403">
                     <div class="popupLabel" onmouseover="$('#d1e805').show('1000');" onmouseout="$('#d1e805').hide('1000');">[ footnote ]</div>
                     <div id="d1e805" style="display: none;">
                        <div class="footnote">
                           <div class="para e404">These operations are known to be non-trivial to compute by a diff
                              engine, can be non optimal, and are actually rarely produced for this
                              reason. However, other sources of delta computation such as smart
                              versioning oriented editors can produce very useful move and copy delta
                              operations.
                           </div>
                        </div>
                     </div>
                  </div>. 
               </div>
               <div class="figure e405">
                  <div class="title e406">Definition of Additional Operators</div>
                  <div class="informaltable e407">
                     <div class="tr e408">
                        <div class="td e409">pp
                           <div class="subscript e410">2</div> ≪ pp
                           <div class="subscript e411">1</div>
                        </div>
                        <div class="td e412"> ⇒ </div>
                        <div class="td e413">d › { 
                           <div class="emphasis e414" role="bold">move</div>(pp
                           <div class="subscript e415">1</div>,
                           pp
                           <div class="subscript e416">2</div>) } › d’ 
                        </div>
                        <div class="td e417"> ⇔ </div>
                        <div class="td e418">d › { 
                           <div class="emphasis e419" role="bold">insert
                              
                           </div>(pp
                           <div class="subscript e420">2</div>,
                           <div class="emphasis e421" role="bold">get</div>(d, pp
                           <div class="subscript e422">1</div>))};{
                           <div class="emphasis e423" role="bold">delete</div>(pp
                           <div class="subscript e424">1</div> ⊕
                           ζ(pp
                           <div class="subscript e425">2</div>)) } › d’
                        </div>
                     </div>
                     <div class="tr e426">
                        <div class="td e427">pp
                           <div class="subscript e428">1</div> ≪ pp
                           <div class="subscript e429">2</div>
                        </div>
                        <div class="td e430"> ⇒ </div>
                        <div class="td e431">d › { 
                           <div class="emphasis e432" role="bold">move</div>(pp
                           <div class="subscript e433">1</div>,
                           pp
                           <div class="subscript e434">2</div>) } › d’ 
                        </div>
                        <div class="td e435"> ⇔ </div>
                        <div class="td e436">d › { 
                           <div class="emphasis e437" role="bold">insert
                              
                           </div>(pp
                           <div class="subscript e438">2</div>,
                           <div class="emphasis e439" role="bold">get</div>(d, pp
                           <div class="subscript e440">1</div>))};{
                           <div class="emphasis e441" role="bold">delete</div>(pp
                           <div class="subscript e442">1</div>) } ›
                           d’
                        </div>
                     </div>
                     <div class="tr e443">
                        <div class="td e444">pp
                           <div class="subscript e445">1</div> ⊥ pp
                           <div class="subscript e446">2</div>
                        </div>
                        <div class="td e447"> ⇒ </div>
                        <div class="td e448">d › { 
                           <div class="emphasis e449" role="bold">copy</div>(pp
                           <div class="subscript e450">1</div>,
                           pp
                           <div class="subscript e451">2</div>) } › d’ 
                        </div>
                        <div class="td e452"> ⇔ </div>
                        <div class="td e453">d › { 
                           <div class="emphasis e454" role="bold">insert
                              
                           </div>(pp
                           <div class="subscript e455">2</div>,
                           <div class="emphasis e456" role="bold">get</div>(d, pp
                           <div class="subscript e457">1</div>)) } › d’
                        </div>
                     </div>
                     <div class="tr e458">
                        <div class="td e459">
                           
                        </div>
                        <div class="td e460">
                           
                        </div>
                        <div class="td e461">d › { 
                           <div class="emphasis e462" role="bold">replace</div>(pp,A) } › d’ 
                        </div>
                        <div class="td e463"> ⇔ </div>
                        <div class="td e464">d › { 
                           <div class="emphasis e465" role="bold">insert </div>(pp,A)};{
                           <div class="emphasis e466" role="bold">delete</div>(pp ⊕ ζ(pp)) } › d’
                        </div>
                     </div>
                     <div class="tr e467">
                        <div class="td e468">
                           
                        </div>
                        <div class="td e469">
                           
                        </div>
                        <div class="td e470">d › { 
                           <div class="emphasis e471" role="bold">replace</div>(pp/@nm,A) } › d’ 
                        </div>
                        <div class="td e472"> ⇔ </div>
                        <div class="td e473">d › {
                           <div class="emphasis e474" role="bold">delete</div>(pp/@nm) }; { 
                           <div class="emphasis e475" role="bold">insert-attr</div>(pp/@nm,A)} › d’
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e476">Note that move and copy operations are only defined for orthogonal paths
                  <div class="popupBox e477">
                     <div class="popupLabel" onmouseover="$('#d1e983').show('1000');" onmouseout="$('#d1e983').hide('1000');">[ footnote ]</div>
                     <div id="d1e983" style="display: none;">
                        <div class="footnote">
                           <div class="para e478"> A theorem establishes that pp
                              <div class="subscript e479">1</div> ⊥
                              pp
                              <div class="subscript e480">2</div> ⇔ pp
                              <div class="subscript e481">1</div>≪
                              pp
                              <div class="subscript e482">2</div> ⋁ pp
                              <div class="subscript e483">2</div> ≪
                              pp
                              <div class="subscript e484">1</div>
                              
                           </div>
                        </div>
                     </div>
                  </div>.
               </div>
            </div><a name="InversionofbasicoperationsandsnapshotsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e485">
               <div class="title e486">Inversion of basic operations and snapshots</div>
               <div class="para e487">Inverting a delta (i.e. computing the changes that will exactly bring the
                  operand in the previous state) requires knowing the original operand on which
                  changes will be applied.
               </div>
               <div class="para e488">The inversion function is inductively defined as follows:</div>
               <div class="figure e489">
                  <div class="title e490">Inversion Function ∘</div>
                  <div class="informaltable e491">
                     <div class="tr e492">
                        <div class="td e493">
                           
                        </div>
                        <div class="td e494">
                           
                        </div>
                        <div class="td e495" align="right">
                           
                           <div class="emphasis e496" role="bold">∘</div>{ } 
                        </div>
                        <div class="td e497"> = </div>
                        <div class="td e498"> { } </div>
                     </div>
                     <div class="tr e499">
                        <div class="td e500"> d › {δ
                           <div class="subscript e501">1</div> ... δ
                           <div class="subscript e502">i</div>} › d’
                        </div>
                        <div class="td e503"> ⇒ </div>
                        <div class="td e504" align="right">
                           
                           <div class="emphasis e505" role="bold">∘</div>{δ
                           <div class="subscript e506">1</div> ...
                           δ
                           <div class="subscript e507">i</div>} 
                        </div>
                        <div class="td e508"> = </div>
                        <div class="td e509"> {
                           <div class="emphasis e510" role="bold">∘</div>δ
                           <div class="subscript e511">1</div> ...
                           
                           <div class="emphasis e512" role="bold">∘</div>δ
                           <div class="subscript e513">i</div>}
                           
                        </div>
                     </div>
                     <div class="tr e514">
                        <div class="td e515"> d › Δ
                           <div class="subscript e516">1</div>;Δ
                           <div class="subscript e517">2</div> › d’
                        </div>
                        <div class="td e518"> ⇒ </div>
                        <div class="td e519" align="right">
                           
                           <div class="emphasis e520" role="bold">∘</div>(Δ
                           <div class="subscript e521">1</div>;Δ
                           <div class="subscript e522">2</div>) 
                        </div>
                        <div class="td e523"> = </div>
                        <div class="td e524">
                           
                           <div class="emphasis e525" role="bold">∘</div>(Δ
                           <div class="subscript e526">2</div>);
                           <div class="emphasis e527" role="bold">∘</div>(Δ
                           <div class="subscript e528">1</div>) 
                        </div>
                     </div>
                     <div class="tr e529">
                        <div class="td e530"> d › {
                           <div class="emphasis e531" role="bold">delete</div>(pp)} › d’
                        </div>
                        <div class="td e532"> ⇒ </div>
                        <div class="td e533" align="right">
                           
                           <div class="emphasis e534" role="bold">∘</div>(
                           <div class="emphasis e535" role="bold">delete</div>(pp)) 
                        </div>
                        <div class="td e536"> = </div>
                        <div class="td e537">
                           
                           <div class="emphasis e538" role="bold">insert</div>(pp,
                           <div class="emphasis e539" role="bold">get</div>(d,pp)) 
                        </div>
                     </div>
                     <div class="tr e540">
                        <div class="td e541"> d › {
                           <div class="emphasis e542" role="bold">delete</div>(pp/@nm)} › d’
                        </div>
                        <div class="td e543"> ⇒ </div>
                        <div class="td e544" align="right">
                           
                           <div class="emphasis e545" role="bold">∘</div>(
                           <div class="emphasis e546" role="bold">delete</div>(pp/@nm)) 
                        </div>
                        <div class="td e547"> = </div>
                        <div class="td e548">
                           
                           <div class="emphasis e549" role="bold">insert-attr</div>(pp/@nm,
                           <div class="emphasis e550" role="bold">get</div>(d,pp/@nm)) 
                        </div>
                     </div>
                     <div class="tr e551">
                        <div class="td e552"> d › {
                           <div class="emphasis e553" role="bold">insert</div>(pp,A)} › d’
                        </div>
                        <div class="td e554"> ⇒ </div>
                        <div class="td e555" align="right">
                           
                           <div class="emphasis e556" role="bold">∘</div>(
                           <div class="emphasis e557" role="bold">insert</div>(pp,A)) 
                        </div>
                        <div class="td e558"> = </div>
                        <div class="td e559">
                           
                           <div class="emphasis e560" role="bold">delete</div>(pp) 
                        </div>
                     </div>
                     <div class="tr e561">
                        <div class="td e562"> d › {
                           <div class="emphasis e563" role="bold">insert-attr</div>(pp/@nm,A)} › d’
                        </div>
                        <div class="td e564"> ⇒ </div>
                        <div class="td e565" align="right">
                           
                           <div class="emphasis e566" role="bold">∘</div>(
                           <div class="emphasis e567" role="bold">insert-attr</div>(pp/@nm,A)) 
                        </div>
                        <div class="td e568"> = </div>
                        <div class="td e569">
                           
                           <div class="emphasis e570" role="bold">delete</div>(pp/@nm) 
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e571">Delta inversion is characterized by the following soundness property:</div>
               <div class="figure e572" xml:id="proposition-1">
                  <div class="title e573">Proposition 1</div>
                  <div class="informaltable e574">
                     <div class="tr e575">
                        <div class="td e576">d › Δ › d’ </div>
                        <div class="td e577"> ⇒ </div>
                        <div class="td e578"> d’ › 
                           <div class="emphasis e579" role="bold">∘</div>Δ › d
                        </div>
                     </div>
                  </div>
                  <div class="para e580">
                     <div class="emphasis e581" role="ital">Inversion of well-formed delta operations over
                        well-formed documents produces a well-formed reverse tree
                        transformations
                     </div>
                  </div>
               </div>
               <div class="para e582">
                  
                  <div class="emphasis e583" role="ital">Proof</div> : See appendix 
                  <div class="xref e584" linkend="proof-proposition-1"></div>
                  
               </div>
               <div class="para e585">The inversion of deltas is an important functionality which allows navigating
                  in the history graph. Moreover, it provides a more compact representation of
                  changes, especially when successive versions represent documents whose content
                  tends to increase incrementally (corresponds to the construction phase inside a
                  standard document life-cycle).
               </div>
               <div class="para e586">Indeed, in such cases, subgraphs of the form 
                  <div class="popupBox e587">
                     <div class="popupLabel" onmouseover="$('#d1e1235').show('1000');" onmouseout="$('#d1e1235').hide('1000');">[ footnote ]</div>
                     <div id="d1e1235" style="display: none;">
                        <div class="footnote" xml:id="note-2">
                           <div class="para e588">focus node v
                              <div class="subscript e589">k</div> is by convention identified
                              through surrounding brackets [.]
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="informaltable e590">
                  <div class="tr e591">
                     <div class="td e592">v
                        <div class="subscript e593">i</div>
                     </div>
                     <div class="td e594">→
                        <div class="superscript e595">insert(p,A)</div>
                     </div>
                     <div class="td e596">v
                        <div class="subscript e597">j</div>
                     </div>
                     <div class="td e598">→
                        <div class="superscript e599">insert(p',B)</div>
                     </div>
                     <div class="td e600">[
                        <div class="emphasis e601" role="bold">v
                           <div class="subscript e602">k</div>
                        </div>]
                     </div>
                  </div>
               </div>
               <div class="para e603">can be rewritten using delta inversion as:</div>
               <div class="informaltable e604">
                  <div class="tr e605">
                     <div class="td e606">v
                        <div class="subscript e607">i</div>
                     </div>
                     <div class="td e608">←
                        <div class="superscript e609">delete(p)</div>
                     </div>
                     <div class="td e610">v
                        <div class="subscript e611">j</div>
                     </div>
                     <div class="td e612">←
                        <div class="superscript e613">delete(p')</div>
                     </div>
                     <div class="td e614">[
                        <div class="emphasis e615" role="bold">v
                           <div class="subscript e616">k</div>
                        </div>]
                     </div>
                  </div>
               </div>
               <div class="para e617">This transformation is beneficial because the subtrees A and B are redundantly
                  stored: once inside the history and once inside the encapsulated instance
                  itself. In case the focus is set to a non-terminal versioning point (e.g.
                  v
                  <div class="subscript e618">j</div> ), we also may have
               </div>
               <div class="informaltable e619">
                  <div class="tr e620">
                     <div class="td e621">v
                        <div class="subscript e622">i</div>
                     </div>
                     <div class="td e623">←
                        <div class="superscript e624">delete(p)</div>
                     </div>
                     <div class="td e625">[
                        <div class="emphasis e626" role="bold">v
                           <div class="subscript e627">j</div>
                        </div>]
                     </div>
                     <div class="td e628">→
                        <div class="superscript e629">insert(p',B)</div>
                     </div>
                     <div class="td e630">v
                        <div class="subscript e631">k</div>
                     </div>
                  </div>
               </div>
               <div class="para e632">which is still quite meaningful as the subtree B is only stored once inside
                  the delta transition (indeed, the encapsulated document, consistent with focused
                  version v
                  <div class="subscript e633">j</div>, does not comprise the B subtree (see examples
                  3 et 4 below to grasp more concretely the point).
               </div>
               <div class="para e634">Note that inverting the operands of a diff operation should also lead to
                  reversed deltas 
                  <div class="popupBox e635">
                     <div class="popupLabel" onmouseover="$('#d1e1331').show('1000');" onmouseout="$('#d1e1331').hide('1000');">[ footnote ]</div>
                     <div id="d1e1331" style="display: none;">
                        <div class="footnote" xml:id="note-3">
                           <div class="para e636">Such an abstract property could be hardly met by a "black box" diff
                              operator, from the implementation point of view. However, we investigate
                              if a delta normalization procedure could reduce those cases, so that the
                              abstract property of 
                              <div class="xref e637" linkend="strong-soundness"></div> would be always
                              verified. 
                           </div>
                        </div>
                     </div>
                  </div>:
               </div>
               <div class="figure e638" xml:id="strong-soundness">
                  <div class="title e639">Strong soundness of delta inversion</div>
                  <div class="informaltable e640">
                     <div class="tr e641">
                        <div class="td e642">
                           <div class="emphasis e643" role="bold">diff</div>(c, d, d’)=Δ 
                        </div>
                        <div class="td e644"> ⇒ </div>
                        <div class="td e645">
                           
                           <div class="emphasis e646" role="bold">diff</div>(c, d’, d) = 
                           <div class="emphasis e647" role="bold">∘</div>(Δ)
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e648">A weaker version of this property (see 
                  <div class="xref e649" linkend="weak-soundness"></div> below)
                  requires defining an equivalence relation over deltas. This relation is based on
                  the effect of delta application rather than its syntactic structure.
               </div>
               <div class="figure e650" xml:id="weak-soundness">
                  <div class="title e651">Weak soundness of delta inversion</div>
                  <div class="informaltable e652">
                     <div class="tr e653">
                        <div class="td e654">
                           <div class="emphasis e655" role="bold">diff</div>(c, d, d’)=Δ 
                        </div>
                        <div class="td e656"> ⇒ </div>
                        <div class="td e657">
                           
                           <div class="emphasis e658" role="bold">diff</div>(c, d’, d) ≈ 
                           <div class="emphasis e659" role="bold">∘</div>(Δ)
                        </div>
                     </div>
                  </div>
               </div>
               <div class="figure e660" xml:id="delta-equivalence">
                  <div class="title e661">Equivalence of deltas </div>
                  <div class="informaltable e662">
                     <div class="tr e663" valign="middle">
                        <div class="td e664" valign="middle">Δ ≈ Δ' </div>
                        <div class="td e665" valign="middle"> ⇔ </div>
                        <div class="td e666" valign="middle">
                           
                           <div class="para e667">
                              
                              <div class="informaltable e668" frame="lhs">
                                 <div class="tr e669">
                                    <div class="td e670">∀ d, d', d'' </div>
                                    <div class="td e671">
                                       
                                    </div>
                                    <div class="td e672">
                                       
                                    </div>
                                 </div>
                                 <div class="tr e673">
                                    <div class="td e674">d › Δ › d' ⋀ d › Δ' › d''</div>
                                    <div class="td e675"> ⇒ </div>
                                    <div class="td e676">d' ≈ d''</div>
                                 </div>
                              </div>
                              
                           </div>
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e677">In the general case, it is much more interesting (from the performance point
                  of view) to compute inversion on deltas rather than to perform a reversed
                  diff.
               </div>
            </div>
         </div>
      </div><a name="FundamentalOperationsoverEncapsulatedDocumentsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e678">
         <div class="title e679">Fundamental Operations over Encapsulated Documents </div><a name="CreationofahistoryfromaninitialXMLdocumentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e680">
            <div class="title e681">Creation of a history from an initial XML document</div>
            <div class="para e682">This operation has the following abstract signature:</div>
            <div class="figure e683" xml:id="op-encapsulation">
               <div class="title e684">Initial Encapsulation</div>
               <div class="informaltable e685">
                  <div class="tr e686">
                     <div class="td e687">
                        <div class="emphasis e688" role="bold">create-history</div>(d) 
                     </div>
                     <div class="td e689">→</div>
                     <div class="td e690"> x-version[x-body 
                        <div class="emphasis e691" role="bold">
                           <div class="subscript e692">v
                              <div class="subscript e693">0</div>
                           </div>
                           
                        </div>[d], x-history[
                        <div class="emphasis e694" role="bold">v
                           <div class="subscript e695">0</div>
                        </div>]]
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e696">This reflects that the document is encapsulated, and that an initial versioning
               point 
               <div class="emphasis e697" role="ital">v
                  <div class="subscript e698">0</div>
               </div> is created inside
               the history. The link that relates the embedded document with the consistent
               versioning point is inserted in the 
               <div class="emphasis e699" role="ital">x-body</div>
               subtree.
            </div>
         </div><a name="VersioningANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e700">
            <div class="title e701">Versioning</div>
            <div class="para e702">The operation requires two operands: the encapsulated document and another variant
               of the document which is to be considered as the novel versioning point. What is
               returned is a novel encapsulated document including a new versioning point, a
               (consistent) link inside the body part, and a transition from the previous
               versioning point to the new one. This transition expresses the delta operations
               abstracted from the diff engine outputs.
            </div>
            <div class="figure e703" xml:id="op-version-creation">
               <div class="title e704">Version Creation</div>
               <div class="informaltable e705">
                  <div class="tr e706">
                     <div class="td e707">
                        <div class="emphasis e708" role="bold">create-version</div>(x-version[x-body
                        <div class="emphasis e709" role="bold">
                           
                           <div class="subscript e710">v
                              <div class="subscript e711">i</div>
                           </div>
                           
                        </div>[d], x-history[
                        <div class="emphasis e712" role="bold">...
                           v
                           <div class="subscript e713">i</div>
                        </div> ...]], d') 
                     </div>
                     <div class="td e714"> → </div>
                     <div class="td e715"> x-version[ x-body
                        <div class="emphasis e716" role="bold">
                           
                           <div class="subscript e717">v
                              <div class="subscript e718">j</div>
                           </div>
                           
                        </div>[d], x-history[... v
                        <div class="subscript e719">i</div> →
                        <div class="superscript e720">
                           Δ
                        </div>
                        
                        <div class="emphasis e721" role="bold">v
                           <div class="subscript e722">j</div>
                        </div> ]]
                     </div>
                  </div>
                  <div class="tr e723">
                     <div class="td e724">
                        
                     </div>
                     <div class="td e725"> with </div>
                     <div class="td e726">
                        
                        <div class="emphasis e727" role="bold">diff</div>(c,d,d') = Δ
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="ExtractionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e728">
            <div class="title e729">Extraction</div>
            <div class="para e730">Unfolds the embedded document. This is useful to work on the target document,
               update or change it.
            </div>
            <div class="figure e731" xml:id="op-extraction">
               <div class="title e732">Version Extraction</div>
               <div class="informaltable e733">
                  <div class="tr e734">
                     <div class="td e735">
                        <div class="emphasis e736" role="bold">extract</div>( x-version[x-body
                        <div class="emphasis e737" role="bold">
                           
                           <div class="subscript e738">v
                              <div class="subscript e739">i</div>
                           </div>
                           
                        </div>[d], x-history[...
                        <div class="emphasis e740" role="bold">v
                           <div class="subscript e741">i</div>
                        </div>...]] ) 
                     </div>
                     <div class="td e742"> → </div>
                     <div class="td e743"> d </div>
                  </div>
               </div>
            </div>
         </div><a name="FocusingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e744">
            <div class="title e745">Focusing</div>
            <div class="para e746">This operation allows modifying the embedded document 
               <div class="emphasis e747" role="ital">d</div> in order to be compliant to a given version stored in the history.
               This requires first building the path that connects the current versioning point
               
               <div class="emphasis e748" role="ital">v
                  <div class="subscript e749">i</div>
               </div> to the novel
               
               <div class="emphasis e750" role="ital">v
                  <div class="subscript e751">j</div>
               </div> and second, applying
               all deltas to obtain the new embedded document 
               <div class="emphasis e752" role="ital">d'</div>
            </div>
            <div class="figure e753" xml:id="op-focusing">
               <div class="title e754">Version Focusing</div>
               <div class="informaltable e755">
                  <div class="tr e756">
                     <div class="td e757">
                        <div class="emphasis e758" role="bold">focus</div>(x-version[x-body
                        <div class="emphasis e759" role="bold">
                           <div class="subscript e760">v
                              <div class="subscript e761">i</div>
                           </div>
                        </div>[d],
                        x-history[
                        <div class="emphasis e762" role="bold">...v
                           <div class="subscript e763">i</div>
                        </div>...]],
                        v
                        <div class="subscript e764">j</div>) 
                     </div>
                     <div class="td e765"> → </div>
                     <div class="td e766"> x-version[ x-body
                        <div class="emphasis e767" role="bold">
                           
                           <div class="subscript e768">v
                              <div class="subscript e769">j</div>
                           </div>
                           
                        </div>[d'], x-history[... 
                        <div class="emphasis e770" role="bold">v
                           <div class="subscript e771">j</div>
                        </div> ...]]
                     </div>
                  </div>
                  <div class="tr e772">
                     <div class="td e773">
                        
                     </div>
                     <div class="td e774"> with </div>
                     <div class="td e775"> v
                        <div class="subscript e776">i</div> →
                        <div class="superscript e777">
                           Δ
                           <div class="subscript e778">i</div>
                        </div> ... →
                        <div class="superscript e779">
                           Δ
                           <div class="subscript e780">j</div>
                        </div>v
                        <div class="subscript e781">j</div> and
                        d › Δ
                        <div class="subscript e782">i</div> ; ... ; Δ
                        <div class="subscript e783">j</div> › d’
                        
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e784">Note that in the connection path, some vertices could have the reversed form
               v
               <div class="subscript e785">n</div> ←
               <div class="superscript e786">Δ
                  <div class="subscript e787">n</div>
               </div>
               v
               <div class="subscript e788">m</div> requiring the computation of inverse delta (indeed,
               the connection graph is a DAG admitting branching). Note also that we assume that
               the algorithm is able to choose a path when several possibilities are present in the
               graph (it may decide which is the optimal path with respect to performance criteria
               based on standard algorithm based on simple metrics).
            </div>
         </div><a name="MergingbranchesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e789">
            <div class="title e790">Merging branches</div>
            <div class="para e791">This operation requires two operands: the embedded document and another existing
               versioning point. An algorithm creates a novel versioning point and two transitions
               that relate original versioning points to the new one. The idea is to perform a
               merge with maximal preservation (no deletion operation in the respective deltas).
               However, conflicts may arise, and can be signaled thanks to a dedicated annotation
               inside the target document (this annotation is based on foreign namespace which
               cannot conflict with namespaces used by target document)
            </div>
            <div class="figure e792" xml:id="op-merging">
               <div class="title e793">Version Merging</div>
               <div class="informaltable e794">
                  <div class="tr e795">
                     <div class="td e796">
                        <div class="emphasis e797" role="bold">merge</div>(x-version[x-body
                        <div class="emphasis e798" role="bold">
                           <div class="subscript e799">v
                              <div class="subscript e800">i</div>
                           </div>
                        </div>[d],
                        x-history[
                        <div class="emphasis e801" role="bold">...v
                           <div class="subscript e802">i</div>
                        </div>...]],
                        v
                        <div class="subscript e803">j</div>) 
                     </div>
                     <div class="td e804"> → </div>
                     <div class="td e805"> x-version[ x-body
                        <div class="emphasis e806" role="bold">
                           <div class="subscript e807">v
                              <div class="subscript e808">k</div>
                           </div>
                        </div>[d'],
                        x-history[... v
                        <div class="subscript e809">i</div>
                        →
                        <div class="superscript e810">Δ
                           <div class="subscript e811">a</div>
                        </div>
                        <div class="emphasis e812" role="bold"> v
                           <div class="subscript e813">k</div>
                        </div> ,
                        v
                        <div class="subscript e814">j</div>
                        →
                        <div class="superscript e815">Δ
                           <div class="subscript e816">b</div>
                        </div>
                        <div class="emphasis e817" role="bold"> v
                           <div class="subscript e818">k</div>
                        </div> ]]
                     </div>
                  </div>
                  <div class="tr e819">
                     <div class="td e820">
                        
                     </div>
                     <div class="td e821"> with </div>
                     <div class="td e822"> d
                        <div class="subscript e823">v
                           <div class="subscript e824">i</div>
                        </div> ›
                        Δ
                        <div class="subscript e825">a</div> › d’ and
                        d
                        <div class="subscript e826">v
                           <div class="subscript e827">j</div>
                        </div> ›
                        Δ
                        <div class="subscript e828">b</div> › d’ 
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e829">In the above formula, Δ
               <div class="subscript e830">a</div> represents the concatenation of
               (possibly reversed) deltas that allows to reach the new (merged) version starting
               from version v
               <div class="subscript e831">i</div>, and similarly for Δ
               <div class="subscript e832">a</div>
               and v
               <div class="subscript e833">j</div> .
            </div>
         </div>
      </div><a name="EncodingGraphsofDeltasinXMLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e834">
         <div class="title e835">Encoding Graphs of Deltas in XML</div>
         <div class="para e836">Each versioning point is captured using a dedicated element (e.g. 
            <div class="emphasis e837" role="ital">version</div>) associated with an id attribute that uniquely
            identifies it. Our convention uses a naming scheme of the form 
            <div class="emphasis e838" role="ital">v0…
               v3
            </div> for instance. Names for diverging branches use a dot, e.g. 
            <div class="emphasis e839" role="ital">v1.1, v1.2</div>.
         </div>
         <div class="para e840">Each version element contains a sequence of 
            <div class="emphasis e841" role="ital">delta</div>
            elements which capture the transition from this versioning point to another versioning
            point. This information is conveyed by an attribute (e.g. 
            <div class="emphasis e842" role="ital">fwd</div> for forward links and 
            <div class="emphasis e843" role="ital">bwd</div> for backward
            links). Moreover, a delta contains a non order-significant sequence of delta operations,
            which captures the so-called 
            <div class="emphasis e844" role="ital">snapshot</div>. Several delta
            elements are interpreted as sequences of snapshots (corresponds to the
            Δ
            <div class="subscript e845">1</div> ; Δ
            <div class="subscript e846">2</div> syntactic form, where
            Δ
            <div class="subscript e847">i</div>= {…}).
         </div>
         <div class="para e848">Each delta operation is described using a dedicated element name according to its
            semantics (
            <div class="emphasis e849" role="ital">insert, insert-attr</div> …). The path information
            may be concisely encoded, e.g. through an “ipath” attribute. Copies of subtrees may
            be
            expressed through a “copy” attribute attached to the delta element. When such an
            attribute is not defined, an extensive definition of the subtree is expected as the
            content of the operation.
         </div>
         <div class="para e850">The example 1 below is a target document we want to track</div>
         <div class="figure e851" xml:id="Ex1">
            <div class="title e852">The Original Document</div>
            <div class="programlisting e853" xml:space="preserve">
               &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
               &lt;!-- XHTML 1.0 --&gt;
               &lt;head&gt;
               &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
               &lt;/head&gt;
               &lt;body&gt;
               &lt;p class="verse" number="1"&gt;
               Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
               behold, there came wise men from the east to Jerusalem,
               &lt;/p&gt;
               &lt;/body&gt;
               &lt;/html&gt;
               
            </div>
            <div class="caption e854">
               <div class="para e855">The original (target) document to be encoded using our method</div>
            </div>
         </div>
         <div class="para e856">After applying the create-history operation, the document of figure 
            <div class="xref e857" linkend="Ex2"></div> below is created.
         </div>
         <div class="figure e858" xml:id="Ex2">
            <div class="title e859">First encapsulation</div>
            <div class="programlisting e860" xml:space="preserve">
               
               &lt;x-version id="xhtml-1.0" xmlns="XEROX::XRCE::DS:X-Version"&gt;
               &lt;x-body version=”v0”&gt;
               &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
               &lt;!-- XHTML 1.0 --&gt;
               &lt;head&gt;
               &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
               &lt;/head&gt;
               &lt;body&gt;
               &lt;p class="verse" number="1"&gt;
               Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
               behold, there came wise men from the east to Jerusalem,
               &lt;/p&gt;                
               &lt;/body&gt;
               &lt;/html&gt;
               &lt;/x-body&gt;
               &lt;x-history &gt;
               &lt;version id=”v0”/&gt;
               &lt;/x-history&gt;
               &lt;/x-version&gt;
               
               
            </div>
            <div class="caption e861">
               <div class="para e862">A first version (labeled v0) has been created ; note that the attribute
                  “version” of element x-body points to the right versioning point inside the
                  x-history subtree.
               </div>
            </div>
         </div>
         <div class="para e863">In the following example, we assume three distinct versioning points have been
            created. 
         </div>
         <div class="figure e864" xml:id="Ex3">
            <div class="title e865">A focused history</div>
            <div class="programlisting e866" xml:space="preserve">
               &lt;x-version id="xhtml-1.0" xmlns="XEROX::XRCE::DS:X-Version"&gt;
               &lt;x-body version=”v1”&gt;
               &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
               &lt;!-- XHTML 1.0 --&gt;
               &lt;head&gt;
               &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
               &lt;/head&gt;
               &lt;body&gt;
               &lt;p class="verse" number="1"&gt;
               Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
               behold, there came wise men from the east to Jerusalem,
               &lt;/p&gt;
               &lt;p class="verse" number="2"&gt;
               Saying, Where is he that is born King of the Jews? For we have seen his star in 
               the east, and are come to worship him.
               &lt;/p&gt;
               &lt;/body&gt;
               &lt;/html&gt;
               &lt;/x-body&gt;
               &lt;x-history start=”v0” end=”v2”&gt;
               &lt;version id=”v0” /&gt;
               &lt;version id=”v1”&gt;
               &lt;delta bwd=”v0”&gt;
               &lt;delete ipath=”1/2/2”/&gt;
               &lt;/delta &gt;
               &lt;delta fwd=”v2”&gt;
               &lt;insert ipath=”1/2/3”&gt;
               &lt;p class="verse" number="3"&gt;
               When Herod the king had heard these things, he was troubled, and all 
               Jerusalem with him.
               &lt;/p&gt;
               &lt;/insert &gt;
               &lt;/delta &gt;
               &lt;/version &gt;
               &lt;version id=”v2” /&gt;
               &lt;/x-history&gt;
               &lt;/x-version&gt;
               
               
            </div>
            <div class="para e867">Three different versioning points have been created. The current version is v1 (cf
               attribute 
               <div class="emphasis e868" role="ital">version</div> of 
               <div class="emphasis e869" role="ital">x-body</div> element). As the versioning mode is “focused”, we do have
               backward oriented delta to the previous version, and forward oriented delta to the
               following version (to the latest one in this example).
            </div>
         </div>
         <div class="para e870">The following example illustrate how the same information can be encoded differently,
            featuring different properties.
         </div>
         <div class="figure e871" xml:id="Ex4">
            <div class="title e872">The same document (see 
               <div class="xref e873" linkend="Ex3"></div>) in "linear mode"
            </div>
            <div class="programlisting e874" xml:space="preserve">
               
               &lt;x-version id="xhtml-1.0" xmlns="XEROX::XRCE::DS:X-Version"&gt;
               &lt;x-body version=”v1”&gt;
               &lt;html xmlns="http://www.w3c.org/1999/xhtml"&gt;
               &lt;!-- XHTML 1.0 --&gt;
               &lt;head&gt;
               &lt;title&gt;New Testament (Matthew, chapter 2)&lt;/title&gt;
               &lt;/head&gt;
               &lt;body&gt;
               &lt;p class="verse" number="1"&gt;
               Now when Jesus was born in Bethlehem of Judaea in the days of Herod the king,
               behold, there came wise men from the east to Jerusalem,
               &lt;/p&gt;
               &lt;p class="verse" number="2"&gt;
               Saying, Where is he that is born King of the Jews? For we have seen his star in 
               the east, and are come to worship him.
               &lt;/p&gt;
               &lt;/body&gt;
               &lt;/html&gt;
               &lt;/x-body&gt;
               &lt;x-history start=”v0” end=”v2”&gt;
               &lt;version id=”v0” &gt;
               &lt;delta fwd=”v1”&gt;
               &lt;insert ipath=”1/2/2”&gt;
               &lt;p class="verse" number="2"&gt;
               Saying, Where is he that is born King of the Jews? For we have seen his star in 
               the east, and are come to worship him.
               &lt;/p&gt;
               &lt;/insert &gt;
               &lt;/delta &gt;
               &lt;/version &gt;
               &lt;version id=”v1”&gt;
               &lt;delta fwd=”v2”&gt;
               &lt;insert ipath=”1/2/3”&gt;
               &lt;p class="verse" number="3"&gt;
               When Herod the king had heard these things, he was troubled, and all 
               Jerusalem with him.
               &lt;/p&gt;
               &lt;/insert &gt;
               &lt;/delta &gt;
               &lt;/version &gt;
               &lt;version id=”v2” /&gt;
               &lt;/x-history&gt;
               &lt;/x-version&gt;                
               
               
            </div>
            <div class="para e875">We do have a forward oriented delta from 
               <div class="emphasis e876" role="ital">v0</div> to
               
               <div class="emphasis e877" role="ital">v1</div>, and a forward oriented delta from 
               <div class="emphasis e878" role="ital">v1</div> to 
               <div class="emphasis e879" role="ital">v2</div>. Note that the
               whole history can be read in compliance with the evolution order, from the beginning
               up to the end. However, in that case, we have information redundancy as a subtree
               (verse number 2) is present both in the body and in the history.
            </div>
         </div>
         <div class="para e880">We propose a particular optimisation that could be applied in linear mode: redundant
            trees are eliminated tanks to an explicit copy instruction using an XPath expression
            to
            designate the subtree (thus the XPath selection refers to the focused version).
            
            <div class="programlisting e881" xml:space="preserve">
               &lt;delta fwd="v1"&gt;
               &lt;insert ipath=”1/2/2”&gt;
               &lt;p class="verse" number="2"&gt;
               Saying, Where is he that is born King of the Jews? For we have seen his star 
               in the east, and are come to worship him.
               &lt;/p&gt;
               &lt;/insert &gt;                
               &lt;/delta&gt;                 
               
            </div>
            In the case of figure 
            <div class="xref e882" linkend="Ex4"></div>, the node "insert", child of the forward
            delta to v1, is suppressed from the history and its parent is changed into the
            expression below:
            
            <div class="programlisting e883" xml:space="preserve">
               &lt;delta fwd="v1"&gt;
               &lt;insert ipath=”1/2/2” copy=”/html[1]/body[1]/p[2]”/&gt;    
               &lt;/delta&gt;                 
               
            </div>
         </div>
         <div class="para e884">This optimization applies only to versions belonging to 
            <div class="emphasis e885" role="ital">past
               history
            </div>, but makes a lot of sense when the evolution of document
            instances is best captured through using linear mode and comprises many incremental
            additions.
         </div>
      </div><a name="StateoftheArtANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e886">
         <div class="title e887">State of the Art</div>
         <div class="para e888"> XML diff operations are basically used to realize two fundamental operations on tree
            structured documents: comparison and merging. Therefore tree based diff algorithms
            are
            central to solve various important problems related to XML document management and
            editing processes (
            <div class="xref e889" linkend="Chawathe96"></div>), among which: 
         </div>
         <div class="itemizedlist e890">
            <div class="listitem e891">
               <div class="para e892">checking modifications with respect to a reference document, typically, the
                  last version stored inside a repository or a file system (version management
                  
                  <div class="xref e893" linkend="Chien00"></div>)
               </div>
            </div>
            <div class="listitem e894">
               <div class="para e895">synchronizing variants, that is, detection of changes that occurred
                  concurrently on two copies of a reference document, detecting potential
                  conflicts (
                  <div class="xref e896" linkend="LaFontaine02"></div>
               </div>
            </div>
            <div class="listitem e897">
               <div class="para e898">merging variants, which is about fusing two variants into a unique document
                  integrating modifications of both instances (this may imply solving potential
                  conflicts when the underlying document management system applies a weak control
                  policy)
               </div>
            </div>
            <div class="listitem e899">
               <div class="para e900">recovering anterior state(s) of a document</div>
            </div>
         </div>
         <div class="para e901">An abundant literature exists on this topic, including recent and excellent synthetic
            work on an old topic, linear differencing (
            <div class="xref e902" linkend="Khanna07"></div>). Most work covers
            :
         </div>
         <div class="orderedlist e903">
            <div class="listitem e904">
               <div class="para e905">
                  
                  <div class="emphasis e906" role="ital">Algorithmic complexity of the differencing operation,
                     either for ordered or unordered tree models.
                  </div>
                  
               </div>
               <div class="para e907">The problem was first approached as a particular case of string oriented diff
                  computation (see 
                  <div class="xref e908" linkend="Khanna07"></div> for a point on most recent
                  algorithms in this area), implying computing an adequate linearization of the
                  XML trees. Zhang and Shasha described a fast algorithm in 1989 for computing
                  tree edit distance 
                  <div class="xref e909" linkend="Zha89"></div> improving previous work conducted in
                  1979. Still the runtime and space complexity was higher than quadratic on
                  sequential architectures, but could drop to quadratic levels on parallel
                  architectures. In 
                  <div class="xref e910" linkend="Wang03"></div> an algorithm for unordered tree was
                  presented with a polynomial complexity for optimal differences, whereas previous
                  works established a NP-complete complexity for general cases. A survey (still of
                  interest 14 years after) and a comparative study on the topic can be found in
                  
                  <div class="xref e911" linkend="Bille95"></div> and 
                  <div class="xref e912" linkend="Cobe02"></div>. Most recent
                  algorithms for ordered diff computation are described in 
                  <div class="xref e913" linkend="Lind06"></div>, 
                  <div class="xref e914" linkend="Rönnau08"></div>, 
                  <div class="xref e915" linkend="Rönnau09"></div>.
               </div>
            </div>
            <div class="listitem e916">
               <div class="para e917">
                  
                  <div class="emphasis e918" role="ital">Optimality of editing scripts (also called
                     deltas)
                  </div>
                  
               </div>
               <div class="para e919">The very notion of optimality is somehow controversial, because bound to
                  execution models one could consider either as over simplistic or too specific.
                  Of course execution models are needed to justify underlying cost functions
                  associated with deltas application. However, such an approach intrinsically
                  restricts the application field or the area of proposed results. In addition,
                  usages and document types deeply impact the structure of delta and thus the
                  runtime performance of algorithms. As a consequence, diff algorithms should be
                  chosen and parameterized on the basis of document type and related
                  activities.
               </div>
            </div>
            <div class="listitem e920">
               <div class="para e921">
                  
                  <div class="emphasis e922" role="ital">Delta models and use of diff operations inside storage
                     architectures (typically databases).
                  </div>
                  
               </div>
               <div class="para e923">In 
                  <div class="xref e924" linkend="Martinez02"></div>, a versioning graph is proposed based on XLink
                  designation mechanism. But in this proposal, the graph relates two separate
                  documents that may exist in independent storage infrastructure. Hence there is
                  no notion of encapsulation and explicit consistency. In 
                  <div class="xref e925" linkend="Arevalo09"></div>, an application is proposed that offers online
                  versioning services for XML documents. However, there is no notion of history
                  encapsulation, and the history itself cannot be exported or organized into an
                  explicit form (see 
                  <div class="xref e926" linkend="Arevalo09b"></div> for an online demo).
               </div>
            </div>
         </div>
         <div class="para e927"> A recent paper 
            <div class="xref e928" linkend="Rönnau08"></div> proposes reversible deltas using a
            straightforward mechanism as deletion operation conveys explicitly the deleted subtree
            (this could quickly lead to enormous overhead, especially in the perspective of storing
            the whole history). The authors focus on algorithmic and speed performance issues
            of a
            novel diff algorithm using a bottom-up approach (and also precomputed hash codes on
            a
            sliding window of adjacent nodes.)
         </div>
         <div class="para e929">Most work conducted on this area focused on related algorithm performance, time and
            space complexity of the diff operation and also optimality of generated deltas, but
            little attention has been paid to tools and models to make use of these in efficient
            ways. From the practical point of view, no work considered the necessity and applicative
            interest of abstracting over deltas and related operation models.
         </div>
         <div class="para e930">Recently, the XQuery Update working group from W3C (see 
            <div class="xref e931" linkend="XQueryUp"></div>)
            published a candidate recommendation proposing to enrich XQuery with mechanisms intended
            to modify XML documents. This impressive work largely focused on expressive power
            and
            consistent integration of the new constructs to the existing language. The patching
            operations rely on "insert", "delete", "rename" and "replace" , using XPath to designate
            the locations in the XML tree ; an innovative "transform" operator allows for combining
            copy with on-the-fly modifications. One major difficulty was to deal with the extra
            power raised by the selection semantic model of XPath, i.e sequences of nodes. As
            a
            consequence, many runtime error may occur depending on the evaluation of selectors
            and
            the semantics of the delta operation. Additionally the insert operator of the language
            is particularly powerful since it can make explicit positional constraints ("first/last
            position", "before/after A") whereas when implicit, positional constraints are
            interpreted so that global ordering constraint are optimally satisfied (this remain
            a
            bit unclear how far this can be hard). 
         </div>
         <div class="para e932">The transformation model of XQUpdate relies on a kind of transactional framework,
            where changes are stored in a list of "pending modifications" only applied after calling
            a dedicated primitive upd:applyUpdates. This is a pragmatic solution to the problem
            of
            path relocation (and variable scope validity!), but is a nightmare regarding static
            analysis. Therefore it will be much more realistic to use the XQUpdate interpreter
            as a
            patch engine (i.e generating XQUpdate code from our descriptions), than considering
            an
            XQUpdate program as a description of differences. 
         </div>
      </div><a name="ConclusionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e933">
         <div class="title e934">Conclusion</div>
         <div class="para e935">The main contribution of this work is to propose a universal XML data structure and
            related transformations which allow abstracting from underlying storage systems and
            from
            any execution model associated with the computation of XML versioning information.
            
         </div>
         <div class="para e936">This is in favor of long term preservation of XML documents, infrastructure and vendor
            independence, and open the way to interoperable processing of XML versioning
            information. 
         </div>
         <div class="para e937">The method targets generic XML documents, and makes use of a particular namespace
            to
            embed any XML document (whatever vocabulary it may use) without any change in its
            content and tag/attribute set. The history is encoded using a specific vocabulary
            that
            captures change operations in a formal and universal way, so that any XML diff enabled
            processor can generate suitable deltas. Based on the properties of this change
            description language, we propose a set of high level operators which allows exploiting
            the historical information in order to navigate inside the history, compute new version
            in the current branch, create new branches or suppress intermediate versioning points.
            
         </div>
         <div class="para e938">Various information may be attached to the versioning points, such as user meta
            information, universal date/time of the creation of the versioning point, additional
            data required to optimize or ameliorate the computation (hash code, digest number,...),
            which are not central to this contribution but could substantially enhance any of
            its
            application.
         </div>
         <div class="para e939">The problem with existing diff related approaches is that the description model and
            the transformation model are identical. In other words, they use the same objects
            both
            to describe operationally and declaratively the differences between trees. We outline
            in
            our proposal a calculus that formally allows making a distinction between modification
            descriptors and modification operations. This calculus allows modeling "standard"
            processing of deltas and allows transforming descriptions in order to gain compactness
            or efficiency. We are not aware of any equivalent proposal.
         </div>
         <div class="para e940">The two transformation structures we described can lead to two broad classes of delta
            interpretations:
         </div>
         <div class="orderedlist e941">
            <div class="listitem e942">
               <div class="para e943">Each modification step transforms the tree, so that the paths used inside
                  subsequent deltas should be defined on the modified tree. This model is used
                  inside database systems and DOM-like in memory tree processors (especially 
                  <div class="xref e944" linkend="XUpdate"></div>, 
                  <div class="xref e945" linkend="XQueryUp"></div>). 
               </div>
            </div>
            <div class="listitem e946">
               <div class="para e947">All modification steps are defined on the same reference tree, and all
                  modifications are realized in one global step. Thus the paths always refer to
                  the same tree operand and consequently, delta sequences are more easily
                  understood by a human reader, because they do not have to maintain the cognitive
                  load of mentally propagating tree modifications to paths. From a computational
                  point of view, this model is well adapted to stream based processing pipes in
                  which each operation can be performed concurrently (e.g. on a multi core
                  processor). As this approach doesn't need building a tree in memory, it is
                  particularly indicated for large and very large document processing. 
               </div>
            </div>
         </div>
         <div class="para e948">The delta model we propose as foundational for history encoding integrates those two
            transformation models, in the sense that both can be expressed explicitly. The first
            one
            is captured by sequences of singleton snapshots whereas the second may involve snapshots
            including several deltas.
         </div>
         <div class="para e949">We identified 4 key issues when addressing the challenge of encapsulating document
            history into a stand alone XML instance: mastering the potentially big data volume,
            usability of the history model (human vs machine), flexibility of the history
            representation and abstracting over diff operations (i.e. not being dependent of a
            particular diff algorithm/engine behavior). The method described in this paper addresses
            these four issues at various levels. We believe our approach therefore constitutes
            a
            significant contribution having a realistic applicability level, though the data volume
            issue would still require large scale experiments.
         </div>
      </div><a name="AcknowledgmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e950">
         <div class="title e951">Acknowledgment</div>
         <div class="para e952">This work is supported by the European project SHAMAN (FP7- ICT-216736, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e953" xlink:actuate="onRequest" xlink:href="http://shaman-ip.eu/shaman/" xlink:show="new" xlink:type="simple">
               http://shaman-ip.eu/shaman/ 
            </div>). The author also would like to thanks
            Jean-Pierre Chanod for his continuous support and helpful comments
         </div>
      </div><a name="ProofofpropositionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e954" xml:id="proof-proposition-1">
         <div class="title e955">Proof of proposition 
            <div class="xref e956" linkend="proposition-1"></div>
         </div>
         <div class="para e957">Global structure: </div>
         <div class="para e958">We do a structural induction over Δ. Each sub-case is associated with a corresponding
            well-formedness hypothesis; we use these together with the definitions of inversion.
            We
            show here the case for the Δ
            <div class="subscript e959">1</div>;Δ
            <div class="subscript e960">2</div>
            composition:
         </div>
         <div class="orderedlist e961">
            <div class="listitem e962">
               <div class="para e963">Goal : 
                  <div class="informaltable e964">
                     <div class="tr e965">
                        <div class="td e966">d › Δ
                           <div class="subscript e967">1</div>;Δ
                           <div class="subscript e968">2</div> › d’ 
                        </div>
                        <div class="td e969"> ⇒ </div>
                        <div class="td e970"> d’ › 
                           <div class="emphasis e971" role="bold">∘</div>(
                           Δ
                           <div class="subscript e972">1</div>;Δ
                           <div class="subscript e973">2</div> ) › d
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e974">We introduce the left hand as a new hypothesis H and we get the new goal </div>
               <div class="informaltable e975">
                  <div class="tr e976">
                     <div class="td e977"> d’ › 
                        <div class="emphasis e978" role="bold">∘</div>(
                        Δ
                        <div class="subscript e979">1</div>;Δ
                        <div class="subscript e980">2</div> ) › d
                     </div>
                  </div>
               </div>
               <div class="para e981">By applying the definition of inversion (thanks to H), we get </div>
               <div class="informaltable e982">
                  <div class="tr e983">
                     <div class="td e984"> d’ › 
                        <div class="emphasis e985" role="bold">∘</div>Δ
                        <div class="subscript e986">2</div> ;
                        
                        <div class="emphasis e987" role="bold">∘</div>Δ
                        <div class="subscript e988">1</div> › d
                     </div>
                  </div>
               </div>
               <div class="para e989">The we apply the property (a-seq)</div>
               <div class="informaltable e990">
                  <div class="tr e991">
                     <div class="td e992"> ∃ dd , d’ › 
                        <div class="emphasis e993" role="bold">∘</div>Δ
                        <div class="subscript e994">2</div>
                        › dd ⋀ dd › 
                        <div class="emphasis e995" role="bold">∘</div>Δ
                        <div class="subscript e996">1</div>
                        › d
                     </div>
                  </div>
               </div>
               <div class="para e997">We apply again the (a-seq) property to hypothesis H, and get a
                  particularisation for intermediate tree d''. Thus we choose d'' as an evidence
                  for the existence of dd, and get 
               </div>
               <div class="informaltable e998">
                  <div class="tr e999">
                     <div class="td e1000"> d’ › 
                        <div class="emphasis e1001" role="bold">∘</div>Δ
                        <div class="subscript e1002">2</div> › d''
                        ⋀ d'' › 
                        <div class="emphasis e1003" role="bold">∘</div>Δ
                        <div class="subscript e1004">1</div> ›
                        d
                     </div>
                  </div>
               </div>
               <div class="para e1005">Now we split the goal in two subgoals and apply the induction hypothesis to
                  both.
               </div>
            </div>
         </div>
      </div><a name="AnRelaxNGschema(compactsyntax)capturingourmodelANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e1006">
         <div class="title e1007">An RelaxNG schema (compact syntax ) capturing our model</div>
         <div class="para e1008">
            
            <div class="programlisting e1009" xml:space="preserve">
               
               default namespace xversion = "XRCE::DS::X-Version"
               datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"
               
               start =  x-version
               
               anyElement = element * - xversion:* { anyAttribute*, anyElement*} | text
               anyAttribute = attribute * { text}
               
               x-version = element x-version { 
               element x-version-body { 
               attribute ref {V-REF}, 
               attribute xml:space {"preserve" | "ignore"}?,
               SUBTREE
               }+,
               element x-version-history {
               attribute first {list {V-REF+}},
               attribute last {list {V-REF+}},
               # the version history encodes a DAG (Directed Acyclic Graph)
               version*
               }    
               }
               
               
               version = element version {
               attribute id { V-REF},
               
               # allows zero or more
               attribute conflicts {xsd:nonNegativeInteger}?, 
               a-time?,
               delta*
               }
               
               a-target=
               # this attribute defines a "one-step" next version 
               attribute to {V-REF}  
               
               
               delta = element delta {  a-target,   (rename | insert | append | move | copy | delete
               | replace)* }
               
               a-here= 
               # the "here" attribute designates the insertion point (existing stuff is to be shift
               to right after insertion)
               attribute here {IPath}
               
               
               insert=
               # "insert" only applies to elements, text, comment and PI
               element insert {
               a-here,
               # the subtree to be inserted is here (but skipped thanks to a NVDL rule)
               SUBTREE
               }
               
               append=
               # "append" applies to everything including attributes
               # for elements, text, comments, PI, the item is appended at the end of the sequence
               of children
               element append {
               a-here,
               # the "attribute" attribute is used to specify attribute insertion; it must have the
               "QName=Value" syntactic structure 
               ((attribute attribute {A-DEF}?, empty) | SUBTREE)
               }
               
               copy= element copy {
               a-what, a-here,
               attribute append {flag}?
               }
               
               move= element move {
               a-what, a-here,
               attribute append {flag}?
               }
               
               delete= element delete { a-what, SUBTREE }
               replace= element replace { a-what, SUBTREE }
               
               rename= 
               # works for elements, attributes, and PI as well
               # the "as" attribute is a qualified name (that is, may refer to a given namespace
               through a declared prefix
               element rename {  a-what,    attribute as {token}}
               
               
               SUBTREE=anyElement | conflict
               
               conflict=element conflict { item+ }
               item = element item { attribute ref {V-REF}, anyElement }
               
               attribute-conflict =element attribute-conflict { attribute ref {V-REF}, A-DEF}
               tree-conflict = element tree-conflict { attribute ref {V-REF}, A-DEF}
               
               V-REF= xsd:string { pattern="v\d+(\.\d+)*" }
               
               A-DEF=string
               
               
               flag = "yes" | "no"
               
               a-what = attribute what {XPath}
               a-time = attribute time {xsd:dateTime}
               
               XPath = xsd:string
               IPath = xsd:string { pattern="1(/\d+)*(/@([\c-[:]]+:)?[\c-[:]]+)?" }
               
               
            </div>
            
         </div>
      </div><a name="anISOSchematronschemaANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e1010">
         <div class="title e1011">an ISO Schematron schema 
            <div class="xref e1012" linkend="Schematron"></div>
         </div>
         <div class="para e1013">
            
            <div class="programlisting e1014" xml:space="preserve">
               
               &lt;?xml version="1.0" encoding="UTF-8"?&gt;
               &lt;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" xml:lang="en" queryBinding="xslt2"&gt;
               &lt;sch:ns uri="XRCE::DS::X-Version" prefix="xv"/&gt;
               &lt;sch:pattern &gt;
               &lt;sch:let name="versions" value="/*[1]/*[2]/xv:version"/&gt;
               &lt;sch:let name="versions-id" value="for $i in $versions/@id return normalize-space($i)"/&gt;
               &lt;sch:let name="Nversions-id" value="distinct-values($versions-id)"/&gt;
               
               &lt;sch:let name="history" value="/*[1]/xv:x-version-history[1]"/&gt;
               &lt;sch:let name="starting-vector" value="tokenize(normalize-space($history/@first),'\s')"/&gt;
               &lt;sch:let name="ending-vector" value="tokenize(normalize-space($history/@last),'\s')"/&gt;
               &lt;sch:let name="Nstarting-vector" value="distinct-values($starting-vector)"/&gt;
               &lt;sch:let name="Nending-vector" value="distinct-values($ending-vector)"/&gt;
               
               
               &lt;sch:rule context="/*[1]/xv:x-version-history[1]"&gt;
               &lt;sch:assert test="count($versions-id) ge count($Nversions-id)"&gt;Every version element
               must have an unique id attribute&lt;/sch:assert&gt;
               
               &lt;sch:assert test="count($starting-vector) eq count($Nstarting-vector)"&gt;"first" attribute
               should refer to each relevant version only once&lt;/sch:assert&gt;
               &lt;sch:assert test="count($ending-vector) eq count($Nending-vector)"&gt;"last" attribute
               should refer to each relevant version only once&lt;/sch:assert&gt;
               
               &lt;sch:assert test="every $i in $Nstarting-vector satisfies index-of($Nversions-id,$i)
               gt 0 "&gt;
               the "first" attribute should point to existing version(s) (cf 
               "&lt;sch:value-of select="string-join($Nstarting-vector,'/')"/&gt;" versus "&lt;sch:value-of
               select="string-join($Nversions-id,'/')"/&gt;"
               )
               &lt;/sch:assert&gt;
               &lt;sch:assert test="every $i in $Nending-vector satisfies index-of($Nversions-id,$i)
               gt 0 "&gt;
               the "last" attribute should point to existing version(s) (cf 
               "&lt;sch:value-of select="string-join($Nending-vector,'/')"/&gt;" versus "&lt;sch:value-of
               select="string-join($Nversions-id,'/')"/&gt;"
               )
               &lt;/sch:assert&gt;
               &lt;/sch:rule&gt;
               &lt;sch:rule context="xv:version"&gt;
               &lt;sch:report test="count(index-of($versions-id,normalize-space(@id))) gt 1"&gt;
               The "id" attribute must be unique ("&lt;sch:value-of select="@id"/&gt;")
               &lt;/sch:report&gt; 
               &lt;sch:let name="my-id" value="@id"/&gt;
               &lt;sch:assert test="(count(../xv:version/xv:delta[@to=$my-id]) gt 0) or (index-of($Nstarting-vector,$my-id)
               gt 0)"&gt;
               missing back link to anterior version (version "&lt;sch:value-of select="@id"/&gt;")
               &lt;/sch:assert&gt;
               &lt;sch:assert test="(count(xv:delta[@to]) gt 0) or (index-of($Nending-vector,$my-id)
               gt 0)"&gt;
               missing link to posterior version (version "&lt;sch:value-of select="@id"/&gt;")
               &lt;/sch:assert&gt;
               &lt;/sch:rule&gt;
               &lt;sch:rule context="xv:delta"&gt;
               &lt;sch:assert test="index-of($Nversions-id,@to) gt 0"&gt;
               The link to version "&lt;sch:value-of select="@to"/&gt;" is dangling (no corresponding version
               found in the whole history)
               &lt;/sch:assert&gt; 
               &lt;sch:let name="my-dest" value="@to"/&gt;
               &lt;sch:report test="count(preceding-sibling::xv:delta[@to=$my-dest]) gt 0" &gt;
               Delta must be unique for one target version ("&lt;sch:value-of select="@to"/&gt;")
               &lt;/sch:report&gt;
               &lt;/sch:rule&gt;
               &lt;sch:rule context="xv:conflict"&gt;
               &lt;sch:let name="all-item-refs" value="for $i in xv:item/@ref return normalize-space($i)"/&gt;
               &lt;sch:assert test="count(distinct-values($all-item-refs)) eq count($all-item-refs)"&gt;
               Conflicting items must be uniquely defined for a given version 
               &lt;/sch:assert&gt;
               &lt;/sch:rule&gt;
               &lt;sch:rule context="xv:item"&gt;
               &lt;sch:assert test="index-of($Nversions-id,@ref) gt 0"&gt;
               The reference to version "&lt;sch:value-of select="@ref"/&gt;" is dangling (no corresponding
               version found in the whole history)
               &lt;/sch:assert&gt;
               &lt;/sch:rule&gt;
               &lt;/sch:pattern&gt;
               &lt;/sch:schema&gt;
               
               
            </div>
            
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e1015">
         <div class="title e1016">References</div>
         <div class="bibliomixed e1017" xml:id="Zha89">
            
            <div class="emphasis e1018" role="ital">Simple Fast Algorithms for the Editing Distance between Trees and
               Related Problems
            </div>, Kaizhong Zhang; Dennis Shasha, SIAM J. Comput., 1989 
         </div>
         <div class="bibliomixed e1019" xml:id="Bille95">
            
            <div class="emphasis e1020" role="ital">A survey on tree edit distance and related problems</div>,
            Philip Bille, Theoretical Computer Science , Volume 337 Issue 1-3 June 2005. 
         </div>
         <div class="bibliomixed e1021" xml:id="Chawathe96">
            
            <div class="emphasis e1022" role="ital">Change detection in hierarchically structured
               information
            </div>, Sudarshan S. Chawathe; Anand Rajaraman;Hector Garcia-Molina ;
            Jennifer Widom, SIGMOD '96: Proceedings of the 1996 ACM SIGMOD international conference
            on Management of data, June 1996, doi: 
            <div class="biblioid doi e1023">10.1145/233269.233366
               
            </div> 
         </div>
         <div class="bibliomixed e1024" xml:id="Chien00">
            
            <div class="emphasis e1025" role="ital">A Comparative Study of Version Management Schemes for XML
               Documents
            </div>, Shu-Yao Chien ; Vassilis J. Tsotras ; Carlo Zaniolo, 2000 
         </div>
         <div class="bibliomixed e1026" xml:id="Cobe02">
            
            <div class="emphasis e1027" role="ital">A comparative study for XML change detection</div>, Grégory
            Cobéna; Talel Abdessalem; Yassine Hinnach, Research Report, INRIA Rocquencourt, France,
            2002 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1028" xlink:actuate="onRequest" xlink:href="http://leo.saclay.inria.fr/publifiles/gemo/GemoReport-221.pdf" xlink:show="new" xlink:type="simple">PDF</div>
            
         </div>
         <div class="bibliomixed e1029" xml:id="LaFontaine02">
            <div class="emphasis e1030" role="ital">Merging XML files: a new approach
               providing intelligent merge of XML data sets
            </div>, Robin La Fontaine, 2002
         </div>
         <div class="bibliomixed e1031" xml:id="Martinez02">
            
            <div class="emphasis e1032" role="ital">A method for the dynamic generation of virtual versions of
               evolving documents
            </div>, Mercedes Martinez, Jean-Claude Derniame, Pablo de la
            Fuente, SAC 2002, Madrid, Spain, 2002 
         </div>
         <div class="bibliomixed e1033" xml:id="pédauque03">
            
            <div class="emphasis e1034" role="ital">Document: Form, Sign and Medium, as Reformulated for Electronic
               Documents
            </div>, Roger T. Pédauque, collective writing, STIC-CNRS, 12 September
            2003. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1035" xlink:actuate="onRequest" xlink:href="http://archivesic.ccsd.cnrs.fr/docs/00/06/22/28/PDF/sic_00000594.pdf" xlink:show="new" xlink:type="simple">PDF</div>
            
         </div>
         <div class="bibliomixed e1036" xml:id="Wang03">
            
            <div class="emphasis e1037" role="ital">X-Diff: A Fast Change Detection Algorithm for
               XMLDocuments
            </div>. Yuan Wang , David J. DeWitt , Jin-Yi Cai in Proceedings of the
            International Conference on Data Engineering (ICDE'03) 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1038" xlink:actuate="onRequest" xlink:href="http://pages.cs.wisc.edu/~yuanwang/papers/xdiff.pdf" xlink:show="new" xlink:type="simple">PDF</div>
            
         </div>
         <div class="bibliomixed e1039" xml:id="pédauque05">
            
            <div class="emphasis e1040" role="ital">Le texte en jeu (Permanence et transformations du
               document)
            </div>, Roger T. Pédauque, collective writing, STIC-CNRS, 7 April 2005.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1041" xlink:actuate="onRequest" xlink:href="http://archivesic.ccsd.cnrs.fr/docs/00/06/26/01/PDF/sic_00001401.pdf" xlink:show="new" xlink:type="simple">PDF</div>
            
         </div>
         <div class="bibliomixed e1042" xml:id="Lind06">
            
            <div class="emphasis e1043" role="ital">Fast and Simple XML Tree Differencing by Sequence
               Alignment
            </div>, Tancred Lindholm; Jaakko Kangasharju; Sasu Tarkoma, DocEng '06:
            Proceedings of the 2006 ACM symposium on Document engineering October 2006, doi: 
            <div class="biblioid doi e1044">10.1145/1166160.1166183</div>
         </div>
         <div class="bibliomixed e1045" xml:id="Khanna07">
            
            <div class="emphasis e1046" role="ital">A Formal Investigation of diff3</div>, Sanjeev Khanna; Keshav
            Kunal ; Benjamin C. Pierce, In Arvind and Prasad, editors, Foundations of Software
            Technology and Theoretical Computer Science (FSTTCS), December 2007 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1047" xlink:actuate="onRequest" xlink:href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.106.5604&amp;rep=rep1&amp;type=pdf" xlink:show="new" xlink:type="simple">PDF</div>
            
         </div>
         <div class="bibliomixed e1048" xml:id="Tata07">
            <div class="emphasis e1049" role="ital">Tree automata techniques and
               applications
            </div>, Hubert Comon; Max Dauchet; Florent Jacquemard; Denis Lugiez;
            Sophie Tison; Marc Tommasi , 2007 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1050" xlink:actuate="onRequest" xlink:href="http://tata.gforge.inria.fr/" xlink:show="new" xlink:type="simple">PDF</div>
         </div>
         <div class="bibliomixed e1051" xml:id="Rönnau08">
            <div class="emphasis e1052" role="ital">Merging Changes in XML Documents Using
               Reliable Context Fingerprints
            </div>, Sebastian Rönnau; Christian Pauli; Uwe M.
            Borghoff, ACM Symposium on Document Engineering, September 2008, doi: 
            <div class="biblioid doi e1053">10.1145/1410140.1410151</div> 
         </div>
         <div class="bibliomixed e1054" xml:id="Rönnau09">
            <div class="emphasis e1055" role="ital">Efficient Change Control of XML
               Documents
            </div>, Sebastian Rönnau; Christian Pauli; Uwe M. Borghoff, ACM
            Symposium on Document Engineering, September 2009, doi: 
            <div class="biblioid doi e1056">10.1145/1600193.1600197</div> 
         </div>
         <div class="bibliomixed e1057" xml:id="Arevalo09">
            <div class="emphasis e1058" role="ital">A Web-Based Version Editor for XML
               Documents
            </div>, Luis Arévalo Rosado, Antonio Polo Márquez and Miryam Salas
            Sánchez, ACM Symposium on Document Engineering, September 2009, doi: 
            <div class="biblioid doi e1059">10.1145/1600193.1600249</div>
         </div>
         <div class="bibliomixed e1060" xml:id="Arevalo09b">
            <div class="emphasis e1061" role="ital">A Web-Based Version Editor for XML
               Documents
            </div>, online demonstration version:
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1062" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://picaro.unex.es:8180/vEditor/</div>
         </div>
         <div class="bibliomixed e1063" xml:id="XQueryUp">
            
            <div class="emphasis e1064" role="ital">XQuery Update Facility 1.0</div>, W3C, Specification, June
            2009 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1065" xlink:actuate="onRequest" xlink:href="" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xquery-update-10/</div>
         </div>
         <div class="bibliomixed e1066" xml:id="XUpdate">
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1067" xlink:actuate="onRequest" xlink:href="http://xmldb-org.sourceforge.net/xupdate/xupdate-wd.html" xlink:show="new" xlink:type="simple">http://xmldb-org.sourceforge.net/xupdate/xupdate-wd.html</div> ; 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1068" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/XUpdate" xlink:show="new" xlink:type="simple">http://en.wikipedia.org/wiki/XUpdate</div>
         </div>
         <div class="bibliomixed e1069" xml:id="Saxonica" xreflabel="Saxonica">
            
            <div class="emphasis e1070" role="ital">Saxonica, XSLT and XQuery processing</div> Michael Kay, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1071" xlink:actuate="onRequest" xlink:href="http://www.saxonica.com/" xlink:show="new" xlink:type="simple">http://www.saxonica.com/</div>
            
         </div>
         <div class="bibliomixed e1072" xml:id="Schematron" xreflabel="Schematron">
            
            <div class="emphasis e1073" role="ital">ISO Schematron, a language for making assertions about patterns
               found in XML documents
            </div>, Topologi , 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e1074" xlink:actuate="onRequest" xlink:href="http://www.schematron.com/" xlink:show="new" xlink:type="simple">web
               site
            </div>
            
         </div>
      </div>
   </div>
</div>