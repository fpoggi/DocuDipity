<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#MarkuptogeneratemarkuptogeneratemarkupANCHOR" name="MarkuptogeneratemarkuptogeneratemarkupTOC">Markup to generate markup to generate markup</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BackgroundANCHOR" name="BackgroundTOC">Background</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PackagesandClassesANCHOR" name="PackagesandClassesTOC">Packages and Classes</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AutomationrequirementANCHOR" name="AutomationrequirementTOC">Automation requirement</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ImplementationANCHOR" name="ImplementationTOC">Implementation</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MetadataANCHOR" name="MetadataTOC">Metadata</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AnnotatedcodeANCHOR" name="AnnotatedcodeTOC">Annotated code</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#OptionsANCHOR" name="OptionsTOC">Options</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#PackagespecificationANCHOR" name="PackagespecificationTOC">Package specification</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ModularcodeANCHOR" name="ModularcodeTOC">Modular code</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#UserdocumentationANCHOR" name="UserdocumentationTOC">User documentation</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#PreambleANCHOR" name="PreambleTOC">Preamble</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ArmoringthetextANCHOR" name="ArmoringthetextTOC">Armoring the text</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#InlinesANCHOR" name="InlinesTOC">Inlines</a></div>
               </div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AutomationANCHOR" name="AutomationTOC">Automation</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DevelopmentfrompilottoproductionANCHOR" name="DevelopmentfrompilottoproductionTOC">Development from pilot to production</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MarkuploadANCHOR" name="MarkuploadTOC">Markup load</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TagabuseANCHOR" name="TagabuseTOC">Tag abuse</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionsANCHOR" name="ConclusionsTOC">Conclusions</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">audience</div>
         <div class="singletermTERMS">arch</div>
         <div class="singletermTERMS">annotation</div>
         <div class="singletermTERMS">August 6 - 9, 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">book</div>
         <div class="singletermTERMS">before</div>
         <div class="singletermTERMS">biblatex</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">conformance</div>
         <div class="singletermTERMS">condition</div>
         <div class="singletermTERMS">chapter</div>
         <div class="singletermTERMS">code</div>
         <div class="singletermTERMS">constraintdef</div>
         <div class="singletermTERMS">constraindef</div>
         <div class="singletermTERMS">classname</div>
         <div class="singletermTERMS">charoff</div>
         <div class="singletermTERMS">char</div>
         <div class="singletermTERMS">cover</div>
         <div class="singletermTERMS">cmdsynopsis</div>
         <div class="singletermTERMS">ClassPack</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">department</div>
         <div class="singletermTERMS">Department of</div>
         <div class="singletermTERMS">docpackages</div>
         <div class="singletermTERMS">dox</div>
         <div class="singletermTERMS">doc</div>
         <div class="singletermTERMS">dedication</div>
         <div class="singletermTERMS">document class</div>
         <div class="singletermTERMS">driver</div>
         <div class="singletermTERMS">dedication</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">environment</div>
         <div class="singletermTERMS">enumitem</div>
         <div class="singletermTERMS">envar</div>
         <div class="singletermTERMS">exceptionname</div>
         <div class="singletermTERMS">entry</div>
         <div class="singletermTERMS">en passant</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">fancyvrb</div>
         <div class="singletermTERMS">firstterm</div>
         <div class="singletermTERMS">fmtcount</div>
         <div class="singletermTERMS">font</div>
         <div class="singletermTERMS">Flynn</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">info/cover</div>
         <div class="singletermTERMS">info</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">ltxdoc</div>
         <div class="singletermTERMS">linkend</div>
         <div class="singletermTERMS">listings</div>
         <div class="singletermTERMS">latexmk</div>
         <div class="singletermTERMS">literate-programming</div>
         <div class="singletermTERMS">ltxdoc: Documentation support.</div>
         <div class="singletermTERMS">LaTeX2Îµ for class and package writers.</div>
         <div class="singletermTERMS">Literate Programming.</div>
         <div class="singletermTERMS">LaTeX: A Document Preparation System.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">methodsynopsis</div>
         <div class="singletermTERMS">med</div>
         <div class="singletermTERMS">macro</div>
         <div class="singletermTERMS">morerows</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">not</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">option</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">part</div>
         <div class="singletermTERMS">physio</div>
         <div class="singletermTERMS">Physiology</div>
         <div class="singletermTERMS">prepost.xml</div>
         <div class="singletermTERMS">programlisting</div>
         <div class="singletermTERMS">para</div>
         <div class="singletermTERMS">parent::programlisting</div>
         <div class="singletermTERMS">package</div>
         <div class="singletermTERMS">procedure</div>
         <div class="singletermTERMS">procedure/step</div>
         <div class="singletermTERMS">psgml-mode</div>
         <div class="singletermTERMS">Peter</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">report</div>
         <div class="singletermTERMS">remap</div>
         <div class="singletermTERMS">role</div>
         <div class="singletermTERMS">remark</div>
         <div class="singletermTERMS">revisionhistory</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">security</div>
         <div class="singletermTERMS">sect1</div>
         <div class="singletermTERMS">seglistitem</div>
         <div class="singletermTERMS">seg</div>
         <div class="singletermTERMS">spacing="compact"</div>
         <div class="singletermTERMS">style package</div>
         <div class="singletermTERMS">see the third item in the list on p.42</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">text()</div>
         <div class="singletermTERMS">term</div>
         <div class="singletermTERMS">type</div>
         <div class="singletermTERMS">Technica: Typesetting for the humanities.</div>
         <div class="singletermTERMS">TeX Live: LaTeX support for the humanities.</div>
         <div class="singletermTERMS">The Literate Programming FAQ.</div>
         <div class="singletermTERMS">The LaTeX Companion.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">un</div>
         <div class="singletermTERMS">unarmored</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">Vancouver</div>
         <div class="singletermTERMS">vancouver</div>
         <div class="singletermTERMS">variablelist</div>
         <div class="singletermTERMS">VerbatimOut</div>
         <div class="singletermTERMS">varioref</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">xml:base</div>
         <div class="singletermTERMS">xreflabel</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="MarkuptogeneratemarkuptogeneratemarkupANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3">
      <div class="title e1">Markup to generate markup to generate markup</div>
      <div class="subtitle e2">Using XML to create and maintain LaTeX packages and
         classes
      </div>
      <div class="info e3">
         <div class="confgroup e4">
            <div class="conftitle e5">Balisage: The Markup Conference 2013</div>
            <div class="confdates e6">August 6 - 9, 2013</div>
         </div>
         <div class="abstract e7">
            <div class="para e8">This paper presents an experiment in using DocBook5 to
               	mark up and maintain LaTeX classes and packages in the
               	literate-programming style, using XSLT2 to generate the
               	standard format of distribution files suitable for the CTAN
               	repository. It identifies several benefits in automation and
               	reusability of code; a number of areas where a customisation
               	layer for DocBook would be useful; and a few unresolved
               	restrictions that package and class authors or maintainers
               	would need to be aware of when editing XML.
            </div>
         </div>
         <div class="author e9">
            <div class="personname e10">
               <div class="firstname e11">Peter</div>
               <div class="surname e12">Flynn</div>
            </div>
            <div class="personblurb e13">
               <div class="para e14">Peter Flynn runs the Electronic Publishing Group in IT
                  	  Services at University College Cork. He is a graduate of the
                  	  London College of Printing and the University of
                  	  Westminster. He worked for the Printing and Publishing
                  	  Industry Training Board and for United Information Services
                  	  as IT consultant before joining UCC as Project Manager for
                  	  academic and research computing. In 1990 he installed
                  	  Ireland's first Web server and since then has been
                  	  concentrating on electronic publishing support. He was
                  	  Secretary of the TeX Users Group, and a member of the IETF
                  	  Working Group on HTML and the W3C XML SIG, and he has
                  	  published books on HTML, SGML/XML, and LaTeX. Peter is
                  	  editor of the XML FAQ and an irregular contributor to
                  	  conferences and journals in electronic publishing and
                  	  Humanities computing. He is currently completing a part-time
                  	  PhD in user interfaces with the Human Factors Research Group
                  	  in UCC. He maintains a technical blog at
                  	  http://blogs.silmaril.ie/peter
               </div>
            </div>
         </div>
         <div class="legalnotice e15">
            <div class="para e16">Article copyright Â© 2013 by Silmaril Consultants.</div>
            <div class="para e17">Application code copyright Â© 2013 by Peter Flynn, released under the terms of the
               LaTeX Project Public License.
            </div>
         </div>
      </div><a name="BackgroundANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e18">
         <div class="title e19">Background</div>
         <div class="para e20">The LaTeX document preparation system provides a framework
            of commands (markup) for the TeX typesetting program, designed
            to shield the writer from the need to know the internal
            programming required to format a document (
            <div class="xref e21" linkend="Lamport1986"></div>, 
            <div class="xref e22" linkend="Lamport1994"></div>). It has been in widespread use in
            scientific, technical, and academic publishing since 1986, and
            more recently has experienced growth in the Humanities and in
            general publishing (
            <div class="xref e23" linkend="Boggio2006"></div>, 
            <div class="xref e24" linkend="Ubuntu2012"></div>).
         </div>
         <div class="para e25">LaTeX relies for its extensibility on a library of over
            4,000 style packages and document classes, which provide additional
            markup functionality, layouts, typography, and variant behaviour. The
            
            <div class="code e26">ltxdoc</div> document class supplies features for maintaining
            these packages and classes in a literate programming style using
            interleaved code and annotation with end-user documentation in a
            single-file wrapper. The syntax to achieve this, however, is
            complex, as documentation must be shielded from interpretation
            as code, and vice versa.
         </div><a name="PackagesandClassesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e27">
            <div class="title e28">Packages and Classes</div>
            <div class="para e29">A 
               <div class="quote e30">document class</div> is a collection of macros
               	providing both formatting and markup for a specific class of
               	documents, such as the articles for a particular journal, the
               	books by a particular publisher, the theses for a particular
               	university, or any of over 400 other types of document. It is
               	broadly equivalent to a DTD or Schema, although without
               	prescription, and with formatting specifications embedded. The default
               	document classes (report, book, article, and letter) are
               	stylistically minimalist but provide sufficient markup for
               	draft purposes.
            </div>
            <div class="para e31">A 
               <div class="quote e32">style package</div> is a collection of macros
               	providing a specific variant on formatting, such as hyperlinks
               	in a PDF, the styling of footnotes or references, the use of
               	additional typefaces, or any of over 3,600 other typographic
               	or markup possibilities. There is no direct equivalent in the
               	XML field, but a package can be regarded as broadly equivalent
               	to a CSS or XSLT2 fragment, implementing a particular
               	formatting requirement.
            </div>
            <div class="para e33">Document classes and packages are typically distributed as
               	DocTeX (
               <div class="code e34">.dtx</div>) files, which contain the LaTeX
               	code implementing the features, interleaved with annotation
               	in a literate programming manner, plus user documentation
               	about how to use the additional markup provided (
               <div class="xref e35" linkend="Carlisle2007"></div>). An installer (
               <div class="code e36">.ins</div>)
               	file uses LaTeX to extract the code as a class
               	(
               <div class="code e37">.cls</div>) or style package (
               <div class="code e38">.sty</div>) file
               	from the 
               <div class="code e39">.dtx</div> file, and LaTeX can then be run
               	on the 
               <div class="code e40">.dtx</div> file directly to produce both user
               	documentation and code annotation.
               <div class="popupBox e41">
                  <div class="popupLabel" onmouseover="$('#d1e83').show('1000');" onmouseout="$('#d1e83').hide('1000');">[ footnote ]</div>
                  <div id="d1e83" style="display: none;">
                     <div class="footnote">
                        <div class="para e42">A few older packages are still distributed as raw
                           	    
                           <div class="code e43">.cls</div> or 
                           <div class="code e44">.sty</div> files with
                           	    documentation in comments.
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e45">This method has proved a very reliable and
               	compact means of distribution, but at the cost of some
               	additional complexity in the construction of the master
               	
               <div class="code e46">.dtx</div> file:
            </div>
            <div class="itemizedlist e47">
               <div class="listitem e48">
                  <div class="para e49">documentation and annotation must be armored against
                     	    extraction as code by prefixing each line with
                     	    percent-space (
                     <div class="code e50">%â£</div>);
                  </div>
               </div>
               <div class="listitem e51">
                  <div class="para e52">macro code must be identified for extraction by
                     	    prefixing the 
                     <div class="code e53">\begin</div> and 
                     <div class="code e54">\end</div>
                     	    commands (equivalent to start and end tags) with percent
                     	    and exactly four spaces (
                     <div class="code e55">%â£â£â£â£</div>);
                  </div>
               </div>
               <div class="listitem e56">
                  <div class="para e57">the regular comment character (
                     <div class="code e58">%</div>) must 
                     	    therefore be treated specially in some circumstances (doubled
                     	    or tripled);
                  </div>
               </div>
               <div class="listitem e59">
                  <div class="para e60">there are special tags (in pointy brackets!) like
                     	    
                     <div class="code e61">%&lt;*driver&gt;</div> and
                     	    
                     <div class="code e62">%&lt;/driver&gt;</div> to identify certain
                     	    sections or lines of the file that need extracting or
                     	    ignoring in certain circumstances.
                  </div>
               </div>
            </div>
            <div class="para e63">Against this must be set the advantages of robustness once
               	constructed; the availability of all LaTeX facilities for
               	writing and formatting the documentation; some added
               	document-management features (version control,
               	change-recording, checksumming, indexing of commands used in
               	the code, etc), and the extensive supporting documentation
               	(
               <div class="xref e64" linkend="LaTeX2006"></div>, 
               <div class="xref e65" linkend="Mittelbach2004"></div>,
               	
               <div class="xref e66" linkend="Lehmann2011"></div>).
            </div>
         </div><a name="AutomationrequirementANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e67">
            <div class="title e68">Automation requirement</div>
            <div class="para e69">In 2005, I undertook to create a new thesis document class
               	in my university which would implement stricter controls on
               	the content and sequence of front matter (title page, legal,
               	table of contents, declaration of originality, etc), and
               	particularly on the naming and identity of schools,
               	departments and research centers, and the bibliographic
               	reference format used by each. Many users had become
               	accustomed to designing their own title page, and to the
               	re-wording of the names of their unit to suit their own
               	perceptions or requirements. In some cases this involved
               	inventing entirely new department names or descriptions of
               	their degrees, which conflicted with the university's
               	statutory requirements. While the new class would initially
               	only affect the title page and preliminaries of a thesis, this
               	is exactly where the Library catalog staff look for the
               	metadata (in the case of electronic submissions, the PDF
               	metadata is also required to provide the same
               	information).
            </div>
            <div class="para e70">The data on course names and codes, the abbreviations and
               	full titles of degrees, and the official names of departments
               	and centers were all available from the institutional
               	database, but were subject to annual change, as there were
               	complex and overlapping administrative and pedagogical
               	requirements to be satisfied. This data needed to be converted
               	to the parameter syntax used by LaTeX on an ongoing basis to
               	make it usable as selectable options by users, so a more
               	robust and programmatic solution was needed to automate the
               	process. The data was already available in a consistent XML
               	format, so XML and XSLT2 were obvious candidates for the task.
               	As a long-time user of XML for documentation, I felt it would
               	be an advantage from the maintenance point of view to use the
               	same syntax and method for writing the documentation, and this
               	led to the experiment in using DocBook and generating the
               	
               <div class="code e71">.dtx</div> file with XSLT2.
            </div>
            <div class="para e72">Beyond the title page and the settings for margins and
               	type size, the remainder of a student's thesis document would
               	be largely unaffected, as LaTeX's 
               <div class="code e73">report</div>
               	document class and existing packages already provided all the
               	facilities needed. However, it had become clear from local
               	LaTeX training sessions that some requirements of thesis
               	writing would benefit from more automation, and that better
               	use could be made of the layout specifications, which were,
               	and remain, relatively lax (
               <div class="xref e74" linkend="Flynn2012"></div>), so
               	the decision was taken to experiment with using DocBook for
               	the whole project.
            </div>
         </div>
      </div><a name="ImplementationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e75">
         <div class="title e76">Implementation</div>
         <div class="para e77">The use of XSLT2 to generate XML from XML is standard
            practice, and its use to generate LaTeX from XML is also
            well-established. However, in this case, the resulting LaTeX
            (
            <div class="code e78">.dtx</div>) was going to be used to generate more
            LaTeX code (the 
            <div class="code e79">.cls</div> document), which itself
            would generate ancillary LaTeX files (Table of Contents,
            Index, etc) as well as the student's thesis final PDF.
         </div><a name="MetadataANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e80">
            <div class="title e81">Metadata</div>
            <div class="para e82">A 
               <div class="code e83">.dtx</div> file is made up of a number of
               well-defined sections:
            </div>
            <div class="orderedlist e84">
               <div class="listitem e85">
                  <div class="para e86">an initialization block;</div>
               </div>
               <div class="listitem e87">
                  <div class="para e88">the LaTeX Preamble for the documentation;</div>
               </div>
               <div class="listitem e89">
                  <div class="para e90">a character checksum table;</div>
               </div>
               <div class="listitem e91">
                  <div class="para e92">a change history;</div>
               </div>
               <div class="listitem e93">
                  <div class="para e94">an indexing control block;</div>
               </div>
               <div class="listitem e95">
                  <div class="para e96">the user documentation;</div>
               </div>
               <div class="listitem e97">
                  <div class="para e98">the annotated code;</div>
               </div>
               <div class="listitem e99">
                  <div class="para e100">any ancillary files to be distributed with the class
                     	  or package.
                  </div>
               </div>
            </div>
            <div class="para e101">The design of a DocBook document does not of course align
               	directly with this, but there is provision in one form or
               	another for most of it, and XSLT2 can easily vary the order of
               	processing. The initial metadata (mostly effectivities) is
               	stored in the 
               <div class="code e102">book</div> root element start-tag:
            </div>
            <div class="programlisting e103" xml:space="preserve">
               &lt;book xml:id="uccthesis" version="1" revision="03" xml:lang="en"
               xml:base="ucc" remap="a4paper,12pt" arch="class" audience="lppl"
               condition="2009/09/24" conformance="LaTeX2e" os="all"
               security="2070" userlevel="cls" vendor="UCC" status="beta"&gt;
            </div>
            <div class="itemizedlist e104">
               <div class="listitem e105">
                  <div class="para e106">The 
                     <div class="code e107">xml:base</div> specifies the ultimate
                     	  destination directory within TeX's installation tree;
                  </div>
               </div>
               <div class="listitem e108">
                  <div class="para e109">The 
                     <div class="code e110">remap</div> attribute is [ab]used to hold 
                     	    document-class options for LaTeX so that the target
                     	    document format can be switched between US Letter and ISO
                     	    A4, and the base font size changed.
                  </div>
               </div>
               <div class="listitem e111">
                  <div class="para e112">The 
                     <div class="code e113">audience</div> attribute is used to select
                     	    a boilerplate license document (here, the LaTeX Project
                     	    Public License).
                  </div>
               </div>
               <div class="listitem e114">
                  <div class="para e115">The 
                     <div class="code e116">security</div> attribute holds a checksum
                     	    which is validated during LaTeX processing, and which
                     	    must be updated after changes to the code (or set to 0 to
                     	    disable it).
                  </div>
               </div>
               <div class="listitem e117">
                  <div class="para e118">The 
                     <div class="code e119">conformance</div> and
                     	    
                     <div class="code e120">condition</div> attributes hold the version and
                     	    date of LaTeX required.
                  </div>
               </div>
            </div>
            <div class="para e121">The 
               <div class="code e122">info/cover</div> element type was used to hold
               	the document management data, principally the metadata, the
               	lists of packages required by both the documentation and the
               	class or package file itself; a file list for the manifest;
               	and any setup commands for the documentation. The title,
               	author, contact details, Abstract/Summary, and revision
               	history are in the 
               <div class="code e123">info</div> container in the
               	conventional manner.
            </div>
            <div class="para e124">Working from the DocTeX and 
               <div class="code e125">ltxdoc</div>
               	specifications, with existing classes as examples, it was then
               	possible to construct the 
               <div class="code e126">.dtx</div> initialization
               	block as a literal result template, using the ID and
               	version values from the 
               <div class="code e127">book</div> element's
               	attributes. The preliminary LaTeX comments and the âdriverâ
               	block are shielded from processing by a conditional which
               	always evaluates to false:
            </div>
            <div class="programlisting e128" xml:space="preserve">
               % \iffalse meta-comment
               %
               % Extracted from uccthesis.xml
               [...licensing and descriptive comment...]
               % \fi
               % \iffalse
               %&lt;*driver&gt;
               \ProvidesFile{uccthesis.dtx}
               %&lt;/driver&gt;
               %&lt;class&gt;\NeedsTeXFormat{LaTeX2e}[2009/09/24]
               %&lt;class&gt;\ProvidesClass{uccthesis}[2012/12/18 v1.03 Typesetting a UCC thesis with LaTeX]
               ...
               % \fi
            </div>
         </div><a name="AnnotatedcodeANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e129" xml:id="codedoc">
            <div class="title e130">Annotated code</div>
            <div class="para e131">The annotated code is stored in 
               <div class="code e132">chapter</div>
               	elements in a 
               <div class="code e133">part</div> element with an ID of
               	
               <div class="code e134">code</div>. These can be subdivided into sections and
               	subsections according to the modularity and complexity of the
               	code. The annotations get output as part of the formatted
               	documentation: the code gets extracted to the class or package
               	file. The 
               <div class="code e135">ltxdoc</div> package uses LaTeX
               	
               <div class="code e136">\section</div>s as its top level, so a DocBook chapter
               	is mapped in the XSLT to a LaTeX section, a
               	
               <div class="code e137">sect1</div> to a 
               <div class="code e138">\subsection</div> and so
               	on.
            </div><a name="OptionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e139">
               <div class="title e140">Options</div>
               <div class="para e141">The 
                  <div class="code e142">.dtx</div> format requires any user-selectable
                  	  options for the class or package to be declared and activated
                  	  
                  <div class="emphasis e143">before</div> any requisite style or utility
                  	  packages are loaded, so the first chapter would typically
                  	  contain the option code.
               </div>
               <div class="para e144">The large number of special-purpose definitions needed
                  	  for the departmental controls in the UCC Thesis class were
                  	  stored in 
                  <div class="code e145">methodsynopsis</div> elements in external
                  	  file entities per Faculty. This is probably the most blatant
                  	  piece of tag abuse, but the structure seemed to offer an
                  	  acceptable way to store the data transformed from the
                  	  administrative system's export format:
               </div>
               <div class="programlisting e146" xml:space="preserve">
                  &lt;methodsynopsis xml:id="physio" arch="med"&gt;
                  &lt;methodname&gt;Vancouver&lt;/methodname&gt;
                  &lt;methodparam&gt;
                  &lt;parameter role="department" remap="Department of"&gt;Physiology&lt;/parameter&gt;
                  &lt;initializer&gt;vancouver&lt;/initializer&gt;
                  &lt;/methodparam&gt;
                  &lt;/methodsynopsis&gt;
               </div>
               <div class="itemizedlist e147">
                  <div class="listitem e148">
                     <div class="para e149">each department gets an ID value which becomes the
                        	      departmental class option entered by the student
                        	      (
                        <div class="code e150">physio</div>);
                     </div>
                  </div>
                  <div class="listitem e151">
                     <div class="para e152">the school to which the department belongs
                        	      (
                        <div class="code e153">med</div>) is stored in the 
                        <div class="code e154">arch</div>
                        	      attribute;
                     </div>
                  </div>
                  <div class="listitem e155">
                     <div class="para e156">the method name becomes the printable name of the
                        	      bibliographic format required
                        	      (
                        <div class="code e157">Vancouver</div>);
                     </div>
                  </div>
                  <div class="listitem e158">
                     <div class="para e159">the method parameters hold the type of
                        	      organisational unit (
                        <div class="code e160">department</div>), the
                        	      prefix for printing on the title page (
                        <div class="code e161">Department
                           		of
                        </div>), and the actual name of the organisational
                        	      unit (
                        <div class="code e162">Physiology</div>);
                     </div>
                  </div>
                  <div class="listitem e163">
                     <div class="para e164">the initializer element is used for name of the
                        	      BibTeX style for this discipline
                        	      (
                        <div class="code e165">vancouver</div>).
                     </div>
                  </div>
               </div>
               <div class="para e166">The XSLT transforms these to package options which define
                  	  the official name of the department and fix the
                  	  bibliographic format in that discipline. These are output
                  	  before the annotated code itself starts, as described
                  	  above.
               </div>
               <div class="programlisting e167" xml:space="preserve">
                  %â£â£â£â£\begin{macrocode}
                  \DeclareOption{physio}{%
                  \department{Physiology}
                  \@usebib{vancouver}{Vancouver}{}
                  }
                  %â£â£â£â£\end{macrocode}
               </div>
            </div><a name="PackagespecificationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e168">
               <div class="title e169">Package specification</div>
               <div class="para e170">Classes and packages, as well as documentation, often
                  	  use frequently-occurring sets of utility and style packages,
                  	  with commonly-used setup commands before and after package
                  	  invocation. To avoid class and package authors having to
                  	  retype similar blocks of code for every class or package
                  	  they create, an ancillary file 
                  <div class="code e171">prepost.xml</div>
                  	  stores an author's package preferences. The two lists of
                  	  packages (for the documentation, and for the class or
                  	  package itself) are therefore given in an XML structure
                  	  rather than just typed in LaTeX format as code, so that
                  	  preferences can be looked up and implemented. We used
                  	  segmented lists in 
                  <div class="code e172">constraintdef</div> elements
                  	  in the 
                  <div class="code e173">info/cover</div> to do this.
               </div>
               <div class="programlisting e174" xml:space="preserve">
                  &lt;info&gt;
                  &lt;cover&gt;
                  &lt;constraintdef xml:id="clspackages" linkend="options"&gt;
                  &lt;segmentedlist&gt;
                  &lt;segtitle&gt;Packages needed for this class&lt;/segtitle&gt;
                  &lt;seglistitem&gt;
                  &lt;seg&gt;fix-cm&lt;/seg&gt;
                  &lt;/seglistitem&gt;
                  &lt;seglistitem&gt;
                  &lt;seg role="textwidth=159mm,textheight=229mm"&gt;geometry&lt;/seg&gt;
                  &lt;/seglistitem&gt;
                  &lt;seglistitem&gt;
                  &lt;seg&gt;graphicx&lt;/seg&gt;
                  &lt;/seglistitem&gt;
                  [...]
                  &lt;/segmentedlist&gt;
                  &lt;/constraintdef&gt;
                  [...]
                  &lt;/cover&gt;
                  &lt;/info&gt;
               </div>
               <div class="para e175">Each 
                  <div class="code e176">seglistitem</div> specifies a package
                  	  required in the 
                  <div class="code e177">seg</div> element. The
                  	  
                  <div class="code e178">role</div> attribute holds any package options
                  	  needed.
                  <div class="popupBox e179">
                     <div class="popupLabel" onmouseover="$('#d1e378').show('1000');" onmouseout="$('#d1e378').hide('1000');">[ footnote ]</div>
                     <div id="d1e378" style="display: none;">
                        <div class="footnote">
                           <div class="para e180">In review, it was suggested that reversing this and
                              	      placing the package name in the 
                              <div class="code e181">role</div>
                              	      attribute and the options in the element content would
                              	      be more natural. This would not be hard to
                              	      change.
                           </div>
                        </div>
                     </div>
                  </div> A similar construct is used with an ID of
                  	  
                  <div class="code e182">docpackages</div> for any packages required for the
                  	  documentation.
               </div>
               <div class="para e183">The 
                  <div class="code e184">linkend</div> attribute specifies the ID of a
                  	  chapter or section in the annotated code after which the
                  	  package loading commands are to be output.
               </div>
               <div class="programlisting e185" xml:space="preserve">
                  \usepackage{fix-cm}
                  \usepackage[textwidth=159mm,textheight=229mm]{geometry}
                  \usepackage{graphicx}
                  ...
                  
               </div>
            </div><a name="ModularcodeANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e186">
               <div class="title e187">Modular code</div>
               <div class="para e188">Code can be given in 
                  <div class="code e189">programlisting</div>
                  	  elements interspersed with 
                  <div class="code e190">para</div> and other
                  	  documentary elements of annotation. The amount of annotation
                  	  and frequency of interruption is unrestricted: the
                  	  
                  <div class="code e191">ltxdoc</div> extraction process simply stitches
                  	  together all the code and outputs it; and the documentation
                  	  formatting treats the code as verbatim blocks (line-numbered
                  	  for convenience).
               </div>
               <div class="para e192">However, the 
                  <div class="quote e193">literate-programming</div> format
                  	  for the uses 
                  <div class="code e194">annotation</div> elements to define the
                  	  LaTeX commands and environments being provided. The
                  	  
                  <div class="code e195">role</div> attribute defines the class of object
                  	  being annotated, and the 
                  <div class="code e196">xreflabel</div> attribute
                  	  gives its name. Each such 
                  <div class="code e197">annotation</div> element
                  	  can contain paragraphs, lists, etc, plus the
                  	  
                  <div class="code e198">programlisting</div> code, broken into whatever
                  	  granularity is needed to explain what is being done.
               </div>
               <div class="programlisting e199" xml:space="preserve">
                  &lt;annotation role="environment" xreflabel="epigraph"&gt;
                  &lt;para&gt;Define an environment for Epigraphs. These would normally go immediately after
                  the
                  &lt;command&gt;chapter&lt;/command&gt; command. This is basically the &lt;envar&gt;quotation&lt;/envar&gt;
                  environment modified, but it has to allow for &lt;emphasis&gt;either&lt;/emphasis&gt; manual
                  &lt;emphasis&gt;or&lt;/emphasis&gt; automated citation (because it may just be a phrase needing
                  
                  no citation), whereas a normal quotation &lt;emphasis&gt;must&lt;/emphasis&gt; be cited. It 
                  therefore has &lt;emphasis&gt;two&lt;/emphasis&gt; arguments, described below:&lt;/para&gt;
                  &lt;remark version="0.92" revision="2011-05-31"&gt;Added Epigraphs.&lt;/remark&gt;
                  &lt;programlisting&gt;
                  \newenvironment{epigraph}[2][\relax]{%
                  &lt;/programlisting&gt;
                  &lt;para&gt;Record the argument values now, because they are needed in the end of the 
                  environment, so they have to pass across the group boundary. The compulsory 
                  argument is for a &amp;BiBTeX; citation key, so that a proper citation can be 
                  formatted; the optional argument is for when a pre-formed, 
                  &lt;wordasword&gt;full&lt;/wordasword&gt; (actually often simpler, non-rigorous) citation
                  is wanted.&lt;/para&gt;
                  &lt;programlisting&gt;
                  \gdef\@fullcite{#1}%
                  \gdef\@quotcite{#2}%
                  &lt;/programlisting&gt;
                  ...
                  &lt;/annotation&gt;
               </div>
               <div class="para e200">The 
                  <div class="code e201">remark</div> element is used for noting
                  	  updates: these get extracted to the revision history. The
                  	  annotations are output using the armored 
                  <div class="code e202">ltxdoc</div>
                  	  code; the actual lines of code from the
                  	  
                  <div class="code e203">programlisting</div> elements are output
                  	  
                  <div class="emphasis e204">un</div>armored for extraction. This results
                  	  in LaTeX code in the 
                  <div class="code e205">.dtx</div> as shown
                  	  below:
               </div>
               <div class="programlisting e206" xml:space="preserve">
                  % \begin{environment}{epigraph}
                  % Define an environment for Epigraphs. These would normally go immediate after the
                  % \DescribeMacro{\chapter}\verb`\chapter` command. This is basically the
                  % \DescribeEnv{quotation}\texttt{quotation} environment modified, but it has to 
                  % allow for \emph{either} manual \emph{or} automated citation (because it may 
                  % just be a phrase needing no citation), whereas a normal quotation \emph{must} be
                  
                  % cited. It therefore has \emph{two} arguments, described below:\par
                  % \changes{v0.92}{2011/05/31}{Added Epigraphs.}
                  %    \begin{macrocode}
                  \newenvironment{epigraph}[2][\relax]{%
                  %    \end{macrocode}
                  % Record the argument values now, because they are needed in the end of the environment,
                  
                  % so they have to pass across the group boundary. The compulsory argument is for a
                  
                  % \BibTeX{} citation key, so that a proper citation can be formatted; the optional
                  
                  % argument is for when a pre-formed, `full' (actually often simpler, non-rigorous)
                  
                  % citation is wanted.\par
                  %    \begin{macrocode}
                  \gdef\@fullcite{#1}%
                  \gdef\@quotcite{#2}%
                  %    \end{macrocode}
                  ...
                  % \end{environment}
               </div>
               <div class="para e207">The formatted result in the documentation PDF is shown
                  	  in 
                  <div class="xref e208" linkend="epigraph"></div>, where the marginal
                  	  annotation of the commands being documented can be
                  	  seen.
               </div>
               <div class="figure e209" xml:id="epigraph">
                  <div class="mediaobject e210">
                     <div class="imageobject e211">
                        <div class="metaBox e212"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e458').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e458" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e212'
                                 </span><span class="metaAttribute">fileref='../../../vol10/graphics/Flynn01/Flynn01-001.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e213">The 
                  <div class="code e214">ltxdoc</div> package provides only two
                  	  documentary environments for annotated code:
                  	  
                  <div class="code e215">macro</div> and 
                  <div class="code e216">environment</div>. The
                  	  
                  <div class="code e217">dox</div> utility package has been  used to provide
                  	  additional environments for other declarations such as
                  	  counters, classes, options, templates, etc.
               </div>
            </div>
         </div><a name="UserdocumentationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e218" xml:id="userdoc">
            <div class="title e219">User documentation</div>
            <div class="para e220">User documentation is similarly stored in a
               	
               <div class="code e221">part</div> element, this time with the ID of
               	
               <div class="code e222">doc</div>. In the 
               <div class="code e223">.dtx</div> file, the user
               	documentation starts with an 
               <div class="emphasis e224">un</div>armored
               	LaTeX Preamble where settings and packages needed for
               	formatting the documentation are specified, followed by a
               	self-reference to the same 
               <div class="code e225">.dtx</div> file in place of
               	the actual text. This enables LaTeX to read the Preamble and
               	then switch to armored mode to input the same document to
               	process the armored documentation at high speed (doing it all
               	in a single pass would entail a more computationally-intensive
               	process).
            </div><a name="PreambleANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e226">
               <div class="title e227">Preamble</div>
               <div class="para e228">Using the 
                  <div class="code e229">remap</div> attribute from the
                  	  
                  <div class="code e230">book</div> root element shown earlier (for any
                  	  changes to the 
                  <div class="code e231">ltxdoc</div> options) we can now
                  	  output the start of the documentation and add the
                  	  
                  <div class="code e232">\usepackage</div> commands for the packages
                  	  specified. These are given in exactly the same way as those
                  	  for the code (above), stored in a separate
                  	  
                  <div class="code e233">constraindef</div> element, and they use the same
                  	  
                  <div class="code e234">prepost.xml</div> lookup mechanism for commonly-used
                  	  options.
               </div>
               <div class="para e235">Unlike with the code, however, this mechanism is largely
                  	  automated for documentation. This provides for a
                  	  configurable basic set of packages (defined in
                  	  
                  <div class="code e236">prepost.xml</div>) as well as the detection of
                  	  packages required for specific formatting choices in the
                  	  documentation. For example, using a compact list in the
                  	  documentation (the 
                  <div class="code e237">spacing="compact"</div> attribute
                  	  on a list container) will automatically ensure that the
                  	  relevant package (
                  <div class="code e238">enumitem</div>, in this case) is
                  	  included in the 
                  <div class="code e239">.dtx</div> file without the author
                  	  needing to take any action (and removing it, should compact
                  	  lists cease to be used).
               </div>
               <div class="programlisting e240" xml:space="preserve">
                  %&lt;*driver&gt;
                  \documentclass[a4paper,12pt]{ltxdoc}
                  \usepackage[utf8x]{inputenc}
                  \usepackage[T1]{fontenc}
                  \usepackage[textwidth=159mm,textheight=229mm]{geometry}
                  \usepackage{graphicx}
                  \usepackage{fancyvrb}
                  [...]
               </div>
               <div class="para e241">Some additional 
                  <div class="code e242">ltxdoc</div> commands are added
                  	  to control the behaviour of the documentation
                  	  cross-referencing and indexing. The 
                  <div class="code e243">\DocInput</div>
                  	  command then makes the 
                  <div class="code e244">.dtx</div> file input itself
                  	  as described earlier.
               </div>
               <div class="programlisting e245" xml:space="preserve">
                  [...]
                  \EnableCrossrefs
                  \CodelineIndex
                  \RecordChanges
                  \begin{document}
                  \raggedright
                  \DocInput{uccthesis.dtx}
                  \end{document}
                  %&lt;/driver&gt;
               </div>
               <div class="para e246">This 
                  <div class="quote e247">driver</div> block is followed by three
                  	  blocks not illustrated here:
               </div>
               <div class="itemizedlist e248">
                  <div class="listitem e249">
                     <div class="para e250">a character checksum table as a protection against
                        	      file corruption in data transfer (output in a literal
                        	      result template in the XSLT2 program);
                     </div>
                  </div>
                  <div class="listitem e251">
                     <div class="para e252">a list of 
                        <div class="code e253">\changes</div> commands for the
                        	      Change History (taken from the DocBook
                        	      
                        <div class="code e254">revisionhistory</div> and 
                        <div class="code e255">remark</div>
                        	      elements);
                     </div>
                  </div>
                  <div class="listitem e256">
                     <div class="para e257">and a standard block of hard-coded
                        	      
                        <div class="code e258">\DoNotIndex</div> commands to prevent
                        	      
                        <div class="code e259">ltxdoc</div> indexing non-relevant internal
                        	      LaTeX commands.
                     </div>
                  </div>
               </div>
            </div><a name="ArmoringthetextANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e260">
               <div class="title e261">Armoring the text</div>
               <div class="para e262">After all this automated Preamble we can output the
                  	  
                  <div class="code e263">\title</div> and 
                  <div class="code e264">\author</div>, an Abstract or
                  	  Summary, and then the chapters or sections of documentation
                  	  text. These are all standard DocBook, handled with XSLT2
                  	  templates in the conventional manner, with the exception of
                  	  adding the 
                  <div class="code e265">%â£</div> armor.
               </div>
               <div class="para e266">The armoring means that
                  	  
                  <div class="code e267">&lt;sect1&gt;&lt;title&gt;Introduction&lt;/title&gt;...</div> 
                  	  is output as 
                  <div class="code e268">%â£\subsection{Introduction}</div> (as
                  	  noted above, the hierarchy is offset by one level to
                  	  accommodate 
                  <div class="code e269">ltxdoc</div>'s default format). All text
                  	  nodes are handed to a 
                  <div class="code e270">text()</div> template which
                  	  passes the content through a recursive named template
                  	  filter, honoring hard-coded newlines but adding the
                  	  
                  <div class="code e271">%â£</div> prefix. The template also handles TeX
                  	  special characters in filenames and other literals,
                  	  detecting a 
                  <div class="code e272">parent::programlisting</div> (where
                  	  armoring is not required). It also removes any leading
                  	  white-space after a newline (inserted by Emacs'
                  	  
                  <div class="emphasis e273">psgml-mode</div>'s pretty-printing). The
                  	  final token output is always a newline, so that we can start
                  	  any element which occurs in element content with the
                  	  armour.
               </div>
               <div class="para e274">Verbatim code in 
                  <div class="code e275">programlisting</div> examples
                  	  presented a special case: not only must the code itself
                  	  
                  <div class="emphasis e276">not</div> be armored, the processor must
                  	  be able to escape from the armored text mode, otherwise the
                  	  verbatim material itself would still contain leading
                  	  
                  <div class="code e277">%</div> signs.
               </div>
               <div class="programlisting e278" xml:space="preserve">
                  &lt;variablelist&gt;
                  &lt;varlistentry&gt;
                  &lt;term&gt;&lt;envar&gt;dedication&lt;/envar&gt;&lt;/term&gt;
                  &lt;listitem&gt;
                  &lt;para&gt;The &lt;envar&gt;dedication&lt;/envar&gt;
                  	environment is for you to add a dedication.&lt;/para&gt;
                  &lt;programlisting annotations="dedication" language="LaTeX"&gt;
                  \begin{dedication}
                  ...
                  \end{dedication}
                  &lt;/programlisting&gt;
                  &lt;/listitem&gt;
                  &lt;/varlistentry&gt;
                  [...]
               </div>
               <div class="para e279">This is done by escaping the
                  	  
                  <div class="code e280">%&lt;*ignore&gt;</div> tag separately with the
                  	  same 
                  <div class="code e281">\iffalse...\fi</div> method seen earlier (the
                  	  same is done for the end-tag). Between them comes the
                  	  
                  <div class="emphasis e282">unarmored</div> verbatim content (formatted
                  	  here with the 
                  <div class="code e283">listings</div> package, which automates
                  	  per-language colored pretty-printing of the code).
               </div>
               <div class="programlisting e284" xml:space="preserve">
                  % \item[Dedication:] The \texttt{dedication} 
                  % environment is for you to add a dedication. 
                  % \iffalse 
                  %&lt;*ignore&gt; 
                  % \fi
                  \begin{lstlisting}[language={[LaTeX]TeX},emph={dedication}]
                  \begin{dedication}
                  ... 
                  \end{dedication} 
                  \end{lstlisting} 
                  % \iffalse 
                  %&lt;/ignore&gt; 
                  % \fi
               </div>
               <div class="para e285">This results in formatting like this (minus the color,
                  	  and using this conference's default
                  	  
                  <div class="code e286">variablelist</div> layout):
               </div>
               <div class="popupBox e287">
                  <div class="popupLabel" onmouseover="$('#d1e648').show('1000');" onmouseout="$('#d1e648').hide('1000');">[ blockquote ]</div>
                  <div id="d1e648" style="display: none;">
                     <div class="blockquote">
                        <div class="variablelist e288">
                           <div class="varlistentry e289">
                              <div class="term e290">Dedication:</div>
                              <div class="listitem e291">
                                 <div class="para e292">The 
                                    <div class="code e293">dedication</div> environment is for you
                                    		  to add a dedication.
                                 </div>
                                 <div class="programlisting e294" xml:space="preserve">
                                    \begin{
                                    <div class="emphasis e295">dedication</div>} 
                                    ...
                                    \end{
                                    <div class="emphasis e296">dedication</div>}
                                    		
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e297">A bibliography, if one is used, is output in a similar
                  	  manner to the verbatim code mentioned above, using the
                  	  
                  <div class="code e298">%&lt;*ignore&gt;</div> tags and the
                  	  
                  <div class="code e299">VerbatimOut</div> environment from the
                  	  
                  <div class="code e300">fancyvrb</div> package. When LaTeX is run on the
                  	  
                  <div class="code e301">.dtx</div> file, this extracts the bibliographic
                  	  content to an external (
                  <div class="code e302">.bib</div>) file so that it
                  	  on a subsequent pass it can be reprocessed with BibTeX or
                  	  
                  <div class="emphasis e303">biblatex</div> to recreate its own
                  	  bibliography.
               </div>
            </div><a name="InlinesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e304">
               <div class="title e305">Inlines</div>
               <div class="para e306">A number of elements in mixed content are used to
                  	  identify terms and values for indexing. The
                  	  
                  <div class="code e307">envar</div> element type is used to identify a
                  	  LaTeX environment name; 
                  <div class="code e308">classname</div> for a
                  	  document class name, 
                  <div class="code e309">package</div> for a package
                  	  name, and 
                  <div class="code e310">option</div> for an option.
               </div>
               <div class="para e311"></div>
            </div>
         </div>
      </div><a name="AutomationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e312">
         <div class="title e313">Automation</div>
         <div class="para e314">The advantages of literate programming (
            <div class="xref e315" linkend="Knuth1992"></div>)&nbsp;â modular construction, hermetic
            testability, debugging tools, interspersed documentation, even
            pretty-printing&nbsp;â are well known (
            <div class="xref e316" linkend="Thompson2000"></div>) and well-criticised (static
            representation; lack of folding structures, version control,
            alternate views of variables). In itself, literate programming
            does not solve any specific requirement for automation (although
            modularity may contribute to this). In developing this method, one
            of the objectives was to remove as much as possible the tedious
            and repetitive typing that program development and documentation
            writing engenders.
         </div><a name="DevelopmentfrompilottoproductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e317">
            <div class="title e318">Development from pilot to production</div>
            <div class="para e319">The original thesis document class was successfully
               	implemented, and the XML-based system as described is used to
               	maintain it. The 50 or so class options specifying department
               	and degree are used to simplify and rationalize the setup for
               	the department name, title-page layout, and style of
               	references, while the class itself presets the rest of the
               	formatting; see 
               <div class="xref e320" linkend="setup"></div>).
            </div>
            <div class="figure e321" xml:id="setup">
               <div class="title e322">Thesis set-up</div>
               <div class="informaltable e323">
                  <div class="tr e324">
                     <div class="td e325">
                        	      
                        <div class="programlisting e326" xml:space="preserve">
                           \documentclass[history,phd]{uccthesis}
                           \begin{document}
                           \title{The Application of XML to the Lexicography 
                           of Old, Middle and Early Modern Irish}
                           \author{Julianne Nyhan}
                           \qualifications{BA}
                           \professor{Prof Dermot Keogh}
                           \supervisor{Prof Donnchadh Ã CorrÃ¡in}
                           \date{June 2005}
                           \maketitle
                           ... 
                           \end{document}
                        </div>
                        	    
                     </div>
                     <div class="td e327">
                        	      
                        <div class="mediaobject e328">
                           <div class="imageobject e329">
                              <div class="metaBox e330"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e736').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e736" class="metaSource" style="display:none;">                
                                    &lt;imagedata<span class="metaAttribute">class='e330'
                                       </span><span class="metaAttribute">fileref='../../../vol10/graphics/Flynn01/Flynn01-002.png'
                                       </span><span class="metaAttribute">format='png'
                                       </span><span class="metaAttribute">width='75%'
                                       </span>
                                    &gt;
                                    
                                 </div>
                              </div>
                           </div>
                        </div>
                        	    
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e331">However, that class was a pilot: the result is that this
               	XML-based mechanism is usable for the creation and maintenance
               	of almost any LaTeX class or package. The system is used for
               	all the author's classes and packages, and has significantly
               	reduced development time on a new class or package. In the
               	development of additional classes or packages in a series or
               	suite (such as occurs in corporate use) the reduction is
               	greater because of the ease and reliability with which modules
               	of code can be included (as entities or XIncludes). The reuse
               	of imported data specifications also has an important place in
               	industrial documentation, where sets of part numbers or known
               	production components need to be pre-specified, and the system
               	has now been adapted twice to use this method.
            </div>
         </div><a name="MarkuploadANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e332">
            <div class="title e333">Markup load</div>
            <div class="para e334">Many of the templates in the XSLT2 program make decisions
               	about the markup they should emit according to the content of
               	the element type they match. As an example, a
               	
               <div class="code e335">firstterm</div> element type can be made to identify
               	from its position if it is indeed the first occurrence, and if
               	so, to add a bold LaTeX 
               <div class="code e336">\index</div> entry rather
               	than a plain one. The careful author can add an attribute to
               	suppress this behaviour in cases where a first or early
               	occurrence may be used 
               <div class="emphasis e337">en passant</div>.
            </div>
            <div class="para e338">In a more complex environment, such as a footnote or the
               	
               <div class="code e339">term</div> element of a 
               <div class="code e340">variablelist</div>
               	containing code requiring a monospace font and LaTeX's
               	verbatim formatting, the template will choose not to use
               	LaTeX's 
               <div class="code e341">\verb</div> command because of its fragility
               	inside other markup, and to use 
               <div class="code e342">\texttt</div> (simple
               	monospace) instead, or even 
               <div class="code e343">\url</div>, according to
               	content. This is something which would otherwise require the author to
               	remember that certain special characters cause LaTeX
               	problems when treated verbatim.
            </div>
            <div class="para e344">Cross-references which cannot be automated by LaTeX's
               	otherwise excellent 
               <div class="code e345">varioref</div> package (such as
               	references to an unnumbered list item, where by definition no reference
               	number exists) are pre-empted in the XSLT2 code and the reference
               	switches to the 
               <div class="code e346">fmtcount</div> package, which phrases
               	a counter value as a spelled-out ordinal: 
               <div class="quote e347">see the third
                  	  item in the list on p.42
               </div>.
            </div>
            <div class="para e348">The objective in all these cases is to relieve class and
               	package authors of the need to work manually around LaTeX's
               	oddities and allow them to write unhindered, for example,  by
               	the need to remember that such-and-such a reference was to a
               	table, or a figure, or a subsubsubsection, or a call-out; and
               	to have the reference auto-adjust its semantics if the target
               	element type gets changed.
            </div>
            <div class="para e349">As an example of the use of markup, the formatted
               	annotation output (code documentation) usually requires a
               	wider left margin than the user documentation because code
               	fragments are identified by a marginal note showing the
               	LaTeX command name. In order to accommodate the widest name
               	used, a new value for the margin is calculated in the XSLT2
               	program, using the longest value of the various commands
               	explained in the annotations. This ensures that an
               	unexpectedly long command name will not extend beyond the
               	left-hand edge of the page. This calculation, straightforward
               	in XSLT2, would be computationally challenging in LaTeX and
               	would need to be written to use the second pass of the
               	document normally associated with LaTeX tables of content
               	and cross-references. This calculation can therefore be done
               	first, before processing the content of the 
               <div class="code e350">part</div>
               	element for annotated code.
            </div>
            <div class="para e351">The use of XML also makes it straightforward to query the
               	document structure for control purposes. For example, using
               	standard command-line tools such as the LTxml toolkit
               	provides, a list of macros and environments defined can be
               	extracted, or a list made of the packages used:
            </div>
            <div class="programlisting e352" xml:space="preserve">
               $ lxprintf -e annotation "%s (%s)\n" @xreflabel @role uccthesis.xml | sort
               ackname (macro)
               acknowledgements (environment)
               author (macro)
               bibliography (macro)
               bibname (macro)
               cjk (option)
               dedication (environment)
               department (macro)
               draft (environment)
               epigraph (environment)
               ...
               $ lxprintf -e \
               'constraintdef[@xml:id="clspackages"]/segmentedlist/seglistitem' \
               "%s\n" seg uccthesis.xml
               inputenc
               fontenc
               geometry
               lmodern
               url
               graphicx
               array
               calc
               soul
               textcomp
               ucccrest
               setspace
               float
               $
               
            </div>
         </div><a name="TagabuseANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e353" xml:id="tagabuse">
            <div class="title e354">Tag abuse</div>
            <div class="para e355">We said earlier in 
               <div class="xref e356" linkend="codedoc"></div> that some
               	element types have been used for purposes not envisaged by
               	DocBook, and that part of this experiment was to identify what
               	the nature of these use cases in class and package maintenance
               	was likely to be. As there are areas of DocBook into which the
               	present author has never had need to stray, suggestions are
               	welcomed for element types with a better fit. A future task is
               	to write an RNG specialist modification layer for the DocBook
               	schema to create some additional element types to avoid the
               	current level of abuse.
            </div>
            <div class="variablelist e357">
               <div class="varlistentry e358">
                  <div class="term e359">
                     <div class="code e360">exceptionname</div>
                  </div>
                  <div class="listitem e361">
                     <div class="para e362">Used to hold keywords of RFC 2119:1997 (
                        <div class="xref e363" linkend="Bradner1997"></div>) for direction on requirement or
                        	    optionality. Formatted as small caps.
                     </div>
                  </div>
               </div>
               <div class="varlistentry e364">
                  <div class="term e365">
                     <div class="code e366">methodsynopsis</div>
                  </div>
                  <div class="listitem e367">
                     <div class="para e368">Holds the structured data for the naming departments
                        	    and degrees (here; extensible to other structured data).
                     </div>
                  </div>
               </div>
               <div class="varlistentry e369">
                  <div class="term e370">
                     <div class="code e371">entry</div>
                  </div>
                  <div class="listitem e372">
                     <div class="para e373">In a table, the attributes 
                        <div class="code e374">wordsize</div>,
                        	    
                        <div class="code e375">charoff</div>, 
                        <div class="code e376">char</div>, and
                        	    
                        <div class="code e377">morerows</div> are used to hold dimensions required
                        	    for LaTeX to format a multi-row column containing a large
                        	    vertical brace.
                     </div>
                  </div>
               </div>
               <div class="varlistentry e378">
                  <div class="term e379">
                     <div class="code e380">classname</div>, 
                     <div class="code e381">package</div>,
                     	  
                     <div class="code e382">option</div>, 
                     <div class="code e383">envar</div>
                  </div>
                  <div class="listitem e384">
                     <div class="para e385">These are used to identify LaTeX class, package,
                        	    option, and environment names or values.
                     </div>
                  </div>
               </div>
               <div class="varlistentry e386">
                  <div class="term e387">
                     <div class="code e388">annotation</div>
                  </div>
                  <div class="listitem e389">
                     <div class="para e390">Used as the container for modules or fragments of
                        	      annotated code. In the 
                        <div class="code e391">info/cover</div> element,
                        	      this is used for the wording of the Notice which goes in
                        	      the Preamble of the 
                        <div class="code e392">.ins file.</div>
                     </div>
                  </div>
               </div>
               <div class="varlistentry e393">
                  <div class="term e394">
                     <div class="code e395">cover</div>
                  </div>
                  <div class="listitem e396">
                     <div class="para e397">Holds the setup specifications for packages.</div>
                  </div>
               </div>
               <div class="varlistentry e398">
                  <div class="term e399">
                     <div class="code e400">constraintdef</div>
                  </div>
                  <div class="listitem e401">
                     <div class="para e402">Holds the structured lists of packages needed for
                        	    documentation and for the class or package being written.
                     </div>
                  </div>
               </div>
               <div class="varlistentry e403">
                  <div class="term e404">
                     <div class="code e405">procedure</div>
                  </div>
                  <div class="listitem e406">
                     <div class="para e407">Used in the 
                        <div class="code e408">prepost.xml</div> file to store
                        	      the default settings for frequently-used packages with
                        	      any ancillary commands needed before and after package
                        	      load.
                     </div>
                  </div>
               </div>
               <div class="varlistentry e409">
                  <div class="term e410">
                     <div class="code e411">cmdsynopsis</div>
                  </div>
                  <div class="listitem e412">
                     <div class="para e413">Within a 
                        <div class="code e414">constraintdef</div> in a
                        	      
                        <div class="code e415">procedure/step</div>, holds commands which need
                        	      to be ouput before (or after) a command.
                     </div>
                  </div>
               </div>
               <div class="varlistentry e416">
                  <div class="term e417">
                     <div class="code e418">type</div>
                  </div>
                  <div class="listitem e419">
                     <div class="para e420">In documentation, marks a span for which special
                        	      typographical treatment is needed. The role attribute
                        	      must be set to 
                        <div class="code e421">font</div> and the remap attribute
                        	      must be set to the NFSS2e three-character
                        	      fontname code.
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e422">At the moment, the XSLT also generates a shell script file
               	which can be used to build the relevant LaTeX distribution
               	package (a specially-formed zip file). This needs to be
               	replaced by a parameterised Makefile, using the
               	
               <div class="code e423">latexmk</div> script.
            </div>
         </div>
      </div><a name="ConclusionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e424">
         <div class="title e425">Conclusions</div>
         <div class="para e426">The experience of this experiment has been fourfold:</div>
         <div class="orderedlist e427">
            <div class="listitem e428">
               <div class="para e429">It is certainly possible to use XML to define and
                  	  maintain LaTeX document class and package data and
                  	  documentation, and to use XSLT2 to create the distribution
                  	  files. In conjunction with a small shell script or Makefile
                  	  and a suitable repository mechanism (eg Subversion, GIT,
                  	  etc), a fairly complete process can be defined for
                  	  versioning and production of LaTeX document classes and
                  	  packages.
               </div>
            </div>
            <div class="listitem e430">
               <div class="para e431">The benefits of reusability appear only when using this
                  	  method for handling a number of classes or packages, where
                  	  there is some re-use of commonly-occurring constructs
                  	  (macros, environments, utilities, etc), or where the class
                  	  or package is part of a series sharing common attributes.
               </div>
            </div>
            <div class="listitem e432">
               <div class="para e433">It does require significant knowledge of XML and
                  	  DocBook, regardless of the editor being used (it may be
                  	  assumed that a class or package author is already
                  	  well-skilled in the use of LaTeX).
               </div>
            </div>
            <div class="listitem e434">
               <div class="para e435">It does save time and effort when actually writing the
                  	  documentation, as there is no need to consider the various
                  	  forms of escapement and armoring required by the
                  	  
                  <div class="code e436">.dtx</div> file format, or the need to invoke
                  	  particular packages when certain facilities are used.
               </div>
            </div>
         </div>
         <div class="para e437">The system has provisionally been called
            
            <div class="quote e438">ClassPack</div>, and is available on CTAN
            (Comprehensive TeX Archive Network) under the LaTeX Project
            Public License. At the moment there are substantial remnants of
            earlier code which need tidying up, and the mechanism for
            handling structured data for formal naming needs to be
            generalized.
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e439">
         <div class="title e440">References</div>
         <div class="bibliomixed e441" xml:id="Lamport1986">Lamport, Leslie.
            
            <div class="emphasis e442">LaTeX: A Document Preparation
               	System.
            </div> Addison-Wesley, 1986, 1st Ed.,
            0-201-15790-X. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e443" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.amazon.com/Latex-Document-Preparation-System-Users/dp/020115790X</div>
         </div>
         <div class="bibliomixed e444" xml:id="Lamport1994">Lamport, Leslie.
            
            <div class="emphasis e445">LaTeX: A Document Preparation
               	System.
            </div> Addison-Wesley, 1994, 2nd Ed.,
            978-0201529838. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e446" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.amazon.com/LaTeX-Document-Preparation-System-2nd/dp/0201529831</div>
         </div>
         <div class="bibliomixed e447" xml:id="Boggio2006">Boggio-Togna, Gianfranco.
            
            <div class="quote e448">Technica: Typesetting for the humanities.</div> LaTeX
            package, November 2006. In CTAN,
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e449" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://mirrors.ctan.org/macros/latex/contrib/technica/Technica.pdf</div>
         </div>
         <div class="bibliomixed e450" xml:id="Ubuntu2012">Ubuntu Core Developers.
            
            <div class="quote e451">TeX Live: LaTeX support for the humanities.</div>
            Debian package, June 2012. In Ubuntu repositories,
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e452" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://packages.ubuntu.com/raring/texlive-humanities</div>
         </div>
         <div class="bibliomixed e453" xml:id="Carlisle2007">Carlisle, David. 
            <div class="quote e454">ltxdoc:
               	Documentation support.
            </div> LaTeX
            package, November 2007. In CTAN,
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e455" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://ctan.org/pkg/ltxdoc</div>
         </div>
         <div class="bibliomixed e456" xml:id="Lehmann2011">Lehmann, Philipp. 
            <div class="quote e457">ltxdockit:
               	Class for documented LaTeX macro files.
            </div> LaTeX
            package, March 2011. In CTAN,
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e458" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://ctan.org/pkg/ltxdockit</div>
         </div>
         <div class="bibliomixed e459" xml:id="LaTeX2006">The LaTeX3
            Project. 
            <div class="quote e460">LaTeX2Îµ for class and package
               writers.
            </div> LaTeX Project documentation, February 2006. In
            CTAN,
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e461" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://mirrors.ctan.org/macros/latex/doc/clsguide.pdf</div>
         </div>
         <div class="bibliomixed e462" xml:id="Mittelbach2004">Mittelbach Frank; Goossens
            Michel; Braams, Johannes; Carlisle, David; Rowley, Chris.
            
            <div class="emphasis e463">The LaTeX Companion.</div> Addison-Wesley, May
            2004, 2nd Ed., 978-0201362992.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e464" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.amazon.com/LaTeX-Companion-Techniques-Computer-Typesetting/dp/0201362996</div>
         </div>
         <div class="bibliomixed e465" xml:id="Bradner1997">Bradner, Scott. 
            <div class="quote e466">Key words
               	for use in RFCs to Indicate Requirement Levels.
            </div> RFC
            2119, Internet Engineering Task Force, Fremont, CA, March 1997
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e467" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.ietf.org/rfc/rfc2119.txt</div>
         </div>
         <div class="bibliomixed e468" xml:id="Flynn2012">Flynn, Peter. 
            <div class="quote e469">A university
               	thesis class: Automation and its pitfalls.
            </div> Presented
            at TeX Users Group Conference 2012, Boston, MA, July 16â18,
            2012. In TUGboat, 33:2, 2012, pp172â177.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e470" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">https://www.tug.org/members/TUGboat/tb33-2/tb104flynn.pdf</div>
         </div>
         <div class="bibliomixed e471" xml:id="Knuth1992">Knuth, Donald E. 
            <div class="quote e472">Literate
               	Programming.
            </div> Center for the Study of Language and
            Information, Stanford, CA (CSLI Lecture Notes, no.27) 1992,
            0937073806, See
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e473" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www-cs-faculty.stanford.edu/~uno/lp.html</div>
         </div>
         <div class="bibliomixed e474" xml:id="Thompson2000">Thompson, David B. 
            <div class="quote e475">The
               Literate Programming FAQ.
            </div> San Gabriel, CA, March 2000. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e476" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.literateprogramming.com/lpfaq.pdf</div>
         </div>
      </div>
   </div>
</div>