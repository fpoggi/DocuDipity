<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#Overlapproachesindocuments:adefinitiveclassification(inOWL2!)ANCHOR" name="Overlapproachesindocuments:adefinitiveclassification(inOWL2!)TOC">Overlapproaches in documents: a definitive classification (in OWL, 2!)</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#Overlappingmarkup:asummaryfortheabsentandthedistractedANCHOR" name="Overlappingmarkup:asummaryfortheabsentandthedistractedTOC">Overlapping markup: a summary for the absent and the distracted</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ForcingoverlapsinplainXMLANCHOR" name="ForcingoverlapsinplainXMLTOC">Forcing overlaps in plain XML</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NonXMLsyntaxesforoverlapsANCHOR" name="NonXMLsyntaxesforoverlapsTOC">Non-XML syntaxes for overlaps</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#EARMARKANCHOR" name="EARMARKTOC">EARMARK</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#CharacterizingoverlapsbywayofanontologyANCHOR" name="CharacterizingoverlapsbywayofanontologyTOC">Characterizing overlaps by way of an ontology</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PropertiesofoverlappingANCHOR" name="PropertiesofoverlappingTOC">Properties of overlapping</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#OverlappingofrangesANCHOR" name="OverlappingofrangesTOC">Overlapping of ranges</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#DominancevsContainmentinEARMARKANCHOR" name="DominancevsContainmentinEARMARKTOC">Dominance vs. Containment in EARMARK</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#OverlappingofmarkupitemsANCHOR" name="OverlappingofmarkupitemsTOC">Overlapping of markup items</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ApproachinginferencesthroughreasonersANCHOR" name="ApproachinginferencesthroughreasonersTOC">Approaching inferences through reasoners</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionsANCHOR" name="ConclusionsTOC">Conclusions</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibliographyANCHOR" name="BibliographyTOC">Bibliography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">antecedent</div>
         <div class="singletermTERMS">A eoo:dominates B</div>
         <div class="singletermTERMS">A eoo:contains B</div>
         <div class="singletermTERMS">August 5 - 8, 2014</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2014</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">classic overlap:</div>
         <div class="singletermTERMS">containment/dominance decoupling:</div>
         <div class="singletermTERMS">CONCUR</div>
         <div class="singletermTERMS">co</div>
         <div class="singletermTERMS">co:Set</div>
         <div class="singletermTERMS">co:Bag</div>
         <div class="singletermTERMS">co:List</div>
         <div class="singletermTERMS">co:Collection</div>
         <div class="singletermTERMS">co:element</div>
         <div class="singletermTERMS">co:Item</div>
         <div class="singletermTERMS">c:item</div>
         <div class="singletermTERMS">co:itemContent</div>
         <div class="singletermTERMS">co:ListItem</div>
         <div class="singletermTERMS">co:nextItem</div>
         <div class="singletermTERMS">consequent</div>
         <div class="singletermTERMS">co:item o co:itemContent</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">definitive classification</div>
         <div class="singletermTERMS">definitive</div>
         <div class="singletermTERMS">dominance vs. containment:</div>
         <div class="singletermTERMS">discontinuous elements</div>
         <div class="singletermTERMS">docuverses</div>
         <div class="singletermTERMS">docuverse</div>
         <div class="singletermTERMS">dominates directly</div>
         <div class="singletermTERMS">dominates</div>
         <div class="singletermTERMS">dominance vs. containment</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">EARMARK Overlapping Ontology</div>
         <div class="singletermTERMS">EOO</div>
         <div class="singletermTERMS">EARMARK</div>
         <div class="singletermTERMS">et al</div>
         <div class="singletermTERMS">et al.</div>
         <div class="singletermTERMS">earmark</div>
         <div class="singletermTERMS">earmark:Docuverse</div>
         <div class="singletermTERMS">earmark:hasContent</div>
         <div class="singletermTERMS">earmark:StringDocuverse</div>
         <div class="singletermTERMS">earmark:URIDocuverse</div>
         <div class="singletermTERMS">earmark:Range</div>
         <div class="singletermTERMS">earmark:begins</div>
         <div class="singletermTERMS">eamark:ends</div>
         <div class="singletermTERMS">earmark:refersTo</div>
         <div class="singletermTERMS">earmark:PointerRange</div>
         <div class="singletermTERMS">earmark:XPathPointerRange</div>
         <div class="singletermTERMS">earmark:hasXPathContext</div>
         <div class="singletermTERMS">earmark:MarkupItem</div>
         <div class="singletermTERMS">earmark:Element</div>
         <div class="singletermTERMS">earmark:Attribute</div>
         <div class="singletermTERMS">earmark:Comment</div>
         <div class="singletermTERMS">earmark:hasGeneralIdentifier</div>
         <div class="singletermTERMS">earmark:hasNamespace</div>
         <div class="singletermTERMS">eoo</div>
         <div class="singletermTERMS">eoo:overlapsWith</div>
         <div class="singletermTERMS">eoo:overlapsWithRange</div>
         <div class="singletermTERMS">eoo:overlapsTotallyWithRange</div>
         <div class="singletermTERMS">eoo:overlapsPartiallyWithRange</div>
         <div class="singletermTERMS">earmark:XPathPonterRange</div>
         <div class="singletermTERMS">earmark:XPathRange</div>
         <div class="singletermTERMS">eoo:dominatesDirectly</div>
         <div class="singletermTERMS">eoo:dominates</div>
         <div class="singletermTERMS">eoo:contains</div>
         <div class="singletermTERMS">eoo:overlapsWithMarkupItem</div>
         <div class="singletermTERMS">eoo:overlapsWIthMarkupItem</div>
         <div class="singletermTERMS">eoo:overlapsByRange</div>
         <div class="singletermTERMS">eoo:overlapsByContentHierarchy</div>
         <div class="singletermTERMS">eoo:overlapsByMarkupHierarchy</div>
         <div class="singletermTERMS">EARMARK Overlapping Ontology</div>
         <div class="singletermTERMS">EARMARK</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">fragmentation:</div>
         <div class="singletermTERMS">fpoggi@cs.unibo.it</div>
         <div class="singletermTERMS">fabio@cs.unibo.it</div>
         <div class="singletermTERMS">Francesco</div>
         <div class="singletermTERMS">Fabio</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
         <div class="singletermTERMS">GODDAG and TexMECS:</div>
         <div class="singletermTERMS">General identifier</div>
         <div class="singletermTERMS">generic identifier</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
         <div class="singletermTERMS">JITT (Just In Time Trees):</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">LMNL</div>
         <div class="singletermTERMS">l1</div>
         <div class="singletermTERMS">l2</div>
         <div class="singletermTERMS">lg</div>
         <div class="singletermTERMS">l3</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">MuLaX:</div>
         <div class="singletermTERMS">Multi-colored trees:</div>
         <div class="singletermTERMS">markup items</div>
         <div class="singletermTERMS">markupitem</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">overlapping problem.</div>
         <div class="singletermTERMS">out-of-order elements:</div>
         <div class="singletermTERMS">overlapping by range</div>
         <div class="singletermTERMS">overlapping by content hierarchy</div>
         <div class="singletermTERMS">overlapping by markup hierarchy</div>
         <div class="singletermTERMS">overlapping with range and markup item</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">partial elements</div>
         <div class="singletermTERMS">Paradise Lost</div>
         <div class="singletermTERMS">per se</div>
         <div class="singletermTERMS">Peroni</div>
         <div class="singletermTERMS">Poggi</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">range overlap vs. markup overlap:</div>
         <div class="singletermTERMS">ranges</div>
         <div class="singletermTERMS">range</div>
         <div class="singletermTERMS">r1</div>
         <div class="singletermTERMS">r2</div>
         <div class="singletermTERMS">r3</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">self overlap:</div>
         <div class="singletermTERMS">stand-off markup:</div>
         <div class="singletermTERMS">syntax</div>
         <div class="singletermTERMS">silvio.peroni@unibo.it</div>
         <div class="singletermTERMS">Silvio</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">total vs. partial overlap:</div>
         <div class="singletermTERMS">TEI-style milestones:</div>
         <div class="singletermTERMS">twin documents:</div>
         <div class="singletermTERMS">text layer</div>
         <div class="singletermTERMS">totally</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">unit1</div>
         <div class="singletermTERMS">unit2</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">virtual elements</div>
         <div class="singletermTERMS">Vitali</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="Overlapproachesindocuments:adefinitiveclassification(inOWL2!)ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3" xml:id="Bal2014pero0429">
      <div class="title e1">Overlapproaches in documents: a definitive classification (in OWL, 2!)</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2014</div>
            <div class="confdates e5">August 5 - 8, 2014</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">Several different types of overlap exist and different strategies are needed to detect
               them. In particular, there is a clear difference between ranges of text that overlap
               and
               markup items that overlap (that is, elements and attributes), and how these types
               of
               overlapping affect dominance and containment relations of nodes is of some relevance,
               too.
               In order to provide a complete definition and description of these overlapping patterns,
               we
               introduce the 
               <div class="emphasis e8" role="ital">EARMARK Overlapping Ontology</div> (
               <div class="emphasis e9" role="ital">EOO</div>), i.e., an OWL 2 DL ontology that extends 
               <div class="emphasis e10" role="ital">EARMARK</div> (an OWL-based markup meta-language compliant with extended GODDAGs) to
               define properties describing dominance and containment relations as well as a complete
               characterisation of the different kinds of overlap that can happen to nodes. In addition,
               we
               also present some inference rules for the automatic retrieval (by means of a reasoner)
               of all the
               overlapping instances in a given input markup document.
            </div>
         </div>
         <div class="author e11">
            <div class="personname e12">
               <div class="firstname e13">Silvio</div>
               <div class="surname e14">Peroni</div>
            </div>
            <div class="personblurb e15">
               <div class="para e16">Silvio Peroni holds a Ph.D. degree in Computer Science and he is a post-doc at the
                  University of Bologna. He is an expert in document markup and semantic descriptions
                  of bibliographic entities using OWL ontologies. He is one of the main developers of
                  SPAR (Semantic Publishing and Referencing) Ontologies (http://purl.org/spar) that
                  permit RDF descriptions of bibliographic entities, citations, reference collections
                  and library catalogues, the structural and rhetorical components of documents, and
                  roles, statuses and workflows in publishing. Among his research interests are Semantic
                  Web technologies, markup languages for complex documents, design patterns for digital
                  documents and ontology modelling, and automatic processes of analysis and segmentation.
                  In particular, his recent works concern the empirical analysis of the nature of citations,
                  the study of visualisation and browsing interfaces for semantic data, and the development
                  of ontologies to manage, integrate and query bibliographic information according to
                  temporal and contextual constraints.
               </div>
            </div>
            <div class="affiliation e17">
               <div class="orgname e18">Department of Computer Science and Engineering, University of Bologna, Bologna,
                  Italy
               </div>
            </div>
            <div class="email e19">silvio.peroni@unibo.it</div>
         </div>
         <div class="author e20">
            <div class="personname e21">
               <div class="firstname e22">Francesco</div>
               <div class="surname e23">Poggi</div>
            </div>
            <div class="personblurb e24">
               <div class="para e25"></div>
            </div>
            <div class="affiliation e26">
               <div class="orgname e27">Department of Computer Science and Engineering, University of Bologna, Bologna,
                  Italy
               </div>
            </div>
            <div class="email e28">fpoggi@cs.unibo.it</div>
         </div>
         <div class="author e29">
            <div class="personname e30">
               <div class="firstname e31">Fabio</div>
               <div class="surname e32">Vitali</div>
            </div>
            <div class="personblurb e33">
               <div class="para e34"></div>
            </div>
            <div class="affiliation e35">
               <div class="orgname e36">Department of Computer Science and Engineering, University of Bologna, Bologna,
                  Italy
               </div>
            </div>
            <div class="email e37">fabio@cs.unibo.it</div>
         </div>
         <div class="legalnotice e38">
            <div class="para e39">Copyright © 2014 by the authors.</div>
         </div>
         <div class="keywordset e40" role="author">
            <div class="keyword e41">EARMARK Overlapping Ontology</div>
            <div class="keyword e42">EARMARK</div>
            <div class="keyword e43">overlapping with range and markup item</div>
            <div class="keyword e44">dominance vs. containment</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e45">
         <div class="title e46">Introduction</div>
         <div class="para e47">At the Balisage 2009 Conference we presented for the first time a new approach to
            overlapping markup called
            			EARMARK, or "Extremely Annotational RDF Markup". It provided a point of view over
            something that is
            			quintessentially Balisagean, overlapping markup, by using a number of suspicious
            techniques for this community,
            			such as standoff markup, RDF, OWL, reasoners. 
         </div>
         <div class="para e48">In brief, an EARMARK document is a collection of RDF statements about fragments of
            a text (a plain text or
            			even an XML document), that describe the fragments' characteristics and features
            regardless of whether the
            			fragments contain, are disjoint, or overlap with each other. Each fragment is associated
            to a formal concept
            			called Range, which can (but does not have to) be associated to one or more Markup
            Items, which in turn may, or
            			may not, refer to each other in some form. Since these annotations (and the objects
            they represent) are never
            			embedded in the text, there are no implicit properties to consider, in particular
            no properties indirectly
            			provided by the fragments' position in the text, relative to each other, according
            to document's order, etc. Thus
            			in an EARMARK document a property exists (e.g., A contains B) if and only if it
            has been explicitly stated in the
            			ontology, and not just because they happen to refer to the same text fragment.
            		  
            <div class="popupBox e49">
               <div class="popupLabel" onmouseover="$('#d1e81').show('1000');" onmouseout="$('#d1e81').hide('1000');">[ footnote ]</div>
               <div id="d1e81" style="display: none;">
                  <div class="footnote">
                     <div class="para e50">This non-implicitness of properties in EARMARK results, of course, in having a linearisation
                        of standard documents (i.e., those that do not contain any overlap) that is more verbose
                        than that obtained by using other markup languages such as XML or TexMecs, both in
                        terms of bytes [
                        <div class="xref e51" linkend="PeroniChangeTracking"></div>] as well as in terms of comparing RDF statements in an EARMARK document vs. number
                        of markup nodes in an XML document [
                        <div class="xref e52" linkend="DiIorioEARMARK"></div>]. However, while the gap in bytes between XML-based formats (e.g., ODT used by OpenOffice
                        and OOXML used by Microsoft Word) and EARMARK (linearised in Turtle) seems to be proportional
                        when additional overlapping elements are introduced in documents [
                        <div class="xref e53" linkend="PeroniChangeTracking"></div>], the gap between number of statements and number of nodes changes in favour of EARMARK
                        [
                        <div class="xref e54" linkend="DiIorioEARMARK"></div>] the more overlapping markup item are added to the document.
                     </div>
                     <div class="para e55">As introduced in [
                        <div class="xref e56" linkend="DiIorioEARMARK"></div>], from a pure syntactical point of view, EARMARK is nothing but yet another standoff
                        notation, where the markup speciﬁcations point to, rather than contain, the relevant
                        substructure and text fragments. Thus it is affect of all the usual problems of any
                        standoff notations:
                        		      
                        <div class="orderedlist e57">
                           <div class="listitem e58">
                              <div class="para e59">very difficult to read for humans;</div>
                           </div>
                           <div class="listitem e60">
                              <div class="para e61">the information, although included, is difficult to access using generic methods;</div>
                           </div>
                           <div class="listitem e62">
                              <div class="para e63">limited software support as standard parsing or editing software cannot be employed;</div>
                           </div>
                           <div class="listitem e64">
                              <div class="para e65">standard document grammars can only be used for the level which contains both markup
                                 and textual data;
                              </div>
                           </div>
                           <div class="listitem e66">
                              <div class="para e67">new layers require a separate interpretation;</div>
                           </div>
                           <div class="listitem e68">
                              <div class="para e69">layers, although separate, often depend on each other.</div>
                           </div>
                        </div>
                        		    
                     </div>
                     <div class="para e70">However, EARMARK provides also a number of workarounds to most of the above-mentioned
                        issues, as discussed in [
                        <div class="xref e71" linkend="DiIorioEARMARK"></div>].
                     </div>
                  </div>
               </div>
            </div>
            		
         </div>
         <div class="para e72">In doing so, EARMARK manages not only to be the only overlapping approach that fully
            expresses and makes use
            		  of unrestricted GODDAG, the formal model introduced in [
            <div class="xref e73" linkend="SperbergGoddag04"></div>] by Sperberg-McQueen and Huitfeldt, but actually
            			corresponds to a non-trivial extension of it, e-GODDAG, that supports repetitions
            of the same node in different
            			contexts, in addition to self-overlap, discontinuous overlap, anonymous nodes,
            decoupling of containment and
            			dominance, etc.
         </div>
         <div class="para e74">The conjunction of stand-off as a referencing approach, and RDF as the assertion syntax,
            allows EARMARK to
            			bypass completely the usual dichothomy of embedded markup, that of either hiding
            overlapping situations inside a
            			traditional, hierarchical XML markup, tricky but conservatively transparent with
            respect to the most common XML
            			tools and services, or inventing a completely new syntax and having to deal with
            the lack of the usual validation
            			tools, transformation tools, storage systems, etc. On the contrary, an EARMARK
            document is just a collection of
            			RDF statements, and plain and usual RDF and OWL tools can be used to manage it:
            inference engines, rule-based
            			systems, query languages, and triple stores work transparently with overlapping
            data, and any existing and future
            			tool for RDF and OWL will be available for use transparently when managing EARMARK
            documents, too
            		  
            <div class="popupBox e75">
               <div class="popupLabel" onmouseover="$('#d1e127').show('1000');" onmouseout="$('#d1e127').hide('1000');">[ footnote ]</div>
               <div id="d1e127" style="display: none;">
                  <div class="footnote">
                     <div class="para e76">In our past works on EARMARK, we show how a correct use of Semantic Web technologies
                        can allow us to query and validate EARMARK documents in a proper way, even simplifying
                        some of these tasks when overlapping scenarios exist in a document. In particular,
                        in [
                        <div class="xref e77" linkend="DiIorioEARMARK"></div>] and [
                        <div class="xref e78" linkend="PeroniChangeTracking"></div>] we show how a simple natural language query like "give me the textual content of
                        all paragraphs inserted by John Smith" is very complex to handle by using XPath on
                        XML documents (stored according to both ODT and OOXML formats) while it is quite trivial
                        by applying SPARQL on EARMARK documents. Similarly, the syntactic validation of documents
                        with overlapping markup is not so straightforward to check in XML documents, since
                        it is not easy to retrieve each hierarchy that a document defines by means of overlapping
                        workarounds (e.g., milestones and fragmentation elements). However, in EARMARK this
                        task is simplified since all the hierarchies are explicitly defined without using
                        any workaround and the document validity can be verified easily through a reasoner
                        against a grammar implemented as an OWL ontology, as we show in [
                        <div class="xref e79" linkend="DiIorioEARMARKValidation"></div>]. In addition, the use of OWL allows us to perform also the semantic validation of
                        the markup in EARMARK documents, with several application in real-case scenarios such
                        as semantic search in digital libraries and the quality evaluation of legal drafting
                        [
                        <div class="xref e80" linkend="PeroniMarkupSemantics"></div>].
                     </div>
                  </div>
               </div>
            </div>.
         </div>
         <div class="para e81">But in our 2009 paper, we actually and quite conventienly avoided to discuss a rather
            relevant issue: EARMARK,
            			then, did not really allow to describe overlapping markup situations, but rather
            it allowed to describe traditional
            			markup situations that could refer to overlapping content. Since each markup statement
            is independent of the
            			others, it can refer to partially or totally overlapping ranges and children with
            no need (and no possibility) to
            			determine that such overlap has actually happened. 
         </div>
         <div class="para e82">But if you really want to be able to determine whether and where overlapping has happened
            in an EARMARK
            			document, you need a few more tools, that luckily can and have been realized using
            standard and well-known RDF and
            			OWL tools. In this paper, we present the 
            <div class="emphasis e83" role="ital">EARMARK Overlapping Ontology</div>
            				(
            <div class="emphasis e84" role="ital">EOO</div>), an ontology that uses OWL 2 and SWRL to provide a complete
            			characterization of overlapping situations in EARMARK documents, allowing queries
            and representations that
            			discovers and manages explicitly (instead of simply allowing and ignoring) all
            overlaps in the markup. This
            			characterization takes the form of definitions of the overlapping patterns of the
            basic EARMARK ontology, and is
            			therefore a 
            <div class="emphasis e85" role="ital">definitive classification</div>
            			
            <div class="popupBox e86">
               <div class="popupLabel" onmouseover="$('#d1e152').show('1000');" onmouseout="$('#d1e152').hide('1000');">[ footnote ]</div>
               <div id="d1e152" style="display: none;">
                  <div class="footnote" xml:id="ftnfv1">
                     <div class="para e87">as per meaning #3 of the entry on 
                        <div class="emphasis e88" role="ital">definitive</div> in the Merriam-Webster
                        					Dictionary at 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e89" xlink:actuate="onRequest" xlink:href="http://www.merriam-webster.com/dictionary/definitive" xlink:show="new" xlink:type="simple">http://www.merriam-webster.com/dictionary/definitive</div>. 
                     </div>
                  </div>
               </div>
            </div>of the overlapping approaches of EARMARK documents.
         </div>
         <div class="para e90">Of particular relevance for the EOO ontology is being able to distinguish between
            different aspects/manifestations of the overlap phenomenom, such as, for example:
         </div>
         <div class="itemizedlist e91">
            <div class="listitem e92">
               <div class="para e93">
                  <div class="emphasis e94" role="bold">total vs. partial overlap:</div> we talk about total overlap to refer to those situations where one item is completely
                  contained by the other, without breaking the rules imposed by the tree hierarchy,
                  while we use partial overlap to indicate cases where no hierarchy can exist, as only
                  part of the content is shared by the items;
               </div>
            </div>
            <div class="listitem e95">
               <div class="para e96">
                  <div class="emphasis e97" role="bold">dominance vs. containment:</div> we use these terms to distinguish and discern between cases where there really is
                  a hierarchical relation between items that overlap (dominance), from situations in
                  which items just happen to refer to the same content (containment);
               </div>
            </div>
            <div class="listitem e98">
               <div class="para e99">
                  <div class="emphasis e100" role="bold">range overlap vs. markup overlap:</div> we can also distinguish between items that overlap by sharing the same textual content
                  (range overlap) from situations in which items overlap by insisting either partially
                  or totally on the same elements (markup overlap).
               </div>
            </div>
         </div>
         <div class="para e101">The paper is organized as follows: in the next section, we present a brief overview
            of the topics, results and languages
            		  that have been proposed to handle overlaps in markup documents. In 
            <div class="xref e102" linkend="SectionEARMARK"></div>,  EARMARK is (re-)introduced with
            		  its main classes and concepts. In 
            <div class="xref e103" linkend="SectionEOO"></div>, the EARMARK Overlapping Ontology is presented and described, as well
            			as how it can be used to identify and characterize the overlapping situations of
            an EARMARK document. The
            			following section contains our conclusions and hints at future works. 
         </div>
      </div><a name="Overlappingmarkup:asummaryfortheabsentandthedistractedANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e104" xml:id="SectionRelated">
         <div class="title e105">Overlapping markup: a summary for the absent and the distracted</div>
         <div class="para e106">When marking up text documents it might be necessary to represent features that do
            not fit
            into the tree structure conveyed by an XML document. In fact, there are many situations
            in
            which authors may need to annotate the same piece of text with different markup descriptors
            (e.g. when a page spans from the middle of one paragraph to the middle of another,
            or when
            speeches span multiple verses, etc.): in such cases, the markup descriptors sometimes
            nest
            correctly into a single tree-hierarchy, sometimes not. In general, this issue may
            arises
            whenever an author wants to maintain two or more views of a document (e.g. metrical,
            syntactical, layout, etc.), and consequently multiple and incompatible hierarchies
            insists on
            the same textual content. This problem is referred to in the literature as the 
            <div class="emphasis e107" role="ital">overlapping problem.</div>
         </div>
         <div class="para e108">After a first period in which the deficiencies of markup languages that concerns the
            overlapping problem were overlooked [
            <div class="xref e109" linkend="FirstOverlapBarnard88"></div>]
            <div class="popupBox e110">
               <div class="popupLabel" onmouseover="$('#d1e197').show('1000');" onmouseout="$('#d1e197').hide('1000');">[ footnote ]</div>
               <div id="d1e197" style="display: none;">
                  <div class="footnote" xml:id="ftn4">
                     <div class="para e111">In the first paper that deals with overlap in digital texts, in 1988 Barnard 
                        <div class="emphasis e112" role="ital">et
                           						al
                        </div> argue that “SGML can successfully cope with the problem of maintaining multiple structural
                        					views”, and that the solutions “can be made practical” by means of simple mechanisms,
                        such as by exploiting
                        					the CONCUR feature of SGML [
                        <div class="xref e113" linkend="FirstOverlapBarnard88"></div>].
                     </div>
                  </div>
               </div>
            </div> or even suppressed [
            <div class="xref e114" linkend="DeRoseOHCO90"></div>]
            <div class="popupBox e115">
               <div class="popupLabel" onmouseover="$('#d1e208').show('1000');" onmouseout="$('#d1e208').hide('1000');">[ footnote ]</div>
               <div id="d1e208" style="display: none;">
                  <div class="footnote" xml:id="ftn5">
                     <div class="para e116">In a famous paper [
                        <div class="xref e117" linkend="DeRoseOHCO90"></div>], Renear 
                        <div class="emphasis e118" role="ital">et al.
                           
                        </div>defend their OCHO thesis stating that “If you treat texts as ordered
                        hierarchies of content objects many pratical advantages follows, but not otherwise.
                        Therefore texts are ordered hierarchies of content objects”. 
                     </div>
                  </div>
               </div>
            </div>, the digital humanities community started to put an increasing effort in trying to
            define and develop solution to this issue. The essence of the problem can be summarized
            as
            follows: “overlap can be presented by graphs that are very like trees, but in which
            nodes may
            have multiple parents. Overlap is multiple parentage” [
            <div class="xref e119" linkend="SperbergGoddag04"></div>].
            While trying to represent non-hierarchical structures using a markup language whose
            model is
            a tree, such as SGML or XML, authors run into different manifestations of the
            problem, referred to using different terminology in the literature:
         </div>
         <div class="itemizedlist e120">
            <div class="listitem e121">
               <div class="para e122">
                  <div class="emphasis e123" role="bold">classic overlap:</div> this is the most common case of
                  overlap, that consists in two markup elements with different general identifiers that
                  share
                  a part of their textual content. This situation occurs whenever two document fragments
                  that need to be annotated with different markup descriptors overlap each other. Typically
                  this scenarios arises when authors want to merge multiple concurrent hierarchies over
                  the
                  same document, e.g. phonetical, grammatical and typographical structures.
               </div>
            </div>
            <div class="listitem e124">
               <div class="para e125">
                  <div class="emphasis e126" role="bold">self overlap:</div> the term “self” overlap is used to
                  refer to that situations in which two components of the same structure, and with the
                  same
                  name, overlap each other. A typical example is a document that should be commented
                  by two
                  different reviewers: whenever they need to annotate two text fragments that overlap,
                  two elements of the same structure (the comment structure) and with the same name
                  overlap
                  each other.
               </div>
            </div>
            <div class="listitem e127">
               <div class="para e128">
                  <div class="emphasis e129" role="bold">out-of-order elements:</div> there are also cases in which
                  the content of an element is a reordering of information present elsewhere in the
                  document. For example, sometimes it would be useful to define elements whose content
                  is
                  not a continuous text region (we refer to such cases as 
                  <div class="emphasis e130" role="ital">discontinuous
                     elements
                  </div>), or to express more complex features, such as out-of-order or
                  repeated uses of the same text fragment, etc. The general approach used by embedded
                  markup
                  languages to deal with such cases is to use a technique called 
                  <div class="emphasis e131" role="ital">virtual elements</div>: the information needed to convey such features is encoded
                  by using an ad-hoc mechanism, such as a linking system by means of elements' attributes.
                  The term “virtual” is used because these elements are not explicitly present in the
                  document, but their presence may be inferred by an external application from the specific
                  encoding mechanism supplied [
                  <div class="xref e132" linkend="TEIP5"></div>].
               </div>
            </div>
            <div class="listitem e133">
               <div class="para e134">
                  <div class="emphasis e135" role="bold">containment/dominance decoupling:</div> Most of the solutions to the problem of
                  					overlapping markup implicitly leave unwanted relations between the concurrent
                  hierarchies. The best known is
                  					the identity between dominance and containment. Dominance is a relation between
                  document parts where one is
                  					said to dominate another if it is one of its ancestors in the document structure.
                  Containment is rather a look
                  					at two document parts from the point of view of which slices of the actual character
                  content of the document
                  					they enclose; a document part contains another one if it encloses all the character
                  content of that other
                  					part. Tree-based markup languages such as XML have the (implicit) property that
                  containment implies dominance,
                  					but in general this is neither desiderable nor correct. Consequently, most of
                  the approaches to the overlapping
                  					problem that forces multiple hierarchies (i.e. graphs) into a single tree structure
                  reflects this limitation.
                  					Moreover, most of the complexity in the process of managing these document is
                  due to this reason, since it
                  					requires an external and often conceptual effort to understand, interpret and
                  correctly manage dominance as
                  					separated from containment.  
               </div>
            </div>
         </div>
         <div class="para e136">Since the document model of XML is inherently a tree, there is no simple way to cover
            such complex situations
            			when handling multiple hierarchies. In order to overcome these limitations, many
            different solutions have been
            			proposed. In general, we can identify two different approaches to the problem.
            The first consists in devising
            			techniques to encode the information about overlapping situations by using specific
            XML features (e.g.
            			empty elements to specify the boundary of overlapping elements, attributes to link
            elements that don't nest
            			properly, etc.) or technologies (e.g. XPath [
            <div class="xref e137" linkend="XPath"></div>], XQuery [
            <div class="xref e138" linkend="XQuery"></div>], etc.).
            			The second approach is to abandon XML altogether and with it the benefits of its
            tree-based data model, and devise
            			a new formalism and notation based on a more general and expressive abstract structure,
            such as a directed graph. 
         </div><a name="ForcingoverlapsinplainXMLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e139">
            <div class="title e140">Forcing overlaps in plain XML</div>
            <div class="para e141">Documents in XML-based formats have the advantage that any existing application, tool
               and technology can be used to process them, at the cost of a post-parsing processing
               in
               order to reconstruct and correctly handle the not tree-based structures coerced using
               these
               conventions. The main drawback of this approach is that the overlapping situations
               encoded
               in XML-based formats are neither easy to read, write and understand by humans without
               the
               help of specific tools, since these techniques considerably increase the complexity
               of the
               resulting XML document. Moreover, the process of forcing multiple hierarchies (i.e.
               a graph)
               into a single tree structure used by most of these techniques often introduces unwanted
               dominance relations between elements belonging to different hierarchies, and these
               situations need a further (and usually manual) effort in order to be identified, properly
               interpreted and managed.
            </div>
            <div class="para e142">The universe of the XML-based techniques to manage overlapping situations is quite
               ample. We summarize the
               				four most used mechanisms [
               <div class="xref e143" linkend="MVZ08"></div>]:
            </div>
            <div class="itemizedlist e144">
               <div class="listitem e145">
                  <div class="para e146">
                     <div class="emphasis e147" role="bold">TEI-style milestones:</div> this approach is to represent
                     a vocabulary as primary by using a standard XML structure, and to use pairs of empty
                     elements to mark the boundaries of elements that belong to secondary vocabularies.
                     In
                     order to make explicit the relation between corresponding opening and closing empty
                     tags, a co-indexing mechanism may be implemented by means of special linking
                     attributes[
                     <div class="xref e148" linkend="TEIP5"></div>]
                     <div class="popupBox e149">
                        <div class="popupLabel" onmouseover="$('#d1e271').show('1000');" onmouseout="$('#d1e271').hide('1000');">[ footnote ]</div>
                        <div id="d1e271" style="display: none;">
                           <div class="footnote" xml:id="ftn5bis">
                              <div class="para e150"> It's worth noting
                                 that many slightly different types of milestones have been proposed: for example,
                                 another 
                                 (more general) type of milestone consists in using milestone elements to mark the
                                 boundary
                                 between sections of a text, as indicated by changes in a standard reference system
                                 (e.g. the structure of pages in a standard codex). In those cases, each milestone
                                 element 
                                 (except the first and the last) represents both the end of the previous feature and
                                 the
                                 beginning of the next one.
                              </div>
                           </div>
                        </div>
                     </div>;
                  </div>
               </div>
               <div class="listitem e151">
                  <div class="para e152">
                     <div class="emphasis e153" role="bold">fragmentation: </div>is another technique that
                     envisions/prescribes to break the elements belonging to secondary hierarchies in as
                     many
                     smaller fragments (also called 
                     <div class="emphasis e154" role="ital">partial elements</div>) as
                     needed to nest properly into the primary hierarchy. Also in this case overlapping
                     elements are linked using special attributes (e.g. id-idref or next-previous
                     pairs).
                  </div>
               </div>
               <div class="listitem e155">
                  <div class="para e156">
                     <div class="emphasis e157" role="bold">stand-off markup:</div> the key idea is to represent hierarchical and possibly incompatible structures separately
                     from their actual content. Infact, the real content is present elsewhere, for example
                     within the same document or in separate ones, and included by means of links implemented
                     through a pointer mechanism such as XPointer [
                     <div class="xref e158" linkend="XPointer"></div>]. In this way, it is possible to represent multiple conflicting structures as stratifications
                     of different layers, at the cost of a overhead to manage and keep up-to-date the referenced
                     content not directly embedded within these structures.
                  </div>
               </div>
               <div class="listitem e159">
                  <div class="para e160">
                     <div class="emphasis e161" role="bold">twin documents:</div> overlapping hierarchies may also be
                     encoded by using multiple documents that share the same textual content, but each
                     one
                     denoting its own tree structure. 
                  </div>
               </div>
            </div>
            <div class="para e162">In order to describe the expressiveness power of these techniques, in 
               <div class="xref e163" linkend="TableWorkaroundsExpressiveness"></div> we summarises their capability to manage the
               complex overlapping features introduced in the previous section.
            </div>
            <div class="table e164" border="1" xml:id="TableWorkaroundsExpressiveness">
               <div class="caption e165">
                  <div class="para e166">Expressiveness
                     power of the XML-based techniques to manage overlap with respect of the complex document
                     features described in the previous section [* true only if the vocabularies of the
                     structures in overlap are disjoint].
                  </div>
               </div>
               <div class="tbody e167">
                  <div class="tr e168">
                     <div class="th e169">
                        <div class="para e170">XML techniques / </div>
                        <div class="para e171">complex document features</div>
                     </div>
                     <div class="th e172">
                        <div class="para e173">Classic overlap</div>
                     </div>
                     <div class="th e174">
                        <div class="para e175">Self overlap</div>
                     </div>
                     <div class="th e176">
                        <div class="para e177">out-of-order elements</div>
                     </div>
                     <div class="th e178">
                        <div class="para e179">Containment/dominance decoupling</div>
                     </div>
                  </div>
                  <div class="tr e180">
                     <div class="td e181">
                        <div class="para e182">Milestones</div>
                     </div>
                     <div class="td e183">
                        <div class="para e184">Yes</div>
                     </div>
                     <div class="td e185">
                        <div class="para e186">Yes</div>
                     </div>
                     <div class="td e187">
                        <div class="para e188">No</div>
                     </div>
                     <div class="td e189">
                        <div class="para e190">No</div>
                     </div>
                  </div>
                  <div class="tr e191">
                     <div class="td e192">
                        <div class="para e193">Fragmentation</div>
                     </div>
                     <div class="td e194">
                        <div class="para e195">Yes</div>
                     </div>
                     <div class="td e196">
                        <div class="para e197">Yes</div>
                     </div>
                     <div class="td e198">
                        <div class="para e199">Yes</div>
                     </div>
                     <div class="td e200">
                        <div class="para e201">No</div>
                     </div>
                  </div>
                  <div class="tr e202">
                     <div class="td e203">
                        <div class="para e204">Stand-off markup</div>
                     </div>
                     <div class="td e205">
                        <div class="para e206">Yes*</div>
                     </div>
                     <div class="td e207">
                        <div class="para e208">Yes</div>
                     </div>
                     <div class="td e209">
                        <div class="para e210">Yes</div>
                     </div>
                     <div class="td e211">
                        <div class="para e212">Yes</div>
                     </div>
                  </div>
                  <div class="tr e213">
                     <div class="td e214">
                        <div class="para e215">Twin documents</div>
                     </div>
                     <div class="td e216">
                        <div class="para e217">Yes*</div>
                     </div>
                     <div class="td e218">
                        <div class="para e219">Yes</div>
                     </div>
                     <div class="td e220">
                        <div class="para e221">Yes</div>
                     </div>
                     <div class="td e222">
                        <div class="para e223">Yes</div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e224">In order to overcome the limitations of XML, many different solutions have been
               proposed:
            </div>
            <div class="itemizedlist e225">
               <div class="listitem e226">
                  <div class="para e227">
                     <div class="emphasis e228" role="bold">CONCUR</div> [
                     <div class="xref e229" linkend="CONCUR90"></div>] is an SGML option that allows
                     						multiple DTDs for the same content: all these structures live in the same document,
                     and it is up to the
                     						parser to either consider the structure of only one DTD, or parse them simultaneously
                     but keeping separate
                     						track of what elements are open in each. The main advantage of this technique
                     is that documents are quite
                     						legible and maintainable, but there are many drawbacks: for example, it is not
                     possible to constrain
                     						relationships across DTDs, it is not possible to express self-overlap situations,
                     and there is little
                     						software support for this technique;
                  </div>
               </div>
               <div class="listitem e230">
                  <div class="para e231">
                     <div class="emphasis e232" role="bold">JITT (Just In Time Trees):</div> another syntax very
                     close to XML have been proposed [
                     <div class="xref e233" linkend="JITT02a"></div>] [
                     <div class="xref e234" linkend="JITT02b"></div>].
                     The basic idea is similar to CONCUR in that it requires the parser to filter and take
                     in
                     consideration only some tags: multiple overlapping hierarchies may coexist into
                     documents, but only those which the filter selects are returned to the application
                     as
                     real start or end tags. JITTs’ main contribution is that a document need not be
                     well-formed until the moment it is being processed, at the cost of a very small change
                     to an XML parser. Unfortunately, JITTs does not provide a way to correlate and validate
                     across structures, and it is not possible to express cases of self-overlap
                     <div class="emphasis e235" role="bold">.</div>
                  </div>
               </div>
               <div class="listitem e236">
                  <div class="para e237">
                     <div class="emphasis e238" role="bold">MuLaX:</div> another document syntax similar to SGML
                     CONCUR for XML called MuLaX has been developed [
                     <div class="xref e239" linkend="XCONCUR05"></div>] together
                     with a constraint based validation language [
                     <div class="xref e240" linkend="XCONCUR-CL07a"></div>] [
                     <div class="xref e241" linkend="XCONCUR-CL07b"></div>]. Each overlapping hierarchy represents a layer identified
                     by an ID prefixing each tag name, and multiple layers may coexist into one MuLaX
                     document. An external software can parse a MuLaX document and project
                     each layer into well formed XML documents. Standard XML tools can only be used
                     on these separate XML projections. A drawback of this technique is that these documents
                     can get very complex when dealing with a large number of annotation layers : for
                     example, updates are difficult since working on MuLaX documents requires frequent
                     projections into XML projections. Moreover, the project is still at the state of
                     experimental markup languages, lacking the support of tools and technologies as that
                     available for XML-based solutions.
                  </div>
               </div>
               <div class="listitem e242">
                  <div class="para e243">
                     <div class="emphasis e244" role="bold">Multi-colored trees:</div> another extension of the XML
                     model that is able to represent overlapping structures are the Multi-colored trees
                     [
                     <div class="xref e245" linkend="MultiCOloredTree04"></div>]. The basic idea is to associate a color to each
                     concurrent tree, and to allow each node to have multiple colors. Navigation inside
                     the multicolored 
                     nodes is possible by using an Xpath [
                     <div class="xref e246" linkend="XPath"></div>] extension that implements a color 
                     selector, and an extension of XQuery [
                     <div class="xref e247" linkend="XQuery"></div>] has also been proposed for 
                     the creation of nodes.
                  </div>
               </div>
            </div>
         </div><a name="NonXMLsyntaxesforoverlapsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e248">
            <div class="title e249">Non-XML syntaxes for overlaps</div>
            <div class="para e250">An alternative approach to overcome the limitations of tree-based meta-languages in
               representing complex documents is to use alternative and more expressive data models,
               such
               as graphs. The more general is the model (acyclic vs. cyclic graphs, ordered vs. unordered
               graphs, etc.), the more expressive is the meta-language in terms of overlapping features
               that can be convenientely managed, at the cost of an increased computational complexity.
               Moreover, since this abstract model may be represented with different concrete
               syntaxes (embedded markup languages, stand-off annotations, etc.), the chosen linearisation
               format may place limits in terms of expressiveness, support provided by standard
               technologies and related tools, etc. A summary of the most eminent solutions is presented
               below:
            </div>
            <div class="itemizedlist e251">
               <div class="listitem e252">
                  <div class="para e253">
                     <div class="emphasis e254" role="bold">GODDAG and TexMECS:</div> Sperberg-McQueen and Huitfeld
                     proposed to manage overlapping hierarchies using a directed acyclic graph structure
                     with
                     no transitive arcs named GODDAG (General Ordered Descendant Directed Acyclic
                     Graph)[
                     <div class="xref e255" linkend="SperbergGoddag04"></div>]. Arcs denotes containment relationships,
                     and multi-parentage is allowed, thus making it possible to represent overlapping
                     situations. Several kinds of GODDAG have been defined in order to explore their
                     expressive power and their mutual relation: generalized, restricted and clean in [
                     <div class="xref e256" linkend="SperbergGoddag04"></div>], normalized and colored in [
                     <div class="xref e257" linkend="Goddagb06"></div>], node-ordered (noDAG) in [
                     <div class="xref e258" linkend="Goddagc08"></div>], child-arc-ordered in [
                     <div class="xref e259" linkend="Goddagd13"></div>]. The authors of GODDAG also developed a markup meta-language
                     named TexMECS [
                     <div class="xref e260" linkend="TexMECS01"></div>] as the natural linearisation format for the
                     GODDAG structure. As XML, TexMECS is an embedded meta-markup language where elements
                     are
                     delimited by start and end tags, but it also allows to represent graph structures
                     by
                     allowing tags to not nest properly. TexMECS supports complex document features, such
                     as
                     self overlap (using a co-indexing scheme) and discontinuous, virtual and unordered
                     elements (using special attributes and elements' delimiters). Since TexMECS documents
                     are not isomorphic to XML documents, the standard XML tools cannot be used and, as
                     far
                     as we know, no query mechanisms have been developed.
                  </div>
               </div>
               <div class="listitem e261">
                  <div class="para e262">
                     <div class="emphasis e263" role="bold">LMNL</div>: the Layered Markup and Annotaion Language [
                     <div class="xref e264" linkend="LMNL"></div>] defines a specific syntax based on layered ranges which can overlap each other.
                     A LMNL document is a
                     						set of layers containing either a sequence of Unicode characters (
                     <div class="emphasis e265" role="ital">text
                        							layer
                     </div>) or a sequence of ranges. A layer can be based on a single other layer, but can also
                     be
                     						the base of several other layers. LMNL is able to capture classic and self overlap
                     cases and virtual
                     						elements (via a pointers' mechanism), but since a range spans over continuous
                     sequences of characters, there
                     						is no way to represent discontinuous text fragments and element with mixed content
                     (i.e. characters and
                     						other ranges). Despite the main contribution of LMNL is a data model, at least
                     three syntaxes have been
                     						proposed: two are XML-based (ECLIX [
                     <div class="xref e266" linkend="ECLIX"></div>] and CLIX [
                     <div class="xref e267" linkend="DeRose"></div>], both
                     						based on the milestone technique), and a non-XML syntax known as the LMNL syntax.
                     XSLT stylesheets have been
                     						developed to deal with the XML representation of a LMNL document.
                  </div>
               </div>
            </div>
         </div>
      </div><a name="EARMARKANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e268" xml:id="SectionEARMARK">
         <div class="title e269">EARMARK</div>
         <div class="para e270">The Extremely Annotational RDF Markup, or EARMARK [
            <div class="xref e271" linkend="DiIorioEARMARK"></div>], is an OWL 2 DL
            				ontology
            <div class="popupBox e272">
               <div class="popupLabel" onmouseover="$('#d1e474').show('1000');" onmouseout="$('#d1e474').hide('1000');">[ footnote ]</div>
               <div id="d1e474" style="display: none;">
                  <div class="footnote" xml:id="ftn6">
                     <div class="para e273">EARMARK Ontology: 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e274" xlink:actuate="onRequest" xlink:href="http://www.essepuntato.it/2008/12/earmark" xlink:show="new" xlink:type="simple">http://www.essepuntato.it/2008/12/earmark</div>. The prefix 
                        <div class="emphasis e275" role="ital">earmark</div>
                        					refers to entities defined in it, while the prefix 
                        <div class="emphasis e276" role="ital">co</div> refers to entities –
                        					used in the EARMARK Ontology – defined in the old version of the Collections
                        Ontology [
                        <div class="xref e277" linkend="CiccareseCO"></div>].
                     </div>
                  </div>
               </div>
            </div>that defines document meta-markup. It is an ontologically precise definition of markup
            that
            			instantiates the markup of a text document as an independent OWL document outside
            of the text strings it
            			annotates, and through appropriate OWL and SWRL characterisations it can define
            structures such as trees or graphs
            			(in particular, extended GODDAGs [
            <div class="xref e278" linkend="DiIorioEARMARKGODDAG"></div>]) and can be used to generate validity
            			constraints (including co-constraints) [
            <div class="xref e279" linkend="DiIorioEARMARKValidation"></div>], to make explicit the semantics of markup [
            <div class="xref e280" linkend="PeroniMarkupSemantics"></div>], to annotate text or other markup documents [
            <div class="xref e281" linkend="BarabucciEARMARKFairyTale"></div>], to keep track of changes in markup [
            <div class="xref e282" linkend="PeroniChangeTracking"></div>], and as interchange format to enable conversions between different kinds of
            			XML vocabularies embedding overlap [
            <div class="xref e283" linkend="BarabucciFRETTA"></div>]. The whole ontological description of
            			EARMARK is summarised in the Graffoo diagram
            <div class="popupBox e284">
               <div class="popupLabel" onmouseover="$('#d1e502').show('1000');" onmouseout="$('#d1e502').hide('1000');">[ footnote ]</div>
               <div id="d1e502" style="display: none;">
                  <div class="footnote" xml:id="ftn7">
                     <div class="para e285">Graffoo is a graphical notation for OWL ontologies and it is available at 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e286" xlink:actuate="onRequest" xlink:href="http://www.essepuntato.it/graffoo" xlink:show="new" xlink:type="simple">http://www.essepuntato.it/graffoo</div>. 
                     </div>
                  </div>
               </div>
            </div> [
            <div class="xref e287" linkend="FalcoGraffoo"></div>] shown in 
            <div class="xref e288" linkend="FigureEARMARK"></div>.
         </div>
         <div class="figure e289" xml:id="FigureEARMARK" xreflabel="Figure 1">
            <div class="title e290"></div>
            <div class="mediaobject e291">
               <div class="imageobject e292">
                  <div class="metaBox e293"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e517').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e517" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e293'
                           </span><span class="metaAttribute">fileref='../../../vol13/graphics/Peroni01/Peroni01-001.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e294">
                  <div class="para e295">Figure 1: a Graffoo diagram summarising the EARMARK Ontology.</div>
               </div>
            </div>
         </div>
         <div class="para e296">The core classes of our model describe three disjoint base concepts: 
            <div class="emphasis e297" role="ital">docuverses</div>, 
            <div class="emphasis e298" role="ital">ranges</div> and 
            <div class="emphasis e299" role="ital">markup
               				items
            </div>.
         </div>
         <div class="para e300">The textual content of an EARMARK document is conceptually separated from its annotations,
            and is referred to
            			through the 
            <div class="emphasis e301" role="ital">earmark:Docuverse</div> class. The individuals of this class represent the
            			objects of discourse, i.e. all the containers of text from an EARMARK document.
            Any individual of the 
            <div class="emphasis e302" role="ital">earmark:Docuverse</div> class – commonly called a 
            <div class="emphasis e303" role="ital">docuverse</div>
            			(lowercase to distinguish it from the class) – specifies its actual content through
            the property 
            <div class="emphasis e304" role="ital">earmark:hasContent</div>. There exist two different kinds of docuverses, those that specify all
            			its content in form of a string (defined through the class 
            <div class="emphasis e305" role="ital">earmark:StringDocuverse</div>) and those that refer to a document containing the string to be marked up
            			(defined through the class 
            <div class="emphasis e306" role="ital">earmark:URIDocuverse</div>).
         </div>
         <div class="para e307">We define the class 
            <div class="emphasis e308" role="ital">earmark:Range</div> for any text lying between two locations of
            			a docuverse. A 
            <div class="emphasis e309" role="ital">range</div>, i.e, an individual of the class 
            <div class="emphasis e310" role="ital">earmark:Range</div>, is defined by a starting and an ending location (any literal) of a specific docuverse
            			through the functional properties 
            <div class="emphasis e311" role="ital">earmark:begins</div>, 
            <div class="emphasis e312" role="ital">eamark:ends</div> and 
            <div class="emphasis e313" role="ital">earmark:refersTo</div> respectively. There exist two main
            			types of ranges: those (i.e., 
            <div class="emphasis e314" role="ital">earmark:PointerRange</div>) that refer to text lying
            			between two non-negative integer locations that identify precise positions within
            a docuverse, and those (defined
            			through the class 
            <div class="emphasis e315" role="ital">earmark:XPathPointerRange</div>) that refer to any text, obtained
            			from a particular XPath context (specified through the property 
            <div class="emphasis e316" role="ital">earmark:hasXPathContext</div>) starting from a docuverse content, lying between two non-negative integer
            			locations that identify precise positions.
         </div>
         <div class="para e317">The class 
            <div class="emphasis e318" role="ital">earmark:MarkupItem</div> is the superclass defining artefacts to be
            			interpreted as markup such as elements (i.e., the class 
            <div class="emphasis e319" role="ital">earmark:Element</div>),
            			attributes (i.e., the class 
            <div class="emphasis e320" role="ital">earmark:Attribute</div>) and comments (i.e., the class
            				
            <div class="emphasis e321" role="ital">earmark:Comment</div>). A 
            <div class="emphasis e322" role="ital">markupitem</div> individual is a
            				collection
            <div class="popupBox e323">
               <div class="popupLabel" onmouseover="$('#d1e601').show('1000');" onmouseout="$('#d1e601').hide('1000');">[ footnote ]</div>
               <div id="d1e601" style="display: none;">
                  <div class="footnote" xml:id="ftn8">
                     <div class="para e324">In the following descriptions the prefix 
                        <div class="emphasis e325" role="ital">co</div> is used to indicate entities taken
                        					from version 1.2 of the Collections Ontology [
                        <div class="xref e326" linkend="CiccareseCO"></div>], an imported ontology used for
                        					handling collections, available at 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e327" xlink:actuate="onRequest" xlink:href="http://swan.mindinformatics.org/ontologies/1.2/collections.owl" xlink:show="new" xlink:type="simple">http://swan.mindinformatics.org/ontologies/1.2/collections.owl</div>.
                     </div>
                  </div>
               </div>
            </div> (
            <div class="emphasis e328" role="ital">co:Set</div>, 
            <div class="emphasis e329" role="ital">co:Bag</div> and 
            <div class="emphasis e330" role="ital">co:List</div>, where the latter is a subclass of the second one and all of them are subclasses
            			of 
            <div class="emphasis e331" role="ital">co:Collection</div>) of individuals belonging to the classes 
            <div class="emphasis e332" role="ital">earmark:MarkupItem</div> and 
            <div class="emphasis e333" role="ital">earmark:Range</div>. Through these collections it
            			is possible:
         </div>
         <div class="itemizedlist e334">
            <div class="listitem e335">
               <div class="para e336">to define a markup item as a set of other markup items and ranges by using the property
                  
                  <div class="emphasis e337" role="ital">co:element</div>;
               </div>
            </div>
            <div class="listitem e338">
               <div class="para e339">to define a markup item as a bag of items (defined by individuals belonging to the
                  class 
                  <div class="emphasis e340" role="ital">co:Item</div>), each of them containing a markup item or a range, by using the properties
                  						
                  <div class="emphasis e341" role="ital">c:item</div> and 
                  <div class="emphasis e342" role="ital">co:itemContent</div>
                  					respectively;
               </div>
            </div>
            <div class="listitem e343">
               <div class="para e344">to define a markup item as a list of items (defined by individuals belonging to the
                  class 
                  <div class="emphasis e345" role="ital">co:ListItem</div>), each of them containing a markup item or a range, in which we can also
                  					specify a particular order among the items themselves by using the property 
                  <div class="emphasis e346" role="ital">co:nextItem</div>.
               </div>
            </div>
         </div>
         <div class="para e347">A 
            <div class="emphasis e348" role="ital">markupitem</div> might also have a name, specified in the functional property
            				
            <div class="emphasis e349" role="ital">earmark:hasGeneralIdentifier</div>
            <div class="popupBox e350">
               <div class="popupLabel" onmouseover="$('#d1e667').show('1000');" onmouseout="$('#d1e667').hide('1000');">[ footnote ]</div>
               <div id="d1e667" style="display: none;">
                  <div class="footnote" xml:id="ftn9">
                     <div class="para e351">
                        <div class="emphasis e352" role="ital">General identifier</div> actually refers to the SGML 
                        <div class="emphasis e353">generic identifier</div>, i.e., the SGML term for the local name of the markup
                        					item, e.g., “p” for markup element “&lt;p&gt;...&lt;/p&gt;”.
                     </div>
                  </div>
               </div>
            </div>, and a namespace specified using the functional property 
            <div class="emphasis e354" role="ital">earmark:hasNamespace</div>.
         </div>
         <div class="para e355">In order to understand how EARMARK is used to describe markup hierarchies, let us
            consider the markup
            			structures shown in 
            <div class="xref e356" linkend="FigureOverlapping"></div>.
         </div>
         <div class="figure e357" xml:id="FigureOverlapping" xreflabel="Figure 2">
            <div class="title e358"></div>
            <div class="mediaobject e359">
               <div class="imageobject e360">
                  <div class="metaBox e361"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e687').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e687" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e361'
                           </span><span class="metaAttribute">fileref='../../../vol13/graphics/Peroni01/Peroni01-002.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e362">
                  <div class="para e363">Figure 2: an example of three different markup hierarchies (light-blue rectangles
                     with solid border, light-green
                     						rectangles with dashed border, and pink rectangles with dotted borders) involving
                     six different ranges (the
                     						five empty rhomboids with solid red border and the one with blue dashed border).
                  </div>
               </div>
            </div>
         </div>
         <div class="para e364">First of all, we define the whole textual content of the document – i.e., the first
            three lines of the
            				
            <div class="emphasis e365" role="ital">Paradise Lost</div> by John Milton – by creating an instance of the class 
            <div class="emphasis e366" role="ital">earmark:StringDocuverse</div>
            <div class="popupBox e367">
               <div class="popupLabel" onmouseover="$('#d1e699').show('1000');" onmouseout="$('#d1e699').hide('1000');">[ footnote ]</div>
               <div id="d1e699" style="display: none;">
                  <div class="footnote" xml:id="ftn10">
                     <div class="para e368">This and all the following excerpts are defined in Turtle [
                        <div class="xref e369" linkend="TurtlePrudhommeaux"></div>].
                     </div>
                  </div>
               </div>
            </div>:
         </div>
         <div class="programlisting e370" xml:space="preserve">@prefix : &lt;http://www.essepuntato.it/2014/balisage/example/&gt;
            :doc a earmark:StringDocuverse ;
            earmark:hasContent 
            "Of Mans First Disobedience, and the Fruit
            Of that Forbidden Tree, whose mortal tast
            Brought Death into the World" .
         </div>
         <div class="para e371">Then, we can define all the six different ranges (as individuals of 
            <div class="emphasis e372" role="ital">earmark:PointerRange</div>) that are introduced in the figure, i.e.:
         </div>
         <div class="programlisting e373" xml:space="preserve"># The string 'Of Mans First Disobedience, and the Fruit'
            :r1 a earmark:PointerRange ;
            earmark:refersTo :doc ;
            earmark:begins "0"^^xsd:nonNegativeInteger ;
            earmark:ends "41"^^xsd:nonNegativeInteger .
            
            # The string 'the Fruit Of that Forbidden Tree,'
            :r2 a earmark:PointerRange ;
            earmark:refersTo :doc ;
            earmark:begins "32"^^xsd:nonNegativeInteger ;
            earmark:ends "65"^^xsd:nonNegativeInteger .
            
            # The string 'Of that Forbidden Tree,'
            :r3 a earmark:PointerRange ;
            earmark:refersTo :doc ;
            earmark:begins "42"^^xsd:nonNegativeInteger ;
            earmark:ends "65"^^xsd:nonNegativeInteger .
            
            … 
         </div>
         <div class="para e374">Finally, we can built the three markup hierarchies shown in upon these ranges, as
            shown in the follwing
            			excerpt:
         </div>
         <div class="programlisting e375" xml:space="preserve">:lg a earmark:MarkupItem , co:List ;
            earmark:hasGeneralIdentifier "lg" ;
            co:firstItem [
            a co:ListItem ;
            co:itemContent :l1 ;
            co:nextItem [ 
            a co:ListItem ;
            co:itemContent :l2 ;
            co:nextItem [ 
            a co:ListItem ;
            co:itemContent :l3 ] ] ] .
            
            :q a earmark:MarkupItem , co:List ;
            earmark:hasGeneralIdentifier "q" ;
            co:firstItem [
            a co:ListItem ;
            co:itemContent :l1 ] .
            
            :l1 a earmark:MarkupItem , co:List ;
            earmark:hasGeneralIdentifier "l" ;
            co:firstItem [
            a co:ListItem ;
            co:itemContent :r1 ] .
            
            … 
         </div>
      </div><a name="CharacterizingoverlapsbywayofanontologyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e376" xml:id="SectionEOO">
         <div class="title e377">Characterizing overlaps by way of an ontology</div>
         <div class="para e378">Different types of overlap exist – according to the subset of EARMARK nodes involved
            (i.e., ranges or markup
            			items) – and different strategies are needed to detect them. In particular, there
            is a clear distinction between
            			overlapping ranges and overlapping markup items, and in the ways these overlapping
            scenarios affect the dominance
            			and containment relations between nodes – as shown in figure 
            <div class="xref e379" linkend="FigureOverlapping"></div>, that will be
            			used  to illustrate the different kinds of overlapping scenarios.
         </div>
         <div class="para e380">In this section, we introduce the 
            <div class="emphasis e381" role="ital">EARMARK Overlapping Ontology</div> (
            <div class="emphasis e382" role="ital">EOO</div>)
            <div class="popupBox e383">
               <div class="popupLabel" onmouseover="$('#d1e733').show('1000');" onmouseout="$('#d1e733').hide('1000');">[ footnote ]</div>
               <div id="d1e733" style="display: none;">
                  <div class="footnote" xml:id="ftn11">
                     <div class="para e384">EARMARK Overlapping Ontology: 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e385" xlink:actuate="onRequest" xlink:href="http://www.essepuntato.it/2011/05/overlapping" xlink:show="new" xlink:type="simple">http://www.essepuntato.it/2011/05/overlapping</div>. The prefix 
                        <div class="emphasis e386" role="ital">eoo</div>
                        					refers to entities defined in it.
                     </div>
                  </div>
               </div>
            </div>, which is an OWL 2 DL ontology [MotikOWL2] that extends the EARMARK Ontology by adding
            support for
            			overlapping scenarios and for inferences relative to them. In particular, in the
            following subsections we describe
            			how the ontology models all possible overlapping scenarios between nodes by means
            of description logic
            				formulas
            <div class="popupBox e387">
               <div class="popupLabel" onmouseover="$('#d1e743').show('1000');" onmouseout="$('#d1e743').hide('1000');">[ footnote ]</div>
               <div id="d1e743" style="display: none;">
                  <div class="footnote" xml:id="ftn12">
                     <div class="para e388">OWL 2 DL [MotikOWL2] is based on a particular description logic (DL), i.e., SROIQ
                        [
                        <div class="xref e389" linkend="HorrocksSROIQ"></div>]. In this paper, we decided to use DL notation for the sake of clarity, instead
                        					of adopting one of the possible linearisation of OWL made available by the W3C.
                        We recommend the reading of
                        						[
                        <div class="xref e390" linkend="KrotzschDL"></div>] for more information about DL notation. As an extension of common DL
                        					notation, we are using ⊤ and ⊤op to indicate the top class and the top object
                        property respectively.
                     </div>
                  </div>
               </div>
            </div> and SWRL rules [
            <div class="xref e391" linkend="HorrocksSWRL"></div>] (if needed)
            <div class="popupBox e392">
               <div class="popupLabel" onmouseover="$('#d1e754').show('1000');" onmouseout="$('#d1e754').hide('1000');">[ footnote ]</div>
               <div id="d1e754" style="display: none;">
                  <div class="footnote" xml:id="ftn13">
                     <div class="para e393">Any OWL 2 DL ontology can be accompanied by SWRL rules so as to guarantee additional
                        inferences that are
                        					not directly handled by current ontological definitions. All these rules will
                        be defined using an informal
                        					human readable syntax as introduced in [
                        <div class="xref e394" linkend="HorrocksSWRL"></div>], where each rule is represented in
                        					the form of “antecedent ⇒ consequent” statements, meaning that if the 
                        <div class="emphasis e395" role="ital">antecedent</div> is true, then the 
                        <div class="emphasis e396" role="ital">consequent</div> can be inferred. Both
                        						
                        <div class="emphasis e397" role="ital">antecedent</div> and 
                        <div class="emphasis e398" role="ital">consequent</div> are a list of
                        					ontological assertions separated by “^”. Each assertion can be composed by an
                        atomic entity (e.g., a class or
                        					a property) containing zero, one or two variables (each beginning with a “?”)
                        depending on the kinds of unary
                        					(i.e., class) or binary (i.e., property) entity used, or by a (boolean, cardinality,
                        etc.) restriction of
                        					multiple entities.
                     </div>
                  </div>
               </div>
            </div>. A summary of the taxonomy of possible overlapping scenarios is provided in figure
            
            <div class="xref e399" linkend="FigureOverlappingTaxonomy"></div>.
         </div>
         <div class="figure e400" xml:id="FigureOverlappingTaxonomy" xreflabel="Figure 3">
            <div class="title e401"></div>
            <div class="mediaobject e402">
               <div class="imageobject e403">
                  <div class="metaBox e404"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e778').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e778" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e404'
                           </span><span class="metaAttribute">fileref='../../../vol13/graphics/Peroni01/Peroni01-003.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e405">
                  <div class="para e406">Figure 3: the taxonomy of all the different kinds of overlapping scenarios that are
                     introduced in this paper.
                  </div>
               </div>
            </div>
         </div><a name="PropertiesofoverlappingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e407">
            <div class="title e408">Properties of overlapping</div>
            <div class="para e409">The most important property in EOO is the generic property, 
               <div class="emphasis e410" role="ital">eoo:overlapsWith</div>, that describes when an EARMARK node overlaps with another EARMARK node of the
               				same type. This means that markup items can overlap only with other markup items,
               and ranges can overlap only
               				with ranges. In addition, this property is symmetric (i.e., if A overlaps with
               B, then B overlaps with A) and
               				irreflexive (i.e., if A overlaps with B, then A is different from B
               <div class="popupBox e411">
                  <div class="popupLabel" onmouseover="$('#d1e790').show('1000');" onmouseout="$('#d1e790').hide('1000');">[ footnote ]</div>
                  <div id="d1e790" style="display: none;">
                     <div class="footnote" xml:id="ftn14">
                        <div class="para e412">Note that OWL 2 DL does not support the unique name assumption typical of database
                           systems. Among the
                           						various consequences of this choice, in this case it means that two different
                           IRIs cannot be guaranteed to
                           						refer to two different resources. 
                        </div>
                     </div>
                  </div>
               </div>). This property is defined formally as follows:
            </div>
            <div class="programlisting e413" xml:space="preserve"># Declaration as an object property
               eoo:overlapsWith ⊑ ⊤op
               
               # Domain
               ∃eoo:overlapsWith.⊤ ⊑ 
               (earmark:Range ⊓ ∀eoo:overlapsWith.Range) ⊔ 
               (earmark:MarkupItem ⊓ ∀eoo:overlapsWith.MarkupItem)
               
               # Range
               ⊤ ⊑ ∀eoo:overlapsWith.(
               (earmark:Range ⊓ ∀eoo:overlapsWith.Range) ⊔ 
               (earmark:MarkupItem ⊓ ∀eoo:overlapsWith.MarkupItem))
               
               # Symmetry
               eoo:overlapsWith ≡ eoo:overlapsWith-
               
               # Irreflexivity 
               ⊤ ⊑ ¬∃eoo:overlapsWith.Self
            </div>
            <div class="para e414">All the properties presented in the following sections are sub-properties of the
               generic relation 
               <div class="emphasis e415" role="ital">eoo:overlapsWith</div>.
            </div><a name="OverlappingofrangesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e416" xml:id="SectionRangeOverlapping">
               <div class="title e417">Overlapping of ranges</div>
               <div class="para e418">By definition, overlapping ranges (i.e., linked through the symmetric property 
                  <div class="emphasis e419" role="ital">eoo:overlapsWithRange</div>) are two ranges of the same type that refer to the same docuverse and so
                  					that at least one of the end points of the first range is contained in the interval
                  described by the locations
                  					of the second range (end-points excluded). The property 
                  <div class="emphasis e420" role="ital">eoo:overlapsWithRange</div>
                  					is defined as follows:
               </div>
               <div class="programlisting e421" xml:space="preserve"># Sub-property declaration
                  eoo:overlapsWithRange ⊑ eoo:overlapsWith
                  
                  # Domain
                  ∃eoo:overlapsWithRange.⊤ ⊑ earmark:Range
                  
                  # Range
                  ⊤ ⊑ ∀eoo:overlapsWithRange.earmark:Range
                  
                  # Symmetry
                  eoo:overlapsWithRange ≡ eoo:overlapsWithRange-
               </div>
               <div class="para e422">Specifically, 
                  <div class="emphasis e423" role="ital">totally</div> overlapping ranges (defined through the property
                  						
                  <div class="emphasis e424" role="ital">eoo:overlapsTotallyWithRange</div>) have the locations of the first range
                  					completely contained in the interval of the second range or vice versa, i.e.,
                  the range is fully contained
                  					inside the second range. For instance, in the example in 
                  <div class="xref e425" linkend="FigureOverlapping"></div>, the range “the
                  					Fruit Of that Forbidden Tree” overlaps totally with the range “Of that Forbidden
                  Tree”.
               </div>
               <div class="para e426">On the other hand, partially overlapping ranges (defined through the property 
                  <div class="emphasis e427" role="ital">eoo:overlapsPartiallyWithRange</div>) have exactly one location inside the interval and the other
                  					outside. For instance, considering the example in 
                  <div class="xref e428" linkend="FigureOverlapping"></div>, the range “Of Mans
                  					First Disobedience, and the Fruit” overlaps partially with “the Fruit Of that
                  Forbidden Tree”. These two
                  					properties are disjoint, meaning that two ranges cannot overlap totally and partially
                  between them.
                  					Additionally, this property also handles the situation in which the two locations
                  are complety identical, but
                  					the end points have reversed roles (i.e., the starting point of the first range
                  is the ending point of the
                  					second one, and vice versa). They are formally defined as follows:
               </div>
               <div class="programlisting e429" xml:space="preserve"># Sub-property declarations
                  eoo:overlapsTotallyWithRange ⊑ eoo:overlapsWithRange
                  eoo:overlapsPartiallyWithRange ⊑ eoo:overlapsWithRange
                  
                  # Disjointness
                  eoo:overlapsTotallyWithRange ⊓ eoo:overlapsPartialelyWithRange ⊑ ⊥
                  
                  # Symmetry
                  eoo: overlapsTotallyWithRange ≡ eoo:overlapsTotallyWithRange-
                  eoo: overlapsPartiallyWithRange ≡ eoo:overlapsPartiallyWithRange-
               </div>
               <div class="para e430">The following SWRL rules allows us to catch the constraints of this kind of overlap
                  by
                  inferring the overlapping relation between the two different kinds of (concrete) ranges,
                  i.e., 
                  <div class="emphasis e431" role="ital">earmark:PointerRange</div> and 
                  <div class="emphasis e432" role="ital">earmark:XPathPonterRange</div>
                  <div class="popupBox e433">
                     <div class="popupLabel" onmouseover="$('#d1e840').show('1000');" onmouseout="$('#d1e840').hide('1000');">[ footnote ]</div>
                     <div id="d1e840" style="display: none;">
                        <div class="footnote" xml:id="ftn15">
                           <div class="para e434">In the following examples, we introduce some generic SWRL rules for ranges that
                              actually work fully only with instances of the class 
                              <div class="emphasis e435" role="ital">earmark:PointerRange</div>, which is one kind of range defined in EARMARK. In
                              particular, note that if we consider individuals of the class 
                              <div class="emphasis e436" role="ital">earmark:XPathRange</div>, the XPath context (defined through the property
                              
                              <div class="emphasis e437" role="ital">earmark:hasXPathContext</div>) must be taken into account
                              to identify when such ranges overlap between them. Even if the SWRL rules for XPath
                              ranges are not introduced in this paper for the sake of clarity, in EOO the issue
                              of
                              using also the property 
                              <div class="emphasis e438" role="ital">earmark:hasXPathContext</div> in
                              such rules has been approached in the most lazy way, saying that two XPath ranges
                              have
                              the same context when the XPath expressions specified are exactly the same. However,
                              currently EOO does not handle the cases of having different XPath expressions that
                              are
                              either semantically-equivalent (i.e., “//p” and “//element()[name() = 'p']”) or
                              functionally-equivalent (i.e., they return the same sequence of items).
                           </div>
                        </div>
                     </div>
                  </div>:
               </div>
               <div class="programlisting e439" xml:space="preserve"># Overlaps partially with range
                  RANGE_IDENTIFICATION ^
                  earmark:refersTo(?x,?d) ^ earmark:refersTo(?y,?d) ^ 
                  earmark:begins(?x,?b1) ^ earmark:begins(?y,?b2) ^
                  earmark:ends(?x,?e1) ^ earmark:ends(?y,?e2) ^ 
                  (?b1 &lt; ?b2 &lt; ?e1 &lt; ?e2) or (?b1 &lt; ?e2 &lt; ?e1 &lt; ?b2) or
                  (?e1 &lt; ?b2 &lt; ?b1 &lt; ?e2) or (?e1 &lt; ?e2 &lt; ?b1 &lt; ?b2) or
                  (?b1 = ?b2 and ?e1 = ?e2) or (?b1 = ?e2 and ?e1 = ?b2) ^
                  ?x != ?y
                  ⇒ eoo:overlapsPartiallyWithRange(?x,?y)
                  
                  # Overlaps totally with range
                  RANGE_IDENTIFICATION ^
                  earmark:refersTo(?x,?d) ^ earmark:refersTo(?y,?d) ^ 
                  earmark:begins(?x,?b1) ^ earmark:begins(?y,?b2) ^
                  earmark:ends(?x,?e1) ^ earmark:ends(?y,?e2) ^ 
                  (?b1 &lt;= ?b2 &lt; ?e2 &lt; ?e1) or (?e1 &lt;= ?b2 &lt; ?e2 &lt; ?b1) ^
                  (?b1 &lt; ?b2 &lt; ?e2 &lt;= ?e1) or (?e1 &lt; ?b2 &lt; ?e2 &lt;= ?b1) ^
                  (?b1 &lt;= ?e2 &lt; ?b2 &lt; ?e1) or (?e1 &lt;= ?e2 &lt; ?b2 &lt; ?b1) ^
                  (?b1 &lt; ?e2 &lt; ?b2 &lt;= ?e1) or (?e1 &lt; ?e2 &lt; ?b2 &lt;= ?b1) ^
                  ?x != ?y
                  ⇒ eoo:overlapsTotallyWithRange(?x,?y)
               </div>
               <div class="para e440">Here, “RANGE_IDENTIFICATION” is a placeholder for the different antecedents to use
                  in case we want to deal
                  					with pointer ranges or with XPath pointer ranges. In particular, for the pointer
                  range we have:
               </div>
               <div class="programlisting e441" xml:space="preserve">earmark:PointerRange(?x) ^ earmark:PointerRange(?y)</div>
               <div class="para e442">, and for XPath pointer ranges we have:</div>
               <div class="programlisting e443" xml:space="preserve">earmark:XPathPointerRange(?x) ^ earmark:XPathPointerRange(?y) ^
                  earmark:hasXPathContext(?x,?c) ^ earmark:hasXPathContext(?y,?c) 
               </div>
            </div><a name="DominancevsContainmentinEARMARKANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e444">
               <div class="title e445">Dominance vs. Containment in EARMARK</div>
               <div class="para e446">In this section we introduce how dominance and containment relations are implemented
                  in EOO, since their intrinsic relation with any kind of overlapping scenario we discuss
                  in
                  the following subsections.
               </div>
               <div class="para e447">The dominance relation is actually defined by two different and related concepts that
                  have always markup items as subject of dominance assertions. In particular, we say
                  that a
                  markup item A 
                  <div class="emphasis e448" role="ital">dominates directly</div> (i.e., 
                  <div class="emphasis e449" role="ital">eoo:dominatesDirectly</div>) an EARMARK node B if A has B as child.
                  This relation is formally defined as follows:
               </div>
               <div class="programlisting e450" xml:space="preserve"># Declaration as an object property
                  eoo:dominatesDirectly ⊑ ⊤op
                  
                  # Domain
                  ∃eoo:dominatesDirectly.⊤ ⊑ earmark:MarkupItem
                  
                  # Range
                  ⊤ ⊑ ∀eoo:dominatesDirectly.(earmark:Range ⊔ earmark:MarkupItem)
               </div>
               <div class="para e451">The relation between 
                  <div class="emphasis e452" role="ital">eoo:dominatesDirectly</div> and the
                  parent-child relation in EARMARK
                  <div class="popupBox e453">
                     <div class="popupLabel" onmouseover="$('#d1e887').show('1000');" onmouseout="$('#d1e887').hide('1000');">[ footnote ]</div>
                     <div id="d1e887" style="display: none;">
                        <div class="footnote" xml:id="ftn16">
                           <div class="para e454">As anticipated in 
                              <div class="xref e455" linkend="SectionEARMARK"></div>, note that in EARMARK any
                              parent-child relationship between a markup item and a node is defined through the
                              property 
                              <div class="emphasis e456" role="ital">co:element</div> in case the markup item is
                              defined as a set (i.e., 
                              <div class="emphasis e457" role="ital">co:Set</div>) or a bag (i.e.,
                              
                              <div class="emphasis e458" role="ital">co:Bag</div>), while it is defined by the chain 
                              <div class="emphasis e459" role="ital">co:item o co:itemContent</div> if the markup item is defined as a
                              list (i.e., a 
                              <div class="emphasis e460" role="ital">co:List</div>). However, the new version of
                              the Collections Ontology [
                              <div class="xref e461" linkend="CiccareseCO"></div>], available at 
                              <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e462" xlink:actuate="onRequest" xlink:href="http://purl.org/co" xlink:show="new" xlink:type="simple">http://purl.org/co</div>, defines the property
                              
                              <div class="emphasis e463" role="ital">co:element</div> as sub-property of the aforementioned
                              property chain, meaning that if we have “A co:item I” and “I co:itemContent B”, then
                              “A co:elements B” holds as well. Even if EARMARK is still using the old version of
                              the
                              Collection ontology, that does not includes the above sub-property axiom, we have
                              added such axiom in EOO in order to map 
                              <div class="emphasis e464" role="ital">co:element</div>
                              assertions between markup items and nodes as parent-child relationships.
                           </div>
                        </div>
                     </div>
                  </div> is defined by means of the following SWRL rule:
               </div>
               <div class="programlisting e465" xml:space="preserve">earmark:MarkupItem(?x) ^ co:element(?x,?y) 
                  ⇒ eoo:dominatesDirectly(?x,?y)
               </div>
               <div class="para e466">Generalising 
                  <div class="emphasis e467" role="ital">eoo:dominatesDirectly</div>, we say that a
                  markup item A 
                  <div class="emphasis e468" role="ital">dominates</div> (i.e., 
                  <div class="emphasis e469" role="ital">eoo:dominates</div>) an EARMARK node B if B is a descendant of A. This property is
                  transitive and is also a super-property of 
                  <div class="emphasis e470" role="ital">eoo:dominatesDirectly</div> (i.e., 
                  <div class="emphasis e471" role="ital">eoo:dominatesDirectly</div> entails 
                  <div class="emphasis e472" role="ital">eoo:dominates</div>), as defined as follows:
               </div>
               <div class="programlisting e473" xml:space="preserve"># Declaration as an object property
                  eoo:dominates ⊑ ⊤op
                  
                  # Sub-property declaration
                  eoo:dominatesDirectly ⊑ eoo:dominates
                  
                  # Transitivity
                  eoo:dominates o eoo:dominates ⊑ eoo:dominates
               </div>
               <div class="para e474">The containment is a transitive relation (i.e., 
                  <div class="emphasis e475" role="ital">eoo:contains</div>) that is defined on the basis of the dominance relation and
                  applies among any EARMARK node (either markup item or range). In particular, we say
                  that
                  an EARMARK node 
                  <div class="emphasis e476" role="ital">A</div> contains another EARMARK node 
                  <div class="emphasis e477" role="ital">B</div> when one of the following conditions holds:
               </div>
               <div class="orderedlist e478">
                  <div class="listitem e479">
                     <div class="para e480">A dominates B;</div>
                  </div>
                  <div class="listitem e481">
                     <div class="para e482">if A and B are markup items, the leaf nodes dominated by A are a super-set of the
                        leaf nodes dominated by B;
                     </div>
                  </div>
                  <div class="listitem e483">
                     <div class="para e484">if A and B are ranges, A overlaps totally with B (cf. 
                        <div class="xref e485" linkend="SectionRangeOverlapping"></div>) and the interval defined by A contains
                        completely the locations of B.
                     </div>
                  </div>
               </div>
               <div class="para e486">This relation is thus formally defined as follows:</div>
               <div class="programlisting e487" xml:space="preserve"># Declaration as an object property
                  eoo:contains ⊑ ⊤op
                  
                  # Domain
                  ∃eoo:contains.⊤ ⊑ earmark:Range ⊔ earmark:MarkupItem
                  
                  # Range
                  ⊤ ⊑ ∀eoo:contains.(earmark:Range ⊔ earmark:MarkupItem)
                  
                  # Transitivity
                  eoo:contains o eoo:contains ⊑ eoo:contains
               </div>
               <div class="para e488">In addition to that, by means of rule 1, we can also state that the dominance relation
                  is actually a sub-relation of the containment relation (meaning that if 
                  <div class="emphasis e489" role="ital">A eoo:dominates B</div>, then 
                  <div class="emphasis e490" role="ital">A eoo:contains
                     B
                  </div> holds as well), as shown as follows:
               </div>
               <div class="programlisting e491" xml:space="preserve"># Sub-property declaration
                  eoo:dominates ⊑ eoo:contains
               </div>
               <div class="para e492">While we cannot specify in any way (neither in OWL nor SWRL) the constraint introduced
                  in rule 2, we can define a particular SWRL rule to handle the constraint introduced
                  in
                  rule 3:
               </div>
               <div class="programlisting e493" xml:space="preserve">eoo:overlapsTotallyWithRange(?x,?y) ^ 
                  earmark:begins(?x,?b1) ^ earmark:begins(?y,?b2) ^ 
                  earmark:ends(?x,?e1) ^ earmark:ends(?y,?e2) ^ 
                  (?b1 &lt; ?b2 &lt; ?e1) or (?b1 &lt; ?e2 &lt; ?e1) or
                  (?e1 &lt; ?b2 &lt; ?b1) or (?e1 &lt; ?e2 &lt; ?b1)
                  ⇒ eoo:contains(?x,?y)
               </div>
            </div><a name="OverlappingofmarkupitemsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e494">
               <div class="title e495">Overlapping of markup items</div>
               <div class="para e496">The case of overlapping markup items (i.e., linked through the symmetric property
                  
                  <div class="emphasis e497" role="ital">eoo:overlapsWithMarkupItem</div>) is slightly more complicated than range overlaps. We define that two
                  					markup items A and B overlap when at least one of the following scenarios holds:
               </div>
               <div class="orderedlist e498">
                  <div class="listitem e499">
                     <div class="para e500">a markup item 
                        <div class="emphasis e501" role="ital">A</div> contains a range that overlaps
                        with another range contained by a markup item 
                        <div class="emphasis e502" role="ital">B</div>;
                     </div>
                  </div>
                  <div class="listitem e503">
                     <div class="para e504">two markup items 
                        <div class="emphasis e505" role="ital">A</div> and 
                        <div class="emphasis e506" role="ital">B</div> contain at least a range in common;
                     </div>
                  </div>
                  <div class="listitem e507">
                     <div class="para e508">two markup items 
                        <div class="emphasis e509" role="ital">A</div> and 
                        <div class="emphasis e510" role="ital">B</div> contain at least a markup item in common.
                     </div>
                  </div>
               </div>
               <div class="para e511">The property 
                  <div class="emphasis e512" role="ital">eoo:overlapsWithMarkupItem</div> is defined as
                  follows:
               </div>
               <div class="programlisting e513" xml:space="preserve"># Sub-property declaration
                  eoo:overlapsWithMarkupItem ⊑ eoo:overlapsWith
                  
                  # Domain
                  ∃eoo:overlapsWithMarkupItem.⊤ ⊑ earmark:MarkupItem
                  
                  # Range
                  ⊤ ⊑ ∀eoo:overlapsWithMarkupItem.earmark:MarkupItem
                  
                  # Symmetry
                  eoo:overlapsWithMarkupItem ≡ eoo:overlapsWithMarkupItem-
               </div>
               <div class="para e514">The three aforementioned scenarios correspond to three different symmetric sub-properties
                  of 
                  <div class="emphasis e515" role="ital">eoo:overlapsWIthMarkupItem</div>. 
               </div>
               <div class="para e516">The first scenario – i.e., 
                  <div class="emphasis e517" role="ital">A</div> contains a range that overlaps with another
                  					range contained by 
                  <div class="emphasis e518" role="ital">B</div> – refers to markup items 
                  <div class="emphasis e519" role="ital">overlapping by range</div>.In the example in 
                  <div class="xref e520" linkend="FigureOverlapping"></div>, the element
                  						
                  <div class="emphasis e521" role="ital">l1</div> overlaps by range with the element 
                  <div class="emphasis e522" role="ital">unit1</div>. This is captured by a subproperty of 
                  <div class="emphasis e523" role="ital">eoo:overlapsWIthMarkupItem</div>, property 
                  <div class="emphasis e524" role="ital">eoo:overlapsByRange</div>, that
                  					is formally described as follows:
               </div>
               <div class="programlisting e525" xml:space="preserve"># Sub-property declaration
                  eoo:overlapsByRange ⊑ eoo:overlapsWithWithMarkupItem
                  
                  # Domain
                  ∃eoo:overlapsByRange.⊤ ⊑ 
                  earmark:MarkupItem ⊓
                  ∃eoo:dominatesDirectly.(∃eoo:overlapsWithRange.earmark:Range)
                  
                  # Range
                  ⊤ ⊑ ∀eoo:overlapsByRange.(
                  earmark:MarkupItem ⊓
                  ∃eoo:dominatesDirectly.(∃eoo:overlapsWithRange.earmark:Range))
                  
                  # Symmetry
                  eoo:overlapsByRange ≡ eoo:overlapsByRange-
               </div>
               <div class="para e526">The second scenario – i.e., 
                  <div class="emphasis e527" role="ital">A</div> and 
                  <div class="emphasis e528" role="ital">B</div>
                  					contain at least one shared range – refers to markup items 
                  <div class="emphasis e529" role="ital">overlapping by content
                     						hierarchy
                  </div>. In the example in 
                  <div class="xref e530" linkend="FigureOverlapping"></div>, the element 
                  <div class="emphasis e531" role="ital">l2</div> overlaps by content hierarchy with the element 
                  <div class="emphasis e532" role="ital">unit2</div>. The corresponding subproperty 
                  <div class="emphasis e533" role="ital">eoo:overlapsByContentHierarchy</div> is formally described as follows:
               </div>
               <div class="programlisting e534" xml:space="preserve"># Sub-property declaration
                  eoo:overlapsByContentHierarchy ⊑ eoo:overlapsWithWithMarkupItem
                  
                  # Domain
                  ∃eoo:overlapsByContentHierarchy.⊤ ⊑ 
                  earmark:MarkupItem ⊓ ∃eoo:dominatesDirectly.earmark:Range
                  
                  # Range
                  ⊤ ⊑ ∀eoo:overlapsByContentHierarchy.(
                  earmark:MarkupItem ⊓ ∃eoo:dominatesDirectly.earmark:Range)
                  
                  # Symmetry
                  eoo:overlapsByContentHierarchy ≡ eoo:overlapsByContentHierarchy-
               </div>
               <div class="para e535">The third scenario – i.e., 
                  <div class="emphasis e536" role="ital">A</div> and 
                  <div class="emphasis e537" role="ital">B</div>
                  					contain at least another markup item in common – refers to markup items 
                  <div class="emphasis e538" role="ital">overlapping by
                     						markup hierarchy
                  </div>. In the example in 
                  <div class="xref e539" linkend="FigureOverlapping"></div>, the element 
                  <div class="emphasis e540" role="ital">lg</div> overlaps by markup hierarchy with the element 
                  <div class="emphasis e541" role="ital">q</div>.
                  					The related subproperty 
                  <div class="emphasis e542" role="ital">eoo:overlapsByMarkupHierarchy</div> is formally described
                  					as follows:
               </div>
               <div class="programlisting e543" xml:space="preserve"># Sub-property declaration
                  eoo:overlapsByMarkupHierarchy ⊑ eoo:overlapsWithWithMarkupItem
                  
                  # Domain
                  ∃eoo:overlapsByMarkupHierarchy.⊤ ⊑ 
                  earmark:MarkupItem ⊓ ∃eoo:dominatesDirectly.earmark:MarkupItem
                  
                  # Range
                  ⊤ ⊑ ∀eoo:overlapsByMarkupHierarchy.(
                  earmark:MarkupItem ⊓ ∃eoo:dominatesDirectly.earmark:MarkupItem)
                  
                  # Symmetry
                  eoo:overlapsByMarkupHierarchy ≡ eoo:overlapsByMarkupHierarchy-
               </div>
               <div class="para e544">The following SWRL rules allows us to catch the constraints of this kind of overlap
                  by
                  inferring the right overlapping relation according to the aforementioned three
                  scenarios:
               </div>
               <div class="programlisting e545" xml:space="preserve"># overlaps by range
                  earmark:MarkupItem(?a) ^ earmark:MarkupItem(?b) ^ 
                  earmark:Range(?r1) ^ earmark:Range(?r2) ^ 
                  eoo:dominatesDirectly(?a,?r1) ^ eoo:dominatesDirectly(?b,?r2) ^ 
                  eoo:overlapsWithRange(?r1,?r2) ^ 
                  ?a != ?b ^ ?r1 != ?r2
                  ⇒ eoo:overlapsByRange(?a,?b)
                  
                  # overlaps by content hierarchy
                  earmark:MarkupItem(?a) ^ earmark:MarkupItem(?b) ^ earmark:Range(?r) ^ 
                  eoo:dominatesDirectly(?a,?r) ^ eoo:dominatesDirectly(?b,?r) ^ 
                  ?a != ?b
                  ⇒ eoo:overlapsByContentHierarchy(?a,?b)
                  
                  # overlaps by markup hierarchy
                  earmark:MarkupItem(?a) ^ earmark:MarkupItem(?b) ^ earmark:MarkupItem(?x) ^ 
                  eoo:dominatesDirectly(?a,?x) ^ eoo:dominatesDirectly(?b,?x) ^ 
                  ?a != ?b != ?x
                  ⇒ eoo:overlapsByMarkupHierarchy(?a,?b)
               </div>
            </div>
         </div><a name="ApproachinginferencesthroughreasonersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e546">
            <div class="title e547">Approaching inferences through reasoners</div>
            <div class="para e548">The EARMARK Overlapping Ontology can be used by OWL reasoners such as Pellet
               <div class="popupBox e549">
                  <div class="popupLabel" onmouseover="$('#d1e1123').show('1000');" onmouseout="$('#d1e1123').hide('1000');">[ footnote ]</div>
                  <div id="d1e1123" style="display: none;">
                     <div class="footnote" xml:id="ftn17">
                        <div class="para e550">Pellet, OWL 2 reasoner for Java: 
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e551" xlink:actuate="onRequest" xlink:href="http://clarkparsia.com/pellet/" xlink:show="new" xlink:type="simple">http://clarkparsia.com/pellet/</div>. 
                        </div>
                     </div>
                  </div>
               </div> [
               <div class="xref e552" linkend="SirinPellet"></div>] in order to identify all the possible kinds of
               overlapping scenarios that happen within any EARMARK document. As an example, running
               such
               reasoner according to EOO on the EARMARK file describing the document in 
               <div class="xref e553" linkend="FigureOverlapping"></div>
               <div class="popupBox e554">
                  <div class="popupLabel" onmouseover="$('#d1e1133').show('1000');" onmouseout="$('#d1e1133').hide('1000');">[ footnote ]</div>
                  <div id="d1e1133" style="display: none;">
                     <div class="footnote" xml:id="ftn18">
                        <div class="para e555">Available online at 
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e556" xlink:actuate="onRequest" xlink:href="http://www.essepuntato.it/2014/balisage/earmark-document.ttl" xlink:show="new" xlink:type="simple">http://www.essepuntato.it/2014/balisage/earmark-document.ttl</div>. 
                        </div>
                     </div>
                  </div>
               </div>, we obtain a full and complete description of all kinds of overlaps existing in
               such document
               <div class="popupBox e557">
                  <div class="popupLabel" onmouseover="$('#d1e1140').show('1000');" onmouseout="$('#d1e1140').hide('1000');">[ footnote ]</div>
                  <div id="d1e1140" style="display: none;">
                     <div class="footnote" xml:id="ftn19">
                        <div class="para e558">An OWL file containing all the assertions about overlaps inferred by the reasoner
                           is
                           available online at 
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e559" xlink:actuate="onRequest" xlink:href="http://www.essepuntato.it/2014/balisage/earmark-overlapping.ttl" xlink:show="new" xlink:type="simple">http://www.essepuntato.it/2014/balisage/earmark-overlapping.ttl</div>. 
                        </div>
                     </div>
                  </div>
               </div>.
            </div>
            <div class="para e560">In particular, the reasoner identified:</div>
            <div class="itemizedlist e561">
               <div class="listitem e562">
                  <div class="para e563">all the dominance relations among elements that exist in the document, as well as
                     all the related
                     						containment relations entailed by dominance;
                  </div>
               </div>
               <div class="listitem e564">
                  <div class="para e565">that the range “Of Mans First Disobedience, and the Fruit” (
                     <div class="emphasis e566" role="ital">r1</div> from now on) overlaps with the range “the Fruit Of that Forbidden Tree”
                     (
                     <div class="emphasis e567" role="ital">r2</div> from now on), and 
                     <div class="emphasis e568" role="ital">r2</div> overlaps with the range “Of that Forbidden Tree” (
                     <div class="emphasis e569" role="ital">r3</div> from now on). Specifically, 
                     <div class="emphasis e570" role="ital">r1</div>
                     overlaps partially with 
                     <div class="emphasis e571" role="ital">r2</div>, and 
                     <div class="emphasis e572" role="ital">r2</div> overlaps totally with 
                     <div class="emphasis e573" role="ital">r3</div>;
                  </div>
               </div>
               <div class="listitem e574">
                  <div class="para e575">about the last total range overlap, that 
                     <div class="emphasis e576" role="ital">r2</div> actually contains 
                     <div class="emphasis e577" role="ital">r3</div> and, consequently, the markup items 
                     <div class="emphasis e578" role="ital">syntax</div> and
                     							
                     <div class="emphasis e579" role="ital">unit1</div> contain 
                     <div class="emphasis e580" role="ital">r3</div>;
                  </div>
               </div>
               <div class="listitem e581">
                  <div class="para e582">that the markup items in the pairs 
                     <div class="emphasis e583" role="ital">l1</div> - 
                     <div class="emphasis e584" role="ital">unit1</div>, 
                     <div class="emphasis e585" role="ital">l2</div> - 
                     <div class="emphasis e586" role="ital">unit1</div>, 
                     <div class="emphasis e587" role="ital">l2</div> - 
                     <div class="emphasis e588" role="ital">unit2</div>, 
                     <div class="emphasis e589" role="ital">l3</div> -
                     							
                     <div class="emphasis e590" role="ital">unit2</div>, and 
                     <div class="emphasis e591" role="ital">lg</div> - 
                     <div class="emphasis e592" role="ital">q</div> overlap between them. Specifically, the markup items in the first two pairs overlap
                     by
                     						range, while those in the following two pairs overlap by content hierarchy,
                     and the last two overlap by
                     						markup hierarchy.
                  </div>
               </div>
            </div>
            <div class="para e593">Of course, this inference process can be run on any EARMARK document. However, the
               bigger the document (in
               				terms of the number of OWL assertions that specify the markup structure), the
               longer it takes for the reasoner
               				to infer those data. For this reason, in some cases, it could be prefereable to
               express as SPARQL 1.1 inserts
               					[
               <div class="xref e594" linkend="GearonSPARQLUpdate"></div>] some of the inference rules that we have shown here as OWL logical
               				axioms and SWRL rules. For instance, the rule specified for identifying the overlaps
               by markup hierarchy could
               				improve the efficiency of the system if expressed in SPARQL as follows:
            </div>
            <div class="programlisting e595" xml:space="preserve"># Rule 'overlaps by markup hierarchy' in SPARQL
               CONSTRUCT { ?a eoo:overlapsByMarkupHierarchy ?b }
               WHERE {
               ?a a earmark:MarkupItem ;
               eoo:dominatesDirectly ?x .
               ?b a earmark:MarkupItem ;
               eoo:dominatesDirectly ?x .
               ?x a earmark:MarkupItem .
               }
            </div>
            <div class="para e596">According to our experience, this approach considerably reduces the time to infer
               the existing overlapping
               				scenarios in an EARMARK document, even if it needs to implement manually all the
               inferences that are needed,
               				including those derived from any ontological axiom, e.g., subsumption, property
               characteristic (transitivity,
               				irreflexivity, symmetry, etc.), and so on.
            </div>
         </div>
      </div><a name="ConclusionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e597">
         <div class="title e598">Conclusions</div>
         <div class="para e599">For EARMARK to be able to claim to be a one-stop answer to overlapping needs of markup
            authors, we still
            			needed a way to identify when, indeed, ranges and markup items actually overlap.
            EARMARK 
            <div class="emphasis e600" role="ital">per se</div>, in fact, does not have a way to identify overlapping situations, simply allowing
            them to
            			exist and each overlapping item to ignore the others. With the EARMARK Overlapping
            Ontology, on the other hand, it
            			is now possible to identify and qualify explicitly every overlapping situation
            we encounter. For instance in
            			[
            <div class="xref e601" linkend="BarabucciEARMARKFairyTale"></div>] we provide a brief overview of situations and contexts where EARMARK 
            	can and has been used, especially in the domain of Digital Humanities. 
         </div>
         <div class="para e602">Also, technically, EARMARK is a stand-off notation, and as such it suffers from the
            same limitations that all
            			stand-off notations suffer: namely, whenever the source document (the 
            <div class="emphasis e603" role="ital">docuverse</div>)
            			is modified outside of the control of the author of the EARMARK annotations, they
            may (and often will) have the
            			pointers become outdated and wrong. Also in [
            <div class="xref e604" linkend="BarabucciEARMARKFairyTale"></div>] we provide some
            			mechanisms through which EARMARK pointers can be resynchronized with a modified
            source, that should be able to
            			handle some of the possible situations. 
         </div>
         <div class="para e605">EARMARK still has not finished evolving. The FRETTA parser [
            <div class="xref e606" linkend="BarabucciFRETTA"></div>], that provides a
            			way for converting EARMARK documents into XML, and expressing overlapping situations
            choosing parametrically one
            			of the many existing XML tricks such as fragmentation, milestones or twin documents,
            is working and complete, but
            			the opposite converter, the one that generates an EARMARK document from an XML
            file that uses XML tricks to
            			express overlaps, is still to be completed. Once this is finished, we will have
            a complete solution to the problem
            			of expressing any markup document with Semantic Web technologies, and we will be
            able to cover all possible
            			situations of conversion of overlapping documents. 
         </div>
      </div><a name="BibliographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e607">
         <div class="title e608">Bibliography</div>
         <div class="bibliomixed e609" xml:id="BarabucciEARMARKFairyTale" xreflabel="1">Barabucci, G., Di Iorio, A.,
            Peroni, S., Poggi, F., &amp; Vitali, F. (2013). Annotations with EARMARK in practice:
            a fairy
            tale. In F. Tomasi &amp; F. Vitali (Eds.), Proceedings of the 2013 Workshop on Collaborative
            Annotations in Shared Environments: metadata, vocabularies and techniques in the Digital
            Humanities (DH-CASE 2013). New York, New York, US: ACM Press. doi:
            <div class="biblioid doi e610">10.1145/2517978.2517990</div>
            
         </div>
         <div class="bibliomixed e611" xml:id="BarabucciFRETTA" xreflabel="2">Barabucci, G., Peroni, S., Poggi, F., &amp;
            Vitali, F. (2012). Embedding semantic annotations within texts: the FRETTA approach.
            In
            Proceedings of the 2012 ACM Symposium on Applied Computing (SAC 2012): 658–663. New
            York, New
            York, US: ACM Press. doi:
            <div class="biblioid doi e612">10.1145/2245276.2245403</div>
         </div>
         <div class="bibliomixed e613" xml:id="FirstOverlapBarnard88" xreflabel="3">Barnard, D., Hayter, R., Karababa, M.,
            Logan, G., &amp; McFadden, J. (1988). SGML-based markup for literary texts: Two problems
            and
            some solutions. Computers and the Humanities, 22(4), 265-276.
         </div>
         <div class="bibliomixed e614" xml:id="XPath" xreflabel="4">Berglund, A., Boag, S., Chamberlin, D., Fernández, M.
            F., Kay, M., Robie, J., Siméon, J. (2010). XML Path Language (XPath) 2.0 (Second Edition).
            W3C
            Recommendation 14 December 2010. World Wide Web Consortium. 
            “
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e615" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xpath20/</div>”.
         </div>
         <div class="bibliomixed e616" xml:id="XQuery" xreflabel="5">Boag, S., Chamberlin, D., Fernández, M. F., Florescu,
            D., Robie, J., Siméon, J. (2010). XQuery 1.0: An XML Query Language (Second Edition).
            W3C
            Recommendation 14 December 2010. World Wide Web Consortium. 
            “
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e617" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xquery/</div>”.
         </div>
         <div class="bibliomixed e618" xml:id="CiccareseCO" xreflabel="6">Ciccarese, P., &amp; Peroni, S. (2013). The
            Collections Ontology: creating and handling collections in OWL 2 DL frameworks. Semantic
            Web –
            Interoperability, Usability, Applicability. doi:
            <div class="biblioid doi e619">10.3233/SW-130121</div>
         </div>
         <div class="bibliomixed e620" xml:id="ECLIX" xreflabel="7">Cowan, J., Tennison, J. ECLIX: reading XML as
            LMNL. LMNL wiki “
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e621" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://lmnl-markup.org/specs/</div>”.
         </div>
         <div class="bibliomixed e622" xml:id="DeRose" xreflabel="8">DeRose, S. J. (2004). Markup Overlap: A Review and a
            Horse. In Extreme Markup Languages.
         </div>
         <div class="bibliomixed e623" xml:id="DeRoseOHCO90" xreflabel="9">DeRose, S. J., Durand, D. G., Mylonas, E.,
            Renear, A. H. (1990). What is text, really? In Journal of Computing in Higher Education,
            1(2), 3-26.
         </div>
         <div class="bibliomixed e624" xml:id="XPointer" xreflabel="10">DeRose, S., Daniel, R., Grosso, P., Maler, E.,
            Marsh, J., Walsh, N. (2002). XML Pointer Language (XPointer). W3C Working Draft 16
            August
            2002. World Wide Web Consortium. “
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e625" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xptr/</div>”.
         </div>
         <div class="bibliomixed e626" xml:id="DiIorioEARMARKGODDAG" xreflabel="11">Di Iorio, A., Peroni, S., &amp;
            Vitali, F. (2009). Towards markup support for full GODDAGs and beyond: the EARMARK
            approach.
            In Proceedings of Balisage: The Markup Conference 2009, Balisage Series on Markup
            Technologies
            3. Rockville, Maryland, US: Mulberry Technologies, Inc. doi:
            <div class="biblioid doi e627">10.4242/BalisageVol3.Peroni01</div>
         </div>
         <div class="bibliomixed e628" xml:id="DiIorioEARMARK" xreflabel="12">Di Iorio, A., Peroni, S., &amp; Vitali, F.
            (2011). A Semantic Web approach to everyday overlapping markup. Journal of the American
            Society for Information Science and Technology, 62(9): 1696–1716. doi:
            <div class="biblioid doi e629">10.1002/asi.21591</div>
         </div>
         <div class="bibliomixed e630" xml:id="DiIorioEARMARKValidation" xreflabel="13">Di Iorio, A., Peroni, S., &amp;
            Vitali, F. (2011). Using semantic web technologies for analysis and validation of
            structural
            markup. International Journal of Web Engineering and Technology, 6(4): 375–398. doi:
            <div class="biblioid doi e631">10.1504/IJWET.2011.043439</div>
         </div>
         <div class="bibliomixed e632" xml:id="JITT02a" xreflabel="14">Durusau, P., O'Donnell, M. B. (2002). Coming down
            from the trees: Next step in the evolution of markup? In Extreme Markup
            Languages®.
         </div>
         <div class="bibliomixed e633" xml:id="JITT02b" xreflabel="15">Durusau, P., O'Donnell, M. B. (2002).
            Just-In-Time-Trees (JITTs): Next Step in the Evolution of Markup. In Proceedings of
            2002
            Extreme Markup Languages Conference, Montréal, Canada.
         </div>
         <div class="bibliomixed e634" xml:id="FalcoGraffoo" xreflabel="16">Falco, R., Gangemi, A., Peroni, S., &amp;
            Vitali, F. (2014). Modelling OWL ontologies with Graffoo. In ESWC 2014 Satellite Events
            -
            Revised Selected Papers, Lecture Notes in Computer Science. Berlin, Germany: Springer.
            Postprint available at 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e635" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://speroni.web.cs.unibo.it/publications/falco-in-press-modelling-ontologies-graffoo.pdf</div>
         </div>
         <div class="bibliomixed e636" xml:id="GearonSPARQLUpdate" xreflabel="17">Gearon, P., Passant, A., &amp; Polleres,
            A. (2013). SPARQL 1.1 Update. W3C Recommendation, 21 March 2013. World Wide Web Consortium.
            Retrieved from 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e637" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/sparql11-update/</div>
         </div>
         <div class="bibliomixed e638" xml:id="CONCUR90" xreflabel="18">Goldfarb, C. F., Rubinsky, Y. (1990). The SGML
            handbook. Oxford University Press.
         </div>
         <div class="bibliomixed e639" xml:id="XCONCUR05" xreflabel="19">Hilbert, M., Schonefeld, O., Witt, A. (2005,
            August). Making CONCUR work. In Extreme Markup Languages.
         </div>
         <div class="bibliomixed e640" xml:id="HorrocksSROIQ" xreflabel="20">Horrocks, I., Kutz, O., &amp; Sattler, U.
            (2006). The Even More Irresistible SROIQ. In P. Doherty, J. Mylopoulos, &amp; C. A. Welty
            (Eds.), Proceedings of the 10th International Conference on Principles of Knowledge
            Representation and Reasoning (KR 2006): 57–67. Palo Alto, California, USA: AAAI
            Press.
         </div>
         <div class="bibliomixed e641" xml:id="HorrocksSWRL" xreflabel="21">Horrocks, I., Patel-Schneider, P. F., Boley,
            H., Tabet, S., Grosof, B., &amp; Dean, M. (2004). SWRL: A Semantic Web Rule Language Combining
            OWL and RuleML. W3C Member Submission, 21 May 2004. World Wide Web Consortium. Retrieved
            from 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e642" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/Submission/SWRL/</div>
         </div>
         <div class="bibliomixed e643" xml:id="TexMECS01" xreflabel="22">Huitfeldt, C., Sperberg-McQueen, C. M. (2001).
            TexMECS: An experimental markup meta-language for complex documents. 
            “
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e644" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://mlcd.blackmesatech.com/mlcd/2003/Papers/texmecs.html</div>”.(DAG, noDAG, child-arch-ordered
            direct graph (CODG), overlap-only (oo) TexMECS, etc.)
         </div>
         <div class="bibliomixed e645" xml:id="Goddagb06" xreflabel="23">Huitfeldt, C.,Sperberg-McQueen, C. M. (2006).
            Representation and processing of goddag structures: implementation strategies and
            progress
            report. In Extreme Markup Languages.
         </div>
         <div class="bibliomixed e646" xml:id="MultiCOloredTree04" xreflabel="24">Jagadish, H. V., Lakshmanan, L. V.,
            Scannapieco, M., Srivastava, D., Wiwatwattana, N. (2004). Colorful XML: one hierarchy
            isn't
            enough. In Proceedings of the 2004 ACM SIGMOD international conference on Management
            of data.
            (pp. 251-262). ACM.
         </div>
         <div class="bibliomixed e647" xml:id="KrotzschDL" xreflabel="25">Krötzsch, M., Simancik, F., &amp; Horrocks, I.
            (2013). A Description Logic Primer. No. arXiv:1201.4089, 2013, The Computing Research
            Repository. Retrieved from 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e648" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://arxiv.org/abs/1201.4089</div>
         </div>
         <div class="bibliomixed e649" xml:id="Goddagc08" xreflabel="26">Marcoux, Y. (2008). Graph characterization of
            overlap-only TexMECS and other overlapping markup formalisms. In Proceedings of Balisage:
            The
            Markup Conference (Vol. 1). doi:
            <div class="biblioid doi e650">10.4242/BalisageVol1.Marcoux01</div>
         </div>
         <div class="bibliomixed e651" xml:id="Goddagd13" xreflabel="27">Marcoux, Y., Sperberg-McQueen, M., Huitfeldt, C.
            (2013). Modeling overlapping structures. Graphs and serializability. In Balisage:
            The Markup
            Conference, 2013. doi:
            <div class="biblioid doi e652">10.4242/BalisageVol10.Marcoux01</div>
         </div>
         <div class="bibliomixed e653" xml:id="MVZ08" xreflabel="28">Marinelli, P., Vitali, F., Zacchiroli, S. (2008). 
            		Towards the unification of formats for overlapping markup. In New Review of Hypermedia
            and 
            		Multimedia 14, 1 (January 2008), pages 57-94. doi:
            <div class="biblioid doi e654">10.1080/13614560802316145</div>
         </div>
         <div class="bibliomixed e655" xml:id="XCONCUR-CL07a" xreflabel="29">O. Schonefeld. (2007). XCONCUR and
            XCONCUR-CL: A constraint-based approach for the validation of concurrent markup. In
            Data
            Structures for Linguistic Resources and Applications. Proceedings of the Biennial
            GLDV
            Conference 2007, Tübingen, Germany, 2007. Gunter Narr Verlag.
         </div>
         <div class="bibliomixed e656" xml:id="PeroniMarkupSemantics" xreflabel="30">Peroni, S., Gangemi, A., &amp;
            Vitali, F. (2011). Dealing with markup semantics. In Proceedings the 7th International
            Conference on Semantic Systems (I-SEMANTICS 2011): 111–118. New York, New York, US:
            ACM Press.
            doi:
            <div class="biblioid doi e657">10.1145/2063518.2063533</div>
         </div>
         <div class="bibliomixed e658" xml:id="PeroniChangeTracking" xreflabel="31">Peroni, S., Poggi, F., &amp; Vitali,
            F. (2013). Tracking changes through EARMARK: a theoretical perspective and an implementation.
            In G. Barabucci, U. Burghoff, A. Di Iorio, &amp; S. Maier (Eds.), Proceedings of 1st
            International Workshop on (Document) Changes: modeling, detection, storage and visualization
            (DChanges 2013), CEUR Workshop Proceedings 1008. Aachen, Germany: CEUR-WS.org. Retrieved
            from 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e659" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://ceur-ws.org/Vol-1008/paper6.pdf</div>
         </div>
         <div class="bibliomixed e660" xml:id="TurtlePrudhommeaux" xreflabel="32">Prud’hommeaux, E., &amp; Carothers, G.
            (2013). Turtle - Terse RDF Triple Language. W3C Candidate Recommendation, 19 February
            2013.
            World Wide Web Consortium. Retrieved from 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e661" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/turtle/</div>
         </div>
         <div class="bibliomixed e662" xml:id="SirinPellet" xreflabel="33">Sirin, E., Parsia, B., Grau, B. C., Kalyanpur,
            A., &amp; Katz, Y. (2007). Pellet: A practical OWL-DL reasoner. Web Semantics: Science,
            Services and Agents on the World Wide Web, 5(2): 51–53. doi:
            <div class="biblioid doi e663">10.1016/j.websem.2007.03.004</div>
         </div>
         <div class="bibliomixed e664" xml:id="SperbergGoddag04" xreflabel="34">Sperberg-McQueen, C. M., &amp; Huitfeldt,
            C. (2004). Goddag: A data structure for overlapping hierarchies. In Digital Documents:
            Systems
            and Principles (pp. 139-160). Springer Berlin Heidelberg.
         </div>
         <div class="bibliomixed e665" xml:id="TEIP5" xreflabel="35">TEI Consortium (2008). TEI P5: Guidelines for
            electronic text encoding and interchange. Eds. Lou Burnard, and Syd Bauman. TEI Consortium,
            2008.
         </div>
         <div class="bibliomixed e666" xml:id="LMNL" xreflabel="36">Tennison, J., Piez, W. (2002). The Layered Markup and
            Annotation Language (LMNL). In Extreme Markup Languages, 2002.
         </div>
         <div class="bibliomixed e667" xml:id="XCONCUR-CL07b" xreflabel="37">Witt, A., Schonefeld, O., Rehm, G., Khoo, J.
            Evang, K. (2007). On the lossless transformation of single-file, multi-layer annotations
            into
            multi-rooted trees. In Proceedings of Extreme Markup Languages, Montréal, Québec,
            2007.
         </div>
      </div>
   </div>
</div>