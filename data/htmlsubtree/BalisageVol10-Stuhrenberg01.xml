<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#Whatwhenwhere?SpatialandtemporalannotationswithXStandoffANCHOR" name="Whatwhenwhere?SpatialandtemporalannotationswithXStandoffTOC">What, when, where? Spatial and temporal annotations with XStandoff</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#UsingXStandoffforspatialandtemporalannotationANCHOR" name="UsingXStandoffforspatialandtemporalannotationTOC">Using XStandoff for spatial and temporal annotation</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#Multimodaldocuments:areallifeexampleANCHOR" name="Multimodaldocuments:areallifeexampleTOC">Multimodal documents: a real-life example</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#XStandoff20comparedANCHOR" name="XStandoff20comparedTOC">XStandoff 2.0 compared</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionandfutureworkANCHOR" name="ConclusionandfutureworkTOC">Conclusion and future work</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AcknowledgementsANCHOR" name="AcknowledgementsTOC">Acknowledgements</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">area</div>
         <div class="singletermTERMS">AnkleLeft</div>
         <div class="singletermTERMS">annotations</div>
         <div class="singletermTERMS">August 6 - 9, 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">bezier</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">coords</div>
         <div class="singletermTERMS">context</div>
         <div class="singletermTERMS">canvas</div>
         <div class="singletermTERMS">curveto</div>
         <div class="singletermTERMS">closepath</div>
         <div class="singletermTERMS">creator</div>
         <div class="singletermTERMS">certainty</div>
         <div class="singletermTERMS">continuous</div>
         <div class="singletermTERMS">circle</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">delete</div>
         <div class="singletermTERMS">disjoint</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">end</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">fcsloc</div>
         <div class="singletermTERMS">facsimile</div>
         <div class="singletermTERMS">facs</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">height</div>
         <div class="singletermTERMS">horizontalResolution</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">log</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">map</div>
         <div class="singletermTERMS">moveto</div>
         <div class="singletermTERMS">mode</div>
         <div class="singletermTERMS">MOVELINK</div>
         <div class="singletermTERMS">markables</div>
         <div class="singletermTERMS">maik.stuehrenberg@uni-bielefeld.de</div>
         <div class="singletermTERMS">Maik</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">primaryData</div>
         <div class="singletermTERMS">player</div>
         <div class="singletermTERMS">point</div>
         <div class="singletermTERMS">primary data</div>
         <div class="singletermTERMS">polygon</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">resource</div>
         <div class="singletermTERMS">rendition</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">segment</div>
         <div class="singletermTERMS">start</div>
         <div class="singletermTERMS">spatial.attributes</div>
         <div class="singletermTERMS">shape</div>
         <div class="singletermTERMS">seg</div>
         <div class="singletermTERMS">small gap</div>
         <div class="singletermTERMS">segmentation</div>
         <div class="singletermTERMS">spatial</div>
         <div class="singletermTERMS">seg17</div>
         <div class="singletermTERMS">Stührenberg</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">type</div>
         <div class="singletermTERMS">tokenize()</div>
         <div class="singletermTERMS">tagsDecl</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">update</div>
         <div class="singletermTERMS">upper</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">verticalResolution</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
         <div class="singletermTERMS">zone</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="Whatwhenwhere?SpatialandtemporalannotationswithXStandoffANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3">
      <div class="title e1">What, when, where? Spatial and temporal annotations with XStandoff</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2013</div>
            <div class="confdates e5">August 6 - 9, 2013</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">We describe an extension for the generalized standoff approach XStandoff to describe
               spatial information over non-textual primary data objects. A use case for this kind
               of
               markup is the annotation of multimodal documents, that is text-image
               combinations.
            </div>
         </div>
         <div class="author e8">
            <div class="personname e9">
               <div class="firstname e10">Maik</div>
               <div class="surname e11">Stührenberg</div>
            </div>
            <div class="personblurb e12">
               <div class="para e13">Maik Stührenberg received his Ph.D. in Computational Linguistics and Text Technology
                  from Bielefeld University in 2012. After graduating in 2001 he worked different
                  text-technological projects at Gießen University, Bielefeld University and the Institut
                  für Deutsche Sprache (IDS, Institute for the German Language) in Mannheim. He is currently
                  employed as research assistant at Bielefeld University.
               </div>
               <div class="para e14">His main research interests include specifications for structuring multiple annotated
                  data, schema languages, and query processing.
               </div>
            </div>
            <div class="affiliation e15">
               <div class="orgname e16">Universität Bielefeld</div>
            </div>
            <div class="email e17">maik.stuehrenberg@uni-bielefeld.de</div>
         </div>
         <div class="legalnotice e18">
            <div class="para e19">Copyright © 2013 by the author. Used with permission.</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e20" xml:id="sec.intro">
         <div class="title e21">Introduction</div>
         <div class="para e22">Not only since the advent of services such as Google Maps, demand for the annotation
            of
            (geo-) spatial information has risen. Therefore, first proposals for spatial markup
            languages
            have been developed, such as SpatialML (
            <div class="xref e23" linkend="Mani2008"></div>, 
            <div class="xref e24" linkend="Mani2010"></div>). The International Organization for Standardization (ISO) has started a new project
            in
            2012 to create an international standard for the annotation of spatial and spatial-temporal
            annotation as part of the Semantic Annotation Framework, ISO/NP 24617-7, ISO-Space
            (
            <div class="xref e25" linkend="ISO-Space2012"></div>). As a member of a greater family of specifications, ISO-Space
            borrows some concepts from SpatialML and should play well with other members, such
            as
            ISO-TimeML (
            <div class="xref e26" linkend="ISO-TimeML2012"></div>). Some of these markup languages annotate spatial
            information represented in textual primary data (such as place names or paths which
            are
            traversed by an entity), however, 
            <div class="xref e27" linkend="Lee2013"></div> demonstrates that at least
            ISO-Space can be used to describe spatial information in figures.
         </div>
         <div class="para e28">Standoff annotation is a valuable and common mechanism to annotate multiple hierarchies
            and read-only media. One of these approaches, the XStandoff meta markup language,
            was already
            discussed in detail in 
            <div class="xref e29" linkend="Stuehrenberg2009"></div> and 
            <div class="xref e30" linkend="Jettka2011"></div>.
            Although XStandoff was developed for a variety of primary data formats (including
            textual and
            multimedia-based), its sequencing system was primarily designed for character- or
            time-based
            segments.
         </div>
         <div class="para e31">Since standoff annotation separates the markup from the data that is annotated, we
            will
            firstly define some concepts that will be used throughout the following text. The
            data to be
            annotated is called 
            <div class="emphasis e32">primary data</div> (
            <div class="emphasis e33">P</div>). It should be
            noted, however, that 
            <div class="emphasis e34">P</div> but may consist of more than one member and may
            even be empty under certain circumstances (see the following sections). The finite
            set of
            regions (spans) over 
            <div class="emphasis e35">P</div> is called 
            <div class="emphasis e36">markables</div>
            (
            <div class="emphasis e37">M</div>). Each markable 
            <div class="emphasis e38">m</div> as a member of
            
            <div class="emphasis e39">M</div> is constructed by a set of coordinates in space or time and can be
            identified. The set of coordinates is derived by a concept of
            
            <div class="emphasis e40">segmentation</div>. The markables may be annotated afterwards by using a
            finite set of 
            <div class="emphasis e41">annotations</div>
            
            <div class="emphasis e42">A</div>.
         </div>
         <div class="para e43">A key problem when using standoff annotation is the identification of the markables,
            entities that are defined by a region of the corresponding primary data and that will
            be used
            as anchors for the annotation. In case of textual primary data, we have to deal with
            a stream
            of characters (or byte sequences) that can be delimited by using corresponding tokenization
            methods (for example, splitting text into sentences by detecting sentence boundaries
            and
            sentences into words). In case of multimedia-based primary data one typically uses
            points in
            time to establish regions that are used as markables. Markables in spatial primary
            data (in
            contrast to spatial information provided in textual data) can be seen as two- or
            three-dimensional objects, defined by a set of coordinates in space. While the demonstration
            of describing spatial information given by 
            <div class="xref e44" linkend="Lee2013"></div> uses different iterations
            of a figure to identify specific regions (first by using names, later on by using
            coordinates), which are afterwards used as markables, it remains unclear how the different
            iterations of the example figures are constructed (and processed). We therefore have
            chosen to
            adapt XStandoff's concept of segmentation to support the identification of spatial
            markables
            in non-textual primary data (that is, both still and moving pictures).
         </div>
      </div><a name="UsingXStandoffforspatialandtemporalannotationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e45" xml:id="sec.xsf-spatial">
         <div class="title e46">Using XStandoff for spatial and temporal annotation</div>
         <div class="para e47">Since XStandoff already has features for temporal segmentation (e. g. for annotating
            multimedia-based primary data files such as video or audio files), we will concentrate
            on the
            aspect of adding spatial segmentation features. Defining a spatial markable is done
            by
            extending XStandoff's 
            <div class="code e48">segment</div> element. Usually, the element's content is either
            empty or consists of metadata, therefore we concentrate on the attributes. Apart form
            the
            basic attributes 
            <div class="code e49">start</div> and 
            <div class="code e50">end</div> for defining the segment's range,
            there are attributes for defining its type and its mode (value either
            
            <div class="emphasis e51">continuous</div> or 
            <div class="emphasis e52">disjoint</div>), both have been discussed
            in 
            <div class="xref e53" linkend="Stuehrenberg2009"></div>.
         </div>
         <div class="para e54">To extend the 
            <div class="code e55">segment</div> element to cover spatial markables we have added
            further attributes. Firstly we opened up the value space of the 
            <div class="code e56">type</div> attribute by
            including the value 
            <div class="emphasis e57">spatial</div>. Then we created a new globally defined
            attribute group 
            <div class="code e58">spatial.attributes</div> as a container for the newly developed
            attributes. For the naming of these attributes we tried to stay as close as possible
            to
            already established specifications. A natural example for creating regions on non-textual
            data
            is HTML's image map.
            <div class="popupBox e59">
               <div class="popupLabel" onmouseover="$('#d1e130').show('1000');" onmouseout="$('#d1e130').hide('1000');">[ footnote ]</div>
               <div id="d1e130" style="display: none;">
                  <div class="footnote">
                     <div class="para e60">For various reasons we decided not to follow HyTime's approach of Finite Coordinate
                        Space Location (
                        <div class="code e61">fcsloc</div>) demonstrated in 
                        <div class="xref e62" linkend="DeRose1994"></div>, p.
                        70ff. See 
                        <div class="xref e63" linkend="sec.xsf2compared"></div> for a discussion of other
                        specifications.
                     </div>
                  </div>
               </div>
            </div> An image map is created by referring to an external image using a 
            <div class="code e64">map</div>
            element consisting of a number of 
            <div class="code e65">area</div> child elements. Each 
            <div class="code e66">area</div>
            element has 
            <div class="code e67">shape</div> and 
            <div class="code e68">coords</div> attributes, amongst others. Therefore,
            we decided to add these two attributes as well. In addition we introduced a
            
            <div class="code e69">context</div> attribute (with possible values 
            <div class="emphasis e70">2d</div> and
            
            <div class="emphasis e71">3d</div>) borrowed from HTML5's 
            <div class="code e72">canvas</div> element (although HTML5
            up to now only supports 2d contexts, 3d support is planned for future versions).
         </div>
         <div class="para e73">The 
            <div class="code e74">coords</div> attribute is used to depict coordinates on non-textual media file
            (the relation between the 
            <div class="code e75">segment</div> element as bearer of the 
            <div class="code e76">coords</div>
            attribute and the primary data file is established by the optional 
            <div class="code e77">primaryData</div>
            attribute if more than one primary data file is used, see 
            <div class="xref e78" linkend="lst.xsf-soccer"></div> as
            an example).
         </div>
         <div class="para e79">For demonstration purposes, we use Balisage's logo as a still picture example. The
            graphic
            is provided as png image file with dimensions of 2625 * 966 pixels at a resolution
            of 300
            pixels per inch (both horizontal and vertical).
         </div>
         <div class="figure e80">
            <div class="title e81">Balisage's logo as an example</div>
            <div class="mediaobject e82">
               <div class="imageobject e83">
                  <div class="metaBox e84"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e193').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e193" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e84'
                           </span><span class="metaAttribute">fileref='../../../vol10/graphics/Stuhrenberg01/Stuhrenberg01-001.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='33%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e85">If we want to select the 
            <div class="quote e86">2013</div> part of the image we use an image processing
            programme to get the coordinates of the rectangular area starting at position
            x
            <div class="subscript e87">1</div>=2400,y
            <div class="subscript e88">1</div>=125,
            x
            <div class="subscript e89">2</div>=2600,y
            <div class="subscript e90">2</div>=125,
            x
            <div class="subscript e91">3</div>=2400,y
            <div class="subscript e92">3</div>=945, and
            x
            <div class="subscript e93">4</div>=2600,y
            <div class="subscript e94">4</div>=945.
         </div>
         <div class="para e95">XStandoff's 2.0 schema file defines the value range of the 
            <div class="code e96">coords</div> attribute
            in terms of a regular expression pattern matching either pairs or triples of coordinates
            separated by blanks, while the comma is used as in-pair separator. At least one pair
            (or
            triplet) has to be present for depicting a point in space. Since we use the blank
            character as
            separator between digit pairs it is feasible to use XPath's 
            <div class="code e97">tokenize()</div> function
            to split the total string into the corresponding pairs of digits and use this to further
            restrict the value space by using XSD 1.1 assertions (see 
            <div class="xref e98" linkend="lst.coord"></div>). When
            dealing with 3d spatial coordinates, we use triplets instead of pairs.
            <div class="popupBox e99">
               <div class="popupLabel" onmouseover="$('#d1e234').show('1000');" onmouseout="$('#d1e234').hide('1000');">[ footnote ]</div>
               <div id="d1e234" style="display: none;">
                  <div class="footnote">
                     <div class="para e100">Note, that the assertion given in 
                        <div class="xref e101" linkend="lst.coord"></div> does not yet reflect 3d
                        contexts.
                     </div>
                  </div>
               </div>
            </div> Again, following HTML's image map approach, the starting point of the coordinate
            system is not the lower left but the 
            <div class="emphasis e102">upper</div> left corner of the
            grid.
         </div>
         <div class="figure e103" xml:id="lst.coord">
            <div class="title e104">Declaration of the 
               <div class="code e105">coords</div> attribute
            </div>
            <div class="programlisting e106" xml:space="preserve">&lt;xs:simpleType name="coord"&gt;
               &lt;xs:restriction base="xs:string"&gt;
               &lt;xs:pattern value="(\d+,\d+( \d+,\d+)*)|(\d+,\d+,\d+( \d+,\d+,\d+)*)+|C\d+,\d+ (\d+,\d+
               \d+,\d+ \d+,\d+)+"/&gt;
               &lt;/xs:restriction&gt;
               &lt;/xs:simpleType&gt;
               &lt;!-- [...] --&gt;
               &lt;xs:assert test="if (@type='spatial' and @context='2d' and @shape='poly') 
               then count(tokenize(@coords,' ')) &gt; 2 
               else  
               if (@type='spatial' and @shape='circle' and count(tokenize(@coords,' ')) = 1) 
               then (for $coord in tokenize(@coords,' ') return count(tokenize($coord,',')) = 3)
               
               else 
               if (@type='spatial' and @shape='bezier')
               then starts-with(@coords,'C')
               else (@type!='spatial' or @context!='2d')"&gt;
               &lt;/xs:assert&gt;
            </div>
         </div>
         <div class="para e107">Instead of strictly following HTML's 
            <div class="code e108">shape</div> attribute which provides values
            for defining either a rectangle, a polygon or a circle, we only use
            
            <div class="emphasis e109">polygon</div>, 
            <div class="emphasis e110">circle</div>, and 
            <div class="emphasis e111">bezier</div>
            as valid values (since rectangles are a special form of polygons). The final form
            of the shape
            can be extracted by its coordinates (if three coordinates are given, we have to deal
            with a
            triangular shape, if four coordinates are supplied, the shape can either be a rectangle
            or
            polygon). Similar to HTML's image map approach a virtual line is constructed to connect
            the
            last coordinate given with the first one (coordinates are supplied in clockwise direction).
            The full XStandoff instance describing the spatial segment of Balisage's logo can
            be found in
            
            <div class="xref e112" linkend="lst.xsf.logo"></div>.
         </div>
         <div class="figure e113" xml:id="lst.xsf.logo">
            <div class="title e114">Spatial annotation of the Balisage logo</div>
            <div class="programlisting e115" xml:space="preserve">&lt;xsf:corpusData xml:id="bal2013" xsfVersion="2.0"  
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xsf="http://www.xstandoff.net/2009/xstandoff/1.1"
               xsi:schemaLocation="http://www.xstandoff.net/2009/xstandoff/1.1 
               ../xsd/xsf2_1.1.xsd"&gt;
               &lt;xsf:primaryData xml:id="balisage_logo2013" role="master"&gt;
               &lt;xsf:primaryDataRef uri="Balisage-logotype-2013.png" mimeType="image/png" 
               width="2625" height="966" horizontalResolution="300" verticalResolution="300"/&gt;
               &lt;/xsf:primaryData&gt;
               &lt;xsf:segmentation&gt;
               &lt;xsf:segment xml:id="s1" type="spatial" name="2013" shape="poly" 
               coords="2400,125 2600,125 2400,945 2600,945" /&gt;   
               &lt;/xsf:segmentation&gt;  
               &lt;/xsf:corpusData&gt;
            </div>
         </div>
         <div class="para e116">It is possible to define a Bézier curve as well. In this case, the 
            <div class="code e117">shape</div>
            attribute uses the 
            <div class="emphasis e118">bezier</div> value and the 
            <div class="code e119">coords</div> attribute
            contains at least four coordinate pairs. We have chosen to adopt SVG's model of cubic
            Bézier
            curve commands (Section 8.3.6 in 
            <div class="xref e120" linkend="SVG2011"></div>). The first coordinate pair starts
            with the capital letter 
            <div class="emphasis e121">C</div> (
            <div class="code e122">curveto</div> with absolute
            positioning) and depicts the start coordinate (since there is no equivalent to SVG's
            
            <div class="code e123">moveto</div> command). The following coordinates are construed as follows:
            x
            <div class="subscript e124">2</div>,y
            <div class="subscript e125">2</div> as control point at the beginning of the
            curve, x
            <div class="subscript e126">3</div>,y
            <div class="subscript e127">3</div> as the control point at the end of
            the curve and x
            <div class="subscript e128">4</div>,y
            <div class="subscript e129">4</div> as the end coordinate. After
            the first set of four coordinate pairs, it is possible to use a multiplicity of triple
            pairs
            as additional coordinates. Note, that the Bézier curve will be closed via a line drawn
            between
            the last coordinate and the first (simulating SVG's 
            <div class="code e130">closepath</div> command
            
            <div class="code e131">z</div>, see Section 8.3.3 in 
            <div class="xref e132" linkend="SVG2011"></div>).
         </div>
         <div class="para e133">Following 
            <div class="xref e134" linkend="Lee2013"></div>, we introduced the possibility to name a segment (via
            the corresponding attribute). Additionally, we added the 
            <div class="code e135">width</div>,
            
            <div class="code e136">height</div>, 
            <div class="code e137">horizontalResolution</div>, and 
            <div class="code e138">verticalResolution</div>
            attributes to the 
            <div class="code e139">primaryData</div> element for describing spatial primary data
            files.
         </div>
         <div class="para e140">For describing parts of moving pictures, we have to combine spatial and temporal
            segmentation attributes (see 
            <div class="xref e141" linkend="lst.xsf.spatial-move"></div>).
         </div>
         <div class="figure e142" xml:id="lst.xsf.spatial-move">
            <div class="title e143">Spatial segments in moving pictures</div>
            <div class="programlisting e144" xml:space="preserve">&lt;segment xml:id="s1a" type="spatial" shape="poly" coords="0,10 20,50 0,2" 
               start="00:00:00" end="00:02:00"/&gt;
            </div>
         </div>
         <div class="para e145">In this example we have an object in space which stays at the same coordinates during
            the
            time period starting at time code 00:00:00 and ending at 00:02:00. However, usually
            the object
            examined changes its position over time. Since XStandoff supports the construction
            of segments
            by referring to already established ones, we can use this mechanism to express a movement
            of a
            named markable over time (which can be expressed via path expressions in the other
            mentioned
            spatial markup languages). In the example given in 
            <div class="xref e146" linkend="lst.xsf.kin"></div> we have the
            segments s1 and s2 which both depict a spatial object named 
            <div class="quote e147">AnkleLeft</div>. By
            creating a segment s3 as a combination of s1 and s2 we express that the object named
            
            <div class="quote e148">AnkleLeft</div> has moved over the timespan ranging form 00:00:00 to 00:01:15 from
            the coordinates given in s1 to the coordinates given in s2. This defines a linear
            movement. Up
            to now, there is no inherent mechanism to describe non-linear movement (except as
            content of
            the optional metadata of a 
            <div class="code e149">segment</div> element in combination with the
            
            <div class="emphasis e150">disjoint</div> value of the 
            <div class="code e151">mode</div> attribute, see 
            <div class="xref e152" linkend="Stuehrenberg2009"></div> for a further description).
         </div>
         <div class="figure e153" xml:id="lst.xsf.kin">
            <div class="title e154">Annotating movement in space and time via additional segments</div>
            <div class="programlisting e155" xml:space="preserve">&lt;xsf:corpusData xxsfVersion="2.0"
               xmlns="http://www.xstandoff.net/2009/xstandoff/1.1"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xsf="http://www.xstandoff.net/2009/xstandoff/1.1"
               xsi:schemaLocation="http://www.xstandoff.net/2009/xstandoff/1.1 
               ../xsd/xsf2_1.1.xsd"&gt;
               &lt;resources&gt;
               &lt;resource xml:id="Kin1"&gt;
               &lt;meta&gt;
               &lt;sensor xmlns="http://www.example.org/interaction"&gt;
               &lt;type number="1"&gt;Microsoft Kinect&lt;/type&gt;
               &lt;/sensor&gt;
               &lt;/meta&gt;
               &lt;/resource&gt;
               &lt;!-- [...] --&gt;
               &lt;/resources&gt;
               &lt;xsf:segmentation&gt;
               &lt;segment xml:id="s1" type="spatial" context="2d" shape="poly" creator="Kin1" coords="0,10,30
               100,150,30 0,200,30 0,100,30"/&gt;
               &lt;segment xml:id="s2" type="spatial" context="2d" shape="poly" creator="Kin2" coords="10,10,40
               110,150,40 10,200,40 110,100,40"/&gt;
               &lt;segment xml:id="s3" type="seg" segments="s1 s2" name="AnkleLeft" mode="continuous"
               start="00:00:00" end="00:01:15"/&gt;
               &lt;!.. [...] --&gt;
               &lt;/xsf:segmentation&gt;
               &lt;!.. [...] --&gt;
               &lt;/xsf:corpusData&gt;
            </div>
         </div>
         <div class="para e156">An alternative representation makes use of XStandoff's logging functionality which
            has
            been changed in XStandoff 2.0 compared to previous versions (see 
            <div class="xref e157" linkend="lst.xsf.kin2"></div>). While in SGF (
            <div class="xref e158" linkend="Stuehrenberg2008"></div>), logging was inherited from the
            Serengeti annotation tool (
            <div class="xref e159" linkend="Stuehrenberg2007"></div>) and was placed underneath a
            seperate 
            <div class="code e160">log</div> element, XStandoff 2.0's schema contains a log model group
            consisting of the elements 
            <div class="code e161">update</div> and 
            <div class="code e162">delete</div> which may be inserted
            as children of the 
            <div class="code e163">segment</div> element and elements of imported layers. 
         </div>
         <div class="figure e164" xml:id="lst.xsf.kin2">
            <div class="title e165">Annotating movement in space and time via the 
               <div class="code e166">update</div> element
            </div>
            <div class="programlisting e167" xml:space="preserve">&lt;segment xml:id="s1" type="spatial" context="3d" shape="poly" creator="Kin1"
               coords="0,10,30 100,150,30 0,200,30 0,100,30" start="00:00:00"&gt;
               &lt;update&gt;
               &lt;segment coords="10,10,40 110,150,40 10,200,40 110,100,40" end="00:01:15"/&gt;
               &lt;/update&gt;
               &lt;/segment&gt;
            </div>
         </div>
         <div class="para e168">Although this construct may seem a bit awkward at first, it is not only conformant
            to
            XStandoff's already established mechanism but may be easier to realize than ISO-Space's
            
            <div class="code e169">MOVELINK</div> element demonstrated in 
            <div class="xref e170" linkend="Lee2013"></div>. While the
            representation given in 
            <div class="xref e171" linkend="lst.xsf.kin"></div> is the preferred one, the second tends
            to be more natural when dealing with sensor data (see below). Both serialization options
            are
            not stable since there are a couple of issues to resolve, for example the definition
            of
            non-linear movements.
         </div>
         <div class="para e172">We examine if XStandoff 2.0 can be used to store information gathered by eye-tracking
            and
            other motion-capture sensors (see 
            <div class="xref e173" linkend="sec.conclusion"></div>) as a base format for
            annotating sensor information. Eye-trackers are used in a growing number of linguistic
            and
            psychological experiments and usability studies. Up to now, there is no common export
            format
            for the raw data that is collected by these sensors which are — in terms of XStandoff
            —
            resources that can be referenced via the optional 
            <div class="code e174">creator</div> attribute.
            <div class="popupBox e175">
               <div class="popupLabel" onmouseover="$('#d1e424').show('1000');" onmouseout="$('#d1e424').hide('1000');">[ footnote ]</div>
               <div id="d1e424" style="display: none;">
                  <div class="footnote">
                     <div class="para e176">The 
                        <div class="code e177">resource</div> element is used to store information about human, software
                        or hardware agents that produced segmentation or annotation layers.
                     </div>
                  </div>
               </div>
            </div> In the example given in 
            <div class="xref e178" linkend="lst.xsf.kin"></div> we use two Microsoft Kinect
            sensors, that deliver three-dimensional data (hence the 
            <div class="emphasis e179">3d</div> value of the
            
            <div class="code e180">context</div> attribute). This example introduces a change in XStandoff's paradigm,
            since the primary data to be annotated is not already present but is construed from
            the
            segmentation.
         </div>
      </div><a name="Multimodaldocuments:areallifeexampleANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e181">
         <div class="title e182">Multimodal documents: a real-life example</div>
         <div class="para e183">Information is often encoded by a combination of visuals and text referring to each
            other.
            We will call members of this category multimodal documents. A prototypic example of
            a
            multimodal document is an instruction manual (for example for an electronic gadget),
            another
            is the text-figure-combination which can often be found in the analysis of sport matches.
            <div class="popupBox e184">
               <div class="popupLabel" onmouseover="$('#d1e445').show('1000');" onmouseout="$('#d1e445').hide('1000');">[ footnote ]</div>
               <div id="d1e445" style="display: none;">
                  <div class="footnote">
                     <div class="para e185">Typical examples are available at 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e186" xlink:actuate="onRequest" xlink:href="http://spielverlagerung.de/" xlink:show="new" xlink:type="simple">http://spielverlagerung.de/</div>, for example
                        the analysis of the Champions League Final between Borussia Dortmund and Bayern Munich
                        at
                        
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e187" xlink:actuate="onRequest" xlink:href="http://spielverlagerung.de/2013/05/28/english-borussia-dortmund-bayern-munich-12-champions-league-final/" xlink:show="new" xlink:type="simple">http://spielverlagerung.de/2013/05/28/english-borussia-dortmund-bayern-munich-12-champions-league-final/</div>.
                     </div>
                  </div>
               </div>
            </div> For demonstration purposes we have constructed an analysis of a fictional soccer
            match between teams A and B shown in 
            <div class="xref e188" linkend="fig.sport"></div>.
         </div>
         <div class="figure e189" xml:id="fig.sport">
            <div class="title e190">Soccer analysis as an example of a multimodal document</div>
            <div class="mediaobject e191">
               <div class="imageobject e192">
                  <div class="metaBox e193"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e462').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e462" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e193'
                           </span><span class="metaAttribute">fileref='../../../vol10/graphics/Stuhrenberg01/Stuhrenberg01-002.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='412'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e194">Another situation in which team A is not able to finish its move: Y tries to pass
               the
               ball through the small gap to X (instead of passing it to G) while Z is unintentionally
               obstructing Y's way. But before the ball reaches X, D intercepts and passes the ball
               to
               A.
            </div>
         </div>
         <div class="para e195">Textual and graphical representation go hand in hand in this example. We can observe
            that
            there are two teams playing (color-coded in the graphic) and we are able to recognize
            the
            players and the ball in both representation formats. However, while the text refers
            to a
            player named 
            <div class="quote e196">G</div> and a 
            <div class="quote e197">small gap</div>, there are no corresponding parts
            in the image. For a human reader it is easy to conclude which small gap was meant
            and that the
            player named 
            <div class="quote e198">G</div> is represented by the blue circle without any letter, but a
            software agent may have problems to draw the same conclusions. To make these text-image
            mappings explicit we use an XStandoff 2.0 instance.
         </div>
         <div class="para e199">First we create an encoding of the information given in the textual part (
            <div class="xref e200" linkend="lst.soccer-text"></div>) which will afterwards be transformed into a single-level XSF
            instance by using the XStandoff-Toolkit (
            <div class="xref e201" linkend="Stuehrenberg2009"></div>).
            <div class="popupBox e202">
               <div class="popupLabel" onmouseover="$('#d1e482').show('1000');" onmouseout="$('#d1e482').hide('1000');">[ footnote ]</div>
               <div id="d1e482" style="display: none;">
                  <div class="footnote">
                     <div class="para e203">For this example we use a representation format such as HTML, that allows us for
                        selecting the textual information character-wise and can therefore use the classic
                        XStandoff approach of segmentation.
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="figure e204" xml:id="lst.soccer-text">
            <div class="title e205">Inline representation of the textal-encoded information</div>
            <div class="programlisting e206" xml:space="preserve">&lt;text xmlns="http://www.xstandoff.net/examples/playbook"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xsi:schemaLocation="http://www.xstandoff.net/examples/playbook ../xsd/soccer.xsd"&gt;
               Another situation in which &lt;team name="teamA"&gt;team A&lt;/team&gt; is not able to finish
               its move: &lt;player name="Y"&gt;Y&lt;/player&gt; tries to pass the ball through &lt;place name="gap"&gt;the
               small gap&lt;/place&gt; to &lt;player name="X"&gt;X&lt;/player&gt; (instead of passing it to &lt;player
               name="G"&gt;G&lt;/player&gt;) while &lt;player name="Z"&gt;Z&lt;/player&gt; is unintentionally obstructing
               &lt;player name="Y"&gt;Y&lt;/player&gt;'s way.
               But before the ball reaches &lt;player name="X"&gt;X&lt;/player&gt;, &lt;player name="D"&gt;D&lt;/player&gt;
               intercepts and passes the ball to &lt;player name="A"&gt;A&lt;/player&gt;.
               &lt;/text&gt;
            </div>
         </div>
         <div class="para e207">Some information is encoded in one of the two representation formats only: For example,
            we
            can definitely say which player belongs to which team by using the color information
            (even for
            the unnamed player) and use spatial attributes to create the according segments. 
            <div class="xref e208" linkend="lst.xsf-soccer"></div> shows the resulting XStandoff 2.0 instance after we have combined
            both textual and spatial segments and the converted annotation layer.
         </div>
         <div class="figure e209" xml:id="lst.xsf-soccer">
            <div class="title e210">XStandoff 2.0 instance containing both textual and visual primary data and
               annotation
            </div>
            <div class="programlisting e211" xml:space="preserve">&lt;xsf:corpusData xml:id="xsf_spatial" xsfVersion="2.0"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xsf="http://www.xstandoff.net/2009/xstandoff/1.1"
               xsi:schemaLocation="http://www.xstandoff.net/2009/xstandoff/1.1 ../xsd/xsf2_1.1.xsd"&gt;
               &lt;xsf:primaryData xml:id="soccer-txt" start="0" end="265"&gt;
               &lt;xsf:primaryDataRef uri="../pd/soccer_balisage.txt" encoding="utf-8" mimeType="text/plain"/&gt;
               &lt;/xsf:primaryData&gt;
               &lt;xsf:primaryData xml:id="soccer-img" unit="pixels"&gt;
               &lt;xsf:primaryDataRef uri="../pd/soccer_balisage.png" mimeType="image/png" width="824"
               height="679"/&gt;
               &lt;/xsf:primaryData&gt;
               &lt;xsf:segmentation&gt;
               &lt;xsf:segment xml:id="seg1" start="0" end="265" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg2" start="27" end="33" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg3" start="66" end="67" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg4" start="99" end="112" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg5" start="116" end="117" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg6" start="144" end="145" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg7" start="153" end="154" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg8" start="186" end="187" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg9" start="223" end="224" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg10" start="226" end="227" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg11" start="262" end="263" primaryData="soccer-txt"/&gt;
               &lt;xsf:segment xml:id="seg12" type="spatial" shape="circle" coords="312,651,23" primaryData="soccer-img"
               name="Y"/&gt;
               &lt;xsf:segment xml:id="seg13" type="spatial" shape="circle" coords="327,473,23" primaryData="soccer-img"
               name="Z"/&gt;
               &lt;xsf:segment xml:id="seg14" type="spatial" shape="circle" coords="405,422,23" primaryData="soccer-img"
               name="X"/&gt;
               &lt;xsf:segment xml:id="seg15" type="spatial" shape="circle" coords="365,396,23" primaryData="soccer-img"
               name="D"/&gt;
               &lt;xsf:segment xml:id="seg16" type="spatial" shape="circle" coords="781,339,23" primaryData="soccer-img"
               name="A"/&gt;
               &lt;xsf:segment xml:id="seg17" type="spatial" shape="circle" coords="554,399,23" primaryData="soccer-img"/&gt;
               &lt;xsf:segment xml:id="seg18" type="spatial" shape="poly" coords="300,618 371,439 428,444
               363,618" primaryData="soccer-img" name="gap"/&gt;
               &lt;xsf:segment xml:id="seg19" type="seg" segments="seg12 seg13 seg14 seg17" mode="disjoint"
               name="Team A"/&gt;
               &lt;xsf:segment xml:id="seg20" type="seg" segments="seg15 seg16" mode="disjoint" name="Team
               B"/&gt;
               &lt;/xsf:segmentation&gt;
               &lt;xsf:annotation&gt;
               &lt;xsf:level xml:id="soccer"&gt;
               &lt;xsf:layer xmlns="http://www.xstandoff.net/examples/playbook" xsi:schemaLocation="http://www.xstandoff.net/examples/playbook
               ../xsd/soccer.xsd"&gt;
               &lt;text xsf:segment="seg1"&gt;
               &lt;team name="teamA" xsf:segment="seg2 seg19"/&gt;
               &lt;player name="Y" xsf:segment="seg3 seg12"/&gt;
               &lt;place name="gap" xsf:segment="seg4 seg18"/&gt;
               &lt;player name="X" xsf:segment="seg5 seg14"/&gt;
               &lt;player name="G" xsf:segment="seg6 seg17"&gt;
               &lt;xsf:meta xmlns="http://www.tei-c.org/ns/1.0" xsi:schemaLocation="http://www.tei-c.org/ns/1.0
               ../xsd/TEICertainty.xsd"&gt;
               &lt;certainty locus="name" target="playerG" degree="0.9"&gt;
               &lt;desc&gt;Although the part of the graphic depicted with seg17 comes without a name tag,
               it is most likely that it depicts the player called 'G' in the running text.&lt;/desc&gt;
               &lt;/certainty&gt;
               &lt;/xsf:meta&gt;
               &lt;/player&gt;
               &lt;player name="Z" xsf:segment="seg7 seg13"/&gt;
               &lt;player name="Y" xsf:segment="seg8 seg12"/&gt;
               &lt;player name="X" xsf:segment="seg9 seg14"/&gt;
               &lt;player name="D" xsf:segment="seg10 seg15"/&gt;
               &lt;player name="A" xsf:segment="seg11 seg16"/&gt;
               &lt;/text&gt;
               &lt;/xsf:layer&gt;
               &lt;/xsf:level&gt;
               &lt;/xsf:annotation&gt;
               &lt;/xsf:corpusData&gt;
            </div>
         </div>
         <div class="para e212">Elements of the annotation layer may refer either to segments of one of the primary
            data
            files only or both (as seen in the example). In the latter case the reference can
            be seen as a
            simple way of a text-to-image mapping.
            <div class="popupBox e213">
               <div class="popupLabel" onmouseover="$('#d1e501').show('1000');" onmouseout="$('#d1e501').hide('1000');">[ footnote ]</div>
               <div id="d1e501" style="display: none;">
                  <div class="footnote">
                     <div class="para e214">Of course it would be possible to make the mapping explicit by adding a special
                        annotation layer for this purpose.
                     </div>
                  </div>
               </div>
            </div> Since we are uncertain if the unnamed blue dot refers to the player named
            
            <div class="quote e215">G</div> in the running text, we have used TEI's 
            <div class="code e216">certainty</div> element to
            express our degree of confidence. Note, that we have chosen this place for the
            
            <div class="code e217">certainty</div> element instead of placing it underneath the 
            <div class="code e218">segment</div>
            element identified by 
            <div class="emphasis e219">seg17</div>, since the segment as such is undisputed, but
            not its reference to the entity mentioned in the running text.
            <div class="popupBox e220">
               <div class="popupLabel" onmouseover="$('#d1e521').show('1000');" onmouseout="$('#d1e521').hide('1000');">[ footnote ]</div>
               <div id="d1e521" style="display: none;">
                  <div class="footnote">
                     <div class="para e221">Another option could be to use two 
                        <div class="code e222">player</div> elements (one for each primary
                        data) and to add the certainty information to the one referring to the segment of
                        the
                        graphical primary data only. But this would introduce an additional element not present
                        before in the original inline annotation.
                     </div>
                  </div>
               </div>
            </div>
            
         </div>
      </div><a name="XStandoff20comparedANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e223" xml:id="sec.xsf2compared">
         <div class="title e224">XStandoff 2.0 compared</div>
         <div class="para e225">There are already a couple of specifications that allow for spatial annotation, some
            of
            which have been mentioned already in 
            <div class="xref e226" linkend="sec.intro"></div> and 
            <div class="xref e227" linkend="sec.xsf-spatial"></div>. The TEI supports spatial annotation by means of the
            
            <div class="code e228">facsimile</div> element introduced in the current version P5 (Chapter 11 in 
            <div class="xref e229" linkend="TEIP5"></div>). A possible serialization of a the text-picture combination shown in
            
            <div class="xref e230" linkend="fig.sport"></div> can be seen in 
            <div class="xref e231" linkend="lst.tei"></div>. The appearance of the
            player's 
            <div class="code e232">zone</div> elements as circles (or ellipses) is encoded by using
            
            <div class="code e233">rendition</div> child element underneath the 
            <div class="code e234">tagsDecl</div> metadata (the
            example has been produced by using the Image Markup Tool (IMT)
            <div class="popupBox e235">
               <div class="popupLabel" onmouseover="$('#d1e556').show('1000');" onmouseout="$('#d1e556').hide('1000');">[ footnote ]</div>
               <div id="d1e556" style="display: none;">
                  <div class="footnote">
                     <div class="para e236">Further information about IMT including downloads can be obtained at 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e237" xlink:actuate="onRequest" xlink:href="http://www.tapor.uvic.ca/~mholmes/image_markup/" xlink:show="new" xlink:type="simple">http://www.tapor.uvic.ca/~mholmes/image_markup/</div>.
                     </div>
                  </div>
               </div>
            </div> and have been altered manually afterwards to include the textual content. Since we
            use rectangular zones (that are rendered as ellipses in case of the players), the
            coordinates
            used define boxes. The 
            <div class="code e238">point</div> attribute, that uses a series of x,y coordinate
            pairs to define complex 2d areas (similar to XStandoff's approach) is another option.
         </div>
         <div class="figure e239" xml:id="lst.tei">
            <div class="title e240">TEI's 
               <div class="code e241">facsimile</div> element
            </div>
            <div class="programlisting e242" xml:space="preserve">&lt;?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_all.rng"
               type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?&gt;
               &lt;TEI xmlns="http://www.tei-c.org/ns/1.0" version="5.0" xml:id="tei-facsimile_instanz"&gt;
               &lt;teiHeader&gt;
               &lt;fileDesc&gt;
               &lt;!-- [...] --&gt;
               &lt;/fileDesc&gt;
               &lt;encodingDesc&gt;
               &lt;tagsDecl&gt;
               &lt;rendition xml:id="player"&gt;&lt;label&gt;Player&lt;/label&gt;&lt;code rend="ellipse"
               lang="text/css"&gt;color: #ff0000&lt;/code&gt;&lt;/rendition&gt;
               &lt;rendition xml:id="place"&gt;&lt;label&gt;Places&lt;/label&gt;&lt;code rend="rectangle" lang="text/css"&gt;color:
               #ffffff&lt;/code&gt;&lt;/rendition&gt;
               &lt;/tagsDecl&gt;
               &lt;/encodingDesc&gt;
               &lt;/teiHeader&gt;
               &lt;facsimile xml:id="soccer-img"&gt;
               &lt;surface&gt;
               &lt;desc&gt;Visualization of a situation in a soccer game between teams A and B&lt;/desc&gt;
               &lt;graphic url="soccer_balisage.png.png" width="824px" height="678px"/&gt;
               &lt;zone xml:id="Y" rendition="player" ulx="290" uly="626" lrx="335" lry="674" rend="visible"/&gt;
               &lt;zone xml:id="X" rendition="player" ulx="381" uly="397" lrx="430" lry="446" rend="visible"/&gt;
               &lt;zone xml:id="Z" rendition="player" ulx="303" uly="448" lrx="349" lry="495" rend="visible"/&gt;
               &lt;zone xml:id="D" rendition="player" ulx="343" uly="375" lrx="389" lry="420" rend="visible"/&gt;
               &lt;zone xml:id="G" rendition="player" ulx="533" uly="376" lrx="576" lry="423" rend="visible"/&gt;
               &lt;zone xml:id="A" rendition="player" ulx="758" uly="317" lrx="806" lry="365" rend="visible"/&gt;
               &lt;zone xml:id="gap" rendition="place" ulx="343" uly="445" lrx="406" lry="630" rend="visible"/&gt;
               &lt;/surface&gt;
               &lt;/facsimile&gt;
               &lt;text&gt;
               &lt;body&gt;
               &lt;p&gt;Another situation in which &lt;seg type="team"&gt;team A&lt;/seg&gt; is not able to finish
               its move:
               &lt;seg facs="#Y" type="player"&gt;Y&lt;/seg&gt; tries to pass the ball through &lt;seg facs="#gap"
               type="place"&gt;the small gap&lt;/seg&gt; to &lt;seg facs="#X" type="player"&gt;X&lt;/seg&gt; (instead
               of
               passing it to &lt;seg facs="#G" type="player"&gt;G&lt;/seg&gt;) while &lt;seg facs="#Z" type="player"
               &gt;Z&lt;/seg&gt; is unintentionally obstructing &lt;seg facs="#Y" type="player"&gt;Y&lt;/seg&gt;'s way.
               But
               before the ball reaches &lt;seg facs="#X" type="player"&gt;X&lt;/seg&gt;, &lt;seg facs="#D" type="player"
               &gt;D&lt;/seg&gt; intercepts and passes the ball to &lt;seg facs="#A" type="player"&gt;A&lt;/seg&gt;.&lt;/p&gt;
               &lt;/body&gt;
               &lt;/text&gt;
               &lt;/TEI&gt;
            </div>
         </div>
         <div class="para e243">We have used TEI's 
            <div class="code e244">seg</div> element as bearer of the information encoded in the
            element names in 
            <div class="xref e245" linkend="lst.soccer-text"></div>. There are of course other (and better)
            options to encode the information, especially the text-to-image mapping which in our
            example
            has been done by using the 
            <div class="code e246">facs</div> attribute. Although this attribute is defined in
            the TEI to 
            <div class="quote e247">point[s] to all or part of an image which corresponds with the content of
               the element
            </div>, its (and the one of the 
            <div class="code e248">facsimile</div> element) main purpose is
            to represent digital facsimiles. It remains to the reader to judge the tag abuse contained
            in
            
            <div class="xref e249" linkend="lst.tei"></div>.
         </div>
         <div class="para e250">Another specification worth mentioning is Analyzed Layout and Text Object (ALTO)
            originally developed as part of the Metadata Engine (METAe) project and which is nowadays
            often used as an extension of the Metadata Encoding &amp; Transmission Standard (
            <div class="xref e251" linkend="McDonough2006"></div>). METS/ALTO supports several geographical shapes such as polygons,
            ellipses and circles to define spatial areas and uses a similar 
            <div class="code e252">point</div> attribute
            (
            <div class="xref e253" linkend="ALTO"></div>). However, the main purpose of ALTO is to store layout and content
            information of OCR recognized text of pages of various printed document types.
         </div>
      </div><a name="ConclusionandfutureworkANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e254" xml:id="sec.conclusion">
         <div class="title e255">Conclusion and future work</div>
         <div class="para e256">We have demonstrated the upcoming version 2.0 of the meta markup language XStandoff,
            which
            supports spatial segmentation and annotation of non-textual primary data. Although
            we have
            already annotated a medium-sized number of examples, using XStandoff for multimodal
            documents
            have just begun and further changes to the format cannot be excluded. We hope to create
            a
            web-based application for segmenting and annotating text and graphical-encoded information
            as
            a next step. Existing software such as the already-mentioned IMT or the Text-Image
            Linking
            Environment (TILE)
            <div class="popupBox e257">
               <div class="popupLabel" onmouseover="$('#d1e607').show('1000');" onmouseout="$('#d1e607').hide('1000');">[ footnote ]</div>
               <div id="d1e607" style="display: none;">
                  <div class="footnote">
                     <div class="para e258">See 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e259" xlink:actuate="onRequest" xlink:href="http://mith.umd.edu/tile/" xlink:show="new" xlink:type="simple">http://mith.umd.edu/tile/</div> for further
                        details.
                     </div>
                  </div>
               </div>
            </div> may serve as starting points. Furthermore we will examine the applicability of
            XStandoff as pivot format for eye-tracking and other sensor data.
         </div>
      </div><a name="AcknowledgementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e260">
         <div class="title e261">Acknowledgements</div>
         <div class="para e262">The author would like to thank the anonymous reviewers for their helpful comments
            and
            ideas, especially regarding (but not limited to) the availability of tools for spatial
            annotation.
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e263">
         <div class="title e264">References</div>
         <div class="bibliomixed e265" xml:id="TEIP5" xreflabel="Burnard and Bauman, 2013">Burnard, L. and S. Bauman
            (2013). TEI P5: Guidelines for Electronic Text Encoding and Interchange. Text Encoding
            Initiative Consortium, Charlottesville, Virginia. Version 2.4.0. Last updated on 5th
            July
            2013
         </div>
         <div class="bibliomixed e266" xml:id="SVG2011" xreflabel="Dahlström, et al., 2011">Dahlström, E.. Dengler, P.,
            Grasso, A., Lilley, C., McCormack, C., Schepers, D. and J. Watt (2011). Scalable Vector
            Graphics (SVG) 1.1 (Second Edition). W3C Recommendation, World Wide Web Consortium
            (W3C).
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e267" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2011/REC-SVG11-20110816/" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/2011/REC-SVG11-20110816/</div>
         </div>
         <div class="bibliomixed e268" xml:id="DeRose1994" xreflabel="DeRose and Durand, 1994">DeRose, S. J., and D. G.
            Durand (1994). Making Hypermedia Work. A User’s Guide to HyTime. Kluwer Academic Publishers,
            Boston and Dordrecht and London. doi:
            <div class="biblioid doi e269">10.1007/978-1-4615-2754-1</div>.
         </div>
         <div class="bibliomixed e270" xml:id="ALTO" xreflabel="Egger et al., 2010">Egger, A., Stehno, B., Retti, G.,
            Tiede, R., and J. Littman (2010). Analyzed Layout and Text Object (ALTO). Technical
            report,
            Library of Congress Network Development and MARC Standards Office.
         </div>
         <div class="bibliomixed e271" xml:id="Lee2013" xreflabel="Lee (2013)">Lee, K. (2013). Multi-layered annotation of
            non-textual data for spatial information. In: Bunt, H., editor, Proceedings of the
            9th Joint
            ISO - ACL SIGSEM Workshop on Interoperable Semantic Annotation, pages 15–23,
            Potsdam
         </div>
         <div class="bibliomixed e272" xml:id="ISO-TimeML2012" xreflabel="ISO 24617-1:2012">ISO/TC 37/SC 4/WG 2 (2012).
            Language Resource Management — Semantic annotation framework — Part 1: Time and events
            (SemAF-Time, ISO-TimeML). International Standard ISO 24617-1:2012, International Organization
            for Standardization, Geneva
         </div>
         <div class="bibliomixed e273" xml:id="ISO-Space2012" xreflabel="ISO/NP 24617-7">ISO/TC 37/SC 4/WG 2 (2012).
            Language Resource Management — Semantic annotation framework — part 7: Spatial Information
            (ISO-Space). Technical Report ISO/NP 24617-7, International Organization for Standardization,
            Geneva
         </div>
         <div class="bibliomixed e274" xml:id="Jettka2011" xreflabel="Jettka and Stührenberg, 2011">Daniel Jettka, and
            Maik Stührenberg (2011). Visualization of concurrent markup: From trees to graphs,
            from 2d to
            3d. In: Proceedings of Balisage: The Markup Conference 2011. Balisage Series on Markup
            Technologies, vol 7. doi:
            <div class="biblioid doi e275">10.4242/BalisageVol7.Jettka01</div>.
         </div>
         <div class="bibliomixed e276" xml:id="Mani2008" xreflabel="Mani et al., 2008">Mani, I., Hitzeman, J., Richer, J.,
            Harris, D., Quimby, R., and B. Wellner (2008). SpatialML: Annotation Scheme, Corpora,
            and
            Tools. In: Calzolari, N., Choukri, K., Maegaard, B., Mariani, J., Odjik, J., Piperidis,
            S.,
            and Tapias, D., editors, Proceedings of the Sixth International Language Re- sources
            and
            Evaluation (LREC 2008), pages 28–30, Marrakech. European Language Resources Association
            (ELRA)
         </div>
         <div class="bibliomixed e277" xml:id="Mani2010" xreflabel="Mani et al., 2010">Mani, I., Doran, C., Harris, D.,
            Hitzeman, J., Quimby, R., Richer, J., Wellner, B., Mardis, S., and S. Clancy (2010).
            SpatialML: annotation scheme, resources, and evaluation. Language Resources and Evaluation,
            44(3):263280. doi:
            <div class="biblioid doi e278">10.1007/s10579-010-9121-0</div>.
         </div>
         <div class="bibliomixed e279" xml:id="McDonough2006" xreflabel="McDonough, 2006">McDonough, J. (2006). METS:
            standardized encoding for digital library objects. International Journal on Digital
            Libraries,
            6:148–158. doi:
            <div class="biblioid doi e280">10.1007/s00799-005-0132-1</div>.
         </div>
         <div class="bibliomixed e281" xml:id="Stuehrenberg2007" xreflabel="Stührenberg et al., 2007"> Stührenberg, Maik,
            Goecke, Daniela, Diewald, Nils, Cramer, Irene, and Alexander Mehler (2007). Web-based
            annotation of anaphoric relations and lexical chains. In: Proceedings of the Linguistic
            Annotation Workshop (LAW), pages 140–147, Prague. Association for Computational Linguistics,
            2007. doi:
            <div class="biblioid doi e282">10.3115/1642059.1642082</div>.
         </div>
         <div class="bibliomixed e283" xml:id="Stuehrenberg2008" xreflabel="Stührenberg and Goecke, 2008">Stührenberg,
            Maik, and Daniela Goecke (2008). SGF - An integrated model for multiple annotations
            and its
            application in a linguistic domain. In: Proceedings of Balisage: The Markup Conference
            2008.
            Balisage Series on Markup Technologies, vol. 1. doi:
            <div class="biblioid doi e284">10.4242/BalisageVol1.Stuehrenberg01</div>.
         </div>
         <div class="bibliomixed e285" xml:id="Stuehrenberg2009" xreflabel="Stührenberg and Jettka, 2009">Stührenberg,
            Maik, and Daniel Jettka (2009). A toolkit for multi-dimensional markup: The development
            of SGF
            to XStandoff. In: Proceedings of Balisage: The Markup Conference 2009. Balisage Series
            on
            Markup Technologies, vol. 3. doi:
            <div class="biblioid doi e286">10.4242/BalisageVol3.Stuhrenberg01</div>.
         </div>
      </div>
   </div>
</div>