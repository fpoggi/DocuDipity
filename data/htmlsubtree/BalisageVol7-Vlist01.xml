<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#OneHrefisnotEnoughANCHOR" name="OneHrefisnotEnoughTOC">One Href is not Enough</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#RequirementsANCHOR" name="RequirementsTOC">Requirements</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#FirstStep:WithoutEmbeddedLinksANCHOR" name="FirstStep:WithoutEmbeddedLinksTOC">First Step: Without Embedded Links</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#KissingwithMicroformatANCHOR" name="KissingwithMicroformatTOC">Kissing with Microformat</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TriplingwithRDFaANCHOR" name="TriplingwithRDFaTOC">Tripling with RDFa</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#BleedingwithmicrodataANCHOR" name="BleedingwithmicrodataTOC">Bleeding with microdata</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#WhynotextendedXLinksafterall?ANCHOR" name="WhynotextendedXLinksafterall?TOC">Why not extended XLinks after all?</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#NextStep:EmbeddingANCHOR" name="NextStep:EmbeddingTOC">Next Step: Embedding</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MicroformatANCHOR" name="MicroformatTOC">Microformat</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#RDFaANCHOR" name="RDFaTOC">RDFa</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MicrodataANCHOR" name="MicrodataTOC">Microdata</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#NextStepsANCHOR" name="NextStepsTOC">Next Steps</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">August 2 - 5, 2011</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2011</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">Extensible Markup Language (XML): Part 2. Linking</div>
         <div class="singletermTERMS">Eric</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">HTML5 Microdata JavaScript</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
         <div class="singletermTERMS">Jeni Tennison's rdfQuery</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">pluralink</div>
         <div class="singletermTERMS">proposal</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">See you in Prague</div>
         <div class="singletermTERMS">shortcodes</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">unusually volatile</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">vdv@dyomedea.com</div>
         <div class="singletermTERMS">van der Vlist</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">XMLfr.org</div>
         <div class="singletermTERMS">XML Linking Language (XLink) Version 1.0</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="OneHrefisnotEnoughANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3">
      <div class="title e1">One Href is not Enough</div>
      <div class="subtitle e2">We need n hrefs!</div>
      <div class="info e3">
         <div class="confgroup e4">
            <div class="conftitle e5">Balisage: The Markup Conference 2011</div>
            <div class="confdates e6">August 2 - 5, 2011</div>
         </div>
         <div class="abstract e7">
            <div class="para e8">The web is hyperlinks for the masses. </div>
            <div class="para e9">Hyperlinks are an old concept that has been invented before the web and to achieve
               this remarkable success, the web had to come out
               with a very simplified version of hyperlinks.
            </div>
            <div class="para e10">In the process a lot of features have been lost and some of them, such as the possibility
               to link to multiple targets have been
               lost.
            </div>
            <div class="para e11">This talk proposes to use modern techniques to regain this ability while remaining
               conform to existing standards and running in
               existing browsers. 
            </div>
         </div>
         <div class="author e12">
            <div class="personname e13">
               <div class="firstname e14">Eric</div>
               <div class="surname e15">van der Vlist</div>
            </div>
            <div class="personblurb e16">
               <div class="para e17">Eric is an independent consultant and trainer. His domain of expertise include Web
                  development and XML technologies.
               </div>
               <div class="para e18">He is the creator and main editor of 
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e19" xlink:actuate="onRequest" xlink:href="http://xmlfr.org" xlink:show="new" xlink:type="simple">XMLfr.org</div>, the main site dedicated to XML
                  technologies in French, the author of the O'Reilly animal books XML Schema and RELAX
                  NG and a member or the ISO DSDL (
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e20" xlink:actuate="onRequest" xlink:href="http://dsdl.org" xlink:show="new" xlink:type="simple">http://dsdl.org</div>) working group focused on XML schema languages.
               </div>
               <div class="para e21">He his based in Paris and you can reach him by mail (
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e22" xlink:actuate="onRequest" xlink:href="mailto:vdv@dyomedea.com" xlink:show="new" xlink:type="simple">vdv@dyomedea.com</div>) or meet
                  him in one of the many conferences where he presents his projects.
               </div>
            </div>
            <div class="affiliation e23">
               <div class="orgname e24">Dyomedea</div>
            </div>
         </div>
         <div class="legalnotice e25">
            <div class="para e26">Copyright Â© 2011 by the author. Used with permission.</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e27">
         <div class="title e28">Introduction</div>
         <div class="para e29">I am a 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e30" xlink:actuate="onRequest" xlink:href="http://www.urbandictionary.com/define.php?term=webaholic" xlink:show="new" xlink:type="simple">webaholic</div>: the web has changed my life and it has
            changed the way I write: links are disruptive and my writing is no longer the same
            since I can use them.
         </div>
         <div class="para e31">Before the web (and before the links) you had to be very careful to be understood
            and introduce all the words that were not commonly
            known or disambiguate those that could be ambiguous.
         </div>
         <div class="para e32">Now that we have links, we can use them for these two purposes and concentrate on
            the message we express. This leads to a new
            conciseness that I love.
         </div>
         <div class="para e33">Unfortunately when you use links a lot you run rapidly into trouble...</div>
         <div class="para e34">The other day, I was writing a blog post to announce that my paper had been accepted
            at XPL Prague:
         </div>
         <div class="popupBox e35">
            <div class="popupLabel" onmouseover="$('#d1e65').show('1000');" onmouseout="$('#d1e65').hide('1000');">[ blockquote ]</div>
            <div id="d1e65" style="display: none;">
               <div class="blockquote">
                  <div class="para e36">Just got the confirmation that I'll be presenting a paper on XQuery injection at XML
                     Prague March 26th or 27th.
                  </div>
                  <div class="attribution e37">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e38" xlink:actuate="onRequest" xlink:href="http://eric.van-der-vlist.com/blog/2011/01/26/see-you-in-prague/" xlink:show="new" xlink:type="simple">See you in Prague</div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e39">While typing the obvious question arose: where should I link "XQuery" to?</div>
         <div class="itemizedlist e40">
            <div class="listitem e41">
               <div class="para e42">To Wikipedia which is usually a good choice because it provides cool URIs (that don't
                  change) and pages that introduce a
                  subject?
               </div>
            </div>
            <div class="listitem e43">
               <div class="para e44">To the W3C recommendation which is another cool URI (that doesn't change) and is the
                  normative reference but isn't an
                  introductory material?
               </div>
            </div>
            <div class="listitem e45">
               <div class="para e46">Elsewhere (to the XQuery tag on my blog, to the W3C XML Query Working Group,...)?</div>
            </div>
         </div>
         <div class="para e47">And, for versioned resources such as Wikipedia pages or W3C recommendations should
            I link to the current version at the date when I
            wrote the blog entry or to an updated, latest version?
         </div>
         <div class="para e48">All these choices make sense but (X)HTML imposes to chose one and only one target
            for a link!
         </div>
         <div class="para e49">The problem got worse when I was typing "XML Prague" because I had to choose between:</div>
         <div class="itemizedlist e50">
            <div class="listitem e51">
               <div class="para e52">Linking "XML" and "Prague" separately (and again, to which target? Wikipedia, the
                  W3C recommendation, the XML category for
                  "XML"; Wikipedia, tourist office, ... for "Prague")
               </div>
            </div>
            <div class="listitem e53">
               <div class="para e54">Linking "XML Prague" as a whole to the conference web site or the tag on my blog.</div>
            </div>
         </div>
         <div class="para e55">This issue of embedded links seems really tough and I think I could live with it but
            wanted to mention it for completeness.
         </div>
         <div class="para e56">The problem can also get worse when I write in French because I often want to give
            the choice between targets in French and targets in
            English when they are higher quality...
         </div>
         <div class="para e57">In other words: one href is not enough, we need n hrefs!</div>
         <div class="para e58">Am I asking too much?</div>
         <div class="para e59">I don't think so, my requirements are legitimate and generic: I want to be able to
            write simple sentences using the words that are
            relevant in my domain(s) while using links to give to my readers the ability to discover
            the meaning of the words that they don't know,
            browse authoritative resources to deepen or extend their knowledge or find out relative
            pages that I have written.
         </div>
         <div class="para e60">Furthermore this is an old issue already addressed in SGML world by HyTime and acknowledged
            by the W3C back in 1997!
         </div>
         <div class="para e61">What happened then?</div>
         <div class="para e62">The topic has always been considered touchy and the first working draft published
            in April 97 as "Extensible Markup Language (XML): Part
            2. Linking" notes:
         </div>
         <div class="popupBox e63">
            <div class="popupLabel" onmouseover="$('#d1e113').show('1000');" onmouseout="$('#d1e113').hide('1000');">[ blockquote ]</div>
            <div id="d1e113" style="display: none;">
               <div class="blockquote">
                  <div class="para e64">Please be advised that the draft you are now reading is 
                     <div class="emphasis e65">unusually volatile</div>. The debating and balloting process
                     which determines the material contents is far from complete, and is nonetheless substantially
                     ahead of the editing process that turns
                     the material contents into usable specification language.
                  </div>
                  <div class="attribution e66">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e67" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/WD-xml-link-970406" xlink:show="new" xlink:type="simple">Extensible Markup Language (XML): Part 2.
                        Linking
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e68">The content was indeed so volatile that the specification was taken out of the XML
            recommendation and eventually became a recommendation
            no less that four years after in June 2001. This recommendation, known as XLink, does
            address what I need:
         </div>
         <div class="popupBox e69">
            <div class="popupLabel" onmouseover="$('#d1e125').show('1000');" onmouseout="$('#d1e125').hide('1000');">[ blockquote ]</div>
            <div id="d1e125" style="display: none;">
               <div class="blockquote">
                  <div class="para e70">This specification defines the XML Linking Language (XLink), which allows elements
                     to be inserted into XML documents in order to
                     create and describe links between resources. It uses XML syntax to create structures
                     that can describe links similar to the simple
                     unidirectional hyperlinks of today's HTML, as well as more sophisticated links.
                  </div>
                  <div class="attribution e71">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e72" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2001/REC-xlink-20010627/" xlink:show="new" xlink:type="simple">XML Linking Language (XLink) Version 1.0</div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e73">Unfortunately, without wanting to start a flame war nor blame anyone, I think it is
            fair to say that the syntax of these sophisticated links mentioned in this introduction
            and known as
            "extended links" is so complex that they are considered unusable by most of us XML
            geeks and have no chance to be embedded in real world (X)HTML pages. If you're not
            convinced by this bold
            statement, please hold on: I'll come back on extended XLinks in a while... 
         </div>
         <div class="para e74">Is this topic doomed then? How can we go through when previous attempts seem to have
            all failed?
         </div>
         <div class="para e75">Ten years have passed since 2001 and one of the things we've learned is to hijack
            existing technologies to do what we need! Some
            hijacking technologies have even become de facto standards... Why not call them to
            the rescue?
         </div>
         <div class="para e76">In other words, why not use microformats, RDFa or HTML5's microdata to specify these
            "sophisticated links" that are missing to
            XML?
         </div>
      </div><a name="RequirementsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e77">
         <div class="title e78">Requirements</div>
         <div class="para e79">Please take the remaining of this paper as a demonstration of how this problem could
            be handled rather than a final proposition...
         </div>
         <div class="para e80">The requirements that are chosen here are arbitrary: they meet what I find important
            as I write these lines and are subject to discussion but I am confident that the same
            method can be
            used with different requirements sets as long as they remain "reasonably" simple!
         </div>
         <div class="para e81">The requirements for this exercise can be summarized as defining a (X)HTML jargon
            (microformat, RDFa, microdata, ...) that:
         </div>
         <div class="orderedlist e82">
            <div class="listitem e83">
               <div class="para e84">Expresses inline links with multiple arcs between (X)HTML fragments and several link
                  ends.
               </div>
            </div>
            <div class="listitem e85">
               <div class="para e86">Can be processed by a simple JavaScript library to be displayed in a fancy way.</div>
            </div>
            <div class="listitem e87">
               <div class="para e88">Degrades nicely and remains readable when not processed by such a library.</div>
            </div>
            <div class="listitem e89">
               <div class="para e90">Plays well with search engines.</div>
            </div>
            <div class="listitem e91">
               <div class="para e92">Do not requires server storage.</div>
            </div>
            <div class="listitem e93">
               <div class="para e94">If possible, provides a way to annotate the arcs (to provide arc roles, the language
                  of link ends or other informations).
               </div>
            </div>
            <div class="listitem e95">
               <div class="para e96">If possible, support embedded links.</div>
            </div>
         </div>
         <div class="para e97">The general idea is to keep the thing as simple as possible while maintaining good
            practices!
         </div>
         <div class="para e98">Requirement 3 excludes solutions such as 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e99" xlink:actuate="onRequest" xlink:href="http://www.webresourcesdepot.com/multiple-links-inside-one-pluralink/" xlink:show="new" xlink:type="simple">pluralink</div> that package multiple links into a single href attribute and is not "degradable"
            since the link doesn't work if it
            isn't processed by a script.
         </div>
         <div class="para e100">Requirements 3 and 4 can be contradictory. Taken alone, point 3 would lead to defining
            a jargon that would replace "XQuery" by
            "XQuery [Wikipedia, W3C]" with links between the words "Wikipedia" and "W3C" and (respectively)
            the article about XQuery on Wikipedia and
            the XQuery W3C recommendation but the practice may be considered as an almost as poor
            as the infamous 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e101" xlink:actuate="onRequest" xlink:href="http://www.w3.org/QA/Tips/noClickHere" xlink:show="new" xlink:type="simple">"Click here" practice</div>!
         </div>
         <div class="para e102">Requirement 4 will thus lead to more verbose alternatives such as "XQuery [XQuery
            on Wikipedia, XQuery W3C Recommendation]" with links
            on "XQuery on Wikipedia" and "XQuery W3C Recommendation".
         </div>
         <div class="para e103">Requirement 5 excludes services such as 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e104" xlink:actuate="onRequest" xlink:href="http://www.multiurl.com/" xlink:show="new" xlink:type="simple">http://www.multiurl.com/</div> that are similar to URL
            shorteners with the additional possibility to define multiple targets.
         </div>
         <div class="note e105">
            <div class="para e106">This is a simplified set of requirements and that do not take into account chained
               links such as the relation between a page and its archive or translation. In this
               first version the
               arcs are between a document fragment and multiple resources that are all at the same
               level. In a next iteration, we'll have to see how this can be extended to introduce
               relations
               between linked resources.
            </div>
         </div>
      </div><a name="FirstStep:WithoutEmbeddedLinksANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e107">
         <div class="title e108">First Step: Without Embedded Links</div>
         <div class="para e109">Let's first keep things simple and explore simple implementations for microformats,
            RDFa and microdata.
         </div>
         <div class="para e110">In each case, we will present the markup to express an nhrefs link and the corresponding
            JavaScript implementation.
         </div>
         <div class="para e111">This implementation will loop over nhrefs links and for each link it will hide the
            original markup but keep it intact so that other
            scripts could access the information for other purposes if that was necessary. For
            each link, a dialog will be created and a simple link
            will be added to open this dialog.
         </div><a name="KissingwithMicroformatANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e112">
            <div class="title e113">Kissing with Microformat</div>
            <div class="para e114">The good thing with microformats is that their "balisage" is flexible and they often
               can be kept as simple as possible...
            </div>
            <div class="para e115">In our case, the following seems to be good enough (indentation has been added to
               make the code more readable):
            </div>
            <div class="programlisting e116" xml:space="preserve">&lt;span class="nhrefs"&gt;
               &lt;span class="source"&gt;XQuery&lt;/span&gt; 
               [
               &lt;a href="http://en.wikipedia.org/wiki/XQuery" class="arc" rel="wikipedia"&gt;XQuery on
               Wikipedia&lt;/a&gt;, 
               &lt;a href="http://www.w3.org/TR/xquery/" class="arc" rel="authoritative"&gt;XQuery W3C
               Recommendation&lt;/a&gt;
               ]
               &lt;/span&gt;
            </div>
            <div class="para e117">Where:</div>
            <div class="variablelist e118">
               <div class="varlistentry e119">
                  <div class="term e120">span.nhrefs</div>
                  <div class="listitem e121">
                     <div class="para e122">Is the container for an extended link.</div>
                  </div>
               </div>
               <div class="varlistentry e123">
                  <div class="term e124">span.source</div>
                  <div class="listitem e125">
                     <div class="para e126">Is the source of the link (the link start if you prefer). This source is always local
                        to the document.
                     </div>
                  </div>
               </div>
               <div class="varlistentry e127">
                  <div class="term e128">a.arc</div>
                  <div class="listitem e129">
                     <div class="para e130">Is an arc.</div>
                  </div>
               </div>
               <div class="varlistentry e131">
                  <div class="term e132">a.arc/@rel</div>
                  <div class="listitem e133">
                     <div class="para e134">Is the arc role (using curies and/or a set of well known common roles).</div>
                  </div>
               </div>
               <div class="varlistentry e135">
                  <div class="term e136">a.arc/@href</div>
                  <div class="listitem e137">
                     <div class="para e138">Is the URL of the arc destination.</div>
                  </div>
               </div>
               <div class="varlistentry e139">
                  <div class="term e140">a.arc/node()</div>
                  <div class="listitem e141">
                     <div class="para e142">Is the label of the arc end.</div>
                  </div>
               </div>
            </div>
            <div class="para e143">This format degrades reasonably well when it is not processed by any kind of script:</div>
            <div class="figure e144">
               <div class="title e145">Microformat not processed by a script</div>
               <div class="mediaobject e146">
                  <div class="imageobject e147">
                     <div class="metaBox e148"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e256').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e256" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e148'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Vlist01/Vlist01-001.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="caption e149">
                  <div class="para e150">Snapshot of my blog using this microformat to link the word "XQuery" to its Wikipedia
                     definition and its W3C recommendation when
                     the page is not processed by a script.
                  </div>
               </div>
            </div>
            <div class="para e151">With a simple JavaScript function, this text can be streamlined into:</div>
            <div class="figure e152">
               <div class="title e153">Microformat processed by a script</div>
               <div class="mediaobject e154">
                  <div class="imageobject e155">
                     <div class="metaBox e156"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e267').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e267" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e156'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Vlist01/Vlist01-002.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="caption e157">
                  <div class="para e158">Snapshot of my blog using this microformat to link the word "XQuery" to its Wikipedia
                     definition and its W3C recommendation and
                     streamlined by a script.
                  </div>
               </div>
            </div>
            <div class="para e159">This script opens a dialog when you click on link that has been generated around the
               word "XQuery":
            </div>
            <div class="figure e160">
               <div class="title e161">Microformat processed by a script after a click</div>
               <div class="mediaobject e162">
                  <div class="imageobject e163">
                     <div class="metaBox e164"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e279').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e279" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e164'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Vlist01/Vlist01-003.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="caption e165">
                  <div class="para e166">Snapshot of my blog using this microformat to link the word "XQuery" to its Wikipedia
                     definition and its W3C recommendation,
                     streamlined by a script and after a click.
                  </div>
               </div>
            </div>
            <div class="para e167">If you wonder the level of complexity of such a script, here is a version that uses
               jQuery (the code could probably be further
               simplified: I am not a jQuery expert):
            </div>
            <div class="programlisting e168" xml:space="preserve">jQuery(document).ready(function() {
               
               jQuery('.nhrefs')
               .each(function() {
               
               var span = jQuery(this);
               span.hide();
               var source = jQuery('.source', this).text();
               var link = jQuery(span.before('&lt;a href=""&gt;'+ source +'&lt;/a&gt;')[0].previousSibling);
               var dialog = jQuery(span.before('&lt;div title="Links for &amp;quot;'+ source + '&amp;quot;"&gt;&lt;ul
               /&gt; &lt;/div&gt;')[0].previousSibling);
               var list = jQuery('ul', dialog);
               jQuery('a.arc', this)
               .each(function(){
               list.append('&lt;li&gt;&lt;a href="' + this.href + '"&gt;' + this.text + '&lt;/a&gt;');
               });
               dialog.dialog({ autoOpen: false });
               link.click(function() {
               dialog.dialog("open");
               return false;
               }); 
               });
               
               });
            </div>
         </div><a name="TriplingwithRDFaANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e169">
            <div class="title e170">Tripling with RDFa</div>
            <div class="para e171">The good thing with RDFa is that assertions can be extracted using any tool of a generic
               toolbox.
            </div>
            <div class="para e172">The price to pay is that your markup needs to follow a set of rules that are much
               more rigid than those of microformats...
            </div>
            <div class="para e173">In our case, here is the simplest markup I have been able to produce (enhancements
               welcome, especially if they simplify the
               source!):
            </div>
            <div class="programlisting e174" xml:space="preserve">&lt;span typeof="nhrefs:link"&gt;
               &lt;span property="nhrefs:source"&gt;XQuery&lt;/span&gt; 
               &lt;span rel="nhrefs:hasarc"&gt;
               [&lt;span typeof="nhrefs:arc"&gt;
               &lt;a href="http://en.wikipedia.org/wiki/XQuery" rel="nhrefs:dest" property="nhrefs:title"&gt;XQuery
               on Wikipedia&lt;/a&gt; 
               &lt;span rel="nhrefs:role" resource="nhrefs:wikipedia"&gt;&lt;span&gt;
               &lt;/span&gt;, 
               &lt;span typeof="typeof:arc"&gt;
               &lt;a href="http://www.w3.org/TR/xquery/" rel="nhrefs:dest" property="nhrefs:title"&gt;XQuery
               W3C Recommendation&lt;/a&gt;
               &lt;span rel="nhrefs:role" resource="nhrefs:authoritative"&gt;&lt;/span&gt;
               &lt;/span&gt;]
               &lt;/span&gt;
               &lt;/span&gt;
            </div>
            <div class="para e175">This code get displayed exactly like its microformat counterpart when it is not processed
               by a script.
            </div>
            <div class="para e176">Although this snippet is more verbose than its microformat equivalent, it is arguably
               more "auto documented" and any reader (human or
               not) familiar with RDFa can understand that we have here a "nhrefs:link" with a source
               and a couple of arcs... 
            </div>
            <div class="para e177">Here is how Raptor RDF sees it (with some help from Graphviz):</div>
            <div class="figure e178">
               <div class="title e179">An Nhrefs Link expressed in RDFa</div>
               <div class="mediaobject e180">
                  <div class="imageobject e181">
                     <div class="metaBox e182"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e309').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e309" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e182'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Vlist01/Vlist01-004.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="caption e183">
                  <div class="para e184">The example previous example parsed by Raptor RDF and visualized by Graphviz.</div>
               </div>
            </div>
            <div class="para e185">More concisely, it can be represented in turtle as:</div>
            <div class="programlisting e186" xml:space="preserve">@prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt; .
               @prefix : &lt;http://www.w3.org/1999/xhtml&gt; .
               @prefix nhrefs: &lt;http://nhrefs.org/&gt; .
               
               []
               nhrefs:hasarc [
               nhrefs:dest &lt;http://www.w3.org/TR/xquery/&gt; ;
               nhrefs:role &lt;nhrefs:authoritative&gt; ;
               nhrefs:title "XQuery W3C Recommendation"
               ], [
               nhrefs:dest &lt;http://en.wikipedia.org/wiki/XQuery&gt; ;
               nhrefs:role &lt;nhrefs:wikipedia&gt; ;
               nhrefs:title "XQuery on Wikipedia" ;
               a nhrefs:arc
               ] ;
               nhrefs:source "XQuery" ;
               a nhrefs:link .
               
            </div>
            <div class="para e187">Nice, don't you think so? </div>
            <div class="para e188">To be honest, there is a flaw in this model: the arcs are embedded in a blank node
               without using any container and in that case RDF
               specifies that the triples are unordered. In other words, there is no guarantee that
               the relative order of the arcs will be
               kept.
            </div>
            <div class="para e189">Neither the current recommendation (RDFa1.0) nor the latest RDFa 1.1 Working Draft
               support containers but a 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e190" xlink:actuate="onRequest" xlink:href="http://www.w3.org/2010/02/rdfa/wiki/ContainersAndCollections" xlink:show="new" xlink:type="simple">proposal</div> has been made on the RDFa wiki and I do hope that this most needed feature will be
               added to RDFa at some
               point.
            </div>
            <div class="para e191">This is only a problem as far as authors expect this order to be preserved (which
               is probably the case) and if we use a RDF library
               that may change this order (which is not the case of the library that we'll be using)
               but this is still a flaw. 
            </div>
            <div class="para e192">A RDF library... Yep, let's see how you parse that kind of thing in JavaScript!</div>
            <div class="para e193">It could be tempting to use a library such as jQuery and just adapt what we've done
               for microformats to query the RDFa attributes in
               stead of the class attributes that drive microformats...
            </div>
            <div class="para e194">This would work on this example but unless you are ready to reimplement a RDFa parser
               that wouldn't work with models that would express
               the same set of triples using different RDFa syntaxes: even supporting a different
               namespace prefix than "nhrefs" would require extra
               work.
            </div>
            <div class="para e195">The best way to avoid these issues is to use a RDFa parser and, if you enjoy jQuery,
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e196" xlink:actuate="onRequest" xlink:href="http://code.google.com/p/rdfquery/" xlink:show="new" xlink:type="simple">Jeni Tennison's rdfQuery</div> is definitely for you since it comes as a kind of
               jQuery add-on and shares its syntax.
            </div>
            <div class="para e197">RdfQuery also borrows a lot from SPARQL and to get the nhrefs links with their sources,
               you can write:
            </div>
            <div class="programlisting e198" xml:space="preserve">    var rdf = jQuery(document)
               .rdf()
               .prefix('nhrefs', 'http://nhrefs.org/')
               .where('?link a nhrefs:link')
               .where('?link nhrefs:source ?source');
               
            </div>
            <div class="para e199">In RdfQuery like in SPARQL, query results are sets of resources and literals rather
               than triples. These resources and literals cannot be
               mapped back to DOM nodes in the (X)HTML document and you need to go back to the triples
               for that.
            </div>
            <div class="para e200">In our case, the outer span element for the link is the element that carries the type
               information:
            </div>
            <div class="programlisting e201" xml:space="preserve">&lt;span typeof="nhrefs:link"&gt;
               ...
               &lt;/span&gt;
            </div>
            <div class="para e202">A triple directly generated by this element is:</div>
            <div class="programlisting e203" xml:space="preserve">?link a nhrefs:link</div>
            <div class="para e204">And to get the span element (to hide it and prepend the dialog and replacement link),
               you can query this triple and use its source
               attribute:
            </div>
            <div class="programlisting e205" xml:space="preserve">    rdf
               .each(function(){
               var span = jQuery(rdf.reset().where(this.link.value + ' a nhrefs:link').sources()[0][0].source);
               span.hide();
               
            </div>
            <div class="para e206">After that, you can perform a sub query to find the arcs and create the dialog with
               the query results. The remaining of the function is
               straightforward and the complete code is:
            </div>
            <div class="programlisting e207" xml:space="preserve">jQuery(document).ready(function() {
               
               var rdf = jQuery(document)
               .rdf()
               .prefix('nhrefs', 'http://nhrefs.org/')
               .where('?link a nhrefs:link')
               .where('?link nhrefs:source ?source');
               rdf
               .each(function(){
               var span = jQuery(rdf.reset().where(this.link.value + ' a nhrefs:link').sources()[0][0].source);
               span.hide();
               var link = jQuery(span.before('&lt;a href=""&gt;'+this.source.value+'&lt;/a&gt;')[0].previousSibling);
               var dialog = jQuery(span.before('&lt;div title="Links for &amp;quot;'+ this.source.value
               + '&amp;quot;"&gt;&lt;ul /&gt; &lt;/div&gt;')[0].previousSibling);
               var list = jQuery('ul', dialog);
               rdf
               .reset()
               .where(this.link.value + ' nhrefs:hasarc ?arc')
               .where('?arc nhrefs:title ?title')
               .where('?arc nhrefs:dest ?dest')
               .each(function(){
               list.append('&lt;li&gt;&lt;a href="' + this.dest.value + '"&gt;' + this.title.value + '&lt;/a&gt;');
               });
               dialog.dialog({ autoOpen: false });
               link.click(function() {
               dialog.dialog("open");
               return false;
               }); 
               
               var x = this;
               });
               });
            </div>
            <div class="para e208">Again, this code is more verbose than its microformat counterpart, but the links properties
               are accessed using proper queries over
               formal properties and that seems more robust than just relying on (X)HTML classes.
            </div>
         </div><a name="BleedingwithmicrodataANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e209">
            <div class="title e210">Bleeding with microdata</div>
            <div class="para e211">HTML5's microdata is arguably the most bleeding edge of these somewhat competing technologies.
               Although HTML5 isn't there yet, microdata
               can be used with libraries such as 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e212" xlink:actuate="onRequest" xlink:href="http://gitorious.org/microdatajs" xlink:show="new" xlink:type="simple">HTML5 Microdata JavaScript</div>.
            </div>
            <div class="para e213">Some HTML5 specific features such as using meta elements within page bodies can't
               be used (because these elements are considered bogus
               and are stripped down by browsers) and need to be workaround. However, the result
               is still reasonably simple:
            </div>
            <div class="programlisting e214" xml:space="preserve">&lt;span itemscope="itemscope" itemtype="http://nhrefs.org/link"&gt;
               &lt;span itemprop="source"&gt;XQuery&lt;/span&gt; 
               [&lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://en.wikipedia.org/wiki/XQuery" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;XQuery on Wikipedia&lt;/span&gt;
               &lt;/a&gt; 
               &lt;a href="http://nhrefs.org/wikipedia" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;, 
               &lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://www.w3.org/TR/xquery/" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;XQuery W3C Recommendation&lt;/span&gt;
               &lt;/a&gt;
               &lt;a href="http://nhrefs.org/authoritative" itemprop="role" &gt;&lt;/a&gt;
               &lt;!--&lt;meta itemprop="role" content="authoritative"/&gt;--&gt;
               &lt;/span&gt;]
               &lt;/span&gt;
            </div>
            <div class="para e215">This code get displayed exactly like its microformat and RDFa counterparts when it
               is not processed by a script.
            </div>
            <div class="para e216">The microdata jQuery library is fairly simple to use and the code to process these
               links is very similar to what we've seen so
               far:
            </div>
            <div class="programlisting e217" xml:space="preserve">jQuery(document).ready(function() {
               
               jQuery(document)
               .items('http://nhrefs.org/link')
               .each(function(){
               var span = jQuery(this);
               span.hide();
               var source = span.properties('source').itemValue();
               var link = jQuery(span.before('&lt;a href=""&gt;'+ source +'&lt;/a&gt;')[0].previousSibling);
               var dialog = jQuery(span.before('&lt;div title="Links for &amp;quot;'+ source + '&amp;quot;"&gt;&lt;ul
               /&gt; &lt;/div&gt;')[0].previousSibling);
               var list = jQuery('ul', dialog);
               span
               .properties('arc')
               .each(function(){
               var arc = jQuery(this);
               list.append('&lt;li&gt;&lt;a href="' + arc.properties('dest').itemValue() + '"&gt;' + arc.properties('title').itemValue()
               + '&lt;/a&gt;');
               });
               dialog.dialog({ autoOpen: false });
               link.click(function() {
               dialog.dialog("open");
               return false;
               }); 
               });
               
               
               });
            </div>
         </div><a name="WhynotextendedXLinksafterall?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e218">
            <div class="title e219">Why not extended XLinks after all?</div>
            <div class="para e220">Now that we've seen the level of simplicity (or complexity) of three different approaches,
               let's go back and revisit extended XLinks.
            </div>
            <div class="para e221">To express an extended link, you need to define :
               <div class="itemizedlist e222">
                  <div class="listitem e223">
                     <div class="para e224">The extended link itself that will serve as a container.</div>
                  </div>
                  <div class="listitem e225">
                     <div class="para e226">Link ends that can be either local to the link or external. In our case, the source
                        (i.e. the span containing the text "XQuery") can be defined as a local resource and
                        the targets will necessarily be defined as external resources (aka XLink "locators").
                     </div>
                  </div>
                  <div class="listitem e227">
                     <div class="para e228">The arcs between the link ends.</div>
                  </div>
               </div>
            </div>
            <div class="para e229">As far as XLink is concerned, a simple way to define these links in a XHTML document
               could be:
            </div>
            <div class="programlisting e230" xml:space="preserve">&lt;!-- An extended link --&gt;
               &lt;span xlink:type="extended" 
               xlink:role="http://nhrefs.org/link/"&gt;
               &lt;!-- Source (local resource) --&gt;
               &lt;span xlink:type="resource" 
               xlink:role="http://nhrefs.org/source/" 
               xlink:label="source"&gt;XQuery&lt;/span&gt;
               &lt;!-- Targets (remote resources aka locators) --&gt;
               &lt;span xlink:href="http://en.wikipedia.org/wiki/XQuery" 
               xlink:type="locator" 
               xlink:role="http://nhrefs.org/target/wikipedia/" 
               xlink:label="target" 
               xlink:title="XQuery on Wikipedia" &gt; &lt;/span&gt; 
               &lt;span xlink:href="http://www.w3.org/TR/xquery/" 
               xlink:type="locator" 
               xlink:role="http://nhrefs.org/target/authoritative/" 
               xlink:label="target" 
               xlink:title="XQuery W3C Recommendation"&gt; &lt;/span&gt;
               &lt;!-- Arcs --&gt;
               &lt;span xlink:type="arc" 
               xlink:from="source" 
               xlink:to="target"&gt; &lt;/span&gt;
               &lt;/span&gt; 
            </div>
            <div class="para e231">As far as I understand the XLink recommendation, this is enough to express what we
               want. That's not so bad and we could argue that the level of complexity is similar
               to what we've
               seen so far.
            </div>
            <div class="para e232">Unfortunately, I am not aware of any existing implementation that can process this
               markup and display what we want to display. Browsers just ignore extended links and
               won't display
               anything more than the word "XQuery" from this markup.
            </div>
            <div class="para e233">To get a degraded display similar to what we had with microformats, RDFa or microdata,
               we need to repeat the target titles and href attributes :
               <div class="programlisting e234" xml:space="preserve">&lt;!-- An extended link --&gt;
                  &lt;span xlink:type="extended" 
                  xlink:role="http://nhrefs.org/link/"&gt;
                  &lt;!-- The source --&gt;
                  &lt;span xlink:type="resource" 
                  xlink:role="http://nhrefs.org/source/" 
                  xlink:label="source"&gt;XQuery&lt;/span&gt; [
                  &lt;!-- The targets --&gt;
                  &lt;a href="http://en.wikipedia.org/wiki/XQuery" 
                  title="XQuery on Wikipedia"
                  xlink:href="http://en.wikipedia.org/wiki/XQuery" 
                  xlink:type="locator" 
                  xlink:role="http://nhrefs.org/target/wikipedia/" 
                  xlink:label="target" 
                  xlink:title="XQuery on Wikipedia" &gt;XQuery on Wikipedia&lt;/a&gt;, 
                  &lt;a href="http://www.w3.org/TR/xquery/" 
                  title="XQuery W3C Recommendation"
                  xlink:href="http://www.w3.org/TR/xquery/" 
                  xlink:type="locator" 
                  xlink:role="http://nhrefs.org/target/authoritative/" 
                  xlink:label="target" 
                  xlink:title="XQuery W3C Recommendation"&gt;XQuery W3C Recommendation&lt;/a&gt;]
                  &lt;!-- The arcs --&gt;
                  &lt;span xlink:type="arc" 
                  xlink:from="source" 
                  xlink:to="target"&gt; &lt;/span&gt;
                  &lt;/span&gt;
               </div>
               
            </div>
            <div class="para e235">Here we have a XHTML fragment that will get displayed with the degraded display than
               we have requested in our requirements and has the meaning that we want to convey for
               XLink
               implementations.
            </div>
            <div class="para e236">The price to pay in term of complexity is clearly visible when we compare this fragment
               to what we've seen before. 
            </div>
            <div class="para e237">In addition to the markup complexity, I am not aware of any JavaScript implementation
               of extended XLinks on which we can rely to process this fragment like we did for the
               other
               technologies and we might have to develop our own JavaScript implementation
            </div>
            <div class="para e238">If the downsides are clearly visible, the benefit is not that obvious!</div>
            <div class="para e239">Except for being proud to be conform to a W3C recommendation and hoping to convince
               more people to use it, what's the benefit of using a recommendation that has almost
               no traction? 
            </div>
         </div>
      </div><a name="NextStep:EmbeddingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e240">
         <div class="title e241">Next Step: Embedding</div>
         <div class="para e242">A simple way to represent embedded links is to embed nhrefs links with the source
            property of another nhrefs link.
         </div>
         <div class="para e243">OK, but how should we present such embedded links to the user?</div>
         <div class="para e244">Taking back the example of "XML Prague", we could differentiate the link on "XML"
            that would present resources about XML and resources
            about XML Prague and the link on "Prague" that would present resources about Prague
            and resources about XML Prague. However, this would be
            displayed by the browser as one link (or at best two links separated by a space) and
            users would very likely miss the difference between
            these two links.
         </div>
         <div class="para e245">To avoid this issue, I suggest that we display the same dialog on all the terms of
            embedded links. That dialog will display all the
            links for all the terms but can group the links per term.
         </div><a name="MicroformatANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e246">
            <div class="title e247">Microformat</div>
            <div class="para e248">Following these principles, the markup would be:</div>
            <div class="programlisting e249" xml:space="preserve">&lt;span class="nhrefs"&gt;
               &lt;span class="source"&gt;
               &lt;span class="nhrefs"&gt;
               &lt;span class="source"&gt;XML&lt;/span&gt; 
               [
               &lt;a href="http://en.wikipedia.org/wiki/XML" class="arc" rel="wikipedia"&gt;XML on Wikipedia&lt;/a&gt;,
               
               &lt;a href="http://www.w3.org/XML/" class="arc" rel="informative"&gt;W3C XML Home Page&lt;/a&gt;
               &lt;a href="http://www.w3.org/TR/REC-xml/" class="arc" rel="authoritative"&gt;XML 1.0 recommendation&lt;/a&gt;
               ]
               &lt;/span&gt;
               &lt;span class="nhrefs"&gt;
               &lt;span class="source"&gt;Prague&lt;/span&gt; 
               [
               &lt;a href="http://en.wikipedia.org/wiki/Prague" class="arc" rel="wikipedia"&gt;Prague on
               Wikipedia&lt;/a&gt;, 
               &lt;a href="http://wikitravel.org/en/Prague" class="arc" rel="informative"&gt;Prague travel
               guide on Wikitravel&lt;/a&gt;
               ]
               &lt;/span&gt;
               &lt;/span&gt; 
               [
               &lt;a href="http://www.xmlprague.cz/" class="arc" rel="authoritative"&gt;XML Prague&lt;/a&gt;,
               
               &lt;a href="http://www.xmlprague.cz/2011/index.html" class="arc" rel="authoritative"&gt;XML
               Prague 2011&lt;/a&gt;
               ]
               &lt;/span&gt;
            </div>
            <div class="para e250">I must admit that the result becomes much less readable when it not processed by a
               script and that some CSS might be used to improve
               that:
            </div>
            <div class="figure e251">
               <div class="title e252">Embedded nhrefs links not processed by a script</div>
               <div class="mediaobject e253">
                  <div class="imageobject e254">
                     <div class="metaBox e255"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e449').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e449" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e255'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Vlist01/Vlist01-005.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="caption e256">
                  <div class="para e257">Snapshot of my blog using embedded links on XML, Prague end XML Prague.</div>
               </div>
            </div>
            <div class="para e258">Of course things get better after being processed by an updated version of the script:
               
            </div>
            <div class="figure e259">
               <div class="title e260">Embedded nhrefs links processed by a script</div>
               <div class="mediaobject e261">
                  <div class="imageobject e262">
                     <div class="metaBox e263"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e460').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e460" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e263'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Vlist01/Vlist01-006.png'
                              </span><span class="metaAttribute">format='png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="caption e264">
                  <div class="para e265">Snapshot of my blog using embedded links on XML, Prague end XML Prague after the links
                     have been processed in
                     JavaScript.
                  </div>
                  <div class="para e266">The script itself is now 68 lines long. Compared to the 24 lines it took previously
                     we can say that supporting embedded
                     links has added a lot of complexity. Most of this complexity is due to the support
                     of the grouping of the links. 
                  </div>
                  <div class="para e267">68 lines is too much code to copy into this paper,  however the size of the script
                     is still very reasonable!
                  </div>
               </div>
            </div>
         </div><a name="RDFaANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e268">
            <div class="title e269">RDFa</div>
            <div class="para e270">This can be ported to RDFa by creating bnodes as nhrefs:source that will themselves
               be nhrefs:links:
            </div>
            <div class="programlisting e271" xml:space="preserve">&lt;span typeof="nhrefs:link"&gt;
               &lt;span rel="nhrefs:source"&gt;
               &lt;span typeof="nhrefs:link"&gt;
               &lt;span property="nhrefs:source"&gt;XML&lt;/span&gt; 
               &lt;span rel="nhrefs:hasarc"&gt;
               [&lt;span typeof="nhrefs:arc"&gt;
               &lt;a href="http://en.wikipedia.org/wiki/XML" rel="nhrefs:dest" property="nhrefs:title"&gt;XML
               on Wikipedia&lt;/a&gt; 
               &lt;span rel="nhrefs:role" resource="nhrefs:wikipedia" &gt;&lt;/span&gt;
               &lt;/span&gt;, 
               &lt;span typeof="nhrefs:arc"&gt;
               &lt;a href="http://www.w3.org/XML/" rel="nhrefs:dest" property="nhrefs:title"&gt;W3C XML
               Home Page&lt;/a&gt;
               &lt;span rel="nhrefs:role" resource="nhrefs:informative" &gt;&lt;/span&gt;
               &lt;/span&gt;,
               &lt;span typeof="nhrefs:arc"&gt;
               &lt;a href="http://www.w3.org/TR/REC-xml/" rel="nhrefs:dest" property="nhrefs:title"&gt;XML
               1.0 Recommendation&lt;/a&gt;
               &lt;span rel="nhrefs:role" resource="nhrefs:authoritative" &gt;&lt;/span&gt;
               &lt;/span&gt;]
               &lt;/span&gt;
               &lt;/span&gt;
               &lt;span typeof="nhrefs:link"&gt;
               &lt;span property="nhrefs:source"&gt;Prague&lt;/span&gt; 
               &lt;span rel="nhrefs:hasarc"&gt;
               [&lt;span typeof="nhrefs:arc"&gt;
               &lt;a href="http://en.wikipedia.org/wiki/Prague" rel="nhrefs:dest" property="nhrefs:title"&gt;Prague
               on Wikipedia&lt;/a&gt; 
               &lt;span rel="nhrefs:role" resource="nhrefs:wikipedia" &gt;&lt;/span&gt;
               &lt;/span&gt;, 
               &lt;span typeof="nhrefs:arc"&gt;
               &lt;a href="http://wikitravel.org/en/Prague" rel="nhrefs:dest" property="nhrefs:title"&gt;Prague
               travel guide on Wikitravel&lt;/a&gt;
               &lt;span rel="nhrefs:role" resource="nhrefs:informative" &gt;&lt;/span&gt;
               &lt;/span&gt;]
               &lt;/span&gt;
               &lt;/span&gt;            
               &lt;/span&gt;
               &lt;span rel="nhrefs:hasarc"&gt;
               [&lt;span typeof="nhrefs:arc"&gt;
               &lt;a href="http://www.xmlprague.cz/" rel="nhrefs:dest" property="nhrefs:title"&gt;XML Prague&lt;/a&gt;
               
               &lt;span rel="nhrefs:role" resource="nhrefs:authoritative" &gt;&lt;/span&gt;
               &lt;/span&gt;, 
               &lt;span typeof="typeof:arc"&gt;
               &lt;a href="http://www.xmlprague.cz/2011/index.html" rel="nhrefs:dest" property="nhrefs:title"&gt;XML
               Prague 2011&lt;/a&gt;
               &lt;span rel="nhrefs:role" resource="nhrefs:authoritative" &gt;&lt;/span&gt;
               &lt;/span&gt;]
               &lt;/span&gt;
               &lt;/span&gt;
            </div>
            <div class="para e272">The model has now 41 triples and its graphical representation is hardly readable but
               its turtle representation is still readable: 
            </div>
            <div class="programlisting e273" xml:space="preserve">@prefix rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt; .
               @prefix : &lt;http://www.w3.org/1999/xhtml&gt; .
               @prefix nhrefs: &lt;http://nhrefs.org/&gt; .
               
               []
               nhrefs:hasarc [
               nhrefs:dest &lt;http://www.xmlprague.cz/2011/index.html&gt; ;
               nhrefs:role &lt;nhrefs:authoritative&gt; ;
               nhrefs:title "XML Prague 2011"
               ], [
               nhrefs:dest &lt;http://www.xmlprague.cz/&gt; ;
               nhrefs:role &lt;nhrefs:authoritative&gt; ;
               nhrefs:title "XML Prague" ;
               a nhrefs:arc
               ] ;
               nhrefs:source [
               nhrefs:hasarc [
               nhrefs:dest &lt;http://en.wikipedia.org/wiki/XML&gt; ;
               nhrefs:role &lt;nhrefs:wikipedia&gt; ;
               nhrefs:title "XML on Wikipedia" ;
               a nhrefs:arc
               ], [
               nhrefs:dest &lt;http://www.w3.org/XML/&gt; ;
               nhrefs:role &lt;nhrefs:informative&gt; ;
               nhrefs:title "W3C XML Home Page" ;
               a nhrefs:arc
               ], [
               nhrefs:dest &lt;http://www.w3.org/TR/REC-xml/&gt; ;
               nhrefs:role &lt;nhrefs:authoritative&gt; ;
               nhrefs:title "XML 1.0 Recommendation" ;
               a nhrefs:arc
               ] ;
               nhrefs:source "XML" ;
               a nhrefs:link
               ], [
               nhrefs:hasarc [
               nhrefs:dest &lt;http://wikitravel.org/en/Prague&gt; ;
               nhrefs:role &lt;nhrefs:informative&gt; ;
               nhrefs:title "Prague travel guide on Wikitravel" ;
               a nhrefs:arc
               ], [
               nhrefs:dest &lt;http://en.wikipedia.org/wiki/Prague&gt; ;
               nhrefs:role &lt;nhrefs:wikipedia&gt; ;
               nhrefs:title "Prague on Wikipedia" ;
               a nhrefs:arc
               ] ;
               nhrefs:source "Prague" ;
               a nhrefs:link
               ] ;
               a nhrefs:link .
               
            </div>
            <div class="para e274">Of course, we are bitten again by the same limitation: the links that compose sources
               are unordered and in theory there is no
               guarantee that when we generate the title for composed links we won't generate "Prague
               XML" instead of "XML Prague"!
            </div>
            <div class="para e275">The JavaScript is 80 lines long (compared to 30).</div>
         </div><a name="MicrodataANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e276">
            <div class="title e277">Microdata</div>
            <div class="para e278">This can be ported to microdata:</div>
            <div class="programlisting e279" xml:space="preserve">&lt;html xmlns="http://www.w3.org/1999/xhtml" xmlns:nhrefs="http://nhrefs.org/"&gt;
               
               &lt;span itemscope="itemscope" itemtype="http://nhrefs.org/link"&gt;
               &lt;span itemprop="source" itemscope="itemscope" itemtype="http://nhrefs.org/link"&gt;
               &lt;span itemprop="source"&gt;XML&lt;/span&gt; 
               [&lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://en.wikipedia.org/wiki/XML" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;XML on Wikipedia&lt;/span&gt;
               &lt;/a&gt; 
               &lt;a href="http://nhrefs.org/wikipedia" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;, 
               &lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://www.w3.org/XML" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;W3C XML Home Page&lt;/span&gt;
               &lt;/a&gt;
               &lt;a href="http://nhrefs.org/informative" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;,
               &lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://www.w3.org/TR/REC-xml/" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;XML W3C Recommendation&lt;/span&gt;
               &lt;/a&gt;
               &lt;a href="http://nhrefs.org/authoritative" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;]
               &lt;/span&gt; 
               &lt;span itemprop="source" itemscope="itemscope" itemtype="http://nhrefs.org/link"&gt;
               &lt;span itemprop="source"&gt;Prague&lt;/span&gt; 
               [&lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://en.wikipedia.org/wiki/Prague" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;Prague on Wikipedia&lt;/span&gt;
               &lt;/a&gt; 
               &lt;a href="http://nhrefs.org/wikipedia" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;, 
               &lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="hhttp://wikitravel.org/en/Prague" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;Prague travel guide on Wikitravel&lt;/span&gt;
               &lt;/a&gt;
               &lt;a href="http://nhrefs.org/informative" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;]
               &lt;/span&gt; 
               [&lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://www.xmlprague.cz/" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;XML Prague&lt;/span&gt;
               &lt;/a&gt; 
               &lt;a href="http://nhrefs.org/authoritative" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;, 
               &lt;span itemscope="itemscope" itemprop="arc"&gt;
               &lt;a href="http://www.xmlprague.cz/2011/index.html" itemprop="dest"&gt;
               &lt;span itemprop="title"&gt;XML Prague 2011&lt;/span&gt;
               &lt;/a&gt;
               &lt;a href="http://nhrefs.org/authoritative" itemprop="role" &gt;&lt;/a&gt;
               &lt;/span&gt;]
               &lt;/span&gt;
            </div>
            <div class="para e280">The JavaScript is now 77 lines long (compared to 24).</div>
         </div>
      </div><a name="NextStepsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e281">
         <div class="title e282">Next Steps</div>
         <div class="para e283">All three techniques provide a lightweight solution to express links with multiple
            arcs that are easy to parse in JavaScript. Now, what
            can we do with all these angle brackets?
         </div>
         <div class="para e284">The first conclusion is that for this application there is no clear winner between
            microformats, RDFa and microdata:
         </div>
         <div class="itemizedlist e285">
            <div class="listitem e286">
               <div class="para e287">Microformats are less verbose and more "free style". The price to pay is that you
                  need to read the spec to understand the
                  structure of each of them and need to use DOM level methods to get your information.
               </div>
            </div>
            <div class="listitem e288">
               <div class="para e289">Microdata and RDFa have roughly the same level of verbosity.</div>
            </div>
            <div class="listitem e290">
               <div class="para e291">RDFa and microdata are more rigid and more verbose. The benefit is that if you use
                  the right library you can parse their
                  structure with higher level methods.
               </div>
            </div>
            <div class="listitem e292">
               <div class="para e293">In theory, RDFa doesn't preserve the relative order between arcs and multi part sources.</div>
            </div>
            <div class="listitem e294">
               <div class="para e295">Microdata isn't at recommendation stage yet and may change.</div>
            </div>
            <div class="listitem e296">
               <div class="para e297">With RDFa, it is straightforward to extract link information as triples and use semantic
                  web tools to do all kind of funky
                  things with them.
               </div>
            </div>
            <div class="listitem e298">
               <div class="para e299">In the future, microdata will probably be natively supported by browsers. </div>
            </div>
         </div>
         <div class="para e300">The most sensible choice is probably to make no choice and support all three technologies!</div>
         <div class="para e301">OK, but what can we do with all these angle brackets?</div>
         <div class="para e302">The markup should be further documented and it can be seen as an open API between:</div>
         <div class="itemizedlist e303">
            <div class="listitem e304">
               <div class="para e305">Consumers (such as the scripts that have been presented here) that parse the markup
                  to do all kind of interesting things.
               </div>
            </div>
            <div class="listitem e306">
               <div class="para e307">Producers that write this markup which isn't really fun to write by hand.</div>
            </div>
         </div>
         <div class="para e308">The consumers that we've seen should be documented and tested before they can be considered
            really usable.
         </div>
         <div class="para e309">Producers need to be implemented. Producers for popular web publishing platforms would
            be especially useful. For these platforms, two
            kind of publishers could be developed:
         </div>
         <div class="itemizedlist e310">
            <div class="listitem e311">
               <div class="para e312">Transformers that transform other markup into one of these three formats. In WordPress
                  for instance nhrefs links could be
                  expressed using 
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e313" xlink:actuate="onRequest" xlink:href="http://codex.wordpress.org/Shortcode" xlink:show="new" xlink:type="simple">shortcodes</div> in the posts.
               </div>
            </div>
            <div class="listitem e314">
               <div class="para e315">GUI that let user create nhrefs links is a friendly way.</div>
            </div>
         </div>
         <div class="para e316">Producers and consumers could also be packaged as plug-ins for web publishing platforms.
            Such a plug-in would contain:
         </div>
         <div class="itemizedlist e317">
            <div class="listitem e318">
               <div class="para e319">A producer to facilitate the production of nhrefs markup by the platform.</div>
            </div>
            <div class="listitem e320">
               <div class="para e321">The JavaScript to display the links on the browser.</div>
            </div>
         </div>
         <div class="para e322">This is more or less my roadmap for this project. If you are interested, watch this
            space: 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e323" xlink:actuate="onRequest" xlink:href="http://nhrefs.org" xlink:show="new" xlink:type="simple">http://nhrefs.org</div>!
         </div>
      </div>
   </div>
</div>