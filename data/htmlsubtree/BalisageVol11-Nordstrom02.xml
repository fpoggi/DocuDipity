<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#ProX:XMLforinterfacingwithXMLforprocessingXML(andanXFormtogowith%0Ait)ANCHOR" name="ProX:XMLforinterfacingwithXMLforprocessingXML(andanXFormtogowith%0Ait)TOC">ProX: XML for interfacing with XML for processing XML (and an XForm to go with
               it)</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ProXANCHOR" name="ProXTOC">ProX</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ReasonsANCHOR" name="ReasonsTOC">Reasons</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#LogicANCHOR" name="LogicTOC">Logic</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#UsesANCHOR" name="UsesTOC">Uses</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ProXinSomeDetailANCHOR" name="ProXinSomeDetailTOC">ProX in Some Detail</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ProcessesANCHOR" name="ProcessesTOC">Processes</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PipelinesANCHOR" name="PipelinesTOC">Pipelines</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#CommandLinesANCHOR" name="CommandLinesTOC">Command Lines</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PackagesANCHOR" name="PackagesTOC">Packages</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#NamingANCHOR" name="NamingTOC">Naming</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ModularisationANCHOR" name="ModularisationTOC">Modularisation</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MetadataANCHOR" name="MetadataTOC">Metadata</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#WritingProXANCHOR" name="WritingProXTOC">Writing ProX</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheProXUserInterfaceANCHOR" name="TheProXUserInterfaceTOC">The ProX User Interface</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#GeneratingtheGUIPt1ANCHOR" name="GeneratingtheGUIPt1TOC">Generating the GUI, Pt 1</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DesignChoicesANCHOR" name="DesignChoicesTOC">Design Choices</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#TheUser'sPOVANCHOR" name="TheUser'sPOVTOC">The User's POV</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#TheAdmin'sPOVANCHOR" name="TheAdmin'sPOVTOC">The Admin's POV</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ConfigurationandParameterHandlingANCHOR" name="ConfigurationandParameterHandlingTOC">Configuration and Parameter Handling</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#SystemContextANCHOR" name="SystemContextTOC">System Context</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#XForms:GeneratingtheGUIPt2ANCHOR" name="XForms:GeneratingtheGUIPt2TOC">XForms: Generating the GUI, Pt 2</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#SingleChoiceProblemsANCHOR" name="SingleChoiceProblemsTOC">Single-Choice Problems</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#UserconfigurableParametersANCHOR" name="UserconfigurableParametersTOC">User-configurable Parameters</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#InitiatingandRunningProXANCHOR" name="InitiatingandRunningProXTOC">Initiating and Running ProX</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TheResourceMapANCHOR" name="TheResourceMapTOC">The Resource Map</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#DocsANCHOR" name="DocsTOC">Docs</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#TargetsANCHOR" name="TargetsTOC">Targets</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ProXResourcesANCHOR" name="ProXResourcesTOC">ProX Resources</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#WrapperResourcesANCHOR" name="WrapperResourcesTOC">Wrapper Resources</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TheWrapperPipelineANCHOR" name="TheWrapperPipelineTOC">The Wrapper Pipeline</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#URNtoURLANCHOR" name="URNtoURLTOC">URN to URL</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ProXFixesANCHOR" name="ProXFixesTOC">ProX Fixes</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ConvertingtoaShellScriptANCHOR" name="ConvertingtoaShellScriptTOC">Converting to a Shell Script</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ChildProcessandCapturingOutputANCHOR" name="ChildProcessandCapturingOutputTOC">Child Process and Capturing Output</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#XFormsEngineANCHOR" name="XFormsEngineTOC">XForms Engine</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#XProcEngineANCHOR" name="XProcEngineTOC">XProc Engine</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#EndNotesANCHOR" name="EndNotesTOC">End Notes</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#WhatTheFutureHoldsANCHOR" name="WhatTheFutureHoldsTOC">What The Future Holds</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#LastButNotLeastANCHOR" name="LastButNotLeastTOC">Last But Not Least</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibliographyANCHOR" name="BibliographyTOC">Bibliography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">action="file://myfile.xml"</div>
         <div class="singletermTERMS">associate</div>
         <div class="singletermTERMS">August 5, 2013</div>
         <div class="singletermTERMS">ari.nordstrom@condesign.se</div>
         <div class="singletermTERMS">Ari</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">blueprint</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">cmdline</div>
         <div class="singletermTERMS">choice</div>
         <div class="singletermTERMS">ctype</div>
         <div class="singletermTERMS">choice="yes"</div>
         <div class="singletermTERMS">ctype="list1"</div>
         <div class="singletermTERMS">copy</div>
         <div class="singletermTERMS">cmdline[@id != instance('scratchpad')/thecmds]</div>
         <div class="singletermTERMS">choice="no"</div>
         <div class="singletermTERMS">cx:depends-on</div>
         <div class="singletermTERMS">CLASSPATH</div>
         <div class="singletermTERMS">configuration</div>
         <div class="singletermTERMS">child</div>
         <div class="singletermTERMS">command line</div>
         <div class="singletermTERMS">complete</div>
         <div class="singletermTERMS">Calabash</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">docs</div>
         <div class="singletermTERMS">data-input</div>
         <div class="singletermTERMS">Delivery</div>
         <div class="singletermTERMS">dummy</div>
         <div class="singletermTERMS">Delivery</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">ePUB</div>
         <div class="singletermTERMS">external</div>
         <div class="singletermTERMS">everywhere</div>
         <div class="singletermTERMS">eXist</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">FreeMind</div>
         <div class="singletermTERMS">Firefox</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
         <div class="singletermTERMS">group</div>
         <div class="singletermTERMS">getUrl(Urn)</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">http-request</div>
         <div class="singletermTERMS">https://en.wikibooks.org/wiki/XForms/Submit</div>
         <div class="singletermTERMS">https://github.com/jsulak/eXist-XProc-Library</div>
         <div class="singletermTERMS">how</div>
         <div class="singletermTERMS">Huge</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">inputs</div>
         <div class="singletermTERMS">input</div>
         <div class="singletermTERMS">inset</div>
         <div class="singletermTERMS">IDREF</div>
         <div class="singletermTERMS">id</div>
         <div class="singletermTERMS">itemset</div>
         <div class="singletermTERMS">ID</div>
         <div class="singletermTERMS">insert</div>
         <div class="singletermTERMS">item</div>
         <div class="singletermTERMS">instance</div>
         <div class="singletermTERMS">if</div>
         <div class="singletermTERMS">If</div>
         <div class="singletermTERMS">Internet Explorer</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">locator</div>
         <div class="singletermTERMS">log-style</div>
         <div class="singletermTERMS">list1</div>
         <div class="singletermTERMS">list1</div>
         <div class="singletermTERMS">log</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">main</div>
         <div class="singletermTERMS">may</div>
         <div class="singletermTERMS">MarkLogic</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">not</div>
         <div class="singletermTERMS">Nordström</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">one</div>
         <div class="singletermTERMS">output</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">packages</div>
         <div class="singletermTERMS">process</div>
         <div class="singletermTERMS">pipeline</div>
         <div class="singletermTERMS">package</div>
         <div class="singletermTERMS">parameter</div>
         <div class="singletermTERMS">param/@ctype="boolean"</div>
         <div class="singletermTERMS">param</div>
         <div class="singletermTERMS">prox</div>
         <div class="singletermTERMS">prox-resources</div>
         <div class="singletermTERMS">p:exec</div>
         <div class="singletermTERMS">Print</div>
         <div class="singletermTERMS">parent</div>
         <div class="singletermTERMS">primary</div>
         <div class="singletermTERMS">process XML</div>
         <div class="singletermTERMS">ProX</div>
         <div class="singletermTERMS">processes</div>
         <div class="singletermTERMS">Print</div>
         <div class="singletermTERMS">Publish</div>
         <div class="singletermTERMS">packages</div>
         <div class="singletermTERMS">Print Publishing</div>
         <div class="singletermTERMS">pipeline</div>
         <div class="singletermTERMS">package</div>
         <div class="singletermTERMS">Process Manager</div>
         <div class="singletermTERMS">ProX ID</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">resource</div>
         <div class="singletermTERMS">right</div>
         <div class="singletermTERMS">radio button</div>
         <div class="singletermTERMS">Report</div>
         <div class="singletermTERMS">Reviews</div>
         <div class="singletermTERMS">Reports</div>
         <div class="singletermTERMS">resource map XML file</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">script</div>
         <div class="singletermTERMS">schema-aware</div>
         <div class="singletermTERMS">select1</div>
         <div class="singletermTERMS">scratchpad</div>
         <div class="singletermTERMS">secondary</div>
         <div class="singletermTERMS">static</div>
         <div class="singletermTERMS">Save As</div>
         <div class="singletermTERMS">Safari</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">type</div>
         <div class="singletermTERMS">title</div>
         <div class="singletermTERMS">target</div>
         <div class="singletermTERMS">trigger</div>
         <div class="singletermTERMS">targets</div>
         <div class="singletermTERMS">true</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">value</div>
         <div class="singletermTERMS">Validation</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">xs:boolean</div>
         <div class="singletermTERMS">xf:code</div>
         <div class="singletermTERMS">xf:insert</div>
         <div class="singletermTERMS">xf:copy</div>
         <div class="singletermTERMS">XProc</div>
         <div class="singletermTERMS">XPipe</div>
         <div class="singletermTERMS">XForms</div>
         <div class="singletermTERMS">XSLTForms</div>
         <div class="singletermTERMS">xprocxq</div>
         <div class="singletermTERMS">XML London</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="ProX:XMLforinterfacingwithXMLforprocessingXML(andanXFormtogowith%0Ait)ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3">
      <div class="title e1">ProX: XML for interfacing with XML for processing XML (and an XForm to go with
         it)
      </div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">International Symposium on Native XML User Interfaces</div>
            <div class="confdates e5">August 5, 2013</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">The 
               <div class="emphasis e8">process XML</div> or 
               <div class="emphasis e9">ProX</div> for short was
               introduced to create an abstraction layer around running XProc pipelines. While
               XProc is XML, running XProc pipelines using an actual engine involves a lot more,
               usually batch or shell scripts that configure the engine and whatever inputs and
               options, etc, that the pipeline defines, which is something of a pain. Offering the
               resulting configuration options to an end user in a GUI is difficult at best and a
               nightmare for any conscientious developer.
            </div>
            <div class="para e10">This paper describes an XML-based abstraction layer that defines all those
               configuration options. The XML is made available to the user so s/he can configure
               the pipeline and whatever options it has, and save the configured process as an
               instance that is then converted to a shell script that runs the configured pipeline,
               greatly simplifying the configuration.
            </div>
         </div>
         <div class="author e11">
            <div class="personname e12">
               <div class="firstname e13">Ari</div>
               <div class="surname e14">Nordström</div>
            </div>
            <div class="personblurb e15">
               <div class="para e16">Ari Nordström is the resident XML guy at Condesign AB in Göteborg, Sweden. His
                  information structures and solutions are used by Volvo Cars, Ericsson, and many
                  others, with more added every year. His favourite XML specification remains
                  XLink so quite a few of his frequent talks and presentations on XML focus on
                  linking. 
               </div>
               <div class="para e17">Ari spends some of his spare time projecting films at the Draken Cinema in
                  Göteborg, which should explain why he wants to automate cinemas using XML. He
                  now realises it's too late, however.
               </div>
            </div>
            <div class="email e18">ari.nordstrom@condesign.se</div>
         </div>
         <div class="legalnotice e19">
            <div class="para e20">Copyright © Ari Nordström 2013</div>
         </div>
      </div><a name="ProXANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e21" xml:id="section_tfb_3rg_wj">
         <div class="title e22">ProX</div><a name="ReasonsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e23" xml:id="section_rw3_rrg_wj">
            <div class="title e24">Reasons</div>
            <div class="para e25">XProc pipelines describe step-by-step processing of XML using XML. One step might
               normalise a bunch of XML modules, the next validate the result and the last convert
               the normalised XML to something more human-readable. It's easy to add various
               conditionals, insert XQueries and include additional steps from XProc libraries, and
               so on.
            </div>
            <div class="para e26">I think it is a very, very cool spec (
               <div class="xref e27" linkend="id-xproc-spec"></div>).
            </div>
            <div class="para e28">The pipelines are frequently extremely configurable, with options and parameters
               and outputs and various pipeline engine-specific configuration options, and they
               might be used as-is with several different stylesheets or other inputs. These in
               turn may be configurable, defining index generation, TOC generation, paper sizes and
               other options the stylesheet author has graciously provided as configurable with
               parameters.
            </div>
            <div class="para e29">A pipeline is run using a pipeline engine of some description, frequently from a
               shell script (for Calabash), from inside an XQuery, or some other kind of script.
               The various configuration options, inputs, etc, are all defined in that script,
               using whatever format and syntax the script uses. And here lies the problem.
            </div>
            <div class="para e30">Even though XProc is XML, processes XML, and uses XML as input, you have to write
               that script. And the more complex or flexible the pipeline is, the more variations
               there are when writing that script. And that script is not XML.
            </div>
            <div class="para e31">The pipelines are often part of a larger process that may or may not include other
               pipelines. The end user might want to choose between several different pipelines,
               then configure the one chosen with the various options and parameters, choose
               between several input stylesheets and finally configure the chosen stylesheet. And
               all this ends up in a script that is supposed to run the pipeline - the process that
               surrounds the pipeline, actually.
            </div>
            <div class="para e32">It follows that the pipeline is only as flexible as the means to configure
               it.
            </div>
         </div><a name="LogicANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e33" xml:id="section_k4v_b5g_wj">
            <div class="title e34">Logic</div>
            <div class="para e35">Enter the process XML. It describes XProc pipelines and their configuration,
               including any available stylesheets and other input, but also puts them all in the
               context of 
               <div class="emphasis e36">processes</div> that surround the pipelines, and it does
               it all in XML files. There might be a 
               <div class="emphasis e37">Print</div> process that
               includes pipelines for producing PDF, and MIF, a 
               <div class="emphasis e38">Web</div> process
               that produces ePUB and HTML, and perhaps a 
               <div class="emphasis e39">Report</div> process with
               pipelines that output reports.
            </div>
            <div class="para e40">The structure is roughly this:</div>
            <div class="figure e41">
               <div class="title e42">ProX Structure</div>
               <div class="mediaobject e43">
                  <div class="imageobject e44">
                     <div class="metaBox e45"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e83').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e83" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e45'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-001.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e46">The Process XML, ProX for short
               <div class="popupBox e47">
                  <div class="popupLabel" onmouseover="$('#d1e86').show('1000');" onmouseout="$('#d1e86').hide('1000');">[ footnote ]</div>
                  <div id="d1e86" style="display: none;">
                     <div class="footnote">
                        <div class="para e48">Turns out 
                           <div class="quote e49">XProc</div> was already taken, as was
                           
                           <div class="quote e50">XPipe</div> and some other exciting variations.
                        </div>
                     </div>
                  </div>
               </div>, is a 
               <div class="emphasis e51">blueprint</div> that lists all available processes,
               their associated pipelines, the command lines that configure these pipelines,
               including the available input files used by the pipelines and the parameters used
               to
               configure the inputs. It's a description of what is possible and the choices that
               need to be made before there can be a specific pipeline to run.
            </div>
            <div class="para e52">Choosing a process limits the available pipelines to those listed inside that
               process, choosing a pipeline limits the available command lines to those defined for
               that pipeline, and so on, like this:
            </div>
            <div class="figure e53">
               <div class="title e54">ProX Logic</div>
               <div class="mediaobject e55">
                  <div class="imageobject e56">
                     <div class="metaBox e57"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e106').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e106" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e57'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-002.png'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e58">With all choices made, the blueprint is narrowed down to an
               
               <div class="emphasis e59">instance</div> that describes the running of a specific pipeline,
               like so:
            </div>
            <div class="figure e60">
               <div class="title e61">A Configured Pipeline</div>
               <div class="mediaobject e62">
                  <div class="imageobject e63">
                     <div class="metaBox e64"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e117').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e117" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e64'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-003.png'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e65">The blueprint is an abstraction layer for a generic pipeline engine, setting the
               contexts in which it can run, how, and using what. The instance describes everything
               needed to run a specific process in a specific context, which is really useful
               because the instance can be converted to a suitable scripting format, whatever that
               format may be.
            </div>
            <div class="para e66">All that is required, then, is some processing to make the choices available to a
               user, some more processing to generate a script from the process instance, and
               finally run that script.
            </div>
         </div><a name="UsesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e67" xml:id="section_pym_nyg_wj">
            <div class="title e68">Uses</div>
            <div class="para e69">I'm implementing ProX in a CMS as I write this. The CMS will be able to output
               various formats and media using XProc pipelines, and quite a few of those pipelines
               and their input stylesheets are very configurable. Until now, it has not been
               possible to offer the end users these configuration options; even including a simple
               validation in a publishing process has been cumbersome at best.
            </div>
            <div class="para e70">Some rather different requirements come from an eXist-based Publish on Demand
               solution used to output individualised PDF documents for thousands of users,
               filtered from a large and infinitely variable content base. The end users are not
               allowed to change a single parameter, anywhere - their whole publishing user
               interface consists of a 
               <div class="emphasis e71">Publish</div> button - but the publishing
               chain is complex, involving about a dozen pipelines that all gather content from
               various sources, convert and manipulate it, and validate the results before sending
               it on to the next step. When things go wrong, it is useful to if the publishing
               chain can be configured in various ways to spot where the problem is.
            </div>
            <div class="para e72">ProX will offer configurable publishing processes for system administrators. It
               will also help describe what processes there are in a given context (the complete
               blueprint document) and list the specific requirements for running a specific
               pipeline.
            </div>
         </div>
      </div><a name="ProXinSomeDetailANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e73" xml:id="section_ifr_jxg_wj">
         <div class="title e74">ProX in Some Detail</div>
         <div class="para e75">The ProX schema is not particularly complicated. basically, it describes one or more
            
            <div class="emphasis e76">processes</div> defined in a system. Every such process may use one
            or more pipelines, and every pipeline may be configured with various command line
            options, including zero or more input files frequently grouped as
            
            <div class="emphasis e77">packages</div>
            <div class="popupBox e78">
               <div class="popupLabel" onmouseover="$('#d1e145').show('1000');" onmouseout="$('#d1e145').hide('1000');">[ footnote ]</div>
               <div id="d1e145" style="display: none;">
                  <div class="footnote">
                     <div class="para e79">Note that the 
                        <div class="code e80">packages</div> structure in the illustration is common to
                        all processes. Packages may also be included at process level, in which case
                        they only apply to that process.
                     </div>
                  </div>
               </div>
            </div> (more about this below). The packages are usually XSLT stylesheets, and
            these, again, can be configured in various ways.
         </div>
         <div class="figure e81">
            <div class="title e82">Processes</div>
            <div class="mediaobject e83">
               <div class="imageobject e84">
                  <div class="metaBox e85"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e157').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e157" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e85'
                           </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-004.png'
                           </span><span class="metaAttribute">width='300px'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e86">The total XML is a list of things that are possible. The user will need to pick one
            process, one pipeline, one set of command line options and the appropriate input
            packages to end up with a specific process.
         </div><a name="ProcessesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e87" xml:id="section_c3v_mxg_wj">
            <div class="title e88">Processes</div>
            <div class="para e89">The 
               <div class="code e90">process</div> structure groups related pipelines. 
            </div>
            <div class="figure e91" xml:id="id-process-fig">
               <div class="title e92">A Single Process</div>
               <div class="mediaobject e93">
                  <div class="imageobject e94">
                     <div class="metaBox e95"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e173').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e173" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e95'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-005.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e96">The grouping is intentionally somewhat arbitrary. If a process is defined as
               
               <div class="quote e97">Delivery</div>, the associated pipelines might be 
               <div class="quote e98">Print</div>,
               
               <div class="quote e99">Web</div> and 
               <div class="quote e100">ePUB</div>, handling those outputs for delivery,
               but, depending on the situation, a process might just as easily be defined as
               
               <div class="emphasis e101">Print Publishing</div>, leaving the online formats to another
               process, say, 
               <div class="emphasis e102">Web Publishing</div>. 
            </div>
            <div class="note e103">
               <div class="para e104">Note that the 
                  <div class="code e105">packages</div> are common to all pipelines in this
                  particular process.
               </div>
            </div>
         </div><a name="PipelinesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e106" xml:id="section_dcm_nxg_wj">
            <div class="title e107">Pipelines</div>
            <div class="para e108">A 
               <div class="emphasis e109">pipeline</div> is an abstraction for a single XProc pipeline
               <div class="popupBox e110">
                  <div class="popupLabel" onmouseover="$('#d1e209').show('1000');" onmouseout="$('#d1e209').hide('1000');">[ footnote ]</div>
                  <div id="d1e209" style="display: none;">
                     <div class="footnote">
                        <div class="para e111">Or, conceivably, a single step.</div>
                     </div>
                  </div>
               </div> and its associated inputs and configuration options.
            </div>
            <div class="figure e112" xml:id="id-pipeline-fig">
               <div class="title e113">A Single Pipeline</div>
               <div class="mediaobject e114">
                  <div class="imageobject e115">
                     <div class="metaBox e116"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e218').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e218" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e116'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-006.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e117">The 
               <div class="code e118">pipeline</div> element includes a 
               <div class="code e119">script</div> element that that
               points out the actual XProc script, defined in a package, and one or more
               
               <div class="code e120">cmdline</div> groups, that is, related configuration options for the
               script. 
            </div>
         </div><a name="CommandLinesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e121" xml:id="section_qrx_nxg_wj">
            <div class="title e122">Command Lines</div>
            <div class="para e123">A 
               <div class="emphasis e124">command line</div> (
               <div class="code e125">cmdline</div>) is a group of related
               configuration options for running the pipeline that group is associated with. A
               pipeline may include one or more command lines.
            </div>
            <div class="figure e126">
               <div class="title e127">A Single Command Line Group</div>
               <div class="mediaobject e128">
                  <div class="imageobject e129">
                     <div class="metaBox e130"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e246').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e246" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e130'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-007.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e131">The 
               <div class="code e132">cmdline</div> started out as the love child of various aspects of the
               XProc spec and the XProc engine of (many people's) choice, Calabash, but the current
               version attempts to be more generic in nature. It groups related configuration
               options for an associated pipeline so that once the listed choices have been made,
               the resulting 
               <div class="code e133">cmdline</div> instance is ready to run as-is.
            </div>
            <div class="para e134">The 
               <div class="code e135">cmdline</div> contains two basic parts, an engine configuration with
               engine-specific options from configuration files to Saxon options, and an XProc
               pipeline semantics-specific part that is more of a reflection of the spec
               <div class="popupBox e136">
                  <div class="popupLabel" onmouseover="$('#d1e260').show('1000');" onmouseout="$('#d1e260').hide('1000');">[ footnote ]</div>
                  <div id="d1e260" style="display: none;">
                     <div class="footnote">
                        <div class="para e137">ProX is very much a work in progress, and the design currently reflects
                           the requirements of the system it is being implemented in.
                        </div>
                     </div>
                  </div>
               </div>.
            </div>
            <div class="para e138">The pipeline semantics define inputs, outputs, options, parameters, etc, that may
               be defined either beforehand or at runtime by the system. 
            </div>
            <div class="para e139">The 
               <div class="code e140">inputs</div> structure defines every choice available for selection
               through one or more 
               <div class="code e141">input</div> elements.
            </div>
            <div class="figure e142">
               <div class="title e143">A Single Input</div>
               <div class="mediaobject e144">
                  <div class="imageobject e145">
                     <div class="metaBox e146"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e279').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e279" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e146'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-008.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e147">The 
               <div class="code e148">input</div> element defines every kind of input available to the
               pipeline. Note that not every input is made available as a choice for the user; some
               are provided at runtime by the system, most notably the XML to be processed by the
               pipeline
               <div class="popupBox e149">
                  <div class="popupLabel" onmouseover="$('#d1e285').show('1000');" onmouseout="$('#d1e285').hide('1000');">[ footnote ]</div>
                  <div id="d1e285" style="display: none;">
                     <div class="footnote">
                        <div class="para e150">Not every pipeline needs the XML to be defined at runtime, either. For
                           example, the system might use a pipeline to produce reports.
                        </div>
                     </div>
                  </div>
               </div>. The markup includes attributes for processing user-selectable input
               (see 
               <div class="xref e151" linkend="section_h2y_zwy_wj"></div>).
            </div>
            <div class="para e152">Some inputs may require parameters to be set. Typically, an XSLT stylesheet
               package will use parameters to define various properties, so these are made
               available in the 
               <div class="code e153">input</div> structure that points out the stylesheet. They
               are also listed with their packages (see 
               <div class="xref e154" linkend="section_ty5_4xg_wj"></div>).
            </div>
         </div><a name="PackagesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e155" xml:id="section_ty5_4xg_wj">
            <div class="title e156">Packages</div>
            <div class="para e157">A 
               <div class="emphasis e158">package</div> is a group of related files needed for some aspect
               of pipeline processing. Commonly, a package is referenced as a single
               
               <div class="quote e159">resource</div> by an input port.
            </div>
            <div class="figure e160">
               <div class="title e161">A Single Package</div>
               <div class="mediaobject e162">
                  <div class="imageobject e163">
                     <div class="metaBox e164"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e314').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e314" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e164'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-009.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e165">The main part of 
               <div class="code e166">package</div> is a list of links (
               <div class="code e167">locator</div>
               elements) to the files that are part of the package
               <div class="popupBox e168">
                  <div class="popupLabel" onmouseover="$('#d1e323').show('1000');" onmouseout="$('#d1e323').hide('1000');">[ footnote ]</div>
                  <div id="d1e323" style="display: none;">
                     <div class="footnote">
                        <div class="para e169">A package may include binary files.</div>
                     </div>
                  </div>
               </div>, of which one or more may be identified as 
               <div class="quote e170">main</div> file that
               imports the other files for use. 
            </div>
            <div class="para e171">Packages are used by the process XML as an abstraction layer for an input; an
               input always points out a package rather than a single file. The system can locate
               the participating files using the package's file list when needed without having to
               look elsewhere.
            </div>
            <div class="para e172">The XProc script is also defined in a package rather than directly as a URL in the
               
               <div class="code e173">script</div> element. For a script comprising several physical files,
               this is very useful. Similarly, the XProc engine configuration file (such as the one
               used by Calabash) (and any other such files) is listed in a package so that the
               system can retrieve everything required by a specific ProX instance before the
               process runs.
            </div>
            <div class="para e174">Last but not least, a package may list the parameters that are available for that
               package. A configurable parameter is marked as such using an attribute on
               
               <div class="code e175">parameter</div>, and also includes the parameter's data type
               <div class="popupBox e176">
                  <div class="popupLabel" onmouseover="$('#d1e342').show('1000');" onmouseout="$('#d1e342').hide('1000');">[ footnote ]</div>
                  <div id="d1e342" style="display: none;">
                     <div class="footnote">
                        <div class="para e177">This is necessary when generating the user interface that allows the user
                           to configure the parameter.
                        </div>
                     </div>
                  </div>
               </div>. Some parameters may be required, which is also reflected by the markup. 
            </div>
            <div class="note e178">
               <div class="para e179">The parameters defined in 
                  <div class="code e180">package</div> list package options that
                  
                  <div class="emphasis e181">may</div> be user-configurable. The parameters listed with a
                  specific 
                  <div class="code e182">input</div> in a 
                  <div class="code e183">cmdline</div> are those that the system
                  administrator had actally made available for configuration.
               </div>
            </div>
         </div><a name="NamingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e184" xml:id="section_w3l_pk5_wj">
            <div class="title e185">Naming</div>
            <div class="para e186">ProX is being implemented in a URN-based system as I write this. Every resource in
               it is identified and linked to using URNs rather than URLs - XML, obviously, but
               also images and other content, as well as stylesheets, schemas, etc. The URNs are
               unique within the system and include version and localisation information, like
               so:
            </div>
            <div class="programlisting e187" xml:space="preserve">urn:x-cassis:cos:00093445:sv-SE:0.19</div>
            <div class="para e188">Every resource is version handled, so it is easy to retrieve a specific version.
               And here's the neat part: ProX packages in the system identify resources in the
               exact same way. A package is a list of URNs with with specific versions, meaning
               that a specific package always identifies specific versions of every participating
               file. Prox files in the system are identified in the same way so any package version
               is identifiable and retrievable.
            </div>
         </div><a name="ModularisationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e189" xml:id="section_kh4_zc5_wj">
            <div class="title e190">Modularisation</div>
            <div class="para e191">The ProX XML does not need to be a single file. Processes, pipelines, command
               lines and packages can all be modularised and reused. Note, for example, the
               
               <div class="code e192">inset</div> elements in 
               <div class="xref e193" linkend="id-process-fig"></div> that are siblings to the 
               <div class="code e194">pipeline</div> and
               
               <div class="code e195">package</div> elements; these are intended to link to pipeline and
               package modules, respectively.
            </div>
         </div><a name="MetadataANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e196" xml:id="section_ncf_1d5_wj">
            <div class="title e197">Metadata</div>
            <div class="para e198">Every major ProX component (
               <div class="code e199">process</div>, 
               <div class="code e200">pipeline</div>,
               
               <div class="code e201">cmdline</div>, 
               <div class="code e202">package</div>) includes metadata used to identify
               the component in a GUI, but also to include context-sensitive help in that
               GUI.
            </div>
         </div><a name="WritingProXANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e203" xml:id="section_x11_mjz_wj">
            <div class="title e204">Writing ProX</div>
            <div class="para e205">It is, of course, possible to write ProX XML in any XML editor. For my current
               project, I've added an XMetaL-based environment that includes some styling but
               otherwise uses the same features as the standard authoring environment in the
               system, with an integration to the database with check-in/out and versioning,
               URN-based linking, etc. 
            </div>
            <div class="figure e206">
               <div class="title e207">Adding A Package Locator</div>
               <div class="mediaobject e208">
                  <div class="imageobject e209">
                     <div class="metaBox e210"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e414').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e414" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e210'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-010.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e211">Here, authoring ProX is easy. Packages are compiled by including XLinks to the
               modules and then linked to from the elements that need them, using already
               implemented XLink- and URN-based linking functionality.
            </div>
         </div>
      </div><a name="TheProXUserInterfaceANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e212" xml:id="section_hg4_rxg_wj">
         <div class="title e213">The ProX User Interface</div>
         <div class="para e214">The ProX blueprint was designed to be visualised in a GUI so the right process and
            pipeline can be selected and configured
            <div class="popupBox e215">
               <div class="popupLabel" onmouseover="$('#d1e422').show('1000');" onmouseout="$('#d1e422').hide('1000');">[ footnote ]</div>
               <div id="d1e422" style="display: none;">
                  <div class="footnote">
                     <div class="para e216">How much of the process is configurable is decided by the author of the
                        blueprint.
                     </div>
                  </div>
               </div>
            </div>. Conceivably, the system might allow for several different versions of the
            basic blueprint, each for its intended user. A power user might have several
            configuration options available to her while the casual user might only be allowed
            to
            choose between the basic processes, leaving the details to the system.
         </div>
         <div class="para e217">The basic selection procedure is largely sequential. Here's the first concept
            GUI:
         </div>
         <div class="figure e218" xml:id="id-orig-concept-gui">
            <div class="title e219">GUI Concept</div>
            <div class="mediaobject e220">
               <div class="imageobject e221">
                  <div class="metaBox e222"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e433').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e433" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e222'
                           </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-011.png'
                           </span><span class="metaAttribute">width='300px'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e223">The pipeline, command line and package steps may all include additional configuration,
            but the principle should be clear.
         </div><a name="GeneratingtheGUIPt1ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e224" xml:id="section_qzm_yn5_wj">
            <div class="title e225">Generating the GUI, Pt 1</div>
            <div class="para e226">There's an obvious candidate for creating a dynamic user interface based on XML
               input: W3C's 
               <div class="emphasis e227">XForms</div> specification (
               <div class="xref e228" linkend="id-xforms-spec"></div>). XForms
               has a somewhat bad reputation (see, for example, 
               <div class="xref e229" linkend="id-mvc-xforms-eric-vdl"></div>,
               Eric van der Vlist's terrific paper on [some of] the problems and some suggested
               solutions ), with some even claiming it to be dead for all practical purposes, but
               it is one of the few choices available for the purpose.
            </div>
            <div class="para e230">My first attempt at creating a ProX user interface used an XSLT stylesheet to
               generate a 
               <div class="emphasis e231">FreeMind</div> mind map:
            </div>
            <div class="figure e232">
               <div class="title e233">Generated Mind Map</div>
               <div class="mediaobject e234">
                  <div class="imageobject e235">
                     <div class="metaBox e236"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e458').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e458" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e236'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-012.png'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e237">The FreeMind mind map format is XML, and thus easy to grasp and convert to (
               <div class="xref e238" linkend="id-freemind-xsd"></div>). The
               idea here is to insert FreeMind marker symbols to the selected options (nodes) and
               then convert the resulting FreeMind XML back to ProX, only including the marked
               nodes. 
            </div>
            <div class="para e239">Of course, this approach is not without its flaws. Nothing stops you from
               inserting markers 
               <div class="emphasis e240">everywhere</div>, which would result in useless
               ProX markup. We need something that allows exactly what the markup allows, so while
               a tree representation is useful and intuitive, it is only useful if a node can be
               easily selected and its unselected siblings locked (including a clear visualisation
               of the changed state).
            </div>
            <div class="para e241">The FreeMind format may or may not allow this, but I chose instead to have a
               closer look at XForms.
            </div>
         </div><a name="DesignChoicesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e242" xml:id="section_sqy_ms5_wj">
            <div class="title e243">Design Choices</div>
            <div class="para e244">The process abstraction reflects a pipeline configuration from a process and
               systems perspective, and the resulting workflow for a user in the above user
               interfaces mostly reflects this approach. This is not necessarily wrong but the
               user's view regarding processing her content might actually be very different. 
            </div><a name="TheUser'sPOVANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e245" xml:id="section_e5s_zzf_xj">
               <div class="title e246">The User's POV</div>
               <div class="para e247">The original idea described a workflow like this:
                  <div class="orderedlist e248">
                     <div class="listitem e249">
                        <div class="para e250">Select process</div>
                     </div>
                     <div class="listitem e251">
                        <div class="para e252">Select pipeline</div>
                     </div>
                     <div class="listitem e253">
                        <div class="para e254">Select the pipeline's command line</div>
                     </div>
                     <div class="listitem e255">
                        <div class="para e256">Select among the stylesheet packages given as alternatives in the
                           command line
                        </div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e257">This is really just a formalisation of 
                  <div class="emphasis e258">one</div> way of
                  expressing a pipeline process. Only the last two (command line and stylesheet)
                  included user-configurable options and the basic idea was to have them show up
                  in a subform only when that step was selected.
               </div>
               <div class="para e259">The user probably doesn't care about the difference between configuring a
                  pipeline and configuring a stylesheet, however. The objective is to run a
                  process without distractions to the extent possible so better is probably:
                  <div class="orderedlist e260">
                     <div class="listitem e261">
                        <div class="para e262">Select process</div>
                     </div>
                     <div class="listitem e263">
                        <div class="para e264">Select pipeline</div>
                     </div>
                     <div class="listitem e265">
                        <div class="para e266">Select and configure stylesheet (or rather, process output)</div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e267">And depending on the situation, this might be even more appropriate:
                  <div class="orderedlist e268">
                     <div class="listitem e269">
                        <div class="para e270">Select process</div>
                     </div>
                     <div class="listitem e271">
                        <div class="para e272">Select and configure output</div>
                     </div>
                  </div>
                  
               </div>
               <div class="para e273">This is perhaps too simplistic. While the user doesn't necessarily care about
                  the difference between a process and a pipeline, the concept of a process
                  surrounding the pipeline was introduced because the processes might be so
                  different from each other that the abstraction becomes meaningful. The original
                  concept (see 
                  <div class="xref e274" linkend="id-orig-concept-gui"></div>) lists 
                  <div class="emphasis e275">Delivery</div>,
                  
                  <div class="emphasis e276">Reviews</div>, 
                  <div class="emphasis e277">Validation</div> and
                  
                  <div class="emphasis e278">Reports</div> as examples of different processes, the idea
                  being to reflect different work flows with some very different outputs as
                  expected results.
               </div>
               <div class="para e279">I'd argue that the distinction is meaningful.</div>
               <div class="para e280">But do users need to know or care about the difference between the command
                  line and stylesheet selections? Here, the answer is probably no. The pipeline
                  does something in the defined workflow while the command line and stylesheet
                  options configure the output. The difference between configuring the pipeline
                  and the stylesheet is a subtle one; unless you are an admin, you probably won't
                  care. Better (than the the concept GUI in 
                  <div class="xref e281" linkend="id-orig-concept-gui"></div>)
                  is something like this:
               </div>
               <div class="figure e282" xml:id="figure_dlj_rmj_xj">
                  <div class="title e283">Pipeline, Cmdline Configuration Mixed</div>
                  <div class="mediaobject e284">
                     <div class="imageobject e285">
                        <div class="metaBox e286"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e549').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e549" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e286'
                                 </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-013.jpg'
                                 </span><span class="metaAttribute">width='300px'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e287">To the end user, this XForm is about configuring 
                  <div class="emphasis e288">output</div>,
                  not what's behind the scenes. The underlying XML does not change; with the GUI
                  is adapted for different user categories, the same XML can provide an admin with
                  a different UI. The difference happens depending on how the initial ProX is
                  processed to generate a form.
               </div>
               <div class="para e289">The 
                  <div class="quote e290">right</div> answer, then, is that these are all possible, simply
                  by preprocessing ProX and by writing appropriate XForms.
               </div>
            </div><a name="TheAdmin'sPOVANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e291" xml:id="section_n4d_s1g_xj">
               <div class="title e292">The Admin's POV</div>
               <div class="para e293">The underlying XML is in no way changed when simplifying the selection process
                  for a user. What changes is the form, and possibly some preprocessing. The above
                  suggests a simple GUI, with most of the configuration already made. All the
                  admin needs to do is to write the ProX blueprint with
                  
                  <div class="emphasis e294">complete</div> command lines, with all of the choices split
                  into separate command line groups as listed in the GUI. 
               </div>
               <div class="para e295">The GUI shown in 
                  <div class="xref e296" linkend="figure_dlj_rmj_xj"></div> is generated from this example:
               </div>
               <div class="programlisting e297" xml:space="preserve">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                  &lt;?xml-model href="file:/home/ari/mystuff/SGML/DTD/Process-XML/RelaxNG/processes.rnc"
                  type="application/relax-ng-compact-syntax"?&gt;
                  &lt;processes 
                  id="processes-2013-4-9-16-53-8-39562387-" 
                  xmlns:xlink="http://www.w3.org/1999/xlink"&gt;
                  
                  &lt;!-- Print Publishing Process --&gt;
                  &lt;process id="id-pdf-process"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-"&gt;Print Publishing&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-"&gt;Print publishing for COSML documents&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;pipelines id="pipelines-2013-4-9-16-53-8-39562387-"&gt;
                  
                  &lt;!-- PDF Pipeline --&gt;
                  &lt;pipeline id="id-pipeline-pdf-1"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-1"&gt;Publish PDF&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-1"&gt;Normalizes, validates and converts a COSML document
                  to PDF&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;script xmlns:xlink="http://www.w3.org/1999/xlink" type="pkg"
                  id="script-2013-4-9-16-53-8-39562387-"
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.1#id-xproc-pdf"
                  xlink:title=" XProc Pipeline for Normalize, Validate and PDF Normalizes, validates
                  and publishes in PDF a COSML document "/&gt;
                  &lt;cmdlines id="cmdlines-2013-4-9-16-53-8-39562387-"&gt;
                  
                  &lt;!-- COSML Internal XSL --&gt;
                  &lt;cmdline id="id-cmdline-cos-internal-pdf"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-2"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-2"&gt;COS Internal Template&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-2"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-2"&gt;Configures the pipeline for the "COS Internal"
                  template&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;engine-config&gt;
                  &lt;config type="pkg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#id-conf-calabash"/&gt;
                  &lt;/engine-config&gt;
                  &lt;inputs id="inputs-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;input choice="no" id="input-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-"&gt;document&lt;/port&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="external"
                  xlink:type="simple" 
                  id="value-2013-4-9-16-53-8-39562387-"
                  mimetype="application/xml"&gt;DOCUMENT-PLACEHOLDER&lt;/value&gt;
                  &lt;/input&gt;
                  &lt;input choice="no" id="input-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-1"&gt;stylesheet&lt;/port&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="pkg"
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.1#id-xslfo-cosml"
                  xlink:type="simple" id="value-2013-4-9-16-53-8-39562387-1"
                  xlink:title=" XSL-FO Package for COSML PDF Converts COSML documents to XSL-FO format
                  for COS PDF layout "/&gt;
                  &lt;params id="params-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;!-- Index generation --&gt;
                  &lt;param 
                  choice="yes" 
                  ctype="boolean" 
                  id="param-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-2"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-"&gt;generate.index&lt;/name&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="string"
                  xlink:type="simple" 
                  id="value-2013-4-9-16-53-8-39562387-2"&gt;false&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;!-- XEP Extensions --&gt;
                  &lt;param 
                  choice="no" 
                  id="param-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-3"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-1"&gt;xep.extensions&lt;/name&gt;
                  &lt;value xmlns:xlink="http://www.w3.org/1999/xlink" type="string"
                  xlink:type="simple" id="value-2013-4-9-16-53-8-39562387-3"
                  &gt;0&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;!-- XSL-FO Bookmark Generation --&gt;
                  &lt;param 
                  choice="yes" 
                  ctype="boolean"
                  id="param-2013-4-9-16-53-8-39562387-2"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-4"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-2"&gt;xslfo.bookmarks&lt;/name&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="string"
                  xlink:type="simple" id="value-2013-4-9-16-53-8-39562387-4"&gt;true&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;!-- TOC Generation --&gt;
                  &lt;param 
                  choice="yes" 
                  ctype="boolean"
                  id="param-2013-4-9-16-53-8-39514778-2"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-9653444-4"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-4-9-16-53-8-1928364-2"&gt;create.toc&lt;/name&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="string"
                  xlink:type="simple" 
                  id="value-2013-7-10-16-53-8-764625737-3"&gt;true&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;!-- TOC Depth --&gt;
                  &lt;param 
                  choice="yes" 
                  ctype="list1"
                  id="param-2013-4-9-16-53-8-2385485-2"&gt;
                  &lt;port id="port-2013-7-10-16-34-8-9283444-4"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-7-10-16-50-3-1946564-2"&gt;toc.depth&lt;/name&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="string"
                  xlink:type="simple" 
                  id="value-2013-7-10-16-53-8-764625737-4"&gt;2&lt;/value&gt;
                  &lt;value
                  xmlns:xlink="http://www.w3.org/1999/xlink"
                  id="value-13-07-10-12345-1" 
                  type="string"&gt;1&lt;/value&gt;
                  &lt;value
                  xmlns:xlink="http://www.w3.org/1999/xlink"
                  id="value-13-07-10-12345-2" 
                  type="string"&gt;3&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;/params&gt;
                  &lt;/input&gt;
                  &lt;input choice="no" id="input-2013-4-9-16-53-8-39562387-2"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-5"&gt;stylesheet-norm&lt;/port&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="pkg"
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.1#id-normalize"
                  xlink:type="simple" id="value-2013-4-9-16-53-8-39562387-5"
                  xlink:title=" Normalize XSLT Stylesheet for applics filtering and module normalization
                  for COSML documents "/&gt;
                  &lt;/input&gt;
                  &lt;/inputs&gt;
                  &lt;options id="options-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;option choice="no" id="option-2013-4-9-16-53-8-39562387-"&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-3"&gt;pdf&lt;/name&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="external"
                  xlink:type="simple" 
                  id="value-2013-4-9-16-53-8-39562387-6"&gt;PDF-PLACEHOLDER.pdf&lt;/value&gt;
                  &lt;/option&gt;
                  &lt;/options&gt;
                  &lt;/cmdline&gt;
                  
                  &lt;!-- COSML Formal XSL --&gt;
                  &lt;cmdline id="id-cmdline-cos-formal-pdf"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-3"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-3"&gt;COS Formal Template&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-3"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-3"&gt;Configures the pipeline for the "COS Formal"
                  template&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;engine-config&gt;
                  &lt;config type="pkg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#id-conf-calabash"/&gt;
                  &lt;/engine-config&gt;
                  &lt;inputs id="inputs-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;input choice="no" id="input-2013-4-9-16-53-8-39562387-3"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-6"&gt;document&lt;/port&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="external"
                  xlink:type="simple" 
                  id="value-2013-4-9-16-53-8-39562387-7"&gt;DOCUMENT-PLACEHOLDER&lt;/value&gt;
                  &lt;/input&gt;
                  &lt;input choice="no" id="input-2013-4-9-16-53-8-39562387-4"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-7"&gt;stylesheet&lt;/port&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="pkg"
                  xlink:href="package-xslfo-cosml.xml#id-xslfo-cosml" 
                  xlink:type="simple"
                  id="value-2013-4-9-16-53-8-39562387-8"/&gt;
                  &lt;/input&gt;
                  &lt;input choice="no" id="input-2013-4-9-16-53-8-39562387-5"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-8"&gt;stylesheet-norm&lt;/port&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" type="pkg"
                  xlink:href="package-normalize.xml#id-normalize" 
                  xlink:type="simple"
                  id="value-2013-4-9-16-53-8-39562387-9"/&gt;
                  &lt;/input&gt;
                  &lt;/inputs&gt;
                  &lt;options id="options-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;option choice="no" id="option-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-4"&gt;pdf&lt;/name&gt;
                  &lt;value 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="external"
                  xlink:type="simple" 
                  id="value-2013-4-9-16-53-8-39562387-10"
                  mimetype="application/pdf"&gt;PDF-PLACEHOLDER.pdf&lt;/value&gt;
                  &lt;/option&gt;
                  &lt;/options&gt;
                  &lt;/cmdline&gt;
                  &lt;/cmdlines&gt;
                  &lt;/pipeline&gt;
                  &lt;/pipelines&gt;
                  
                  &lt;!-- Packages for Print --&gt;
                  &lt;packages 
                  xml:base="file:///e:/SGML/DTD/Cassis/Process-XML/"
                  id="packages-2013-4-9-16-53-8-39562387-"&gt;
                  
                  &lt;!-- XProc Normalize, Validate, XSLFO Pipeline Package --&gt;
                  &lt;package id="id-xproc-pdf"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-4"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-4"&gt;XProc Pipeline for Normalize, Validate
                  and PDF&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-4"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-4"&gt;Normalizes, validates and publishes in PDF a
                  COSML document&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;!-- publish-cosml-pdf.xpl --&gt;
                  &lt;locator 
                  type="main" 
                  xlink:href="urn:x-cassis:r1:cos:00002715:sv-SE:0.1"
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  id="locator-2013-4-10-10-32-24-12830403-" /&gt;
                  &lt;/package&gt;
                  
                  
                  &lt;!-- COSML Internal XSL-FO Package --&gt;
                  &lt;package id="id-xslfo-cosml"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-5"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-5"&gt;XSL-FO Package for COSML PDF&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-5"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-5"&gt;Converts COSML documents to XSL-FO format
                  for COS PDF layout&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  
                  &lt;!-- Stylesheet parameters --&gt;
                  &lt;params id="params-2013-4-9-16-53-8-39562387-1"&gt;
                  &lt;!-- Index generation --&gt;
                  &lt;param id="param-2013-4-9-16-53-8-39562387-3"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-9"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-5"&gt;generate.index&lt;/name&gt;
                  &lt;value type="string" id="value-2013-4-9-16-53-8-39562387-11"&gt;0&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;!-- XEP Extensions --&gt;
                  &lt;param id="param-2013-4-9-16-53-8-39562387-4"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-10"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-6"&gt;xep.extensions&lt;/name&gt;
                  &lt;value type="string" id="value-2013-4-9-16-53-8-39562387-12"&gt;0&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;!-- XSL-FO Bookmark Generation --&gt;
                  &lt;param id="param-2013-4-9-16-53-8-39562387-5"&gt;
                  &lt;port id="port-2013-4-9-16-53-8-39562387-11"&gt;xslt-params&lt;/port&gt;
                  &lt;name id="name-2013-4-9-16-53-8-39562387-7"&gt;xslfo.bookmarks&lt;/name&gt;
                  &lt;value type="string" id="value-2013-4-9-16-53-8-39562387-13"&gt;1&lt;/value&gt;
                  &lt;/param&gt;
                  &lt;/params&gt;
                  
                  &lt;!-- XSLT --&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000232:sv-SE:0.6" 
                  xlink:title="COS Internal XSLT"
                  type="main" id="locator-2013-4-9-16-53-8-39562387-1"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000074:sv-SE:0.11"
                  id="locator-2013-4-9-16-53-8-39562387-2"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000059:sv-SE:0.2"
                  id="locator-2013-4-9-16-53-8-39562387-3"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000070:sv-SE:0.15"
                  id="locator-2013-4-9-16-53-8-39562387-4" 
                  xlink:title="Layout"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000876:sv-SE:0.2"
                  id="locator-2013-4-9-16-53-8-39562387-5" 
                  xlink:title="bookmarks.xsl"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000075:sv-SE:0.17"
                  id="locator-2013-4-9-16-53-8-39562387-6"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000072:sv-SE:0.10"
                  id="locator-2013-4-9-16-53-8-39562387-7" 
                  xlink:title="meta-data.xsl"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000078:sv-SE:0.9"
                  id="locator-2013-4-9-16-53-8-39562387-8" 
                  xlink:title="TOC"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000062:sv-SE:0.9"
                  id="locator-2013-4-9-16-53-8-39562387-9"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000233:sv-SE:0.8"
                  id="locator-2013-4-9-16-53-8-39562387-10"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000061:sv-SE:0.29"
                  id="locator-2013-4-9-16-53-8-39562387-11"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000065:sv-SE:0.6"
                  id="locator-2013-4-9-16-53-8-39562387-12"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000071:sv-SE:0.6"
                  id="locator-2013-4-9-16-53-8-39562387-13"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000077:sv-SE:0.6"
                  id="locator-2013-4-9-16-53-8-39562387-14"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000079:sv-SE:0.7"
                  id="locator-2013-4-9-16-53-8-39562387-15"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000060:sv-SE:0.7"
                  id="locator-2013-4-9-16-53-8-39562387-16"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000064:sv-SE:0.8"
                  id="locator-2013-4-9-16-53-8-39562387-17"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000066:sv-SE:0.2"
                  id="locator-2013-4-9-16-53-8-39562387-18"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000069:sv-SE:0.3"
                  id="locator-2013-4-9-16-53-8-39562387-19"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000063:sv-SE:0.3"
                  id="locator-2013-4-9-16-53-8-39562387-20"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000785:sv-SE:0.6"
                  id="locator-2013-4-9-16-53-8-39562387-21"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000076:sv-SE:0.10" type="aux" xlink:title="Strings"
                  id="locator-2013-4-9-16-53-8-39562387-22"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000230:sv-SE:0.1" type="aux"
                  id="locator-2013-4-9-16-53-8-39562387-23"/&gt;
                  &lt;locator xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000426:sv-SE:0.1" type="aux"
                  id="locator-2013-4-9-16-53-8-39562387-24" xlink:title="tux.jpg"/&gt;
                  &lt;/package&gt;
                  &lt;/packages&gt;
                  &lt;/process&gt;
                  
                  &lt;!-- Wep PublishingProcess --&gt;
                  &lt;process id="id-web-process"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-6"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-6"&gt;Web Publishing&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-6"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-6"&gt;Publishes COSML documents for web output&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  
                  &lt;pipelines id="pipelines-2013-4-9-16-53-8-39562387-1"&gt;
                  
                  &lt;!-- Pipeline for HTML --&gt;
                  &lt;pipeline id="id-pipeline-web-1"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-7"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-7"&gt;Publish HTML&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-7"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-7"&gt;Normalizes, validates and publishes COSML documents
                  as single-file HTML&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;script id="script-2013-4-9-16-53-8-39562387-1"
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.6#package-2013-5-19-11-12-49-71312191-1"
                  xlink:title="XProc COSML2XHTMLNormalises, validates and converts COSML to XHTML."
                  type="pkg"/&gt;
                  &lt;cmdlines id="cmdlines-2013-4-9-16-53-8-39562387-1"&gt;
                  
                  &lt;!-- Single-file HTML Config --&gt;
                  &lt;cmdline id="id-cmdline-single-file-HTML-1"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-8"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-8"&gt;COS HTML&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-8"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-8"&gt;Configures the pipeline for single-file HTML&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;engine-config&gt;
                  &lt;config type="pkg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#id-conf-calabash"/&gt;
                  &lt;/engine-config&gt;
                  &lt;inputs&gt;
                  &lt;input&gt;
                  &lt;port&gt;document&lt;/port&gt;
                  &lt;value 
                  id="id-html-docroot"
                  input-type="doc-root" 
                  type="external"/&gt;
                  &lt;/input&gt;
                  &lt;input id="input-2013-5-19-11-12-49-71312191-1"&gt;
                  &lt;port&gt;stylesheet&lt;/port&gt;
                  &lt;value
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.6#package-2013-5-19-11-12-49-71312191-"
                  xlink:title="COSML XHTML XSLTConverts COSML to XHTML" 
                  type="pkg"/&gt;
                  &lt;/input&gt;
                  &lt;input id="input-2013-5-19-11-12-49-71312191-"&gt;
                  &lt;port&gt;stylesheet-norm&lt;/port&gt;
                  &lt;value 
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.6#id-normalize"
                  xlink:title=" Normalize XSLT Stylesheet for applics filtering and module normalization
                  for COSML documents "
                  type="pkg"/&gt;
                  &lt;/input&gt;
                  &lt;/inputs&gt;
                  &lt;options&gt;
                  &lt;option&gt;
                  &lt;name&gt;htm&lt;/name&gt;
                  &lt;value 
                  id="id-htm-out"
                  type="external" 
                  output-type="primary"/&gt;
                  &lt;/option&gt;
                  &lt;/options&gt;
                  &lt;/cmdline&gt;
                  &lt;/cmdlines&gt;
                  &lt;/pipeline&gt;
                  &lt;/pipelines&gt;
                  
                  &lt;!-- Web Publishing Packages --&gt;
                  &lt;packages&gt;
                  
                  &lt;!-- XProc for COSML to XHTML --&gt;
                  &lt;package id="package-2013-5-19-11-12-49-71312191-1"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;XProc COSML2XHTML&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;XProc to normalise, validate and convert COSML to XHTML.&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;locator 
                  id="id-xhtml-xproc"
                  type="main" 
                  xlink:href="urn:x-cassis:r1:cos:00002756:sv-SE:0.2"
                  xlink:title="publish-cosml-html.xpl" 
                  xmlns:xlink="http://www.w3.org/1999/xlink"/&gt;
                  &lt;/package&gt;
                  
                  &lt;!-- XSLT for COSML to XHTML --&gt;
                  &lt;package id="package-2013-5-19-11-12-49-71312191-"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;COSML XHTML XSLT&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;Converts COSML to XHTML&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;locator 
                  id="id-xhtml-xslt"
                  xlink:href="urn:x-cassis:r1:cos:00002755:sv-SE:0.1"
                  xlink:title="cosml2html-ti.xsl" 
                  xmlns:xlink="http://www.w3.org/1999/xlink"
                  type="main"/&gt;
                  &lt;/package&gt;
                  &lt;/packages&gt;
                  &lt;/process&gt;
                  
                  &lt;!-- Content Validation Process --&gt;
                  &lt;process id="process-2013-5-19-11-12-49-71312191-"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;Content Validation&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;Content validation processes&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  
                  &lt;!-- Content Validation Pipelines --&gt;
                  &lt;pipelines&gt;
                  
                  &lt;!-- Xref Check Pipeline --&gt;
                  &lt;pipeline id="pipeline-2013-5-19-11-12-49-71312191-"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;Cross-reference Check&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;Pipeline for checking cross-references in COSML documents&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;script
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.6#package-2013-5-19-11-12-49-71312191-3"
                  xlink:title="XProc Xref CheckGenerates a module list for XML in scope, checks the
                  xrefs and produces a report"
                  type="pkg"/&gt;
                  &lt;cmdlines&gt;
                  
                  &lt;!-- Xref Validation Config --&gt;
                  &lt;cmdline id="cmdline-2013-5-19-11-12-49-71312191-"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;Xref Check Configuration&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;Configures the cross-reference check and report&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;engine-config&gt;
                  &lt;config type="pkg" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#id-conf-calabash"/&gt;
                  &lt;/engine-config&gt;
                  &lt;inputs&gt;
                  &lt;input&gt;
                  &lt;port&gt;map&lt;/port&gt;
                  &lt;value 
                  type="external" 
                  input-type="map"/&gt;
                  &lt;/input&gt;
                  &lt;input id="input-2013-5-19-11-12-49-71312191-2"&gt;
                  &lt;port&gt;stylesheet&lt;/port&gt;
                  &lt;value
                  xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.6#package-2013-5-19-11-12-49-71312191-2"
                  xlink:title="XSLT Xref CheckValidates cross-references in publication"
                  type="pkg"/&gt;
                  &lt;/input&gt;
                  &lt;/inputs&gt;
                  &lt;options&gt;
                  &lt;option&gt;
                  &lt;name&gt;htm&lt;/name&gt;
                  &lt;value id="id-value-xref-htm" type="external" mimetype="text/xhtml"/&gt;
                  &lt;/option&gt;
                  &lt;option&gt;
                  &lt;name&gt;file-url&lt;/name&gt;
                  &lt;value id="id-file-url" type="external" mimetype="text/xml"/&gt;
                  &lt;/option&gt;
                  &lt;/options&gt;
                  &lt;/cmdline&gt;
                  &lt;/cmdlines&gt;
                  &lt;/pipeline&gt;
                  &lt;/pipelines&gt;
                  
                  &lt;packages&gt;
                  
                  &lt;!-- XProc for Xref Check --&gt;
                  &lt;package id="package-2013-5-19-11-12-49-71312191-3"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;XProc Xref Check&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;Generates a module list for XML in scope, checks the xrefs and produces a report&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;locator 
                  id="id-xproc-xref"
                  xlink:href="urn:x-cassis:r1:cos:00002757:sv-SE:0.2"
                  xlink:title="xref-check-cosml.xpl" 
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="main"/&gt;
                  &lt;/package&gt;
                  
                  &lt;!-- XSLT for Xref Check --&gt;
                  &lt;package id="package-2013-5-19-11-12-49-71312191-2"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;XSLT Xref Check&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;Validates cross-references in publication&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;locator 
                  id="id-xslt-xref"
                  xlink:href="urn:x-cassis:r1:cos:00002754:sv-SE:0.1"
                  xlink:title="link-target-check-multifile.xsl"
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="main"/&gt;
                  &lt;/package&gt;
                  &lt;/packages&gt;
                  &lt;/process&gt;
                  
                  &lt;packages id="packages-2013-4-9-16-53-8-39562387-1"&gt;
                  
                  &lt;!-- XSLT for Normalizing COSML --&gt;
                  &lt;package id="id-normalize" type="xslt"&gt;
                  &lt;metadata id="metadata-2013-4-9-16-53-8-39562387-9"&gt;
                  &lt;title id="title-2013-4-9-16-53-8-39562387-9"&gt;Normalize XSLT&lt;/title&gt;
                  &lt;description id="description-2013-4-9-16-53-8-39562387-9"&gt;
                  &lt;p id="p-2013-4-9-16-53-8-39562387-9"&gt;Stylesheet for applics filtering and module
                  normalization for COSML documents&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;!-- No parameters required. --&gt;
                  &lt;locator 
                  xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="urn:x-cassis:r1:cos:00000073:sv-SE:0.4"
                  id="locator-2013-4-9-16-53-8-39562387-26" 
                  type="main" 
                  xlink:title="Normalize XSLT"/&gt;
                  &lt;/package&gt;
                  
                  &lt;!-- Calabash Engine Configuration File --&gt;
                  &lt;package id="id-conf-calabash"&gt;
                  &lt;metadata id="metadata-2013-5-2-21-40-30-37001288-"&gt;
                  &lt;title id="title-2013-5-2-21-40-30-37001288-"&gt;Calabash Configuration&lt;/title&gt;
                  &lt;description id="description-2013-5-2-21-40-30-37001288-"&gt;
                  &lt;p id="p-2013-5-2-21-40-30-37001288-"&gt;Configures Calabash&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;locator 
                  xlink:href="urn:x-cassis:r1:cos:00002745:sv-SE:0.1"
                  xmlns:xlink="http://www.w3.org/1999/xlink" 
                  type="main" 
                  id="id-loc-calabash-config"/&gt;
                  &lt;/package&gt;
                  
                  
                  
                  &lt;!-- Wrapper ProX Resources --&gt;
                  &lt;package id="id-wrapper-resources"&gt;
                  &lt;metadata id="metadata-2013-5-2-21-40-30-37001288-1"&gt;
                  &lt;title id="title-2013-5-2-21-40-30-37001288-1"&gt;Wrapper Pipeline Processing&lt;/title&gt;
                  &lt;description id="description-2013-5-2-21-40-30-37001288-1"&gt;
                  &lt;p id="p-2013-5-2-21-40-30-37001288-1"&gt;These files are used for running the wrapper
                  pipeline.&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  
                  &lt;locator xlink:href="urn:x-cassis:r1:cos:00002735:sv-SE:0.1"
                  xmlns:xlink="http://www.w3.org/1999/xlink" id="id-wrapper-xpl"/&gt;
                  
                  &lt;locator xlink:href="urn:x-cassis:r1:cos:00002732:sv-SE:0.1"
                  xmlns:xlink="http://www.w3.org/1999/xlink" id="id-prox-fix"/&gt;
                  
                  &lt;locator xlink:href="urn:x-cassis:r1:cos:00002733:sv-SE:0.1"
                  xmlns:xlink="http://www.w3.org/1999/xlink" id="id-urn2url"/&gt;
                  
                  &lt;locator xlink:href="urn:x-cassis:r1:cos:00002731:sv-SE:0.1"
                  xmlns:xlink="http://www.w3.org/1999/xlink" id="id-prox2bat"/&gt;
                  
                  &lt;locator xlink:href="urn:x-cassis:r1:cos:00002734:sv-SE:0.1"
                  xmlns:xlink="http://www.w3.org/1999/xlink" id="id-prox2shell-config"/&gt;
                  &lt;/package&gt;
                  
                  &lt;!-- XForms --&gt;
                  &lt;package id="id-xform"&gt;
                  &lt;metadata&gt;
                  &lt;title&gt;ProX XForms Package&lt;/title&gt;
                  &lt;description&gt;
                  &lt;p&gt;XForms for selecting and configuring a process, based on a ProX blueprint.&lt;/p&gt;
                  &lt;/description&gt;
                  &lt;/metadata&gt;
                  &lt;locator 
                  xlink:href="urn:prox:xform:0.1" 
                  type="main" 
                  id="id-loc-xform"/&gt;
                  &lt;/package&gt;
                  &lt;/packages&gt;
                  &lt;/processes&gt;
                  
               </div>
               <div class="para e298">The point here is that this could easily be (mostly) all that is required;
                  while additional configuration may be useful, it is perfectly feasible to limit
                  the choices to a straight-forward wizard-like behaviour.
               </div>
            </div>
         </div><a name="ConfigurationandParameterHandlingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e299" xml:id="section_h2y_zwy_wj">
            <div class="title e300">Configuration and Parameter Handling</div>
            <div class="para e301">The ProX RNC schema includes a set of attributes used by any element that may
               offer configuration choices by the user:
            </div>
            <div class="programlisting e302" xml:space="preserve">choice.att =
               attribute choice { "yes" | "no" }?,  # [ a:defaultValue = "no" ] 
               attribute group { xsd:IDREF }?,
               attribute ctype { "boolean" | "list" | "list1" | xsd:string | xsd:decimal | xsd:date
               }?,
               attribute req { "yes" | "no" }?
            </div>
            <div class="para e303">The 
               <div class="code e304">choice</div> attribute indicates if the parameter is configurable,
               while 
               <div class="code e305">ctype</div> indicates the type of user input required. 
            </div>
            <div class="para e306">The 
               <div class="code e307">group</div> attribute is an 
               <div class="code e308">IDREF</div> to a related parameter
               and indicates a dependency to that parameter. For example, a parameter may be used
               to set the table of contents depth, but it is useless if another parameter has
               turned off the TOC generation. The first parameter needs to include a
               
               <div class="code e309">group</div>
               
               <div class="code e310">IDREF</div> to the second so only relevant options are made available when
               configuring a ProX blueprint. 
            </div>
            <div class="para e311">The configuration options available in a 
               <div class="code e312">cmdline</div> are made available
               to the user by defining them as choices in the ProX blueprint. For example, logging
               alternatives might be made available like so:
            </div>
            <div class="programlisting e313" xml:space="preserve">&lt;engine-config&gt;
               &lt;config 
               type="pkg" 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               xlink:href="calabash-config.xml"/&gt;
               &lt;log-style 
               id="id-log" 
               choice="yes" 
               ctype="list1" 
               style="off"/&gt;
               &lt;log-style 
               group="id-log" 
               choice="yes" 
               ctype="list1" 
               style="plain"/&gt;
               &lt;/engine-config&gt;
            </div>
            <div class="para e314">Here, the logging options are made available as a 
               <div class="quote e315">list1</div>, much like
               a 
               <div class="quote e316">radio button</div> list for a user interface. Note the 
               <div class="code e317">id</div>
               and 
               <div class="code e318">group</div> attributes in the first and second 
               <div class="code e319">log-style</div>
               elements: the 
               <div class="code e320">group</div> attribute is an 
               <div class="code e321">IDREF</div> that references
               the 
               <div class="code e322">id</div> in the first. The choice that contains the 
               <div class="code e323">id</div>
               attribute referenced by the other is the default.
            </div>
            <div class="para e324">A true/false 
               <div class="code e325">schema-aware</div> option may only have two values and can
               therefore be represented like this:
            </div>
            <div class="programlisting e326" xml:space="preserve">&lt;schema-aware process="true" choice="yes" ctype="boolean"/&gt;</div>
            <div class="para e327">Here, a default value is given in the 
               <div class="code e328">process</div> attribute. Note the
               
               <div class="code e329">ctype</div> attribute that 
               <div class="emphasis e330">identifies the type to be used when
                  representing the choice for the user
               </div>. The XForm template will show
               this as a checkbox in normal circumstances.
            </div>
            <div class="para e331">Data types are necessary when representing XSLT parameter alternatives. This one
               decides if an index should be generated by a PDF publishing pipeline:
            </div>
            <div class="programlisting e332" xml:space="preserve">&lt;!-- Index generation --&gt;
               &lt;param 
               choice="yes" 
               ctype="boolean" 
               id="param-2013-4-9-16-53-8-39562387-"&gt;
               &lt;port id="port-2013-4-9-16-53-8-39562387-2"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-4-9-16-53-8-39562387-"&gt;generate.index&lt;/name&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="string"
               xlink:type="simple" 
               id="value-2013-4-9-16-53-8-39562387-2"&gt;false&lt;/value&gt;
               &lt;/param&gt;
            </div>
            <div class="para e333">
               <div class="code e334">choice="yes"</div> means that this is a user-configurable option, with the
               default given by the contents. This will render as a checkbox (see 
               <div class="xref e335" linkend="id-param-config"></div>), as
               
               <div class="code e336">param/@ctype="boolean"</div> is used to bind it to an
               
               <div class="code e337">xs:boolean</div> in the XForm. 
            </div>
            <div class="para e338">These two parameters decide if and how a TOC will be generated:</div>
            <div class="programlisting e339" xml:space="preserve">&lt;!-- TOC Generation --&gt;
               &lt;param 
               choice="yes" 
               ctype="boolean"
               id="param-2013-4-9-16-53-8-39514778-2"&gt;
               &lt;port id="port-2013-4-9-16-53-8-9653444-4"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-4-9-16-53-8-1928364-2"&gt;create.toc&lt;/name&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="string"
               xlink:type="simple" 
               id="value-2013-7-10-16-53-8-764625737-3"&gt;true&lt;/value&gt;
               &lt;/param&gt;
               &lt;!-- TOC Depth --&gt;
               &lt;param 
               choice="yes" 
               ctype="list1"
               id="param-2013-4-9-16-53-8-2385485-2"
               group="value-2013-7-10-16-53-8-764625737-3"&gt;
               &lt;port id="port-2013-7-10-16-34-8-9283444-4"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-7-10-16-50-3-1946564-2"&gt;toc.depth&lt;/name&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="string"
               xlink:type="simple" 
               id="value-2013-7-10-16-53-8-764625737-4"&gt;2&lt;/value&gt;
               &lt;value
               xmlns:xlink="http://www.w3.org/1999/xlink"
               id="value-13-07-10-12345-1" 
               type="string"&gt;1&lt;/value&gt;
               &lt;value
               xmlns:xlink="http://www.w3.org/1999/xlink"
               id="value-13-07-10-12345-2" 
               type="string"&gt;3&lt;/value&gt;
               &lt;/param&gt;
            </div>
            <div class="para e340">The first 
               <div class="code e341">param</div> is an ON/OFF switch for TOC generation (hence the
               
               <div class="code e342">@ctype="boolean"</div>), while the second allows choosing the number of
               section levels to be included in the TOC. Since the second 
               <div class="code e343">param</div> would
               be meaningless without the first being set to 
               <div class="quote e344">true</div>, the second
               
               <div class="code e345">param</div> includes a 
               <div class="code e346">group</div> attribute that is an
               
               <div class="code e347">IDREF</div> to the first 
               <div class="code e348">param</div>, which means that the second
               value depends on the first. The 
               <div class="code e349">group</div> reference is used in the XForm to
               show or hide controls, depending on their relevance.
            </div>
            <div class="para e350">The second 
               <div class="code e351">param</div> has 
               <div class="code e352">ctype="list1"</div>, which means that the
               listed 
               <div class="code e353">value</div>s should be represented as a 
               <div class="code e354">list1</div> in the
               XForm. The first is used as default when processing.
            </div>
            <div class="note e355">
               <div class="para e356">When compiling the package that lists a stylesheet's participating module, the
                  package needs to always include definitions for any parameters that are not
                  explicitly set by the stylesheets. 
               </div>
            </div>
         </div><a name="SystemContextANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e357" xml:id="section_hzm_by3_xj">
            <div class="title e358">System Context</div>
            <div class="para e359">The ProX blueprint configuration described above only tells how to configure a
               process, not what XML if any it processes, other than indirectly. It tells
               
               <div class="emphasis e360">how</div> to do something, not 
               <div class="emphasis e361">what</div> it
               should apply the process to. Of course, for any process involving an XML file to be
               processed, there will be a matching input in the pipeline, but the point here is
               that the XML is only identified at runtime, 
               <div class="emphasis e362">if</div> it is identified
               <div class="popupBox e363">
                  <div class="popupLabel" onmouseover="$('#d1e742').show('1000');" onmouseout="$('#d1e742').hide('1000');">[ footnote ]</div>
                  <div id="d1e742" style="display: none;">
                     <div class="footnote">
                        <div class="para e364">Some processes may not need an XML file to apply the process to.</div>
                     </div>
                  </div>
               </div>.
            </div>
            <div class="para e365">The system where proX is being implemented allows for two basic workflows: either
               the process is configured first and the XML to be processed is pointed out later,
               or
               the other way around. The first is useful for new processes and for any process that
               does not involve an XML file. If an XML file needs to be selected, it can be located
               by the system using its in-place browsing capabilities after the ProX instance is
               configured and saved, that is, when a publishing process has been fully configured
               and saved.
            </div>
            <div class="para e366">Today, the system uses something called a 
               <div class="quote e367">configuration</div> to point
               out the XML to be processed. The configuration is an XML file that points out a root
               XML file, including language and version, along with some system-specific metadata,
               and then publishes it using an XSL-FO stylesheet
               <div class="popupBox e368">
                  <div class="popupLabel" onmouseover="$('#d1e753').show('1000');" onmouseout="$('#d1e753').hide('1000');">[ footnote ]</div>
                  <div id="d1e753" style="display: none;">
                     <div class="footnote">
                        <div class="para e369">The system will fetch any XML modules linked by the root XML, after wich a
                           normalisation process is carried out, and only then are the FO stylesheets
                           applied.
                        </div>
                     </div>
                  </div>
               </div>: 
            </div>
            <div class="programlisting e370" xml:space="preserve">&lt;?xml version="1.0" encoding="utf-8"?&gt;
               &lt;CassisTIConfiguration&gt;
               &lt;Versioning&gt;-1&lt;/Versioning&gt;
               &lt;VersionInfo /&gt;
               &lt;PortalID&gt;0&lt;/PortalID&gt;
               &lt;ConfigURN&gt;urn:x-cassis:r1:cos:00002216:sv-SE:0.2&lt;/ConfigURN&gt;
               &lt;ConfigID&gt;2216&lt;/ConfigID&gt;
               &lt;ConfigVersionID&gt;-1&lt;/ConfigVersionID&gt;
               &lt;ForProcessMgr&gt;true&lt;/ForProcessMgr&gt;
               &lt;Name&gt;Balisage 2012 Whitepaper&lt;/Name&gt;
               &lt;NoOfNamingFields&gt;0&lt;/NoOfNamingFields&gt;
               &lt;NamingFields /&gt;
               &lt;Code /&gt;
               &lt;Description&gt;Balisage 2012 whitepaper&lt;/Description&gt;
               &lt;ThumbNailImage /&gt;
               &lt;Modules /&gt;
               &lt;XmlModuleID&gt;2112&lt;/XmlModuleID&gt;
               &lt;XmlModuleFolderID&gt;83&lt;/XmlModuleFolderID&gt;
               &lt;XmlModuleName&gt;Bal2012nord0128.xml&lt;/XmlModuleName&gt;
               &lt;XmlModuleURN&gt;urn:x-cassis:r1:cos:00002112:sv-SE:0.43&lt;/XmlModuleURN&gt;
               &lt;XmlModuleLanguageID&gt;2&lt;/XmlModuleLanguageID&gt;
               &lt;XmlModuleVersionMajor&gt;0&lt;/XmlModuleVersionMajor&gt;
               &lt;XmlModuleVersionMinor&gt;43&lt;/XmlModuleVersionMinor&gt;
               &lt;LanguageID&gt;2&lt;/LanguageID&gt;
               &lt;VersionMajor&gt;0&lt;/VersionMajor&gt;
               &lt;VersionMinor&gt;2&lt;/VersionMinor&gt;
               &lt;Applicabilities /&gt;
               &lt;Applics /&gt;
               &lt;/CassisTIConfiguration&gt;
            </div>
            <div class="para e371">With ProX-based pipeline processing added, the XSL-FO is just one of several
               stylesheets run by the pipelines, and so, if a system configuration pointing out a
               root XML file is opened first, the user must 
               <div class="emphasis e372">associate</div> a saved
               process with the configuration or configure a new one before the XML can be
               processed.
            </div>
            <div class="para e373">The 
               <div class="quote e374">configuration</div> files that point out the root XML and some
               system-specific metadata now also list each and every saved ProX instance (basically
               an instance of the blueprint code in 
               <div class="xref e375" linkend="section_n4d_s1g_xj"></div>)
               associated with that specific configuration, including a default PDF publishing
               instance, so there will be at least one process to use. New ones can be defined
               later.
            </div>
            <div class="programlisting e376" xml:space="preserve">&lt;?xml version="1.0" encoding="utf-8"?&gt;
               &lt;CassisTIConfiguration&gt;
               ...
               &lt;Description&gt;Balisage 2012 whitepaper&lt;/Description&gt;
               ...
               &lt;Processes&gt;
               &lt;Process&gt;
               &lt;!-- Blueprint --&gt;
               &lt;ProXBlueprint&gt;
               &lt;ID&gt;&lt;!-- System ID --&gt;&lt;/ID&gt;
               &lt;URN&gt;&lt;!-- Blueprint URN --&gt;&lt;/URN&gt;
               &lt;ProXName&gt;&lt;!-- Name of blueprint --&gt;&lt;/ProXName&gt;
               &lt;/ProXBlueprint&gt;
               &lt;!-- Instances associated with config, selectable by user --&gt;
               &lt;ProXInstance&gt;
               &lt;ID&gt;&lt;/ID&gt;
               &lt;URN&gt;urn:x-cassis:r1:cos:00008295:en-GB:0.5&lt;/URN&gt;
               &lt;ProXName&gt;PDF Publishing&lt;/ProXName&gt;
               &lt;/ProXInstance&gt;
               &lt;/Process&gt;
               ...
               &lt;/Processes&gt;
               &lt;/CassisTIConfiguration&gt;
            </div>
            <div class="para e377">The configuration file is used by the system by something called 
               <div class="emphasis e378">Process
                  Manager
               </div> as a shortcut for processing XML, including translation
               handling of the XML. I tend to liken it to a postit note placed on a specific XML
               document (comprising of several modules in specific versions), describing a specific
               process such as the PDF publishing for customer delivery of a specific version and
               translation of the document. For more on this, see 
               <div class="xref e379" linkend="id-balVol08-Nordstrom01"></div>.
            </div>
         </div>
      </div><a name="XForms:GeneratingtheGUIPt2ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e380" xml:id="section_rvp_fr5_wj">
         <div class="title e381">XForms: Generating the GUI, Pt 2</div>
         <div class="para e382">I set out to do the user interface with XForms, but as promising the standard was
            for
            me, getting my head around the MVC model was not easy.
         </div>
         <div class="para e383">My first hypothesis was to read the relevant nodes from the blueprint, list the
            
            <div class="code e384">process</div> metadata's 
            <div class="code e385">title</div> contents in a
            
            <div class="code e386">select1</div>
            
            <div class="code e387">itemset</div>, select one and copy it to the target instance, then repeat for the
            
            <div class="code e388">pipeline</div>, 
            <div class="code e389">cmdline</div> and 
            <div class="code e390">package</div> choices. This
            was a wizard-like approach, with every wizard step showing and hiding the appropriate
            configurations in a switch/case form.
         </div>
         <div class="para e391">Having banged my head against the wall trying a 
            <div class="code e392">copy</div> inside an
            
            <div class="code e393">itemset</div>, Mark Lawson pointed out that 
            <div class="emphasis e394">XSLTForms</div>
            does not support 
            <div class="code e395">copy</div> and suggested a far easier way. In a somewhat
            shortened form:
         </div>
         <div class="programlisting e396" xml:space="preserve">
            &lt;?xml-stylesheet href="xsltforms/xsltforms-1.0RC/xsltforms/xsltforms.xsl" type="text/xsl"?&gt;
            &lt;?xsltforms-options debug="no"?&gt;
            &lt;html 
            xmlns="http://www.w3.org/1999/xhtml" 
            xmlns:ev="http://www.w3.org/2001/xml-events" 
            xmlns:xs="http://www.w3.org/2001/XMLSchema" 
            xmlns:xf="http://www.w3.org/2002/xforms"&gt;
            &lt;head&gt;
            &lt;link type="text/css" rel="stylesheet" href="style.css"/&gt;
            &lt;title&gt;Cassis Process Configuration&lt;/title&gt;
            
            &lt;!-- Model --&gt;
            &lt;xf:model&gt;
            &lt;!-- Temp data from the selections --&gt;
            &lt;xf:instance id="scratchpad"&gt;
            &lt;data xmlns=""&gt;
            &lt;theprocess/&gt;
            &lt;thepipeline/&gt;
            &lt;thecmds/&gt;
            &lt;thepackages/&gt;
            &lt;commonpackages/&gt;
            &lt;/data&gt;
            &lt;/xf:instance&gt;
            
            &lt;!-- Target for built process --&gt;
            &lt;xf:instance id="mytarget"&gt;
            &lt;data xmlns=""&gt;
            &lt;processes&gt; &lt;/processes&gt;
            &lt;/data&gt;
            &lt;/xf:instance&gt;
            
            &lt;!-- Source ProX Blueprint --&gt;
            &lt;xf:instance 
            src="prox-blueprint.xml" 
            id="mysource"/&gt;
            &lt;xf:bind 
            type="xs:boolean" 
            nodeset="instance('mysource')//param[@ctype='boolean']/value"/&gt;
            
            &lt;!-- Set the list defaults to be first values in the ProX instance --&gt;
            &lt;xf:action ev:event="xforms-ready"&gt;
            &lt;xf:setvalue 
            ref="theprocess" 
            value="instance('mysource')/process[1]/@id"/&gt;
            &lt;xf:setvalue 
            ref="thepipeline" 
            value="instance('mysource')/process[1]/pipelines/pipeline[1]/@id"/&gt;
            &lt;xf:setvalue 
            ref="thecmds" 
            value="instance('mysource')/process[1]/pipelines/pipeline[1]/cmdlines/cmdline[1]/@id"/&gt;
            &lt;xf:setvalue 
            ref="thepackages"/&gt;
            &lt;xf:setvalue 
            ref="commonpackages" 
            value="instance('mysource')/processes/packages"/&gt;
            &lt;/xf:action&gt;
            
            &lt;!-- Save the configured proX instance --&gt;
            &lt;xf:submission 
            ref="instance('mytarget')/processes" 
            replace="instance" 
            method="put" 
            action="prox-instance.xml" 
            id="save"/&gt;
            &lt;/xf:model&gt;
            &lt;/head&gt;
            &lt;body&gt;
            &lt;h3&gt;Process Configuration&lt;/h3&gt;
            &lt;table&gt;
            &lt;tr&gt;
            &lt;td&gt;
            &lt;!-- Process --&gt;
            &lt;fieldset&gt;
            &lt;legend&gt;Process&lt;/legend&gt;
            &lt;div class="block-form"&gt;
            &lt;xf:select1 
            appearance="compact" 
            incremental="false" 
            ref="theprocess"&gt;
            &lt;xf:label/&gt;
            &lt;xf:item id="item-proc-dummy"&gt;
            &lt;xf:label&gt;Select a process&lt;/xf:label&gt;
            &lt;xf:value&gt;Nothing&lt;/xf:value&gt;
            &lt;/xf:item&gt;
            &lt;xf:itemset 
            id="item-proc" 
            nodeset="instance('mysource')/process"&gt;
            &lt;xf:label ref="./metadata/title"/&gt;
            &lt;xf:value ref="./@id"/&gt;
            &lt;/xf:itemset&gt;
            &lt;xf:setvalue 
            ref="../thepipeline" 
            ev:event="DOMFocusIn" 
            value="'Nothing'"/&gt;
            &lt;/xf:select1&gt;
            &lt;/div&gt;
            &lt;/fieldset&gt;
            &lt;/td&gt;
            &lt;td&gt;
            &lt;!-- Pipeline --&gt;
            &lt;fieldset&gt;
            &lt;legend&gt;Pipeline&lt;/legend&gt;
            &lt;div class=" block-form"&gt;
            &lt;xf:select1 
            appearance="compact" 
            incremental="false" 
            ref="thepipeline" 
            id="id-pipe"&gt;
            &lt;xf:label/&gt;
            &lt;xf:item id="item-pipe-dummy"&gt;
            &lt;xf:label&gt;Select a pipeline&lt;/xf:label&gt;
            &lt;xf:value&gt;Nothing&lt;/xf:value&gt;
            &lt;/xf:item&gt;
            &lt;xf:itemset 
            id="item-pipe" 
            nodeset="instance('mysource')/process[@id = instance('scratchpad')/theprocess]/pipelines/pipeline"&gt;
            &lt;xf:label ref="./metadata/title"/&gt;
            &lt;xf:value ref="@id"/&gt;
            &lt;/xf:itemset&gt;
            &lt;xf:setvalue 
            ref="../thecmds" 
            ev:event="DOMFocusIn" 
            value="'Nothing'"/&gt;
            &lt;/xf:select1&gt;
            &lt;/div&gt;
            &lt;/fieldset&gt;
            &lt;/td&gt;
            &lt;td&gt;
            &lt;!-- Commands --&gt;
            &lt;fieldset&gt;
            &lt;legend&gt;Output&lt;/legend&gt;
            &lt;div class="block-form"&gt;
            &lt;xf:select1 
            appearance="compact" 
            incremental="false" 
            ref="thecmds" 
            id="id-cmd"&gt;
            &lt;xf:label/&gt;
            &lt;xf:item id="item-cmd-dummy"&gt;
            &lt;xf:label&gt;Select output options&lt;/xf:label&gt;
            &lt;xf:value&gt;Nothing&lt;/xf:value&gt;
            &lt;/xf:item&gt;
            &lt;xf:itemset 
            id="item-cmd" 
            nodeset="instance('mysource')/process[@id = instance('scratchpad')/theprocess]/pipelines/pipeline[@id
            = instance('scratchpad')/thepipeline]/cmdlines/cmdline"&gt;
            &lt;xf:label ref="metadata/title"/&gt;
            &lt;xf:value ref="@id"/&gt;
            &lt;/xf:itemset&gt;
            &lt;/xf:select1&gt;
            &lt;/div&gt;
            &lt;/fieldset&gt;
            
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td class="debug"&gt;
            &lt;xf:output ref="instance('mysource')//process[@id=instance('scratchpad')/theprocess]/metadata/title"&gt;
            &lt;xf:label&gt;Selected: &lt;/xf:label&gt;
            &lt;/xf:output&gt;
            &lt;/td&gt;
            
            &lt;td class="debug"&gt;
            &lt;xf:output ref="instance('mysource')//pipeline[@id=instance('scratchpad')/thepipeline]/metadata/title"&gt;
            &lt;xf:label&gt;Selected: &lt;/xf:label&gt;
            &lt;/xf:output&gt;
            &lt;/td&gt;
            &lt;td class="debug"&gt;
            &lt;xf:output ref="instance('mysource')//cmdline[@id=instance('scratchpad')/thecmds]/metadata/title"&gt;
            &lt;xf:label&gt;Selected: &lt;/xf:label&gt;
            &lt;/xf:output&gt;
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;/table&gt;
            &lt;xf:trigger&gt;
            &lt;xf:label&gt;Save&lt;/xf:label&gt;
            &lt;xf:action ev:event="DOMActivate"&gt;
            &lt;xf:delete nodeset="instance('mytarget')/processes/process"/&gt;
            &lt;xf:delete nodeset="instance('mytarget')/processes/packages"/&gt;
            &lt;xf:insert context="instance('mytarget')/processes" origin="instance('mysource')/process[@id
            = instance('scratchpad')/theprocess]"/&gt;
            &lt;xf:insert context="instance('mytarget')/processes" origin="instance('mysource')/packages"
            if="instance('mysource')/packages"/&gt;
            &lt;xf:delete nodeset="instance('mytarget')/processes/process[1]/pipelines/pipeline[@id
            != instance('scratchpad')/thepipeline]"/&gt;
            &lt;xf:delete nodeset="instance('mytarget')/processes/process[1]/pipelines/pipeline[1]/cmdlines/cmdline[@id
            != instance('scratchpad')/thecmds]"/&gt;
            &lt;xf:send submission="save"/&gt;
            &lt;/xf:action&gt;
            &lt;/xf:trigger&gt;
            &lt;/body&gt;
            &lt;/html&gt;
         </div>
         <div class="para e397">Note the following:
            <div class="itemizedlist e398">
               <div class="listitem e399">
                  <div class="para e400">The 
                     <div class="code e401">scratchpad</div> instance, containing IDs of the selected ProX
                     components.
                  </div>
               </div>
               <div class="listitem e402">
                  <div class="para e403">The 
                     <div class="code e404">target</div> instance and the 
                     <div class="code e405">trigger</div> that writes
                     to it near the end.
                  </div>
               </div>
               <div class="listitem e406">
                  <div class="para e407">And, of course, the 
                     <div class="code e408">select1</div>s handling the
                     
                     <div class="code e409">process</div>, 
                     <div class="code e410">pipeline</div> and 
                     <div class="code e411">cmdline</div>
                     
                     <div class="code e412">ID</div>s, respectively.
                  </div>
               </div>
            </div>
            
         </div>
         <div class="para e413">This produces a GUI that writes the selected 
            <div class="code e414">id</div> to the scratchpad,
            refreshing the next 
            <div class="code e415">select1</div>
            
            <div class="code e416">itemset</div>, until done, like so:
         </div>
         <div class="figure e417" xml:id="figure_hxq_rnj_xj">
            <div class="title e418">The Basic ProX GUI</div>
            <div class="mediaobject e419">
               <div class="imageobject e420">
                  <div class="metaBox e421"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e878').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e878" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e421'
                           </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-013.jpg'
                           </span><span class="metaAttribute">width='300px'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e422">The result is saved to a target ProX instance: 
            <div class="code e423">instance('mysource')/process[@id
               = instance('scratchpad')/theprocess]
            </div> is copied using 
            <div class="code e424">insert</div>. The
            pipelines and command lines that do 
            <div class="emphasis e425">not</div> match the IDs in the
            scratchpad instance, 
            <div class="code e426">pipeline[@id != instance('scratchpad')/thepipeline]</div>
            and 
            <div class="code e427">cmdline[@id != instance('scratchpad')/thecmds]</div>, respectively, are then
            deleted from the target. 
         </div><a name="SingleChoiceProblemsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e428" xml:id="section_psw_1t5_wj">
            <div class="title e429">Single-Choice Problems</div>
            <div class="para e430">The first working GUI looked like this:</div>
            <div class="figure e431">
               <div class="title e432">Bal2013nord-2-012812.jpg</div>
               <div class="mediaobject e433">
                  <div class="imageobject e434">
                     <div class="metaBox e435"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e906').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e906" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e435'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-014.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e436">With two or more of each choice, it worked perfectly, but if only single choice
               was available, this resulted in the IDs not being updated in the scratchpad
               instance:
            </div>
            <div class="figure e437" xml:id="figure_dhq_cd1_xj">
               <div class="title e438">Pipeline ID Not Updated</div>
               <div class="mediaobject e439">
                  <div class="imageobject e440">
                     <div class="metaBox e441"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e914').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e914" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e441'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-015.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e442">Note that while the process is selected and its ID listed, the pipeline ID listed
               in the scratchpad debug output (below the form) belongs to a previous selection
               rather than the apparently selected one. The 
               <div class="code e443">cmdline</div>
               
               <div class="code e444">ID</div> in the scratchpad also belongs to a previous selection, but the
               current 
               <div class="code e445">cmdline</div> selection does not show any values at all. If the
               current state was written to a process instance, the selections would be wrong and
               the process would fail.
            </div>
            <div class="para e446">This happened because the selected 
               <div class="code e447">process</div> contained only a single
               
               <div class="code e448">pipeline</div> and value changed-events do not fire as expected in
               single-item lists. 
            </div>
            <div class="para e449">Better is to add a 
               <div class="emphasis e450">static</div>
               
               <div class="code e451">item</div>s before the 
               <div class="code e452">itemset</div>s, like this:
            </div>
            <div class="programlisting e453" xml:space="preserve">&lt;xf:select1 
               appearance="compact" 
               incremental="false" 
               ref="theprocess"&gt;
               &lt;xf:label/&gt;
               &lt;xf:item id="item-proc-dummy"&gt;
               &lt;xf:label&gt;Select a process&lt;/xf:label&gt;
               &lt;xf:value&gt;Nothing&lt;/xf:value&gt;
               &lt;/xf:item&gt;
               &lt;xf:itemset ...&gt;
               ...
               &lt;/xf:itemset&gt;
               ...
               &lt;/xf:select1&gt;
            </div>
            <div class="para e454">This introduces a 
               <div class="quote e455">dummy</div> value, ensuring that the form is updated
               regardless of the number of items. To make sure that the selection of a
               
               <div class="quote e456">parent</div> forces the update of the 
               <div class="quote e457">child</div>, you set the
               value of the 
               <div class="quote e458">child</div> to a dummy value, forcing the user to actively
               choose an option. For example, if you change the pipeline selection, this makes sure
               that the next option in line, the command line list, is updated with a static
               value:
            </div>
            <div class="programlisting e459" xml:space="preserve">&lt;xf:select1 ...&gt;
               &lt;xf:label/&gt;
               ...
               &lt;xf:setvalue 
               ref="../thecmds" 
               ev:event="DOMFocusIn" 
               value="'Nothing'"/&gt;
               &lt;/xf:select1&gt;
            </div>
            <div class="para e460">This setup has all kinds of advantages: styling becomes easier (a nonexistent list
               can't be easily fixed in the CSS, as far as I know; see 
               <div class="xref e461" linkend="figure_dhq_cd1_xj"></div>),
               subforms that configure aspects of the selected group can be shown, and conditions
               for saving the configured process can be imposed, not allowing a Save before all
               selections have been made.
            </div>
         </div><a name="UserconfigurableParametersANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e462">
            <div class="title e463">User-configurable Parameters</div>
            <div class="para e464">The user-configurable stylesheet parameters are set in the 
               <div class="code e465">input</div>
               structure (see 
               <div class="xref e466" linkend="section_qrx_nxg_wj"></div>) that links to the package. Here's a complete
               
               <div class="code e467">input</div> for a stylesheet used by a PDF publishing pipeline:
            </div>
            <div class="programlisting e468" xml:space="preserve">&lt;input choice="no" id="input-2013-4-9-16-53-8-39562387-1"&gt;
               &lt;port id="port-2013-4-9-16-53-8-39562387-1"&gt;stylesheet&lt;/port&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="pkg"
               xlink:href="urn:x-cassis:r1:cos:00002712:sv-SE:0.1#id-xslfo-cosml"
               xlink:type="simple" id="value-2013-4-9-16-53-8-39562387-1"
               xlink:title=" XSL-FO Package for COSML PDF Converts COSML documents 
               to XSL-FO format for COS PDF layout "/&gt;
               &lt;params id="params-2013-4-9-16-53-8-39562387-"&gt;
               &lt;!-- Index generation --&gt;
               &lt;param 
               choice="yes" 
               ctype="boolean" 
               id="param-2013-4-9-16-53-8-39562387-"&gt;
               &lt;port id="port-2013-4-9-16-53-8-39562387-2"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-4-9-16-53-8-39562387-"&gt;generate.index&lt;/name&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="string"
               xlink:type="simple" 
               id="value-2013-4-9-16-53-8-39562387-2"&gt;false&lt;/value&gt;
               &lt;/param&gt;
               &lt;!-- XEP Extensions --&gt;
               &lt;param 
               choice="no" 
               id="param-2013-4-9-16-53-8-39562387-1"&gt;
               &lt;port id="port-2013-4-9-16-53-8-39562387-3"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-4-9-16-53-8-39562387-1"&gt;xep.extensions&lt;/name&gt;
               &lt;value xmlns:xlink="http://www.w3.org/1999/xlink" type="string"
               xlink:type="simple" id="value-2013-4-9-16-53-8-39562387-3"
               &gt;0&lt;/value&gt;
               &lt;/param&gt;
               &lt;!-- XSL-FO Bookmark Generation --&gt;
               &lt;param 
               choice="yes" 
               ctype="boolean"
               id="param-2013-4-9-16-53-8-39562387-2"&gt;
               &lt;port id="port-2013-4-9-16-53-8-39562387-4"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-4-9-16-53-8-39562387-2"&gt;xslfo.bookmarks&lt;/name&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="string"
               xlink:type="simple" id="value-2013-4-9-16-53-8-39562387-4"&gt;true&lt;/value&gt;
               &lt;/param&gt;
               &lt;!-- TOC Generation --&gt;
               &lt;param 
               choice="yes" 
               ctype="boolean"
               id="param-2013-4-9-16-53-8-39514778-2"&gt;
               &lt;port id="port-2013-4-9-16-53-8-9653444-4"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-4-9-16-53-8-1928364-2"&gt;create.toc&lt;/name&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="string"
               xlink:type="simple" 
               id="value-2013-7-10-16-53-8-764625737-3"&gt;true&lt;/value&gt;
               &lt;/param&gt;
               &lt;!-- TOC Depth --&gt;
               &lt;param 
               choice="yes" 
               ctype="list1"
               id="param-2013-4-9-16-53-8-2385485-2"
               group="value-2013-7-10-16-53-8-764625737-3"&gt;
               &lt;port id="port-2013-7-10-16-34-8-9283444-4"&gt;xslt-params&lt;/port&gt;
               &lt;name id="name-2013-7-10-16-50-3-1946564-2"&gt;toc.depth&lt;/name&gt;
               &lt;value 
               xmlns:xlink="http://www.w3.org/1999/xlink" 
               type="string"
               xlink:type="simple" 
               id="value-2013-7-10-16-53-8-764625737-4"&gt;2&lt;/value&gt;
               &lt;value
               xmlns:xlink="http://www.w3.org/1999/xlink"
               id="value-13-07-10-12345-1" 
               type="string"&gt;1&lt;/value&gt;
               &lt;value
               xmlns:xlink="http://www.w3.org/1999/xlink"
               id="value-13-07-10-12345-2" 
               type="string"&gt;3&lt;/value&gt;
               &lt;/param&gt;
               &lt;/params&gt;
               &lt;/input&gt;
            </div>
            <div class="para e469">Note that not all of the parameters are made available as choices
               (
               <div class="code e470">choice="no"</div>).
            </div>
            <div class="para e471">Having the parameter definitions include data types greatly simplifies generating
               a GUI. As the values are not usually typed in the stylesheets that use them, the
               proX blueprint author must take care to define data types for every parameter made
               available as a user-configurable option.
            </div>
            <div class="para e472">The configuration options are shown or hidden using a grouping of forms in
               combination with CSS that hides a disabled group in the XForm
               <div class="popupBox e473">
                  <div class="popupLabel" onmouseover="$('#d1e992').show('1000');" onmouseout="$('#d1e992').hide('1000');">[ footnote ]</div>
                  <div id="d1e992" style="display: none;">
                     <div class="footnote">
                        <div class="para e474">Provided that they are made available to the user in the first
                           place.
                        </div>
                     </div>
                  </div>
               </div>. The following group generates controls for a selected command line
               (
               <div class="code e475">cmdline</div>). It is hidden if there are no user-configurable
               parameters for that 
               <div class="code e476">cmdline</div>.
            </div>
            <div class="programlisting e477" xml:space="preserve">&lt;xf:group 
               ref="instance('mysource')//cmdline[@id=instance('scratchpad')/thecmds]//param[@choice='yes'
               
               and @ctype='boolean']"&gt;
               &lt;div class="block-form"&gt;
               &lt;fieldset class="config"&gt;
               &lt;legend&gt;Configuration&lt;/legend&gt;
               
               &lt;xf:repeat 
               id="b-ctrl"
               nodeset="instance('mysource')//cmdline[@id=instance('scratchpad')/thecmds]//param[@choice='yes'
               and @ctype='boolean']"&gt;
               &lt;xf:input 
               ref="value" 
               appearance="full"&gt;
               &lt;xf:label&gt;
               &lt;xf:output ref="../name"/&gt;
               &lt;/xf:label&gt;
               &lt;/xf:input&gt;
               &lt;/xf:repeat&gt;
               
               &lt;xf:repeat 
               nodeset="instance('mysource')//cmdline[@id=instance('scratchpad')/thecmds]//param[@ctype='list1'
               and (not(@group) or (@group=//param[@choice='yes']/@id))]"&gt;
               &lt;xf:select1 
               appearance="minimal" 
               incremental="false" 
               ref="value"&gt;
               &lt;xf:label&gt;
               &lt;xf:output ref="../name"/&gt;
               &lt;/xf:label&gt;
               &lt;xf:itemset nodeset="instance('mysource')//cmdline[@id=instance('scratchpad')/thecmds]//param[@ctype='list1'
               and (not(@group) or (@group=//param[@choice='yes']/@id))]/value"&gt;
               &lt;xf:label ref="."/&gt;
               &lt;xf:value ref="@id"/&gt;
               &lt;/xf:itemset&gt;
               &lt;/xf:select1&gt;
               &lt;/xf:repeat&gt;
               &lt;/fieldset&gt;
               &lt;/div&gt;
               &lt;/xf:group&gt;
            </div>
            <div class="para e478">The current GUI design gathers all configurable options within the
               
               <div class="code e479">cmdline</div> group rather than having any of them appear when the
               pipeline is selected. This is a design choice rather than a technical one; see 
               <div class="xref e480" linkend="section_sqy_ms5_wj"></div>.
            </div>
            <div class="figure e481" xml:id="id-param-config">
               <div class="title e482">Parameter Configuration</div>
               <div class="mediaobject e483">
                  <div class="imageobject e484">
                     <div class="metaBox e485"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1016').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1016" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e485'
                              </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-016.jpg'
                              </span><span class="metaAttribute">width='300px'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e486">The above is able to generate boolean and single-choice list controls. Of course,
               other controls may be added, for example, to select a date or enter a text string
               to
               be included in the process output.
            </div>
         </div>
      </div><a name="InitiatingandRunningProXANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e487" xml:id="section_igv_5t5_wj">
         <div class="title e488">Initiating and Running ProX</div>
         <div class="para e489">Running the overall process, that is, initiating and running the ProX XForms template,
            saving the resulting ProX instance and converting it to a shell script or batch file
            (or
            some other file executing a pipeline engine) involves the following:
            <div class="orderedlist e490">
               <div class="listitem e491">
                  <div class="para e492">Locate and fetch the ProX blueprint. Normalise, if necessary.</div>
               </div>
               <div class="listitem e493">
                  <div class="para e494">Locate and fetch all files that are part of the processing as defined by
                     the blueprint, including the input XML, stylesheets, XProc, XForms XHTML,
                     configuration files, etc. Map their URNs to temporary URLs in a resource map
                     XML file (see 
                     <div class="xref e495" linkend="id-resource-map"></div>).
                  </div>
               </div>
               <div class="listitem e496">
                  <div class="para e497">Generate any runtime URLs for the target files for the process, as defined
                     by the blueprint. Map these in the resource map XML, adding the ProX IDs
                     (see 
                     <div class="xref e498" linkend="id-targets"></div>) where needed.
                  </div>
               </div>
               <div class="listitem e499">
                  <div class="para e500">Preprocess the XForms XHTML, adding the URL to the ProX blueprint and
                     other information required by the XForm.
                  </div>
               </div>
               <div class="listitem e501">
                  <div class="para e502">Open the the XForms XHTML.</div>
               </div>
               <div class="listitem e503">
                  <div class="para e504">Make choices in the XForm as necessary. Save (and close) the a ProX
                     instance. 
                  </div>
               </div>
               <div class="listitem e505">
                  <div class="para e506">Replace any URNs in the source XML to be processed with matching temporary
                     URNs.
                  </div>
               </div>
               <div class="listitem e507">
                  <div class="para e508">Add runtime information to the ProX instance (input XML, target URLs,
                     etc). 
                  </div>
               </div>
               <div class="listitem e509">
                  <div class="para e510">Convert the ProX instance to a shell script.</div>
               </div>
               <div class="listitem e511">
                  <div class="para e512">Run the script.</div>
               </div>
               <div class="listitem e513">
                  <div class="para e514">Capture the output.</div>
               </div>
            </div>
         </div>
         <div class="para e515">All of the above is handled by a wrapper XProc pipeline (
            <div class="xref e516" linkend="id-wrapper"></div>).
         </div><a name="TheResourceMapANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e517" xml:id="id-resource-map">
            <div class="title e518">The Resource Map</div>
            <div class="para e519">When processing an XML file, the system needs to list all files required by the
               wrapper pipeline process and the resulting child pipeline process in a
               
               <div class="emphasis e520">resource map XML file</div>, mapping their URNs to temporary
               URLs. This includes the XML to be processed, of course, but also any images and
               other non-XML data. Every XSLT stylesheet required for the processing (for the
               wrapper process as well as the child process) must be listed, as must all XProc
               scripts and whatever files they require.
            </div>
            <div class="para e521">Also, the system must generate temporary URLs (and, depending on the result, URNs)
               for any resulting files.
            </div>
            <div class="para e522">The resource map is then used as the sole input by the wrapper pipeline
               process.
            </div>
            <div class="para e523">All of these files are either listed directly in the ProX blueprint (when known),
               or pointed out indirectly, using the attribute 
               <div class="citation e524">type</div> set to
               
               <div class="quote e525">external</div>. A ProX process starts with the generation of a basic
               resource map file, using a simple XSLT stylesheet applied to the ProX
               blueprint.
            </div>
            <div class="para e526">The resource map looks like this:</div>
            <div class="programlisting e527" xml:space="preserve">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
               &lt;resource-map&gt;
               
               &lt;!-- Source Modules Listed here --&gt;
               &lt;docs&gt;
               
               &lt;!-- NOTE: The doc lists can contain duplicate modules, with the same URN/URL
               pairs. The ProX wrapper XProc and XSLT will handle them. --&gt;
               
               &lt;!-- Document #1 --&gt;
               &lt;!-- One doc, with root and modules incl images --&gt;
               &lt;doc id=""&gt;
               
               &lt;!-- Root document from Process Manager configuration --&gt;
               &lt;!-- ProX instance needs this value --&gt;
               &lt;!-- //*/@type=''external' and //*/@input-type='doc-root' --&gt;
               &lt;root&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:testroot&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/test-root.xml&lt;/url&gt;
               &lt;type&gt;doc-root&lt;/type&gt;
               &lt;prox-id&gt;value-2013-4-9-16-53-8-39562387-&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/root&gt;
               
               &lt;!-- All modules linked from root or its descendants --&gt;
               &lt;!-- XML, images, etc --&gt;
               &lt;modules&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:image1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/image3.jpg&lt;/url&gt;
               &lt;type&gt;jpg&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset1.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset2&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset2.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset3&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset3.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset4&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset4.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:block-inset1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/block-inset1.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;/modules&gt;    
               &lt;/doc&gt;
               
               
               &lt;!-- Document #2 --&gt;
               &lt;doc id=""&gt;
               
               &lt;!-- Root document from Process Manager configuration --&gt;
               &lt;!-- ProX instance needs this value --&gt;
               &lt;!-- //*/@type=''external' and //*/@input-type='doc-root' --&gt;
               &lt;root&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:testroot&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/test-root.xml&lt;/url&gt;
               &lt;type&gt;doc-root&lt;/type&gt;
               &lt;prox-id&gt;id-html-docroot&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/root&gt;
               
               &lt;!-- All modules linked from root or its descendants --&gt;
               &lt;!-- XML, images, etc --&gt;
               &lt;modules&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:image1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/image3.jpg&lt;/url&gt;
               &lt;type&gt;jpg&lt;/type&gt;
               &lt;transl&gt;1&lt;/transl&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset1.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset2&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset2.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset3&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset3.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:inset4&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/inset4.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:block-inset1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/block-inset1.xml&lt;/url&gt;
               &lt;type&gt;xml&lt;/type&gt;
               &lt;/resource&gt;
               &lt;/modules&gt;    
               &lt;/doc&gt;
               
               &lt;/docs&gt;
               
               
               &lt;!-- Runtime targets --&gt;
               &lt;targets&gt;
               &lt;resource&gt;
               &lt;urn&gt;URN-FOR-OUTPUT&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/my-pdf-internal-file.pdf&lt;/url&gt;
               &lt;type&gt;primary&lt;/type&gt;
               &lt;prox-id&gt;value-2013-4-9-16-53-8-39562387-6&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;URN2-FOR-OUTPUT&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/my-pdf-formal-file.pdf&lt;/url&gt;
               &lt;type&gt;primary&lt;/type&gt;
               &lt;prox-id&gt;value-2013-4-9-16-53-8-39562387-10&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;URN-FOR-XREF-XHTML-LOG&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/my-xref-check.htm&lt;/url&gt;
               &lt;type&gt;primary&lt;/type&gt;
               &lt;prox-id&gt;id-value-xref-htm&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;URN-FOR-FILES-LIST-XML&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/files.xml&lt;/url&gt;
               &lt;type&gt;secondary&lt;/type&gt;
               &lt;prox-id&gt;id-file-url&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;URN-FOR-HTM-OUT&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/my-xhtml-out.htm&lt;/url&gt;
               &lt;type&gt;primary&lt;/type&gt;
               &lt;prox-id&gt;id-htm-out&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/targets&gt;
               
               &lt;!-- ProX blueprint and saved instance(s) --&gt;
               &lt;prox&gt;
               &lt;!-- Blueprint used to get instance is here --&gt;
               &lt;blueprints&gt;
               &lt;resource id="id-prox-blueprint"&gt;
               &lt;urn&gt;URN-OF-PROX-BLUEPRINT&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/prox-blueprint.xml&lt;/url&gt;
               &lt;type&gt;&lt;/type&gt;
               &lt;prox-id&gt;&lt;/prox-id&gt;
               &lt;/resource&gt;    
               &lt;/blueprints&gt;
               
               &lt;!-- Saved instance to run with wrapper is here --&gt;
               &lt;!-- All these are associated with .config files --&gt;
               &lt;!-- Input to wrapper pipeline --&gt;
               &lt;instances&gt;
               &lt;resource id="id-prox-saved-instance"&gt;
               &lt;urn&gt;URN-OF-SAVED-PROX-INSTANCE&lt;/urn&gt;
               &lt;!--&lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/test-instance.xml&lt;/url&gt;--&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/prox-instance.xml&lt;/url&gt;
               &lt;type&gt;&lt;/type&gt;
               &lt;prox-id&gt;&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/instances&gt;
               &lt;/prox&gt;
               
               &lt;!-- Resources used by ProX Processes --&gt;
               &lt;prox-resources&gt;
               
               &lt;!-- PDF Publishing XProc --&gt;
               &lt;package&gt;
               &lt;name&gt;XProc Pipeline for Normalize, Validate
               and PDF&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002715:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/XProc/publish-cosml-pdf.xpl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-10-10-32-24-12830403-&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- PDF Publishing XSL-FO, Internal --&gt;
               &lt;package&gt;
               &lt;name&gt;XSL-FO Package for COSML PDF&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000232:sv-SE:0.6&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/cos-fo-internal.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-1&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000074:sv-SE:0.11&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/param.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-2&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000059:sv-SE:0.2&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/attribute-set.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-3&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000070:sv-SE:0.15&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/layout.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-4&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000876:sv-SE:0.2&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/bookmarks.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-5&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000075:sv-SE:0.17&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/static-content.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-6&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000072:sv-SE:0.10&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/meta-data.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-7&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000078:sv-SE:0.9&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/toc.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-8&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000062:sv-SE:0.9&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/body.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-9&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000233:sv-SE:0.8&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/sections.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-10&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000061:sv-SE:0.29&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/block.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-11&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000065:sv-SE:0.6&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/inline.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-12&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000071:sv-SE:0.6&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/list.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-13&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000077:sv-SE:0.6&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/table.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-14&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000079:sv-SE:0.7&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/xref.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-15&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000060:sv-SE:0.7&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/back.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-16&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000064:sv-SE:0.8&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/index.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-17&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000066:sv-SE:0.2&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/inset.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-18&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000069:sv-SE:0.3&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/l10n.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-19&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000063:sv-SE:0.3&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/extension.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-20&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000785:sv-SE:0.6&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/demo.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-21&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000076:sv-SE:0.10&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/strings.xml&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-22&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000230:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/logotyp.jpg&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-23&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000426:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/tux.jpg&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-24&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- XHTML Publishing XProc --&gt;
               &lt;package&gt;
               &lt;name&gt;XProc COSML2XHTML&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002756:sv-SE:0.2&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/XProc/publish-cosml-html.xpl&lt;/url&gt;
               &lt;prox-id&gt;id-xhtml-xproc&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- XHTML Publishing XSLT --&gt;
               &lt;package&gt;
               &lt;name&gt;COSML XHTML XSLT&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002755:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/Conversions/cosml2html-ti.xsl&lt;/url&gt;
               &lt;prox-id&gt;id-xhtml-xslt&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- Xref Check XProc --&gt;
               &lt;package&gt;
               &lt;name&gt;XProc Xref Check&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002757:sv-SE:0.2&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/XProc/xref-check-cosml.xpl&lt;/url&gt;
               &lt;prox-id&gt;id-xproc-xref&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- Xref Check XSLT --&gt;
               &lt;package&gt;
               &lt;name&gt;XSLT Xref Check&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002754:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/Conversions/link-target-check-multifile.xsl&lt;/url&gt;
               &lt;prox-id&gt;id-xslt-xref&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- Standard Normalize XSLT for Publishing --&gt;
               &lt;package&gt;
               &lt;name&gt;Normalize XSLT&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00000073:sv-SE:0.4&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Cassis/FO/normalize.xsl&lt;/url&gt;
               &lt;prox-id&gt;locator-2013-4-9-16-53-8-39562387-26&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- Calabash Engine Configuration --&gt;
               &lt;package&gt;
               &lt;name&gt;Calabash Configuration&lt;/name&gt;
               &lt;resources&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002745:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/xmlcalabash-1.0.9-94/conf-calabash.xml&lt;/url&gt;
               &lt;prox-id&gt;id-loc-calabash-config&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               &lt;/prox-resources&gt;
               
               
               &lt;!-- Wrapper stuff --&gt;
               &lt;wrapper-pipeline&gt;
               
               &lt;!-- Wrapper Pipeline Resources --&gt;
               &lt;package&gt;
               &lt;name&gt;Wrapper Pipeline Processing&lt;/name&gt;
               &lt;resources&gt;
               &lt;!-- Wrapper Pipeline --&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002735:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/prox-wrapper.xpl&lt;/url&gt;
               &lt;prox-id&gt;id-wrapper-xpl&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;!-- ProX Instance Update --&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002732:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/prox-fix.xsl&lt;/url&gt;
               &lt;prox-id&gt;id-prox-fix&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;!-- URN2URL for XML Input --&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002733:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/urn2url.xsl&lt;/url&gt;
               &lt;prox-id&gt;id-urn2url&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;!-- ProX Instance Conversion to Shell Script --&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002731:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/prox2shell.xsl&lt;/url&gt;
               &lt;prox-id&gt;id-prox2bat&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;!-- Engine parameters required by ProX to Shell Script conversion --&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:x-cassis:r1:cos:00002734:sv-SE:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/prox2shell-config.xml&lt;/url&gt;
               &lt;prox-id&gt;id-prox2shell-config&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               
               &lt;!-- XForm for ProX Process Configuration --&gt;
               &lt;package&gt;
               &lt;name&gt;ProX XForm&lt;/name&gt;
               &lt;resources&gt;
               &lt;!-- XForm for proX Blueprint Handling --&gt;
               &lt;resource&gt;
               &lt;urn&gt;urn:prox:xform:0.1&lt;/urn&gt;
               &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/prox-xform.xml&lt;/url&gt;
               &lt;prox-id&gt;id-loc-xform&lt;/prox-id&gt;
               &lt;/resource&gt;
               &lt;/resources&gt;
               &lt;/package&gt;
               &lt;/wrapper-pipeline&gt;
               &lt;/resource-map&gt;
               
            </div>
            <div class="para e528">This is a complete resource map example, matching the example ProX blueprint in
               
               <div class="xref e529" linkend="section_n4d_s1g_xj"></div>.
               Note that some of the URNs are for testing purposes only, while others come from the
               actual system.
            </div>
            <div class="para e530">The resource map is very much like a recipe; it lists every ingredient for every
               ProX process.
            </div><a name="DocsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e531">
               <div class="title e532">Docs</div>
               <div class="para e533">The 
                  <div class="code e534">docs</div> structure lists the input XML and any linked files. More
                  than one document may be listed, and some of those documents may be duplicates
                  because they originate from different pipelines or processes (as is the case in
                  the above resource map). For example, the same document may be used for both PDF
                  and web publishing in a single resulting process instance, and therefore be
                  listed several times. The wrapper pipeline will only process distinct values,
                  however, and there will be no physical duplicates in the temporary processing
                  folder.
               </div>
            </div><a name="TargetsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e535" xml:id="id-targets">
               <div class="title e536">Targets</div>
               <div class="para e537">The 
                  <div class="code e538">targets</div> structure lists the runtime target URLs generated by
                  the system. Every target URL is paired with a 
                  <div class="emphasis e539">ProX ID</div> so
                  that the subsequent processing can place the right URL in the right place in the
                  ProX instance:
               </div>
               <div class="programlisting e540" xml:space="preserve">&lt;targets&gt;
                  ...
                  &lt;resource&gt;
                  &lt;urn&gt;URN-FOR-FILES-LIST-XML&lt;/urn&gt;
                  &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/files.xml&lt;/url&gt;
                  &lt;type&gt;secondary&lt;/type&gt;
                  &lt;prox-id&gt;id-file-url&lt;/prox-id&gt;
                  &lt;/resource&gt;
                  &lt;resource&gt;
                  &lt;urn&gt;URN-FOR-HTM-OUT&lt;/urn&gt;
                  &lt;url&gt;file:///home/ari/mystuff/SGML/DTD/Process-XML/refactor/my-xhtml-out.htm&lt;/url&gt;
                  &lt;type&gt;primary&lt;/type&gt;
                  &lt;prox-id&gt;id-htm-out&lt;/prox-id&gt;
                  &lt;/resource&gt;
                  &lt;/targets&gt;
               </div>
               <div class="para e541">Notable is that ProX defines different types of output: 
                  <div class="quote e542">primary</div>
                  (see above) means that the file is something that the system should save, while
                  
                  <div class="quote e543">secondary</div> is a throwaway, a temporary URL that can be
                  discarded. There's also 
                  <div class="quote e544">log</div>, that means that the file can be
                  displayed by the system when the process has completed, but what happens to the
                  file later is up to the system to decide.
               </div>
            </div><a name="ProXResourcesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e545">
               <div class="title e546">ProX Resources</div>
               <div class="para e547">The 
                  <div class="code e548">prox</div> and 
                  <div class="code e549">prox-resources</div> structures list the ProX
                  blueprint and the ProX (runtime) instance URN/URL pairs, and the files used by
                  the processes described by the blueprint. The latter include any XSLT, XProc,
                  XML, etc, required for processing, but also any other types of files, whatever
                  they may be.
               </div>
            </div><a name="WrapperResourcesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e550">
               <div class="title e551">Wrapper Resources</div>
               <div class="para e552">The 
                  <div class="code e553">wrapper-pipeline</div> structure lists the resources required by
                  the wrapper pipeline, including the XForm and the wrapper pipeline
                  itself.
               </div>
            </div>
         </div><a name="TheWrapperPipelineANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e554" xml:id="id-wrapper">
            <div class="title e555">The Wrapper Pipeline</div>
            <div class="para e556">The wrapper pipeline has but one main task: to configure the child pipeline
               process. In principle, this involves producing a ProX instance from the blueprint,
               and then converting that instance to a shell script that is used to run the child
               pipeline process.
            </div>
            <div class="para e557">The wrapper pipeline requires a single input, the resource map XML file. It
               assumes that the process is carried out in a temporary folder, and that every
               required file is listed in the resource map and moved by the system to the temp
               folder; currently, there is no way for the wrapper to ask the system for a specific
               file based on its URN, even though that functionality is planned in a future
               version.
            </div>
            <div class="para e558">In a perfect world, the wrapper should be initiated by the system and then take
               over all of the processing, including configuring
               <div class="popupBox e559">
                  <div class="popupLabel" onmouseover="$('#d1e1157').show('1000');" onmouseout="$('#d1e1157').hide('1000');">[ footnote ]</div>
                  <div id="d1e1157" style="display: none;">
                     <div class="footnote">
                        <div class="para e560">The XForm needs to know the URL of the ProX blueprint to be used, and it
                           needs to be handed a temporary URL for the runtime ProX instance that
                           results (and a permanent new URN, if the process is saved for later).
                        </div>
                     </div>
                  </div>
               </div> and opening the XForm used to configure the Prox blueprint, wait for the
               user to make her choices and save the resulting instance, and then continue the
               wrapper pipeline process in preparation for the child process. In reality, there are
               a few problems, however:
            </div>
            <div class="para e561">There is currently no 
               <div class="quote e562">wait step</div> defined in the XProc spec (see Kurt
               Cagle's proposal at 
               <div class="xref e563" linkend="id-kurt-cagle-xproc"></div>, or my subsequent thread at 
               <div class="xref e564" linkend="id-wait-for-user"></div>). There
               is no easy way to have a pipeline wait for user input before continuing. What comes
               the closest is an XProc hack that looks something like this
               <div class="popupBox e565">
                  <div class="popupLabel" onmouseover="$('#d1e1170').show('1000');" onmouseout="$('#d1e1170').hide('1000');">[ footnote ]</div>
                  <div id="d1e1170" style="display: none;">
                     <div class="footnote">
                        <div class="para e566">And yes, the hack does include conditionals for OS X and Windows, in
                           addition to Linux. Know that OS X is a pain if you want to try this at
                           home.
                        </div>
                     </div>
                  </div>
               </div>:
            </div>
            <div class="programlisting e567" xml:space="preserve">&lt;!-- Open ProX Blueprint in Browser --&gt;
               &lt;!-- Opens with an XForms profile in order
               to start a separate browser instance --&gt;
               &lt;p:choose name="browse"&gt;
               &lt;!-- Linux --&gt;
               &lt;p:when test="$os='linux'"&gt;
               &lt;p:exec 
               cx:depends-on="fix-xform"
               command="/usr/bin/iceweasel"&gt;
               &lt;p:input port="source"&gt;
               &lt;p:empty/&gt;
               &lt;/p:input&gt;
               &lt;p:with-option name="args" select="concat('-P &amp;quot;XForms&amp;quot; -no-remote ',$xform-url)"/&gt;
               &lt;/p:exec&gt;
               &lt;p:sink/&gt;
               &lt;/p:when&gt;
               
               &lt;!-- Mac OS X --&gt;
               &lt;p:when test="$os='osx'"&gt;
               ...
               &lt;/p:when&gt;
               
               &lt;!-- Windows --&gt;
               &lt;p:when test="$os='win'"&gt;
               ...
               &lt;/p:when&gt;
               &lt;/p:choose&gt;
            </div>
            <div class="para e568">What happens here is basically that while there is no way to tell something like
               an 
               <div class="code e569">http-request</div> to wait, at least Calabash will happily wait for the
               
               <div class="code e570">p:exec</div> to complete (meaning in the above example that the browser
               process is killed) before continuing with the next step, 
               <div class="emphasis e571">if</div> the
               XForm is opened in a new thread; if you use your default browser and it happens to
               be running, the wrapper won't know that it should wait. The hack also requires the
               use of the 
               <div class="code e572">cx:depends-on</div> extension step to make sure that they'll all
               wait until the 
               <div class="code e573">p:exec</div> is done.
            </div>
            <div class="para e574">After the ProX instance is saved and the browse process killed, the wrapper
               continues by preprocessing the input XML (see below) and the ProX instance that was
               just saved (also see below), before finally converting the instance to a shell
               script, running that shell script, and handling any logs or reports resulting from
               the wrapper or child processes.
            </div>
            <div class="para e575">When the wrapper process ends, it is up to the system to take care of the
               resulting files and to delete any temporary content, including the temp folder where
               the action took place.
            </div><a name="URNtoURLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e576">
               <div class="title e577">URN to URL</div>
               <div class="para e578">The input XML is frequently modularised, like so: </div>
               <div class="figure e579">
                  <div class="title e580">Modularised XML</div>
                  <div class="mediaobject e581">
                     <div class="imageobject e582">
                        <div class="metaBox e583"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e1207').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e1207" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e583'
                                 </span><span class="metaAttribute">fileref='../../../vol11/graphics/Nordstrom02/Nordstrom02-017.png'
                                 </span><span class="metaAttribute">width='300px'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e584">The system uses URNs for all of its linking, which means that whenever an XML
                  document is published, each participating module must first be preprocessed to
                  replace the URN-based links with temporary URL-based ones. Only then can the XML
                  be normalised
                  <div class="popupBox e585">
                     <div class="popupLabel" onmouseover="$('#d1e1210').show('1000');" onmouseout="$('#d1e1210').hide('1000');">[ footnote ]</div>
                     <div id="d1e1210" style="display: none;">
                        <div class="footnote">
                           <div class="para e586">
                              <div class="emphasis e587">If</div> the child pipeline normalises it; the wrapper
                              does not.
                           </div>
                        </div>
                     </div>
                  </div>.
               </div>
               <div class="para e588">The wrapper pipeline runs an XSLT script that maps URNs to URLs using the
                  resource map. 
               </div>
            </div><a name="ProXFixesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e589">
               <div class="title e590">ProX Fixes</div>
               <div class="para e591">A similar preprocessing step is required on the saved ProX instance. It
                  contains a number of URNs that need to be replaced with URLs, but also several
                  empty runtime targets that need values from the resource map.
               </div>
            </div><a name="ConvertingtoaShellScriptANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e592" xml:id="section_jws_pxg_wj">
               <div class="title e593">Converting to a Shell Script</div>
               <div class="para e594">The preprocessed ProX instance is then converted to a shell script (in the
                  case of Calabash) using an XSLT stylesheet:
               </div>
               <div class="programlisting e595" xml:space="preserve">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
                  &lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                  xmlns:xlink="http://www.w3.org/1999/xlink" version="2.0"&gt;
                  
                  &lt;xsl:output method="xml" indent="no"/&gt;
                  &lt;xsl:strip-space 
                  elements="cmdline script engine-config inputs options params"/&gt;
                  
                  &lt;xsl:param 
                  name="map-url"/&gt;
                  
                  &lt;xsl:param 
                  name="os"/&gt;
                  
                  &lt;xsl:param 
                  name="debug" 
                  select="'yes'"/&gt;
                  
                  &lt;xsl:template match="/"&gt;
                  &lt;bat&gt;
                  &lt;xsl:choose&gt;
                  &lt;xsl:when test="$os='win'"&gt;
                  &lt;xsl:text&gt;REM Generated for Windows&lt;/xsl:text&gt;
                  &lt;xsl:text&gt;&amp;#x0A;&lt;/xsl:text&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:when test="$os='osx'"&gt;
                  &lt;xsl:value-of
                  select="document('prox-xslt2bat-configuration.xml')/config/calabash/shell[@os='osx']/text()"/&gt;
                  &lt;xsl:text&gt;&amp;#x0A;&lt;/xsl:text&gt;
                  &lt;xsl:text&gt;# Generated for OS X&lt;/xsl:text&gt;
                  &lt;xsl:text&gt;&amp;#x0A;&lt;/xsl:text&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:when test="$os='linux'"&gt;
                  &lt;xsl:value-of
                  select="document('prox-xslt2bat-configuration.xml')/config/calabash/shell[@os='linux']/text()"/&gt;
                  &lt;xsl:text&gt;&amp;#x0A;&lt;/xsl:text&gt;
                  &lt;xsl:text&gt;# Generated for Linux&lt;/xsl:text&gt;
                  &lt;xsl:text&gt;&amp;#x0A;&lt;/xsl:text&gt;
                  &lt;/xsl:when&gt;
                  &lt;/xsl:choose&gt;
                  &lt;xsl:apply-templates/&gt;    
                  &lt;/bat&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="processes"&gt;
                  &lt;xsl:apply-templates/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="process"&gt;
                  &lt;xsl:apply-templates select=".//metadata"/&gt;
                  &lt;xsl:text&gt;java -classpath &lt;/xsl:text&gt;
                  &lt;xsl:choose&gt;
                  &lt;xsl:when test="$os='win'"&gt;
                  &lt;xsl:value-of
                  select="document('prox-xslt2bat-configuration.xml')/config/calabash/classpath[@os='win']/text()"/&gt;
                  
                  &lt;/xsl:when&gt;
                  &lt;xsl:when test="$os='osx'"&gt;
                  &lt;xsl:value-of
                  select="document('prox-xslt2bat-configuration.xml')/config/calabash/classpath[@os='osx']/text()"/&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:when test="$os='linux'"&gt;
                  &lt;xsl:value-of
                  select="document('prox-xslt2bat-configuration.xml')/config/calabash/classpath[@os='linux']/text()"/&gt;
                  &lt;/xsl:when&gt;
                  &lt;/xsl:choose&gt;
                  
                  &lt;xsl:text&gt; com.xmlcalabash.drivers.Main &lt;/xsl:text&gt;
                  &lt;xsl:apply-templates select="pipelines/pipeline"/&gt;
                  
                  &lt;!-- Debug mode --&gt;
                  &lt;xsl:if test="$debug='yes'"&gt;
                  &lt;xsl:choose&gt;
                  &lt;xsl:when test="$os='osx' or $os='linux'"&gt;
                  &lt;xsl:text&gt;&amp;#x0A;&lt;/xsl:text&gt;
                  &lt;xsl:text&gt;read -p "Press [Enter] to continue..."&lt;/xsl:text&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:when test="$os='win'"&gt;
                  &lt;xsl:text&gt;&amp;#x0A;&lt;/xsl:text&gt;
                  &lt;xsl:text&gt;pause&lt;/xsl:text&gt;
                  &lt;/xsl:when&gt;
                  &lt;/xsl:choose&gt;
                  &lt;/xsl:if&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="pipeline"&gt;
                  &lt;!--        &lt;xsl:apply-templates select="metadata"/&gt;--&gt;
                  &lt;xsl:apply-templates select="cmdlines/cmdline"/&gt;
                  &lt;xsl:text&gt; &lt;/xsl:text&gt;
                  &lt;xsl:apply-templates select="script"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="script"&gt;
                  &lt;!-- @xlink:href refers to package --&gt;
                  &lt;xsl:choose&gt;
                  &lt;xsl:when test="@type='pkg'"&gt;
                  &lt;xsl:call-template name="fragment-id"/&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:otherwise&gt;
                  &lt;xsl:value-of select="."/&gt;
                  &lt;/xsl:otherwise&gt;
                  &lt;/xsl:choose&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="cmdline"&gt;
                  &lt;xsl:apply-templates select="engine-config"/&gt;
                  &lt;xsl:apply-templates select="inputs"/&gt;
                  &lt;xsl:apply-templates select="outputs"/&gt;
                  &lt;xsl:apply-templates select="options"/&gt;
                  &lt;xsl:apply-templates select="params"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;!-- XProc Engine-specific Configuration --&gt;
                  &lt;xsl:template match="enginge-config"&gt;
                  &lt;xsl:apply-templates select="config"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="config"&gt;
                  &lt;xsl:text&gt;--config&lt;/xsl:text&gt;
                  &lt;xsl:text&gt; &lt;/xsl:text&gt;
                  &lt;xsl:call-template name="fragment-id"/&gt;
                  &lt;xsl:text&gt; &lt;/xsl:text&gt;
                  &lt;/xsl:template&gt;
                  
                  
                  
                  &lt;!-- Inputs --&gt;
                  
                  &lt;xsl:template match="inputs"&gt;
                  &lt;xsl:apply-templates select="input"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="input"&gt;
                  &lt;xsl:choose&gt;
                  &lt;xsl:when test="matches(port,'map')"&gt;
                  &lt;!-- Standard input for map URL --&gt;
                  &lt;xsl:text&gt;--input map=&lt;/xsl:text&gt;
                  &lt;xsl:value-of select="$map-url"/&gt;
                  &lt;xsl:text&gt; &lt;/xsl:text&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:otherwise&gt;
                  &lt;xsl:text&gt;--input &lt;/xsl:text&gt;
                  &lt;xsl:value-of select="port"/&gt;
                  &lt;xsl:text&gt;=&lt;/xsl:text&gt;
                  &lt;xsl:apply-templates select="value"/&gt;
                  &lt;xsl:text&gt; &lt;/xsl:text&gt;
                  &lt;xsl:apply-templates select="params"/&gt;        
                  &lt;/xsl:otherwise&gt;
                  &lt;/xsl:choose&gt;
                  &lt;/xsl:template&gt;
                  
                  
                  
                  &lt;!-- Options --&gt;
                  
                  &lt;xsl:template match="options"&gt;
                  &lt;xsl:apply-templates select="option"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="option"&gt;
                  &lt;xsl:value-of select="name"/&gt;
                  &lt;xsl:text&gt;=&lt;/xsl:text&gt;
                  &lt;xsl:apply-templates select="value"/&gt;
                  &lt;xsl:text&gt; &lt;/xsl:text&gt;
                  &lt;/xsl:template&gt;
                  
                  
                  
                  &lt;!-- Parameters for XSLT --&gt;
                  
                  &lt;xsl:template match="params"&gt;
                  &lt;xsl:apply-templates select="param"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="param"&gt;
                  &lt;xsl:text&gt;--with-param &lt;/xsl:text&gt;
                  &lt;xsl:value-of select="port"/&gt;
                  &lt;xsl:text&gt;@&lt;/xsl:text&gt;
                  &lt;xsl:value-of select="name"/&gt;
                  &lt;xsl:text&gt;=&lt;/xsl:text&gt;
                  &lt;xsl:apply-templates select="value"/&gt;
                  &lt;xsl:text&gt; &lt;/xsl:text&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="value"&gt;
                  &lt;xsl:choose&gt;
                  &lt;xsl:when test="@type='pkg'"&gt;
                  &lt;xsl:call-template name="fragment-id"/&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:when test="@type='external'"&gt;
                  &lt;!-- "ti" previously --&gt;
                  &lt;!-- External value --&gt;
                  &lt;xsl:value-of select="." exclude-result-prefixes="#all"/&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:when test="@type='uri'"&gt;
                  &lt;!-- Single-resource URI --&gt;
                  &lt;xsl:value-of select="."/&gt;
                  &lt;/xsl:when&gt;
                  &lt;!-- Fallback: single file assumed --&gt;
                  &lt;xsl:otherwise&gt;
                  &lt;xsl:value-of select="."/&gt;
                  &lt;/xsl:otherwise&gt;
                  &lt;/xsl:choose&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template name="fragment-id"&gt;
                  &lt;xsl:variable name="href" select="./@xlink:href"/&gt;
                  &lt;xsl:choose&gt;
                  &lt;xsl:when test="contains(@xlink:href,'#')"&gt;
                  &lt;xsl:value-of
                  select="//package[@id=substring-after($href,'#')]/locator[@type='main']/@xlink:href"/&gt;
                  &lt;/xsl:when&gt;
                  &lt;xsl:otherwise&gt;
                  &lt;xsl:value-of select="//package[@id=$href]/locator[@type='main']/@xlink:href"/&gt;
                  &lt;/xsl:otherwise&gt;
                  &lt;/xsl:choose&gt;
                  &lt;/xsl:template&gt;
                  
                  
                  
                  &lt;!-- Metadata Handling --&gt;
                  
                  &lt;xsl:template match="metadata"&gt;
                  &lt;xsl:apply-templates/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="title"&gt;
                  &lt;xsl:text&gt;echo &lt;/xsl:text&gt;
                  &lt;xsl:value-of select="normalize-space(.)"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="description"&gt;
                  &lt;xsl:apply-templates select="p"/&gt;
                  &lt;/xsl:template&gt;
                  
                  &lt;xsl:template match="p"&gt;
                  &lt;xsl:text&gt;echo &lt;/xsl:text&gt;
                  &lt;xsl:value-of select="normalize-space(.)"/&gt;
                  &lt;/xsl:template&gt;
                  
                  
                  &lt;/xsl:stylesheet&gt;
                  
               </div>
               <div class="para e596">This does not process any engine-specific options, nor does it handle
                  
                  <div class="code e597">data-input</div>s.
               </div>
               <div class="para e598">Note that the XSLT uses a configuration file that lists the
                  
                  <div class="code e599">CLASSPATH</div>s and other OS- and system-specific strings.
               </div>
            </div>
         </div><a name="ChildProcessandCapturingOutputANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e600">
            <div class="title e601">Child Process and Capturing Output</div>
            <div class="para e602">The shell script (or batch file) that results from the conversion is saved and
               then run using a 
               <div class="code e603">p:exec</div> step:
            </div>
            <div class="programlisting e604" xml:space="preserve">&lt;!-- Store generated shell script and run it --&gt;
               &lt;p:choose&gt;
               &lt;!-- Linux --&gt;
               &lt;p:when test="$os='linux'"&gt;
               &lt;!-- Save shell script --&gt;
               &lt;p:store method="text" name="save-bat"&gt;
               &lt;p:with-option name="href" select="'out2.sh'"/&gt;
               &lt;/p:store&gt;
               &lt;!-- Run --&gt;
               &lt;p:exec 
               source-is-xml="false" 
               result-is-xml="false" 
               name="run-bat" 
               cx:depends-on="save-bat"&gt;
               &lt;p:with-option name="command" select="'sh'"/&gt;
               &lt;p:with-option name="args" select="'./out2.sh'"/&gt;
               &lt;p:with-option name="cwd" select="substring($tmp-url,6, string-length($tmp-url)-1)"/&gt;
               &lt;p:log port="errors" href="error.txt"/&gt;
               &lt;p:input port="source"&gt;
               &lt;p:empty/&gt;
               &lt;/p:input&gt;
               &lt;/p:exec&gt;
               &lt;p:sink/&gt;
               &lt;/p:when&gt;
               
               &lt;!-- OS X --&gt;
               &lt;p:when test="$os='osx'"&gt;
               ...
               &lt;/p:when&gt;
               
               &lt;!-- Windows --&gt;
               &lt;p:when test="$os='win'"&gt;
               ...
               &lt;/p:when&gt;
               &lt;/p:choose&gt;
            </div>
            <div class="para e605">And yes, again, there are OS-specific hacks in there. While the system is purely
               Windows, I much prefer developing on Linux or Mac, and so made the necessary changes
               for at least a rudimentary OS independence.
            </div>
         </div><a name="XFormsEngineANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e606" xml:id="section_fc4_2bz_wj">
            <div class="title e607">XForms Engine</div>
            <div class="para e608">The XForm currently runs on 
               <div class="emphasis e609">XSLTForms</div>. The decision to use
               XSLTForms was a practical one; I'm running it locally for ProX user interfaces,
               without a server, but XSLTForms is just as easy to get to run on the server.
            </div>
            <div class="para e610">There are some mostly minor but noteworthy issues:
               <div class="itemizedlist e611">
                  <div class="listitem e612">
                     <div class="para e613">
                        
                        <div class="code e614">xf:code</div> is not implemented so 
                        <div class="code e615">xf:insert</div> must
                        be used instead. No biggie, but it helps to know about it.
                     </div>
                  </div>
                  <div class="listitem e616">
                     <div class="para e617">For local use (seems to be the same on Windows, OS X and Linux), the
                        stylesheet PI pointing out the XSLT not only needs to be relative; the
                        XSLT needs to be in a descendant directory. This is very strange and it
                        took me some time before I noticed what was going on.
                     </div>
                  </div>
                  <div class="listitem e618">
                     <div class="para e619">Local submissions using relative URLs (for example, as described at
                        
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e620" xlink:actuate="onRequest" xlink:href="https://en.wikibooks.org/wiki/XForms/Submit" xlink:show="new" xlink:type="simple">https://en.wikibooks.org/wiki/XForms/Submit</div>) fail silently
                        on a Windows machine. It seems that Microsoft never introduced a
                        standard way of expressing their relative file paths, but
                        
                        <div class="code e621">action="file://myfile.xml"</div> works.
                     </div>
                  </div>
                  <div class="listitem e622">
                     <div class="para e623">Local submits, even with the right relative URLs, will always enforce
                        a 
                        <div class="emphasis e624">Save As</div> dialogue. This is annoying but only a
                        problem locally where the file system is, in fact, at risk.
                     </div>
                  </div>
                  <div class="listitem e625">
                     <div class="para e626">And, depending on the platform, the Java applet run when submitting
                        can cause endless grief, from warnings when running it to failing,
                        either silently or with a bang. OS X is particularly difficult in this
                        respect.
                     </div>
                  </div>
                  <div class="listitem e627">
                     <div class="para e628">And lastly, XSLTForms converts XForms to HTML and JavaScript. Running
                        this locally can cause some unpredictability, depending on the browser.
                        On Windows, 
                        <div class="emphasis e629">Internet Explorer</div> can frequently refuse
                        to run code that works without a hitch in 
                        <div class="emphasis e630">Firefox</div>
                        and 
                        <div class="emphasis e631">Safari</div>. On the other hand, on that same Windows
                        machine, 
                        <div class="emphasis e632">Safari</div> then quit running XSLTForms
                        altogether, following a Java update.
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e633">Run from a server, XSLTForms works like a charm.</div>
         </div><a name="XProcEngineANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e634" xml:id="section_xs1_jcz_wj">
            <div class="title e635">XProc Engine</div>
            <div class="para e636">Currently, I'm using Calabash (
               <div class="xref e637" linkend="id-xmlcalabash"></div>) to run the pipelines configured with ProX. This is
               unlikely to change any time soon for the system being implemented now; there aren't
               that many viable alternatives that aren't part of a competitor's product. ProX
               started out as a reflection of the Calabash way of doing things.
            </div>
            <div class="para e638">There are other systems, though, where another engine might better match the
               system's requirements. 
               <div class="emphasis e639">eXist</div>, for example, includes
               
               <div class="emphasis e640">xprocxq</div> (
               <div class="xref e641" linkend="id-xprocxq"></div>), an XQuery-based XProc engine that is configured using
               an XML-based set of parameters. Converting a ProX instance to the xprocxq format
               should be uncomplicated but the engine's current state in eXist makes it difficult
               to test. A new version for 
               <div class="emphasis e642">MarkLogic</div> was announced recently,
               and presented (
               <div class="xref e643" linkend="id-jimf-xmllondon"></div>) at 
               <div class="emphasis e644">XML London</div> in June
               2013.
            </div>
         </div>
      </div><a name="EndNotesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e645">
         <div class="title e646">End Notes</div><a name="WhatTheFutureHoldsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e647">
            <div class="title e648">What The Future Holds</div>
            <div class="para e649">ProX is still a work in progress, even though it's now running locally and on a
               pre-release system. Here are some of my future plans:
            </div>
            <div class="itemizedlist e650">
               <div class="listitem e651">
                  <div class="para e652">Add (and expand?) metadata where needed. The main structures
                     (
                     <div class="code e653">process</div>, 
                     <div class="code e654">pipeline</div>, 
                     <div class="code e655">cmdline</div>)
                     include metadata used to generate help for these sections, but just as
                     useful would be to add it to all user-configurable structures. Stylesheet
                     parameters, for one, would greatly benefit from help texts, but also from
                     better GUI display names (see 
                     <div class="xref e656" linkend="id-param-config"></div>).
                  </div>
               </div>
               <div class="listitem e657">
                  <div class="para e658">GUI localisation. XForms is not easily modularised in reusable components
                     (it's not, at all), but it would be useful to move any GUI labels and help
                     texts to a file that can be localised.
                  </div>
               </div>
               <div class="listitem e659">
                  <div class="para e660">A ProX implementation for eXist. XProc is not currently well supported in
                     eXist itself. 
                     <div class="emphasis e661">xprocxq</div> is more or less broken in it, as
                     is the 
                     <div class="emphasis e662">Calabash</div> module, but it is perfectly feasible to
                     run XProc pipelines outside eXist itself using James Sulak's XProc extension
                     library (
                     <div class="xref e663" linkend="id-sulak"></div>, 
                     <div class="xref e664" linkend="id-xmlprague-2013-existential"></div>).
                  </div>
               </div>
               <div class="listitem e665">
                  <div class="para e666">Various XForms additions and fixes, specifically a standardised XForm
                     preprocessing step in the wrapper script that might be used to handle a
                     modularised XForms GUI.
                  </div>
               </div>
               <div class="listitem e667">
                  <div class="para e668">To lessen the dependency on the resource map XML: Resource retrieval in
                     the system based on a known URN (something like 
                     <div class="code e669">getUrl(Urn)</div>).
                     Also, target URL generation and better handling of the temporary folder in
                     the system.
                  </div>
               </div>
               <div class="listitem e670">
                  <div class="para e671">Prepare and release an open source version of the ProX package. A few of
                     the scripts in ProX are system-specific, but it should be straight-forward
                     to do a generic version.
                  </div>
               </div>
            </div>
         </div><a name="LastButNotLeastANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e672" xml:id="section_qsd_bbh_wj">
            <div class="title e673">Last But Not Least</div>
            <div class="para e674">
               
               <div class="emphasis e675">Huge</div> thanks must go to Mark Lawson, who not only pointed out
               that 
               <div class="code e676">xf:copy</div> is currently not supported by
               
               <div class="emphasis e677">XSLTForms</div>, but also wrote the XForm that is the basis for
               the ProX GUI (see 
               <div class="xref e678" linkend="section_rvp_fr5_wj"></div>). That's another way of saying that he provided
               all of the basic XForms logic and I only had to add to it.
            </div>
            <div class="para e679">Thanks also to Norman Walsh, without whom I certainly wouldn't be writing a paper
               involving XProc, to Jim Fuller, who has provided me with valuable XProc hints and
               tips on numerous occasions, and to my friend Henrik Mårtensson who patiently helped
               me get ProX to run on my Mac.
            </div>
            <div class="para e680">Thanks must also go to the Balisage program committee and their brilliant blurb.
               If you read this, the blurb is probably why.
            </div>
            <div class="para e681">Finally, any errors and omissions on these pages should be attributed to me, and
               me only. You can lead a horse to the water but you can't make it drink.
            </div>
         </div>
      </div><a name="BibliographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e682">
         <div class="title e683">Bibliography</div>
         <div class="bibliomixed e684" xml:id="id-balVol08-Nordstrom01">Using XML to Implement XML, Ari Nordström. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e685" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.balisage.net/Proceedings/vol8/html/Nordstrom01/BalisageVol8-Nordstrom01.html</div>. doi:
            <div class="biblioid doi e686">10.4242/BalisageVol8.Nordstrom01</div>
         </div>
         <div class="bibliomixed e687" xml:id="id-xproc-spec">XProc: An XML Pipeline Language,
            Recommendation. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e688" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xproc/</div>
         </div>
         <div class="bibliomixed e689" xml:id="id-xmlcalabash">XML
            Calabash. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e690" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://xmlcalabash.com/</div>
         </div>
         <div class="bibliomixed e691" xml:id="id-calabash">XML Calabash Reference, Norman Walsh. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e692" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://xmlcalabash.com/docs/reference/</div>
         </div>
         <div class="bibliomixed e693" xml:id="id-xprocxq">xprocxq in eXist, James Fuller. Documentation currently
            missing at 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e694" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://exist-db.org/exist/apps/doc/xproc/xproc.xml</div>
         </div>
         <div class="bibliomixed e695" xml:id="id-freemind-xsd">FreeMind XML format.  
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e696" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://freemind.cvs.sourceforge.net/viewvc/freemind/freemind/freemind.xsd?revision=1.2&amp;view=markup</div>
         </div>
         <div class="bibliomixed e697" xml:id="id-xforms-spec">XForms 1.1
            Recommendation. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e698" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xforms/</div>
         </div>
         <div class="bibliomixed e699" xml:id="id-mvc-xforms-eric-vdl">When MVC becomes a burden for XForms, Eric van
            der Vlist.  
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e700" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://eric.van-der-vlist.com/blog/2013/06/17/when-mvc-becomes-a-burden-for-xforms-xml-london-2013/</div>
         </div>
         <div class="bibliomixed e701" xml:id="id-kurt-cagle-xproc">Re: Immediate Market Needs for
            XProc. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e702" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://lists.w3.org/Archives/Public/xproc-dev/2009May/0030.html</div>
         </div>
         <div class="bibliomixed e703" xml:id="id-wait-for-user">Wait for User Input (xproc-dev
            thread). 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e704" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://lists.w3.org/Archives/Public/xproc-dev/2013May/0008.html</div>
         </div>
         <div class="bibliomixed e705" xml:id="id-jimf-xmllondon">Architecture of xproc.xq an XProc processor.  
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e706" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://es.slideshare.net/jimfuller2009/xml-london-2013-architecture-of-xprocxq-an-xproc-processor</div>
         </div>
         <div class="bibliomixed e707" xml:id="id-sulak">eXist XProc Extension
            Library. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e708" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">https://github.com/jsulak/eXist-XProc-Library</div>
         </div>
         <div class="bibliomixed e709" xml:id="id-xmlprague-2013-existential">eXistential Issues in Farming, XML Prague
            2013. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e710" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://archive.xmlprague.cz/2013/files/xmlprague-2013-proceedings.pdf</div>
         </div>
      </div>
   </div>
</div>