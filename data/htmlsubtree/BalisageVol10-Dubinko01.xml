<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#TranscendingTriplesANCHOR" name="TranscendingTriplesTOC">Transcending Triples</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AssertingfactsinXMLANCHOR" name="AssertingfactsinXMLTOC">Asserting facts in XML</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AssertingfactsovertimeANCHOR" name="AssertingfactsovertimeTOC">Asserting facts over time</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TrustSecurityandProvenanceANCHOR" name="TrustSecurityandProvenanceTOC">Trust, Security, and Provenance</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#HowtothinkaboutembeddedRDFandtherebynamedgraphinferenceANCHOR" name="HowtothinkaboutembeddedRDFandtherebynamedgraphinferenceTOC">How to think about embedded RDF, and thereby named graph inference</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheFutureANCHOR" name="TheFutureTOC">The Future</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibliographyANCHOR" name="BibliographyTOC">Bibliography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">August 6 - 9, 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2013</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">conceptual graph</div>
         <div class="singletermTERMS">Conceptual Graphs for a Data Base Interface</div>
         <div class="singletermTERMS">conditions</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">Dubinko</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">FactSet</div>
         <div class="singletermTERMS">Fuzzy Sets</div>
         <div class="singletermTERMS">formalism</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">Introducting Time into RDF</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">likelihoodPercent</div>
         <div class="singletermTERMS">Lead Engineer</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">Micah.Dubinko@marklogic.com</div>
         <div class="singletermTERMS">Micah</div>
         <div class="singletermTERMS">metadata</div>
         <div class="singletermTERMS">modeling</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">Named Graphs, Provenance, and Trust</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">provenance</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">Reification Considered Harmful</div>
         <div class="singletermTERMS">Representing Probabilistic Relations in RDF</div>
         <div class="singletermTERMS">RDF</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">Semantic management of streaming data.</div>
         <div class="singletermTERMS">SPARQL 1.1 Graph Store HTTP Protocol</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">Temporal Patterns</div>
         <div class="singletermTERMS">tSPARQL - A Trust-Aware Query Language</div>
         <div class="singletermTERMS">Turtle - Terse RDF Triple Language</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">XML</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="TranscendingTriplesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3" xml:id="Bal2013Dubi0214">
      <div class="title e1">Transcending Triples</div>
      <div class="subtitle e2">Modeling semantic applications that go beyond just triples</div>
      <div class="info e3">
         <div class="confgroup e4">
            <div class="conftitle e5">Balisage: The Markup Conference 2013</div>
            <div class="confdates e6">August 6 - 9, 2013</div>
         </div>
         <div class="abstract e7">
            <div class="para e8">Semantic modeling to date has been largely an exercise in considering the whole world
               as
               triples (or at least, n-way tuples). Efforts to bridge the XML gap such as XSPARQL
               have
               focused on low-hanging syntactic fruit, and have not had much effect on deeper layers
               of the
               architecture.
            </div>
            <div class="para e9">In semantic modeling, common situations that are supposedly bread-and-butter for RDF,
               for example tracking provenance or recording facts known to a certain probability,
               give rise
               to complexity such as the much reviled RDF reification, or statements about statements.
               Even
               the W3C RDF Primer doesn't seem altogether comfortable with it:
            </div>
            <div class="para e10">
               
               <div class="popupBox e11">
                  <div class="popupLabel" onmouseover="$('#d1e19').show('1000');" onmouseout="$('#d1e19').hide('1000');">[ blockquote ]</div>
                  <div id="d1e19" style="display: none;">
                     <div class="blockquote">
                        <div class="para e12">While there are applications that successfully use reification, they do so by
                           following some conventions, and making some assumptions, that are in addition to the
                           actual meaning that RDF defines for the reification vocabulary, and the actual
                           facilities that RDF provides to support it.
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e13">In a similar vein, inference is commonly viewed in the semantic world as something
               that
               produces (only) triples from (only) triples. A broader view of inference encompassing
               XML
               documents and values as inputs and outputs can make many common use cases far more
               straightforward. This paper discusses a (hypothetical?) world where triples and documents
               get along better with each other, and speculates about what future products fusing
               these
               technologies might look like.
            </div>
         </div>
         <div class="author e14">
            <div class="personname e15">
               <div class="firstname e16">Micah</div>
               <div class="surname e17">Dubinko</div>
            </div>
            <div class="personblurb e18">
               <div class="para e19">Micah Dubinko has worked on diverse projects, from portable heart monitors to mobile
                  applications to search engines. He was the data engineer for Yahoo! SearchMonkey,
                  a
                  project that influenced his outlook toward semantic technologis. He is currently Lead
                  Engineer for semantics and applications at MarkLogic.
               </div>
            </div>
            <div class="affiliation e20">
               <div class="jobtitle e21">Lead Engineer</div>
               <div class="orgname e22">MarkLogic</div>
            </div>
            <div class="email e23">Micah.Dubinko@marklogic.com</div>
         </div>
         <div class="legalnotice e24">
            <div class="para e25">Copyright © 2013 Micah Dubinko</div>
         </div>
         <div class="keywordset e26" role="author">
            <div class="keyword e27">metadata</div>
            <div class="keyword e28">provenance</div>
            <div class="keyword e29">RDF</div>
            <div class="keyword e30">XML</div>
            <div class="keyword e31">modeling</div>
            <div class="keyword e32">formalism</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e33">
         <div class="title e34">Introduction</div>
         <div class="para e35">Q: How many designers does it take to change a light bulb?</div>
         <div class="para e36">A: What makes you think a light bulb is the best solution?</div>
         <div class="para e37">There's no shortage of works expounding on the obvious impedance mismatch between
            trees
            and graphs. The same goes for failed XML syntaxes for RDF. This paper isn't about
            those.
         </div>
         <div class="para e38">There's also plenty out there on extensions to either XML or RDF or SPARQL to broaden
            the
            field of use cases covered by the technology. (XSPARQL for example is an elegant solution.)
            This paper isn't about any of those either.
         </div>
         <div class="para e39">This paper outlines a number of common problems that application developers frequently
            encounter, and are normally associated with RDF and triple-based solutions, and yet
            prove to
            be complicated in practice to solve entirely with triples. This paper concludes with
            some
            initial thoughts and observations on the relative simplicity of treating triples and
            documents
            as part of a unified whole.
         </div>
         <div class="para e40">.</div>
      </div><a name="AssertingfactsinXMLANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e41">
         <div class="title e42">Asserting facts in XML</div>
         <div class="para e43">Consider a web-crawling application that encounters statements encoded in web pages,
            in
            two different cases:
            
            <div class="programlisting e44" xml:space="preserve">&lt;html&gt;
               &lt;head&gt;
               &lt;meta name="author" content="Micah Dubinko"/&gt;
               …
            </div>
            vs
            
            <div class="programlisting e45" xml:space="preserve">&lt;div typeof="rdf:Statement"&gt;
               &lt;div property="rdf:subject" href=""/&gt;
               &lt;div property="rdf:predicate" resource="dc:author"/&gt;
               &lt;div property="rdf:object"&gt;Micah Dubinko&lt;/div&gt;
               &lt;/div&gt;
            </div>
         </div>
         <div class="para e46">One way to ask about the meaning of these cases is to ask what the consuming application
            would do with them. In the former case, it's clear that the entity that controls the
            web page
            is asserting a statement of authorship, and that can be modeled as a triple. But in
            the latter
            case, absent additional statements-about-statements, it's not clear that the consuming
            application can do anything useful with the mere existence of an unasserted statement.
            That is
            to say, the latter case is less meaningful to the application.
         </div>
         <div class="para e47">True, this sort of capital-R Reification has been long damned through disuse, for
            example
            
            <div class="xref e48" linkend="Hellman09"></div>, but it's still serves an important role in discussion. The
            original designers of RDF had particular use cases in mind, and application developers
            should
            either repudiate those use cases themselves, or figure out how to actually implement
            them.
         </div>
         <div class="para e49">Next, consider:
            
            <div class="programlisting e50" xml:space="preserve">&lt;FactSet likelihoodPercent="50"&gt;
               &lt;meta name="author" content="Micah Dubinko"/&gt;
               …
            </div>
         </div>
         <div class="para e51">Can a consuming application consider this statement to have been asserted? Well, if
            you
            take the intent of the element and attribute names at face value, yes. By extension,
            the same
            document could have different 
            <div class="code e52">FactSet</div> elements each with different degrees of
            assertionness. Presumably the document head in the first example asserts at a full
            strength of
            100%, while the opposite
            extreme
            <div class="programlisting e53" xml:space="preserve">&lt;FactSet likelihoodPercent="0"&gt;
               &lt;meta name="author" content="James Bond"/&gt;
            </div>
            outright asserts the falsehood of the given statement.
         </div>
         <div class="para e54">Can this use case be discredited? Probably not. A great deal of ongoing thought has
            gone
            into representing conditional knowledge in triples, for example 
            <div class="xref e55" linkend="Fukushige05"></div>,
            but again, the solution here shown in 
            <div class="xref e56" linkend="turtle"></div> syntax, ends up looking an
            awful lot like capital-R Reification:
            
            <div class="programlisting e57" xml:space="preserve">[a prob:Partition;
               prob:condition :cond0;
               prob:case
               [a prob:ProbabilisticStatement;
               prob:about :case1;
               prob:hasProbability :prob1],
               [a prob:ProbabilisticStatement;
               prob:about :case2;
               prob:hasProability :prob2].
               ].
            </div>
         </div>
         <div class="para e58">It turns out thehe real world is messy, and modeling that messiness as triples adds
            a huge
            amount of complexity.
         </div>
         <div class="para e59">What does it mean for a fact to be embedded in an XML element? The short answer is
            'pretty
            much anything'. A more nuanced answer has been discussed here before, for example
            
            <div class="xref e60" linkend="Dombrowski10"></div> and others.
         </div>
         <div class="para e61">Bug or feature? Let's dig deeper.</div>
      </div><a name="AssertingfactsovertimeANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e62">
         <div class="title e63">Asserting facts over time</div>
         <div class="para e64">Another common set of use cases involves the represtation facts in time in triples.
            Consider something obvious, like
         </div>
         <div class="para e65">
            
            <div class="programlisting e66" xml:space="preserve">:BarackObama :presidentOf :UnitedStatesOfAmerica .</div>
            
         </div>
         <div class="para e67">If a consuming application encountered this fact, say during a web crawl performed
            in
            2013, and found this statement embedded in a page as RDFa, few developers would question
            the
            truth of the asserted statement or their ability to do something useful with the fact
            as it
            stands. But what about this?
         </div>
         <div class="para e68">
            
            <div class="programlisting e69" xml:space="preserve">:RonaldReagan :presidentOf :UnitedStatesOfAmerica .</div>
            
         </div>
         <div class="para e70">In this case, few developers would dispute the truth of that statement during the
            mid-80s,
            but asserting that fact in the same manner as the prior in is clearly problematic.
            This
            highlights a deficiency in the treatment of the first triple, and more broadly any
            such
            discovered statements. Facts change, and anything beyond the most simplistic models
            needs to
            reflect this. These include questions of the form "what was Martin's address on 1
            Jul 1999"
            and "what did we think Martin's address was on 1 Jul 1999 when we sent him a bill
            on 12 Aug
            1999" as discussed in 
            <div class="xref e71" linkend="FowlerTime"></div>. In order to model reality, the facts of
            which change over time, a model needs to take into account various aspects of time.
            But the
            consequences of modeling to this level of detail are significant--in short, the simple
            examples above are insufficient. An average web-page-creator may be hard pressed to
            put
            well-formed temporal facts in their pages. A brief look at some proposals will show
            why this
            is the case:
         </div>
         <div class="para e72">
            <div class="xref e73" linkend="Gutierrez07"></div> has this to say:
            <div class="popupBox e74">
               <div class="popupLabel" onmouseover="$('#d1e140').show('1000');" onmouseout="$('#d1e140').hide('1000');">[ blockquote ]</div>
               <div id="d1e140" style="display: none;">
                  <div class="blockquote">
                     <div class="para e75">There is a blank node connected to the components of the triple, in a sort of
                        “temporal reification” scheme (using the vocabulary tsubj, tpred, and tobj). The remainder
                        of the graph are statements about the timestamps at which the triple was valid. 
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e76">
            <div class="xref e77" linkend="Henson09"></div> outlines a similar approach, though more ontology-driven.
            Here's enough to give the flavor of the approach: 
            <div class="popupBox e78">
               <div class="popupLabel" onmouseover="$('#d1e146').show('1000');" onmouseout="$('#d1e146').hide('1000');">[ blockquote ]</div>
               <div id="d1e146" style="display: none;">
                  <div class="blockquote">
                     <div class="para e79">Therefore, om-owl:TimeSeriesObservation inherits properties from both
                        om-owl:Observation and om-owl:ObservationCollection
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e80">
            <div class="xref e81" linkend="Rodriguez09"></div> offers yet another approach, extending both RDF and SPARQL.
            Timestamps can be embedded in subjects, predicates, objects, or some cases subject/object
            in
            the same statement. The query language is likewise extended, for example finding the
            most
            recent reading with a syntax reminiscent of XPath
            predicates:
            <div class="programlisting e82" xml:space="preserve">SELECT ?temp ?s.t
               WHERE {
               &lt;urn:Chicago&gt; &lt;urn:hasSensor&gt; ?s .
               ?s[LAST] &lt;urn:hasValue&gt; ?temp .
               }
            </div>
         </div>
         <div class="para e83">
            <div class="xref e84" linkend="Williams09"></div> also outlines a similar approach with both anonymous named
            graphs and a SPARQL extension, using data in this
            form:
            <div class="programlisting e85" xml:space="preserve">_:kanzaki a foaf:Person _:Always .
               _:kanzaki whois:place "Tokyo, Japan" _:Interval1 .
               _:kanzaki whois:place "Mie, Japan" _:Interval2 .
               …
               _:Interval1 a time:Interval .
               _:Interval1 time:begins "1982" .
               …
               _:Interval2 a time:Interval .
               _:Interval2 time:begins "1968" .
               _:Interval2 time:ends "1978" .
            </div>and
            queries in this
            form
            <div class="programlisting e86" xml:space="preserve">SELECT ?name WHERE {
               TIME [ time:inside "2007"^^xsd:dateTime ] {
               [ a foaf:Person;
               foaf:name ?name;
               whois:place "Tokyo, Japan" .
               ]
               }
               }
            </div>
         </div>
         <div class="para e87">Note that as in the previous section, this solution makes use of a bnode identifer
            to name
            a graph.
         </div>
         <div class="para e88">Is this a case of XML to the rescue? Possibly. Representation of time values, or ranges
            of
            time values, is already commonplace in XML application models. Embedding a triple
            in XML is a
            possible way out. This also supports a convenient query processing model as follows
            <div class="orderedlist e89">
               <div class="listitem e90">
                  <div class="para e91">restrict the universe of documents down to those representing a temporal range of
                     interest, using a document-centric query language such as XQuery
                  </div>
               </div>
               <div class="listitem e92">
                  <div class="para e93">then run SPARQL over the triples associated with the documents in step one</div>
               </div>
            </div>
         </div>
         <div class="para e94">But these are the simple cases. Temporal queries can get much more complicated. Take,
            for
            example, a query that expresses this: On Dec 31, 2012, what did the official records
            show that
            John Doe's address was? Facts change over time, but so do official records of facts.
            This is
            known as a bi-temporal query, and there's significant existing work in the RDBMS world
            on
            supporting this class of query. In general, the solution involves keeping track of
            multiple
            timestamps for each fact, one for when the fact was considered valid in the real world,
            and
            one for when our knowledge of the fact (official record) is in force.
         </div>
         <div class="para e95">If one-dimensional time is complicated for casual users to express, say in RDFa, how
            much
            more so are these kinds of data and corresponding queries? One can imagine a proliferation
            of
            unnamed graphs, each containing two (or more) time axes, with a corresponding increase
            in
            necessary plumbing and query complexity. Isn't this the kind of thing that XML databases
            already excel at? Just because something can be done entirely with triples doesn't
            mean it's a
            good idea to do so.
         </div>
      </div><a name="TrustSecurityandProvenanceANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e96">
         <div class="title e97">Trust, Security, and Provenance</div>
         <div class="para e98">Returning to use cases, one often associated with semantic technologies is tracking
            the
            provenance of statements. Any given statement may have an arbitrarily complicated
            network of
            facts that contribute to the given statement. In some cases, certain statements may
            have
            different levels of access permissions depending on which user is accessing the
            database.
         </div>
         <div class="para e99">For example, a financial services company needs to make legally-binding reports for
            regulatory purposes. Certain users need the ability to justify any published statement
            upon
            request, including which systems data flowed through on a particular date (even after
            said
            system change or no longer exist). Like the earlier, bi-temporal case, this can be
            accomplished by tracking more state at the level of named (or anonymous) graphs--which
            subsystems were involved in producing a fact (even if a certain subsystem no longer
            exists),
            which schemas were in force at the time (even if they no longer exist in the present),
            and so
            on. Such information may or may not be amenable to representation as triples.
         </div>
         <div class="para e100">
            <div class="xref e101" linkend="trustSPARQL"></div>
            
            <div class="popupBox e102">
               <div class="popupLabel" onmouseover="$('#d1e188').show('1000');" onmouseout="$('#d1e188').hide('1000');">[ footnote ]</div>
               <div id="d1e188" style="display: none;">
                  <div class="footnote">
                     <div class="para e103">Commonly called tSPARQL, though I refer to it by a longer moniker in order to
                        distinguish it from 
                        <div class="xref e104" linkend="Williams09"></div>, which also is commonly called
                        tSPARQL.
                     </div>
                  </div>
               </div>
            </div>offers a partial approach to this. Again, the solution involves an extension to the
            SPARQL langauge and looks very similar to examples  the earlier
            sections:
            <div class="programlisting e105" xml:space="preserve">PREFIX ub: &lt;http://www.lehigh.edu/.../univ-bench.owl#&gt;
               PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
               SELECT ?n ?c ?t
               WHERE {
               { ?s rdf:type ub:Student .
               ?s ub:name ?n }
               { ?s ub:takesCourse ?c .
               TRUST AS ?t }
               }
            </div>
         </div>
         <div class="para e106">In this example, the 'coefficient of trustworthiness' is stored for each triple and
            returned in a variable 
            <div class="code e107">?t</div>. Different implemenations have partially solved this
            problem by extending the triple model to include quads, quints, hexes, and so on.
         </div>
         <div class="para e108">Another form of metadata that can conceptually be applied at the triple level is security
            access, for example Access Control Lists, which would not be implemented as triples
            themselves, thus breaking the model of statements-about-statements. Much of the work
            done in
            this area is unlikely to ever be standardized.
         </div>
         <div class="para e109">Security in particular has been more ofen implemented in document-oriented technologies
            than triple-oriented technologies, which begs the question of how to think about semantic
            modeling for applications.
         </div>
      </div><a name="HowtothinkaboutembeddedRDFandtherebynamedgraphinferenceANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e110">
         <div class="title e111">How to think about embedded RDF, and thereby named graph inference</div>
         <div class="para e112">Previous sections have hinted at the possibility of explicitly modeling triples as
            statements contained within documents. This section makes it explicit and examines
            the
            consequences. What does it mean for a triple to be embedded in a document? Consider
            some
            possible interpretations, as they relate to application modeling:
            <div class="orderedlist e113">
               <div class="listitem e114">
                  <div class="para e115">Nothing at all. Documents are mere conveyences to be disposed of as quickly as
                     possible. (This attitude is implied in the term 'semantic lifting')
                  </div>
               </div>
               <div class="listitem e116">
                  <div class="para e117">If a document is in one or more collections (in the XQuery sense) consider embedded
                     triples to be in equivalent named graphs where the collection name is the graph
                     name.
                  </div>
               </div>
               <div class="listitem e118">
                  <div class="para e119">Triples embedded in a document are considered to be in a named graph, where the
                     document name is the graph name.
                  </div>
               </div>
               <div class="listitem e120">
                  <div class="para e121">Like 3, but even more tightly-scoped. The particular element-scope of where the
                     triple occurs is relevant, as seen in the introduction, where different triples embedded
                     in the same document had different 
                     <div class="code e122">likelihoodPercent</div> values.
                  </div>
               </div>
            </div>
         </div>
         <div class="para e123">Other than the first interpretation, none of these are mutually exclusive.</div>
         <div class="para e124">Named graphs, which seem at first conceptually simple, underly more power and complexity
            than might be readily apparent. For one thing, they have multiple associated URIs
            and/or
            points of access:
            <div class="itemizedlist e125">
               <div class="listitem e126">
                  <div class="para e127">The URI that names the graph (which may not exist in cases of blank-node-identified
                     graphs)
                  </div>
               </div>
               <div class="listitem e128">
                  <div class="para e129">The URI that can be used to dereference the graph (for example, in the 
                     <div class="xref e130" linkend="GraphStore"></div> the named graph URI is composed into a longer URI for purposes
                     of dereference as a HTTP GET request.)
                  </div>
               </div>
               <div class="listitem e131">
                  <div class="para e132">The means by which machine-readable 
                     <div class="emphasis e133">conditions</div> that apply to
                     this graph can be extracted. As previously mentioned, these conditions may not be
                     conveniently representable as triples.
                     <div class="popupBox e134">
                        <div class="popupLabel" onmouseover="$('#d1e245').show('1000');" onmouseout="$('#d1e245').hide('1000');">[ footnote ]</div>
                        <div id="d1e245" style="display: none;">
                           <div class="footnote">
                              <div class="para e135">This is an important distinction, as it can greatly complicate matters, for
                                 example in a bi-temporal update when you mark certain records as obsolete (by adding
                                 a effective end-date to the record) you raise the spectre of identity of blank-node
                                 issues in the course of the update.
                              </div>
                           </div>
                        </div>
                     </div>.
                  </div>
               </div>
            </div>
         </div>
         <div class="para e136">What do we mean by conditions of a graph? It may be useful to borrow an older term,
            that
            of a 
            <div class="quote e137">conceptual graph</div> as defined to in
            <div class="xref e138" linkend="Sowa76"></div> . Perhaps the
            important thing about a named graph isn't that it is named (and increasingly, they
            are not)
            but what a statement within 
            <div class="quote e139">means to the people who use it or how it relates to the
               overall operations of a business enterprise
            </div>, three common examples of which earlier
            sections of this paper has examined.
         </div>
         <div class="para e140">Thus, we can define conditions as follows: a condition is an assumption that holds
            for an
            entire graph and applies to any statements within the graph. It fulfills much the
            same purpose
            as capital-R Reification, but instead of forming statements about single statements,
            addresses
            an entire graph. This includes whether or to what degree the facts are trustworthy,
            their time
            of validity either in the real-world or as recorded in an official record, any relevant
            facts
            about the provenance or history of coming to know these facts, and anything else deemed
            necessary by your application. Furthermore, we will call these graphs conceptual graphs
            to
            highlight their unique standing as opposed to regular named graphs. This definition
            is
            admittedly fuzzy, but that is a reflection of the fuzziness of the real world, something
            that
            XMLcomes closer to embracing than does RDF.
         </div>
         <div class="para e141">Conceptual graph conditions can just as easily be encoded in XML as triples, and in
            many
            cases, XML is more convenient and straightfoward to process and query. If interpretations
            3 or
            4 above are in force, an XML document that embeds triples can straightforwardly record
            the
            conditions that apply to those triples within.
         </div>
         <div class="para e142">The meaning of inference in light of named graphs doesn't seem to be a solved issue
            <div class="popupBox e143">
               <div class="popupLabel" onmouseover="$('#d1e265').show('1000');" onmouseout="$('#d1e265').hide('1000');">[ footnote ]</div>
               <div id="d1e265" style="display: none;">
                  <div class="footnote">
                     <div class="para e144">For example:
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e145" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">
                           http://answers.semanticweb.com/questions/1315/the-semantics-of-named-graphs
                        </div>
                     </div>
                  </div>
               </div>
            </div> but thinking in terms of conditions might begin to point toward an answer. When
            statement C is logically inferred from statements A and B, a materialized statement
            C must end
            up as part of a graph that has conditions compatible with both of the graphs that
            A and B
            respectively reside in. In many cases this is a logical intersection, but given the
            broad
            definition of what can comprise a condition, it may need to be figured out on a case-by-case
            basis.
         </div>
         <div class="para e146">For example, if statement A is deemed to be valid only in the years 2000-2010, and
            statement B is valid only in the years 2008-2013, you'd expect statement C to be valid
            only
            2008-2010 (and be treated as part of a conceptual graph that says as much). Other
            conditions
            including likelihood are potentially less straightforward. For example if statement
            A has a
            likelihood of 40% and statement B a likelihood of 50%, does the likelihood of statement
            C
            amount to prob(A) * prob(B) = 20% or would fuzzy set logic 
            <div class="xref e147" linkend="Zadeh65"></div> be more
            applicable, in which case the answer is min(prob(A), prob(B)) = 40%? In many cases
            more
            complex Bayesian techniques would be required as part of inference.
         </div>
         <div class="para e148">A further complication arises with intepretation 4 above, where element-level scope
            is
            significant. In these cases materialized triples from inference need to exist in a
            particular
            element scope, which may not exist outside of the inference. Does this imply that
            part of
            inference is to construct new conceptual graph conditions in the form of new documents?
         </div>
      </div><a name="TheFutureANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e149">
         <div class="title e150">The Future</div>
         <div class="para e151">Anything that can be modeled with purely triples can also be modeled in part or in
            whole
            in XML. And anything that can be modeled in XML can (with enough layers of abstraction)
            be
            modeled as triples, though perhaps not elegantly. Combining the two can play to the
            strenghts
            of each, and open the way toward elegantly solving interesting real-world problems.
         </div>
         <div class="para e152">For example: Look through software reviews to see that on &lt;Date&gt; &lt;SoftwarePackageX&gt;
            was shown to work on OSX. From this infer
            
            <div class="programlisting e153" xml:space="preserve">&lt;SoftwarePackageX&gt; :compatibleWith &lt;OSX:ParticularVersion&gt;</div>.
         </div>
         <div class="para e154">But more mundane solutions should not be dismissed out of hand. I've seen many instances
            of this: Based on a set of trusted facts about &lt;topic X&gt; assemble (infer?) an XML
            document,
            which is made available to full-text search engines. Often times this goes beyond
            mere
            assembly, and includes some amount of rules-driven processing. In search applications,
            Infoboxes (assembled by mechanical rules) in search results could be considered an
            example of
            this.
         </div>
         <div class="para e155">The real world is messy, and a formal models can only express this via additional
            complexity in themselves. Purists and partisans for a particular technology don't
            do well on
            the forward-deployed frontlines of technology. Perhaps a mixed approach, leveraging
            different
            technologies in their respective sweet spots isn't such a bad starting point for thinking
            about the relationship between an application and the facts is makes use of.
         </div>
         <div class="para e156">To conclude, a call to action: Every time you see a paper or proposal for some complicated
            extension to the RDF data model and possibly the SPARQL language, think back to the
            opening
            line of this paper, and ponder whether a lightbulb is actually the right solution.
         </div>
      </div><a name="BibliographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e157">
         <div class="title e158">Bibliography</div>
         <div class="bibliomixed e159" xml:id="Hellman09" xreflabel="Reification Considered Harmful">Eric Hellman,
            
            <div class="quote e160">Reification Considered Harmful</div> [online]. [cited 17th August, 2013]. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e161" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://go-to-hellman.blogspot.com/2009/05/part-3-reification-considered-harmful.html</div>
         </div>
         <div class="bibliomixed e162" xml:id="Fukushige05" xreflabel="Fukushige 2005">Yoshio Fukushige,
            
            <div class="quote e163">Representing Probabilistic Relations in RDF</div> Proceedings of the ISWC Workshop
            on Uncertainty Reasoning for the Semantic Web, 2005.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e164" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://ceur-ws.org/Vol-173/pos_paper5.pdf</div>
         </div>
         <div class="bibliomixed e165" xml:id="Dombrowski10" xreflabel="Dombrowski 2010">Andrew Dombrowski, and Quinn
            Dombrowski. 
            <div class="quote e166">A formal approach to XML semantics: implications for archive
               standards.
            </div> Presented at International Symposium on XML for the Long Haul: Issues in
            the Long-term Preservation of XML, Montréal, Canada, August 2, 2010. In Proceedings
            of the
            International Symposium on XML for the Long Haul: Issues in the Long-term Preservation
            of XML.
            Balisage Series on Markup Technologies, vol. 6 (2010).
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e167" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.balisage.net/Proceedings/vol6/html/Dombrowski01/BalisageVol6-Dombrowski01.html</div>. doi:
            <div class="biblioid doi e168">10.4242/BalisageVol6.Dombrowski01</div>.
         </div>
         <div class="bibliomixed e169" xml:id="FowlerTime" xreflabel="Fowler Temporal Patterns">Martin Fowler,
            
            <div class="quote e170">Temporal Patterns</div> [online]. [cited 12th July, 2013].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e171" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://martinfowler.com/eaaDev/timeNarrative.html</div>
         </div>
         <div class="bibliomixed e172" xml:id="Gutierrez07" xreflabel="Gutierrez 2007">Claudio Gutierrez, Carlos A.
            Hurtado, and Alejandro Vaisman 
            <div class="quote e173">Introducting Time into RDF</div> IEEE Transactions on
            Knowledge and Data Engineering, 2007.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e174" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://doi.ieeecomputersociety.org/10.1109/TKDE.2007.34</div>. doi:
            <div class="biblioid doi e175">10.1109/TKDE.2007.34</div>.
         </div>
         <div class="bibliomixed e176" xml:id="Henson09" xreflabel="Henson 2009">Cory A. Henson, Holger Neuhaus, Amit P.
            Sheth, Krishnaprasad Thirunarayan, and Rajkumar Buyya 
            <div class="quote e177">An Ontological Representation of
               Time Series Observations on the Semantic Sensor Web
            </div> 1st International Workshop on
            theSemantic Sensor Web, 2009; Informal Proceedings.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e178" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.academia.edu/2174123/An_ontological_representation_of_time_series_observations_on_the_Semantic_Sensor_Web</div>
         </div>
         <div class="bibliomixed e179" xml:id="Rodriguez09" xreflabel="Rodríguez 2009">Alejandro Rodríguez, Robert
            McGrath, Yong Liu, and James Myers 
            <div class="quote e180">Semantic management of streaming data.</div>
            International Workshop on Semantic Sensor Networks at ISWC, 2009
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e181" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://cet.ncsa.illinois.edu/publications/SemanticSN2009streaming.pdf</div>
         </div>
         <div class="bibliomixed e182" xml:id="Williams09" xreflabel="Temporal SPARQL">Gregory Todd Williams
            
            <div class="quote e183">tSPARQL: Using Quadstores for Temporal Querying of RDF</div> [online]. [cited 12th
            July, 2013] 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e184" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://tw.rpi.edu/2007/11/tsparql-poster.pdf</div>
         </div>
         <div class="bibliomixed e185" xml:id="trustSPARQL" xreflabel="Trust-Aware SPARQL">Olaf Hartig 
            <div class="quote e186">tSPARQL - A
               Trust-Aware Query Language
            </div> [online]. [cited 12th July, 2013].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e187" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://trdf.sourceforge.net/tsparql.shtml</div>
         </div>
         <div class="bibliomixed e188" xml:id="Carroll05" xreflabel="Carroll 2005">Jeremy J. Carroll, Christian Bizer, Pat
            Hayes, and Patrick Sticker 
            <div class="quote e189">Named Graphs, Provenance, and Trust</div> WWW 2005
            Proceedings of the 14th international conference on World Wide Web.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e190" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.59.4871</div>. doi:
            <div class="biblioid doi e191">10.1145/1060745.1060835</div>.
         </div>
         <div class="bibliomixed e192" xml:id="GraphStore" xreflabel="SPARQL 1.1 Graph Store HTTP Protocol">Chimezie Ogbuji (editor), 
            
            <div class="quote e193">SPARQL 1.1 Graph Store HTTP Protocol</div> [online]. [cited 1st September, 2013].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e194" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/sparql11-http-rdf-update/</div>
            
         </div>
         <div class="bibliomixed e195" xml:id="Sowa76" xreflabel="Sowa 1976">John F. Sowa 
            <div class="quote e196">Conceptual Graphs for a
               Data Base Interface
            </div>
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e197" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.jfsowa.com/pubs/cg1976.pdf</div>
         </div>
         <div class="bibliomixed e198" xml:id="Zadeh65" xreflabel="Fuzzy Sets">L.A. Zadeh 
            <div class="quote e199">Fuzzy Sets</div>
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e200" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www-bisc.cs.berkeley.edu/Zadeh-1965.pdf</div>
         </div>
         <div class="bibliomixed e201" xml:id="turtle" xreflabel="Turtle 2013">David Beckett, and Tim Berners-Lee
            (editors) 
            <div class="quote e202">Turtle - Terse RDF Triple Language</div> [online]. [cited 12th July, 2013].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e203" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TeamSubmission/turtle/</div>
         </div>
      </div>
   </div>
</div>