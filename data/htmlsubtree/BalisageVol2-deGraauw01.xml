<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#AxiomsofVersioningANCHOR" name="AxiomsofVersioningTOC">Axioms of Versioning</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#LanguagesSetsandExtensionsANCHOR" name="LanguagesSetsandExtensionsTOC">Languages, Sets and Extensions</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AcceptingandRejectingDocumentsANCHOR" name="AcceptingandRejectingDocumentsTOC">Accepting and Rejecting Documents</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#FromSyntaxtoSemanticsANCHOR" name="FromSyntaxtoSemanticsTOC">From Syntax to Semantics</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#SemanticsandBehaviorANCHOR" name="SemanticsandBehaviorTOC">Semantics and Behavior</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BehaviorofLanguageProcessorsANCHOR" name="BehaviorofLanguageProcessorsTOC">Behavior of Language Processors</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#SyntacticalCompatibilityANCHOR" name="SyntacticalCompatibilityTOC">Syntactical Compatibility</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#SemanticalEquivalenceSetsANCHOR" name="SemanticalEquivalenceSetsTOC">Semantical Equivalence Sets</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#SemanticsandCompatibilityANCHOR" name="SemanticsandCompatibilityTOC">Semantics and Compatibility</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionANCHOR" name="ConclusionTOC">Conclusion</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#Definitions%0AANCHOR" name="Definitions%0ATOC">Definitions
                  </a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#FormalAxiomatizationANCHOR" name="FormalAxiomatizationTOC">Formal Axiomatization</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibliographyANCHOR" name="BibliographyTOC">Bibliography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">August 11, 2008</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">behaviourally equivalent</div>
         <div class="singletermTERMS">behaviour</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">compatibility</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">de Graauw</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">extensionally equivalent</div>
         <div class="singletermTERMS">extensional sublanguage</div>
         <div class="singletermTERMS">extension</div>
         <div class="singletermTERMS">exemplary processor</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">ideal language</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">may ignore</div>
         <div class="singletermTERMS">must understand</div>
         <div class="singletermTERMS">marc@marcdegraauw.com</div>
         <div class="singletermTERMS">Marc</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">processors</div>
         <div class="singletermTERMS">partially semantically forward compatible</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">syntactically compatible</div>
         <div class="singletermTERMS">syntactically backward compatible</div>
         <div class="singletermTERMS">syntactically forward compatible</div>
         <div class="singletermTERMS">semantically equivalent</div>
         <div class="singletermTERMS">semantical equivalence set</div>
         <div class="singletermTERMS">semantical superlanguage</div>
         <div class="singletermTERMS">semantically backward compatible</div>
         <div class="singletermTERMS">semantically forward compatible</div>
         <div class="singletermTERMS">semantically extends</div>
         <div class="singletermTERMS">semantics</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">transforms document</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">versioning</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="AxiomsofVersioningANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2" xml:id="HR-23632987-8973">
      <div class="title e1">Axioms of Versioning</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">International Symposium on Versioning XML Vocabularies and Systems</div>
            <div class="confdates e5">August 11, 2008</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">The problems of language versioning can be better understood with the help of some
               formal axioms defining the relations among the extensions and semantics of languages.
               Such axioms allow us to specify what makes one language extensionally, syntactically,
               or semantically a subset, superset, or equivalent of another. The difference between
               syntactic and semantic compatibility makes clear how languages can grow in a forward-compatible
               way. The key to compatible versioning is to assign new semantics in the new version
               of a language for syntax that was already accepted in the prior version, but to which
               the prior version assigned no semantics.
            </div>
         </div>
         <div class="author e8">
            <div class="personname e9">
               <div class="firstname e10">Marc</div>
               <div class="surname e11">de Graauw</div>
            </div>
            <div class="personblurb e12">
               <div class="para e13">Marc de Graauw is an independent consultant and has worked in IT for 20 years; as
                  an IT architect, he has contributed to digital exchanges in health care, criminal
                  justice, insurance and social security. Marc is a frequent speaker at international
                  conferences and regularly writes articles on health care, versioning and REST-vs-SOA.
                  He lives and works in Amsterdam, the Netherlands.
               </div>
            </div>
            <div class="affiliation e14">
               <div class="orgname e15">Independent</div>
            </div>
            <div class="email e16">marc@marcdegraauw.com</div>
         </div>
         <div class="legalnotice e17">
            <div class="para e18">Copyright Marc de Graauw.  This work is licensed under a Creative Commons Attribution-No
               Derivative Works 3.0 Unported License.
            </div>
         </div>
         <div class="keywordset e19" role="author">
            <div class="keyword e20">versioning</div>
            <div class="keyword e21">semantics</div>
            <div class="keyword e22">compatibility</div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e23">
         <div class="title e24">Introduction</div>
         <div class="para e25">What is compatibility anyway? What does it mean when we say a version of a language
            is
            backward and/or forward compatible with another language? What does it mean when we
            say this
            of a document, or message, or schema, or an application? Does the notion of compatibility
            apply to languages at all, or does it only apply to documents or applications? And
            what is
            the difference between syntactical an semantical compatibility? 
         </div>
         <div class="para e26">Questions like these have lead me to explore the notion of compatibility in a more
            formal
            way. For efforts in achieving back- and forward compatibility in real life applications,
            a
            framework for understanding key notions in compatible versioning can be very useful.
            Key to
            understanding the working of advanced compatibility mechanisms is the semantical equivalence
            set. In this paper we shall define what it is, and explain why this notion is central
            to
            understanding compatibility.
         </div>
         <div class="para e27">I will focus on message exchanges, since that is my main area of expertise, but the
            principles apply much wider. In general, they should apply to most computer-understandable
            document formats for data storage and/or exchange. More specific, I do not intend
            to cover
            natural language, other non-computer languages, programming languages or specifically
            multi-document data stores such as databases.
         </div>
      </div><a name="LanguagesSetsandExtensionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e28">
         <div class="title e29">Languages, Sets and Extensions</div>
         <div class="para e30">Consider a set U of language specifications in the above field. </div>
         <div class="para e31">It's easy to define for each language specification the set of conforming document
            instances extensionally, as a set. For instance, the extension of UBL 1.0 is the set
            of all
            possible conforming UBL 1.0 instances, or the extension of HL7v3, May 2007 ballot
            is the set
            of all possible conforming HL7v3, May 2007 instances. (Often, language specifications
            for
            message exchange have many flavors and variations. HL7v3 has many versions ("ballots")
            and
            even those are hardly ever implemented as they are, but instead are localized to a
            particular national environment before implementation.) 
         </div>
         <div class="figure e32" floatstyle="1" xml:id="Bal2008graa030601" xreflabel="Bal2008graa030601">
            <div class="mediaobject e33">
               <div class="imageobject e34">
                  <div class="metaBox e35"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e56').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e56" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e35'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-001.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e36">
                  <div class="para e37">Extension ELx of a Language</div>
               </div>
            </div>
         </div>
         <div class="para e38">If we show this pictorially, we get the above figure. Lx is a language specification
            which
            has all blue rectangles as conforming documents. The extension of Lx, ELx, are all
            blue
            rectangles. The complement (everything not in ELx) are all non-rectangular blue shapes,
            and
            all shapes in other colors.
         </div>
         <div class="figure e39" floatstyle="1" xml:id="Bal2008graa030602" xreflabel="Bal2008graa030602">
            <div class="mediaobject e40">
               <div class="imageobject e41">
                  <div class="metaBox e42"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e65').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e65" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e42'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-002.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e43">
                  <div class="para e44">ELx as Subset of ELy</div>
               </div>
            </div>
         </div>
         <div class="para e45">The extension of the language Ly consisting of all rectangles in any color is a superset
            of the extension of Lx; for shorthand, we say Ly is a superlanguage of Lx.
         </div>
         <div class="figure e46" floatstyle="1" xml:id="Bal2008graa030603" xreflabel="Bal2008graa030603">
            <div class="mediaobject e47">
               <div class="imageobject e48">
                  <div class="metaBox e49"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e74').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e74" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e49'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-003.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e50">
                  <div class="para e51">ELx as Subset of ELz</div>
               </div>
            </div>
         </div>
         <div class="para e52">Likewise, Lz, the language of all blue shapes, is a superlanguage of Lx.</div>
         <div class="figure e53" floatstyle="1" xml:id="Bal2008graa030604" xreflabel="Bal2008graa030604">
            <div class="mediaobject e54">
               <div class="imageobject e55">
                  <div class="metaBox e56"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e83').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e83" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e56'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-004.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e57">
                  <div class="para e58">ELx as Intersection of ELz and ELy</div>
               </div>
            </div>
         </div>
         <div class="para e59">And Lx is (extensionally) also the intersection of Ly and Lz.</div>
         <div class="para e60">Starting with a rather loose notion of "conformance" (let's assume for the moment
            this
            notion is unproblematic) it's easy to define relation between languages extensionally.
            A
            language Lx can be an extensional sublanguage of Ly: if every document conforming
            to Lx is
            also a conforming Ly document. If the reverse is true, all conforming Ly documents
            are also
            conforming Lx documents, Lx is an extensional superlanguage of Ly. If both are true,
            Lx and
            Ly are extensionally equivalent. Note that we only speak of extensional equivalence:
            for all
            we know, Lx may be about pasta recipes and Ly about reggae albums: if by some weird
            happenstance both languages have encoded their information in similar data formats,
            we can
            still compare the pasta and reggae languages extensionally.
         </div>
      </div><a name="AcceptingandRejectingDocumentsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e61">
         <div class="title e62">Accepting and Rejecting Documents</div>
         <div class="figure e63" floatstyle="1" xml:id="Bal2008graa030605" xreflabel="Bal2008graa030605">
            <div class="mediaobject e64">
               <div class="imageobject e65">
                  <div class="metaBox e66"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e98').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e98" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e66'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-005.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e67">
                  <div class="para e68">Accept and Reject Behavior of Px</div>
               </div>
            </div>
         </div>
         <div class="para e69">Applications can read and write (produce and consume, send and receive) documents.
            For now
            we still suppose an application reads and writes the same set of documents. In the
            above
            picture, the implementation Px1 of language Lx accepts all blue rectangles (ELx),
            and
            rejects all other documents. So through accepting and rejecting, Px1 decides which
            documents
            are syntactically conformant with Lx (as implemented in Px1).
         </div>
      </div><a name="FromSyntaxtoSemanticsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e70">
         <div class="title e71">From Syntax to Semantics</div>
         <div class="para e72">When we move from pure extensions, we must consider the semantics of a language. This
            is a
            difficult notion. At one extreme, a language may not consider semantics at all, and
            just
            define a syntactical data format, and leave all semantics up to applications. It's
            often
            said that "XML is just syntax". But if this is true, XML itself is not very interesting,
            and
            the real-world applications of XML, such as in UBL or HL7v3, certainly must include
            some
            semantics. At its highest level, those semantics are descriptions in natural language,
            defining for instance what an invoice or a medication prescription is. At a lower
            level,
            those semantics may be expressed in more formal ways. 
         </div>
         <div class="para e73">One way to (try to) express the semantics of messages in a messaging system with respect
            to forward and backward compatibility is to use formal semantics. This is – in my
            opinion –
            the wrong way. For simple (abstracted, theoretical) systems this might work. One would
            have
            to model the system and the encapsulated exchanged information using a language such
            as OWL.
            For real life purposes, this is hardly feasible. To make an OWL description of the
            underlying semantics of UBL or HL7v3 is a (much) larger undertaking than specifying
            a decent
            versioning mechanism to provide back- and forward compatibility to a reasonable degree:
            so
            using formal semantics to provide a framework and definitions for the notion of
            compatibility defeats the problem.
         </div>
      </div><a name="SemanticsandBehaviorANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e74">
         <div class="title e75">Semantics and Behavior</div>
         <div class="para e76">A language specification of the kind under consideration should enable a capable engineer
            to implement a conforming application: an application which presumably can read an
            write
            conforming documents (let's assume for the moment the application can read every document
            it
            writes and vice versa). The application as a total then exhibits some behavior: if
            we use a
            word processor to read a document, we expect the word processor to display the stored
            text
            and formatting. If we use a medical application to send a prescription, we expect
            the
            receiving application to display the intended medication and applicable quantity and
            dosage. 
         </div>
         <div class="para e77">Languages may not define behavior very strictly. HL7v3 even goes at great length to
            stress
            is does not restrict application behavior at all, but I do not think this really holds.
            Obviously there are a great deal of application behaviors which are at odds with HL7v3
            specifications, such as displaying pasta recipes instead of medication prescriptions.
         </div>
         <div class="para e78">The behavior of a message endpoint is not unproblematic. It's usually best to consider
            some message endpoint to a certain degree as a black box; to consider only what's
            going in
            and coming out, not what is inside. How it works is not relevant; what it does is
            relevant.
            But when sending messages, there often is no direct behavior (no response) associated.
            When
            I send you a message with my new home address, I may expect no response (or just a
            simple
            ask). I do expect future mail to be delivered to my new home address, however. the
            point is,
            there may never be new mail to me, so there may never be a response message showing
            the
            desired behavior. 
         </div>
         <div class="para e79">On a higher level, the behavior of a corresponding message endpoint may not be
            deterministic at all. When a general physician sends a medication prescription to
            a
            pharmacist, the pharmacist may overrule the general physician's decision: this is
            an
            independent professional judgment, based on the pharmacists own competence. 
         </div>
         <div class="para e80">So the behavior of a message endpoint is not unproblematic. I believe the solution
            is
            basically to take humans out of the box. We must consider the behavior of a receiving
            computer system when judging the behavior for a message, not the humans interpreting
            and
            acting on the information. The behavior of the application is also in need of human
            interpretation. For instance, a part of a medication prescription may be:
         </div>
         <div class="para e81">
            <div class="code e82">&lt;code code=”27” codeSystem=”2.16.840.1.113883.2.4.4.5” /&gt;</div>
         </div>
         <div class="para e83">and the receiving application may display:</div>
         <div class="para e84">
            <div class="code e85">"Dissolve in water"</div>
         </div>
         <div class="para e86">which is a faithful rendering of the information sent. However, instead of "Dissolve
            in
            water" the receiving application may also display some local code. In general, it
            is not
            possible to judge whether a receiving application behaves well without the judgment
            of a
            professional well acquainted with the messaging framework as well as the receiving
            application.
         </div>
         <div class="para e87">So where does this leave us with behavior as a basis for a framework for compatible
            versioning? If we take a look a practical aspects, behavior is a near perfect fit.
            The most
            practical aspect of a framework for compatible versioning is testing the entire messaging
            chain. And especially for this aspect, behavior as a basis for semantic compatibility
            is
            perfect. The fact that there may – in real life – never be a response message showing
            the
            desired behavior is not relevant. Relevant is the fact that such behavior is a testable
            condition of the messaging chain. In a test, we can send an "update address" message
            and
            next test the printing of an address label. Likewise, the fact that behavior is not
            deterministic with a human "in the box" is not a problem: in testing, we generally
            want a
            professional judging whether the system does what it is supposed to do. Again, behavior
            as a
            basis for semantic compatibility is a perfect fit. 
         </div>
         <div class="para e88">If we have a certain implementation of a language specification, the reading of a
            document
            should result in a changed application state: for instance, the text on the screen
            has
            changed, or its internal data store has been updated, resulting in specific behavior
            if the
            data store is later queried. Let's assume, as most often is the case, that the behavior
            (the
            state change) is deterministic: if the application is in the same state before reading
            a
            document, then reading the document always results in the same end-state.
         </div>
      </div><a name="BehaviorofLanguageProcessorsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e89">
         <div class="title e90">Behavior of Language Processors</div>
         <div class="figure e91" floatstyle="1" xml:id="Bal2008graa030606" xreflabel="Bal2008graa030606">
            <div class="mediaobject e92">
               <div class="imageobject e93">
                  <div class="metaBox e94"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e145').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e145" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e94'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-006.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e95">
                  <div class="para e96">Behavior of Px</div>
               </div>
            </div>
         </div>
         <div class="para e97">We can show the behavior of a processor Px1 pictorially as in the above figure: for
            every
            document in ELx, Px1 exhibits some particular behavior. Px1 is partitioned, as it
            were, in
            behavioral compartments, one for each document.
         </div>
         <div class="para e98">Of course it is quite common for messaging systems to have different behaviors for
            exactly
            the same document: for instance, a common property of reliable messaging is for an
            order to
            be executed, and a duplicate to be rejected (unless the original was lost, which is
            the
            raison d'être of reliable messaging). This is no serious obstacle to the model: for
            testing
            purposes, it is sufficient (and desirable) to assume a fixed start state for any sequence
            of
            messages, which makes the responses deterministic. For real life systems, if we wanted
            to
            model this aspect, we could assume the behavior to be determined by the message and
            (some
            aspect of) the state of the processor. Like before, I believe a framework in which
            testable
            scenario's can be described sufficient.
         </div>
         <div class="para e99">Next we need to make some idealizations to get rid of all the processors. We'll simply
            assume every language specification is flawless (not hard to imagine, is it?) and
            there is a
            perfect processor for every language; we'll take that processor as an exemplar of
            the
            language. And we no longer assume a processor makes the same set of documents as it
            accepts.
         </div>
      </div><a name="SyntacticalCompatibilityANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e100">
         <div class="title e101">Syntactical Compatibility</div>
         <div class="para e102">This allows us to define syntactic compatibility: a (language) processor is syntactically
            compatible with another (language) processor if they are able to exchange documents
            without
            syntactic failure: if they are able to accept each other's documents. A common case
            is when
            they implement the same language (version). 
         </div>
         <div class="figure e103" floatstyle="1" xml:id="Bal2008graa030608" xreflabel="Bal2008graa030608">
            <div class="mediaobject e104">
               <div class="imageobject e105">
                  <div class="metaBox e106"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e163').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e163" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e106'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-007.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e107">
                  <div class="para e108">Behavior with Disjunct ELX and ELy</div>
               </div>
            </div>
         </div>
         <div class="para e109">But the processors need not produce the same documents at all. Another common case
            is
            where one processor makes and sends orders, but does not receive orders, and the other
            processor receives orders and makes order confirmations, but no orders. Even though
            the
            processors make and accept different documents, it makes perfect sense to say they
            are
            syntactically compatible. So we can say a processor Px is compatible with a processor
            Py if
            Px makes only documents which Py accepts, and Py makes only documents which Px accepts.
            (It
            would be more common to say Px and Py are partial implementations of one and the same
            language, but that does not change the point.
         </div>
         <div class="figure e110" floatstyle="1" xml:id="Bal2008graa030609" xreflabel="Bal2008graa030609">
            <div class="mediaobject e111">
               <div class="imageobject e112">
                  <div class="metaBox e113"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e172').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e172" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e113'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-008.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e114">
                  <div class="para e115">Behavior and Forward Compatiblity of Px and Px+1</div>
               </div>
            </div>
         </div>
         <div class="para e116">For versioning, the interesting case is twofold: for backward syntactical compatibility,
            a
            processor Px+1 should accept all documents produced by Px. and for forward syntactical
            compatibility, a processor Px should accept all documents produced by Px+1. The above
            picture highlights one variant, where Px and Px+1 both accept the same set of documents,
            but
            make different sets.
         </div>
         <div class="para e117">The accept/reject reaction to a document is fundamental to the entire compatibility
            and
            versioning problem. However, the accept/reject distinction is not syntactical in nature.
            It
            is a behavioral aspect of a processor: accepting or rejecting is a response to a document,
            it attaches meaning to the document: acceptable! (or not). So the basic aspect which
            decides
            syntactical conformance in a sender/receiver (writer/reader, producer/consumer)
            configuration is itself semantical in nature.
         </div>
         <div class="para e118">The key to enhance (future) compatibility on a syntactic level is to make processor
            accept
            more than they produce. In other words, a processor should not reject everything it
            could
            not produce itself, and should not reject everything it does not completely understand.
            Next, we'll see what to do with that un-understood "extra".
         </div>
      </div><a name="SemanticalEquivalenceSetsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e119">
         <div class="title e120">Semantical Equivalence Sets</div>
         <div class="figure e121" floatstyle="1" xml:id="Bal2008graa030610" xreflabel="Bal2008graa030610">
            <div class="mediaobject e122">
               <div class="imageobject e123">
                  <div class="metaBox e124"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e188').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e188" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e124'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-009.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e125">
                  <div class="para e126">Behavior of Px</div>
               </div>
            </div>
         </div>
         <div class="para e127">In the above figure, we have a processor for a language which makes only blue rectangles,
            but accepts all rectangles. If we now associate some particular behavior which each
            class of
            documents, we get semantical equivalence sets. Not every document is normally associated
            with some unique behavior: we often have syntactical redundancy, as in C's i=1+1 and
            i+=1 or
            attribute order in XML: so there is a set of documents which excite the same behavior
            in a
            receiver. The pattern of syntactical forward compatibility, where a receiver accepts
            more
            than it can act upon, achieves the same: there is a set of documents for which trigger
            the
            same behavior: since the receiver does not understand the extra syntactical components,
            it
            cannot act upon them, and it therefore must act the same, whatever the extra content.
         </div>
      </div><a name="SemanticsandCompatibilityANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e128">
         <div class="title e129">Semantics and Compatibility</div>
         <div class="figure e130" floatstyle="1" xml:id="Bal2008graa030611" xreflabel="Bal2008graa030611">
            <div class="mediaobject e131">
               <div class="imageobject e132">
                  <div class="metaBox e133"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e200').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e200" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e133'
                           </span><span class="metaAttribute">fileref='../../../vol2/graphics/deGraauw01/deGraauw01-010.png'
                           </span><span class="metaAttribute">format='png'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e134">
                  <div class="para e135">Behavior of Px+1</div>
               </div>
            </div>
         </div>
         <div class="para e136">If a language Lx has a successor Lx+1, Lx+1 may specify additional behavior for documents
            accepted, but not produced by Lx: in the above figure, green and red rectangles. This
            has
            two consequences: - for every document produced by Px, Px+1 will behave as Px expects:
            it is
            therefore safe for Px to send messages to Px+1 - for documents produced by Px+1 which
            Px
            cannot produce (again the green and red rectangles) Px will exhibit the same behavior
            as for
            other documents in the same semantical equivalence set: the language designer of Lx+1
            will
            know what behavior this is, and if it is deemed acceptable, it is safe for Px+1 to
            send
            messages to Px (if the behavior is not deemed acceptable, Px+1 must make sure in some
            way
            that Px will reject those documents, maybe through a "mustUnderstand" flag).
         </div>
      </div><a name="ConclusionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e137">
         <div class="title e138">Conclusion</div>
         <div class="para e139">The basics of compatible versioning thus are: 1. make sure Px accepts more documents
            than
            it produces (or fully understands), and, 2. partition the semantical equivalence sets
            of Px
            into smaller, more refined semantical equivalence sets for Px+1 with additional (new)
            behavior.
         </div>
      </div><a name="Definitions%0AANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e140" xml:id="mul88">
         <div class="title e141">Definitions
            
         </div>
         <div class="para e142">This Appendix contains informal definitions of the concepts of compatibility.
            
         </div>
         <div class="orderedlist e143">
            <div class="listitem e144">
               <div class="para e145">
                  Two languages are 
                  <div class="emphasis e146">extensionally equivalent</div> if they accept the same set of documents.
                  
               </div>
            </div>
            <div class="listitem e147">
               <div class="para e148">
                  A language is an 
                  <div class="emphasis e149">extensional sublanguage </div>of a second language if all documents accepted by the first language are also accepted
                  by the second.
                  
               </div>
            </div>
            <div class="listitem e150">
               <div class="para e151">
                  If two processors behave the same for every document which belongs to a language Lx,
                  the processors are 
                  <div class="emphasis e152">behaviourally equivalent</div> for Lx.
                  
               </div>
            </div>
            <div class="listitem e153">
               <div class="para e154">
                  Two languages are 
                  <div class="emphasis e155">syntactically compatible</div> if they accept the documents produced by each other.
                  
               </div>
            </div>
            <div class="listitem e156">
               <div class="para e157">
                  A language change is 
                  <div class="emphasis e158">syntactically backward compatible</div> if a new receiver accepts all documents produced by an older sender.
                  
               </div>
            </div>
            <div class="listitem e159">
               <div class="para e160">
                  A language change is 
                  <div class="emphasis e161">syntactically forward compatible</div> if an old receiver accepts all documents produced by a new sender.
                  
               </div>
            </div>
            <div class="listitem e162">
               <div class="para e163">
                  If two languages take the same documents as input, and their processors behave the
                  same for every document, the languages are 
                  <div class="emphasis e164">semantically equivalent</div>.
                  
               </div>
            </div>
            <div class="listitem e165">
               <div class="para e166">
                  The
                  <div class="emphasis e167"> semantical equivalence set </div>of a document d is the set of documents which make a processor behave the same as
                  d.
                  
               </div>
            </div>
            <div class="listitem e168">
               <div class="para e169">
                  A language is a 
                  <div class="emphasis e170">semantical superlanguage</div> of a second language if for all documents produced by the second language, processors
                  of the first language behave the same as processors of the second language.
                  
               </div>
            </div>
            <div class="listitem e171">
               <div class="para e172">
                  A later version of a language is 
                  <div class="emphasis e173">semantically backward compatible</div> with an earlier version if the later version is a semantical superlanguage of the
                  earlier one (an old sender may expect a newer, but semantically backward compatible,
                  receiver to behave as the sender intended).
                  
               </div>
            </div>
            <div class="listitem e174">
               <div class="para e175">
                  An earlier language is 
                  <div class="emphasis e176">semantically forward compatible</div> with a later language  iff the later language is a semantical sublanguage of the
                  earlier one (this is only possible if a language loses semantics).
                  
               </div>
            </div>
            <div class="listitem e177">
               <div class="para e178">
                  A later language 
                  <div class="emphasis e179">semantically extends</div> and earlier language if the later language  introduces new behaviour for some documents
                  accepted, but not produced by the earlier one.
                  
               </div>
            </div>
         </div>
      </div><a name="FormalAxiomatizationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e180">
         <div class="title e181">Formal Axiomatization</div>
         <div class="para e182">This appendix contains a formal account of the principles which are introduced informally
            in the main article.
         </div>
         <div class="orderedlist e183" numeration="arabic">
            <div class="listitem e184">
               <div class="para e185">Let U be a set of (specifications of) software processable languages {L1, L2, ...
                  Ln} 
                  <div class="orderedlist e186" numeration="lowerroman">
                     <div class="listitem e187">
                        <div class="para e188">This axiomatization does not concern itself with natural language</div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e189">
               <div class="para e190">The 
                  <div class="emphasis e191">extension</div> of a language Lx is a set of conforming
                  document instances ELx = {Dx1, Dx2, ... Dxn} 
                  <div class="orderedlist e192" numeration="lowerroman">
                     <div class="listitem e193">
                        <div class="para e194">Iff ELx = ELy then Lx and Ly are extensionally equivalent 
                           <div class="itemizedlist e195">
                              <div class="listitem e196">
                                 <div class="para e197">Lx and Ly may still be different: they may define different
                                    semantics for the same syntactical construct
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e198">
                        <div class="para e199">Iff ELx ⊂ ELy then Lx is an extensional sublanguage of
                           Ly
                        </div>
                     </div>
                     <div class="listitem e200">
                        <div class="para e201">Iff ELx ⊃ ELy then Lx is an extensional superlanguage of
                           Ly
                        </div>
                     </div>
                     <div class="listitem e202">
                        <div class="para e203">D is the set of all possible documents; or the union of all ELx where Lx
                           ∈ U 
                        </div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e204">
               <div class="para e205">For each Lx ∈ U there is a set of 
                  <div class="emphasis e206">processors</div> Px =
                  {Px1, Px2, ... Pxn} which implement Lx 
                  <div class="orderedlist e207" numeration="lowerroman">
                     <div class="listitem e208">
                        <div class="para e209">Each Pxy exhibits behaviour as defined in Lx</div>
                     </div>
                     <div class="listitem e210">
                        <div class="para e211">Processors can produce and consume documents</div>
                     </div>
                     <div class="listitem e212">
                        <div class="para e213">Each Pxy produces only documents it can consume itself</div>
                     </div>
                     <div class="listitem e214">
                        <div class="para e215">At consumption, Pxy may accept or reject documents</div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e216">
               <div class="para e217">The 
                  <div class="emphasis e218">behaviour</div> of a processor Pxy of language Lx is a function
                  Bxy 
                  <div class="orderedlist e219" numeration="lowerroman">
                     <div class="listitem e220">
                        <div class="para e221">The function Bxy takes as argument a document, and it's value is a
                           processor state 
                           <div class="itemizedlist e222">
                              <div class="listitem e223">
                                 <div class="para e224">We assume a single processor state before each function
                                    execution, alternatively we could assume a &lt;state,
                                    document&gt; tuple as function argument
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e225">
                        <div class="para e226">If for two processors Pxy and Pxz for language Lx for a document d Bxy(d)
                           = Bxz(d) then the two processors behave similar for d 
                           <div class="itemizedlist e227">
                              <div class="listitem e228">
                                 <div class="para e229">Two processor states for language Lx are deemed equivalent if a
                                    human with thorough knowledge of language specification Lx
                                    considers the states equivalent. Details may vary insofar as the
                                    language specification allows it.
                                 </div>
                              </div>
                              <div class="listitem e230">
                                 <div class="para e231">Processor equivalence is not intended to be formally or
                                    computably decidable; though in some cases it could be.
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e232">
                        <div class="para e233">If ∀d ( d ∈ ELx → Bxy(d) = Bxz(d) ) then
                           Pxy and Pxz are behaviourally equivalent for Lx 
                           <div class="itemizedlist e234">
                              <div class="listitem e235">
                                 <div class="para e236">If two processors behave the same for every document which
                                    belongs to a language Lx, the processors are behaviourally
                                    equivalent for Lx.
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e237">
               <div class="para e238">An 
                  <div class="emphasis e239">ideal language</div> specifies all aspects of desired processor
                  behaviour completely and unambiguously; assume all languages in U are ideal
               </div>
            </div>
            <div class="listitem e240">
               <div class="para e241">A processor Px is an 
                  <div class="emphasis e242">exemplary processor</div> of a language Lx if
                  it fully implements language specification Lx; assume all processors for all
                  languages in U are exemplary 
                  <div class="orderedlist e243" numeration="lowerroman">
                     <div class="listitem e244">
                        <div class="para e245">Because they are (defined to be) exemplary, every two processors for a
                           language Lx are behaviourally equivalent
                        </div>
                     </div>
                     <div class="listitem e246">
                        <div class="para e247">ELx = { d is a document ∧ Px accepts d }</div>
                     </div>
                     <div class="listitem e248">
                        <div class="para e249">The complement of ELx is the set of everything (normally, every document)
                           which is rejected by Px
                        </div>
                     </div>
                     <div class="listitem e250">
                        <div class="para e251">The make set MLx = { d is a document ∧ Px can produce d
                           }
                        </div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e252">
               <div class="para e253">A language Lx is 
                  <div class="emphasis e254">syntactically compatible</div> with Ly iff MLx
                  ⊂ ELy and MLy ⊂ ELx 
                  <div class="itemizedlist e255">
                     <div class="listitem e256">
                        <div class="para e257">Two languages are syntactically compatible if they accept the documents
                           produced by each other.
                        </div>
                     </div>
                  </div>
                  
                  <div class="orderedlist e258" numeration="lowerroman">
                     <div class="listitem e259">
                        <div class="para e260">A language Ln+1 is 
                           <div class="emphasis e261">syntactically backward compatible</div>
                           with Ln iff MLn ⊂ ELn+1 and Ln+1 is a successor of Ln 
                           <div class="itemizedlist e262">
                              <div class="listitem e263">
                                 <div class="para e264">A language change is syntactically backward compatible if a new
                                    receiver accepts all documents produced by an older sender.
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e265">
                        <div class="para e266">A language Ln is 
                           <div class="emphasis e267">syntactically forward compatible</div>
                           with Ln+1 iff MLn+1 ⊂ ELn and Ln+1 is a successor of Ln 
                           <div class="itemizedlist e268">
                              <div class="listitem e269">
                                 <div class="para e270">A language change is syntactically forward compatible if an old
                                    receiver accepts all documents produced by a new sender.
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e271">
               <div class="para e272">A document d can be a member of the extension of any number of languages</div>
               <div class="orderedlist e273" numeration="lowerroman">
                  <div class="listitem e274">
                     <div class="para e275">Px is an (exemplary) processor of Lx, Py is an (exemplary) processor of
                        language
                     </div>
                  </div>
                  <div class="listitem e276">
                     <div class="para e277">Two languages Lx and Ly are 
                        <div class="emphasis e278">semantically equivalent</div> iff
                        ELx = ELy ∧ ∀d ( (d ∈ ELx ) → Bx(d) =
                        By(d) )
                     </div>
                     <div class="itemizedlist e279">
                        <div class="listitem e280">
                           <div class="para e281">If two languages Lx and Ly take the same documents as input, and their
                              exemplary processors behave the same for every document, the languages
                              are semantically equivalent.
                           </div>
                        </div>
                        <div class="listitem e282">
                           <div class="para e283">Two languages can only be compared if their exemplary processors are
                              similar enough to be compared. 
                           </div>
                        </div>
                        <div class="listitem e284">
                           <div class="para e285">Not every two languages can be compared.</div>
                        </div>
                        <div class="listitem e286">
                           <div class="para e287">"Semantic" should not be interpreted in the sense of "formal
                              semantics".
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="listitem e288">
               <div class="para e289">The 
                  <div class="emphasis e290">semantical equivalence set</div> of a document d for Lx = { y
                  ∈ ELx | Bx(d) = Bx(y) } 
                  <div class="orderedlist e291" numeration="lowerroman">
                     <div class="listitem e292">
                        <div class="para e293">Or: SLx,d = { y ∈ ELx | Bx(d) = Bx(y) } 
                           <div class="itemizedlist e294">
                              <div class="listitem e295">
                                 <div class="para e296">The semantical equivalence set of a document d is the set of
                                    documents which make a processor behave the same as d
                                 </div>
                              </div>
                              <div class="listitem e297">
                                 <div class="para e298">Semantical equivalence occurs for expressions which are
                                    semantically equivalent, such as i = i + 1 and i += 1 for C, or
                                    different attribute order in XML etc.
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e299">
                        <div class="para e300">d ∈ SLx,d</div>
                     </div>
                     <div class="listitem e301">
                        <div class="para e302">Any two semantical equivalence sets of Lx are necessarily disjunct</div>
                        <div class="itemizedlist e303">
                           <div class="listitem e304">
                              <div class="para e305">If z ∈ SLx,e were also z ∈ SLx,d then every
                                 member of SLx,e would be in SLx,d and vice versa and thus SLx,d =
                                 SLx,e
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e306">
               <div class="para e307">A language Ly is a 
                  <div class="emphasis e308">semantical superlanguage</div> of Lx iff
                  ∀d ( d ∈ MLx → By(d) = Bx(d) ) 
                  <div class="orderedlist e309" numeration="lowerroman">
                     <div class="listitem e310">
                        <div class="para e311">For all documents produced by Px, Py behaves the same as Px 
                           <div class="itemizedlist e312">
                              <div class="listitem e313">
                                 <div class="para e314">Equivalence in this case should be decided based on Lx; if Ly
                                    makes behavioural distinctions which are not mentioned in Lx,
                                    behaviour is still the same as far as Lx is concerned
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e315">
                        <div class="para e316">It follows: ∀d ( d ∈ MLx → ∃SLy,d
                           ( SLy,d ⊂ ELy ∧ ( SLx,d ∩ MLx ) ⊂
                           SLy,d ∧ By(d) = Bx(d) ) ) 
                           <div class="itemizedlist e317">
                              <div class="listitem e318">
                                 <div class="para e319">For any document produced by Px, the part of its semantical
                                    equivalence set which Px can actually produce, is a subset of the
                                    semantical equivalence set of Py for this document
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e320">
                        <div class="para e321">For all d ∈ ELx ∧ d ∉ MLx there may be many
                           equivalence sets in Ly for which By(d) ≠ Bx(d) 
                           <div class="itemizedlist e322">
                              <div class="listitem e323">
                                 <div class="para e324">In other words: for documents accepted but not produced by Px,
                                    Ly may define additional behaviours
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="listitem e325">
                        <div class="para e326">Lx is a semantical sublanguage of Ly iff Ly is a semantical superlanguage
                           of Lx
                        </div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e327">
               <div class="para e328">A language Ln+1 is 
                  <div class="emphasis e329">semantically backward compatible</div> with Ln
                  iff Ln+1 is a semantical superlanguage of Ln and Ln+1 is a successor of Ln
                  
                  <div class="orderedlist e330" numeration="lowerroman">
                     <div class="listitem e331">
                        <div class="para e332">An old sender may expect a newer, but semantically backward compatible,
                           receiver to behave as the sender intended
                        </div>
                     </div>
                     <div class="listitem e333">
                        <div class="para e334">A language Ln is 
                           <div class="emphasis e335">semantically forward compatible</div>
                           with Ln+1 iff Ln+1 is a semantical sublanguage of Ln and Ln+1 is a successor
                           of Ln
                        </div>
                     </div>
                     <div class="listitem e336">
                        <div class="para e337">Semantic forward compatibility is only possible if a language loses
                           semantics; i.e. its processors exhibit less functionality, and produce less
                           diverse documents
                        </div>
                     </div>
                     <div class="listitem e338">
                        <div class="para e339">A processor cannot understand what it does not know about yet</div>
                     </div>
                  </div>
                  
               </div>
            </div>
            <div class="listitem e340">
               <div class="para e341">A language Ln+1 
                  <div class="emphasis e342">semantically extends</div> Ln iff ∃d ( d
                  ∈ MLn+1 ∧ d ∈ ELn ∧ BLn+1 ≠ BLn ) 
                  <div class="itemizedlist e343">
                     <div class="listitem e344">
                        <div class="para e345">Ln+1 introduces new behaviour for some documents accepted, but not
                           produced by Ln
                        </div>
                     </div>
                  </div>
                  
                  <div class="orderedlist e346" numeration="lowerroman">
                     <div class="listitem e347">
                        <div class="para e348">Assume Ln is syntactically forward compatible with Ln+1, Ln+1 is
                           semantically backward compatible with Ln, and Ln+1 semantically extends Ln 
                           <div class="itemizedlist e349">
                              <div class="listitem e350">
                                 <div class="para e351">Pn accepts all documents produced by Pn+1, or: MLn+1 ⊂
                                    ELn
                                 </div>
                              </div>
                              <div class="listitem e352">
                                 <div class="para e353">For documents produced by Pn, Pn+1 behaves as Pn would expect,
                                    or: ∀d( d ∈ MLn → Bn+1(d) = Bn(d)
                                    )
                                 </div>
                              </div>
                              <div class="listitem e354">
                                 <div class="para e355">But for some documents accepted, but not produced by Pn, Pn does
                                    not behave as Pn+1 would, or: ∃d ( d ∈ MLn+1
                                    ∧ d ∈ ELn ∧ d ∉ MLn
                                    ∧ BLn+1 ≠ BLn )
                                 </div>
                              </div>
                              <div class="listitem e356">
                                 <div class="para e357">New senders send documents to old receivers, which do not behave
                                    as new receivers would behave
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="listitem e358">
                        <div class="para e359">∀d (d ∈ MLn+1 ∧ d ∈ ELn
                           ∧ d ∉ MLn → ∃d'( d' ∈ MLn
                           ∧ Bn(d') = Bn(d) ) 
                           <div class="itemizedlist e360">
                              <div class="listitem e361">
                                 <div class="para e362">For every document d, accepted but not produced by Pn, there is
                                    a document d' for which Pn behaves the same as for d, or: d'
                                    ∈ SLn,d (the semantical equivalence set of d for
                                    Ln)
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e363">
                        <div class="para e364">We can assume Ln 
                           <div class="emphasis e365">transforms document</div> d to document
                           d' 
                           <div class="itemizedlist e366">
                              <div class="listitem e367">
                                 <div class="para e368">If a language Ln accepts a document which it would not produce,
                                    it transforms it to a document which it could produce
                                 </div>
                              </div>
                              <div class="listitem e369">
                                 <div class="para e370">There has to be no literal transformation</div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e371">
                        <div class="para e372">We now have: Bn(d') = Bn(d) ∧ Bn+1(d') ≠ Bn+1(d) 
                           <div class="itemizedlist e373">
                              <div class="listitem e374">
                                 <div class="para e375">Pn behaves the same for d and the transformed d'; but Pn+1
                                    behaves differently
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                     <div class="listitem e376">
                        <div class="para e377">Iff it is acceptable that Bn(d') = Bn(d) for transformed documents, then
                           Pn 
                           <div class="emphasis e378">may ignore</div> the semantical extension responsible for
                           Bn+1(d') ≠ Bn+1(d) 
                           <div class="itemizedlist e379">
                              <div class="listitem e380">
                                 <div class="para e381">The fact that Ln is syntactically forward compatible with Ln+1
                                    enables Pn+1 to introduce new semantics without breaking existing
                                    Pn
                                 </div>
                              </div>
                              <div class="listitem e382">
                                 <div class="para e383">We could say Ln is 
                                    <div class="emphasis e384">partially semantically forward
                                       compatible
                                    </div> with Ln+1; it only ignores semantics it
                                    may ignore
                                 </div>
                              </div>
                              <div class="listitem e385">
                                 <div class="para e386">New senders can interact with old receivers; old receivers may
                                    ignore what they do not understand
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="listitem e387">
                        <div class="para e388"> Iff it is not acceptable that Bn(d') = Bn(d) for transformed documents,
                           then Pn 
                           <div class="emphasis e389">must understand</div> the semantical extension
                           responsible for Bn+1(d') ≠ Bn+1(d) 
                           <div class="itemizedlist e390">
                              <div class="listitem e391">
                                 <div class="para e392">If Pn must understand d, then Pn should not process d</div>
                              </div>
                              <div class="listitem e393">
                                 <div class="para e394">A Pn+1 must not send d to a Pn; or Pn should be adapted so that
                                    Pn rejects d (or: d ∉ ELn)
                                 </div>
                              </div>
                              <div class="listitem e395">
                                 <div class="para e396">If a Pn+1 can send d to a Pn, then Ln should not be (completely)
                                    syntactically forward compatible with Ln+1
                                 </div>
                              </div>
                              <div class="listitem e397">
                                 <div class="para e398">A processor should not accept what it must understand, yet
                                    cannot understand
                                 </div>
                              </div>
                           </div>
                           
                        </div>
                     </div>
                  </div>
                  
               </div>
            </div>
         </div>
      </div><a name="BibliographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e399">
         <div class="title e400">Bibliography</div>
         <div class="bibliomixed e401">UBL. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e402" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=ubl</div>
         </div>
         <div class="bibliomixed e403">HL7v3. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e404" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.hl7.org/</div>
         </div>
         <div class="bibliomixed e405">Versioning XML with XML Schema, David Orchard, XTech 2008. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e406" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://2008.xtech.org/public/schedule/detail/530</div>
         </div>
         <div class="bibliomixed e407">Extending and Versioning Languages: Terminology, Draft TAG Finding 13 November 2007.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e408" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/2001/tag/doc/versioning-20071113.html</div>
         </div>
         <div class="bibliomixed e409">Extending and Versioning Languages: Strategies, Draft TAG Finding 17 September 2007.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e410" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/2001/tag/doc/versioning-strategies-20070917.html</div>.
         </div>
      </div>
   </div>
</div>