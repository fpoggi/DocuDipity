<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#ManagingXMLreferencesthroughtheXRMvocabularyANCHOR" name="ManagingXMLreferencesthroughtheXRMvocabularyTOC">Managing XML references through the XRM vocabulary</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionANCHOR" name="IntroductionTOC">Introduction</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ProblemoverviewANCHOR" name="ProblemoverviewTOC">Problem overview</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#StateoftheArtANCHOR" name="StateoftheArtTOC">State of the Art</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#XCatalogANCHOR" name="XCatalogTOC">XCatalog</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#XLinkANCHOR" name="XLinkTOC">XLink</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ApproachPrincipleANCHOR" name="ApproachPrincipleTOC">Approach Principle</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#SpecificationANCHOR" name="SpecificationTOC">Specification</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MatchinglanguageANCHOR" name="MatchinglanguageTOC">Matching language</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#ExecutionmodelANCHOR" name="ExecutionmodelTOC">Execution model</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheapproachinmoredetailANCHOR" name="TheapproachinmoredetailTOC">The approach in more detail</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#LinkDescriptionANCHOR" name="LinkDescriptionTOC">Link Description</a></div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#OverviewANCHOR" name="OverviewTOC">Overview</a></div>
               </div>
               <div class="headedContainerTOC">
                  <div class="headedContainerTitleTOC"><a href="#ThelinkdescriptorsANCHOR" name="ThelinkdescriptorsTOC">The link descriptors</a></div>
               </div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#LinkValidationANCHOR" name="LinkValidationTOC">Link Validation</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#LinkTransformationANCHOR" name="LinkTransformationTOC">Link Transformation</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#LinkDependenciesANCHOR" name="LinkDependenciesTOC">Link Dependencies</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionANCHOR" name="ConclusionTOC">Conclusion</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ThepatternmatchinglanguageANCHOR" name="ThepatternmatchinglanguageTOC">The pattern matching language</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#VerificationandexecutionofXRMspecifications(principles)ANCHOR" name="VerificationandexecutionofXRMspecifications(principles)TOC">Verification and execution of XRM specifications (principles)</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">article</div>
         <div class="singletermTERMS">absolute</div>
         <div class="singletermTERMS">August 11 - 14, 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">base-uri</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">condition(p)</div>
         <div class="singletermTERMS">condition</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">document and resource packaging</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">extract</div>
         <div class="singletermTERMS">Extensible Markup Language (XML) 1.1</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">fragment(p)</div>
         <div class="singletermTERMS">from</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">href</div>
         <div class="singletermTERMS">HREF</div>
         <div class="singletermTERMS">How to Write an XML Catalog File</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">idem</div>
         <div class="singletermTERMS">img</div>
         <div class="singletermTERMS">IRI</div>
         <div class="singletermTERMS">into</div>
         <div class="singletermTERMS">Internationalized Resource Identifiers (IRIs)</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
         <div class="singletermTERMS">jean-yves.vion-dury@xeroxlabs.com</div>
         <div class="singletermTERMS">Jean-Yves</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">link relocation</div>
         <div class="singletermTERMS">link-description</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">matches(p)</div>
         <div class="singletermTERMS">mime-type</div>
         <div class="singletermTERMS">Mime Media Types</div>
         <div class="singletermTERMS">Mime Types File References</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">ns</div>
         <div class="singletermTERMS">namespace(ns)</div>
         <div class="singletermTERMS">normalize</div>
         <div class="singletermTERMS">normalize-input</div>
         <div class="singletermTERMS">normalize-output</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">path(p)</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
         <div class="singletermTERMS">query(p)</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">RFC 3986 from IETF</div>
         <div class="singletermTERMS">rfc content</div>
         <div class="singletermTERMS">recommendation</div>
         <div class="singletermTERMS">recommendation (ext. entity)</div>
         <div class="singletermTERMS">resolvers</div>
         <div class="singletermTERMS">relative</div>
         <div class="singletermTERMS">resolving-base</div>
         <div class="singletermTERMS">RelaxNG</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">specification</div>
         <div class="singletermTERMS">selective link stabilization</div>
         <div class="singletermTERMS">static xml:base attribute processing</div>
         <div class="singletermTERMS">static XInclude resolution</div>
         <div class="singletermTERMS">schemes</div>
         <div class="singletermTERMS">scheme</div>
         <div class="singletermTERMS">sorting</div>
         <div class="singletermTERMS">Saxonica, XSLT and XQuery processing</div>
         <div class="singletermTERMS">Senior Scientist</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">target()</div>
         <div class="singletermTERMS">tags</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">URL</div>
         <div class="singletermTERMS">URN</div>
         <div class="singletermTERMS">URI</div>
         <div class="singletermTERMS">Uniform Resource Identifier: Generic syntax (URI)</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">validate</div>
         <div class="singletermTERMS">Vion-Dury</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">XRM</div>
         <div class="singletermTERMS">XInclude</div>
         <div class="singletermTERMS">XLink</div>
         <div class="singletermTERMS">XPointer</div>
         <div class="singletermTERMS">xml:base</div>
         <div class="singletermTERMS">XML Catalogs</div>
         <div class="singletermTERMS">XML Linking Language</div>
         <div class="singletermTERMS">XML Base</div>
         <div class="singletermTERMS">XML Path Language (XPath), version 1.0</div>
         <div class="singletermTERMS">XML Inclusion 1.0 (XInclude - Second Edition)</div>
         <div class="singletermTERMS">XPointer xpointer() Scheme</div>
         <div class="singletermTERMS">XPointer Framework</div>
         <div class="singletermTERMS">XML Namespaces</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="ManagingXMLreferencesthroughtheXRMvocabularyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2">
      <div class="title e1">Managing XML references through the XRM vocabulary</div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2009</div>
            <div class="confdates e5">August 11 - 14, 2009</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">This paper presents a general purpose method (called 
               <div class="emphasis e8">XRM</div> for
               XML References Management) to express knowledge about links common to a family of
               XML documents (a.k.a. a document type) and to exploit this knowledge in order to
               operate verifications, transformations or derivations of the corresponding XML
               instances. 
            </div>
         </div>
         <div class="author e9">
            <div class="personname e10">
               <div class="firstname e11">Jean-Yves</div>
               <div class="surname e12">Vion-Dury</div>
            </div>
            <div class="personblurb e13">
               <div class="para e14">Jean-Yves Vion-Dury holds an CS engineering degree from the “Conservatoire National
                  des Arts et Metiers, France”  (1993) and graduated with a PhD in CS from Universite
                  Joseph Fourier, Grenoble in 1999. He has been working at  Xerox Research Centre Europe
                  (in Grenoble, France) since 1995, as a research scientist; he has also been on a two
                  year sabbatical with Vincent Quint’s team at INRIA in 2002-2004. His research interests
                  relate to various aspect of XML including models, the impact of standards, validation/transformation
                  languages and architectures, with theoretical background in programming languages,
                  compilation, type systems and formal logics.
               </div>
               <div class="para e15">Jean-Yves was Program Chair of DocEng (ACM Document Engineering Symposium) in 2004,
                  has been a member of its Program Committee since 2003,  and a member of its Steering
                  Committee since 2005.
               </div>
            </div>
            <div class="affiliation e16">
               <div class="jobtitle e17">Senior Scientist</div>
               <div class="orgname e18">Xerox Research Centre Europe</div>
            </div>
            <div class="email e19">jean-yves.vion-dury@xeroxlabs.com</div>
         </div>
         <div class="legalnotice e20">
            <div class="para e21">Copyright © 2009 Mulberry Technologies, Inc.  Used with
               permission.
            </div>
         </div>
      </div><a name="IntroductionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e22">
         <div class="title e23">Introduction</div>
         <div class="para e24"> So far no specific method nor well suited technology exist to address XML link
            management related applications, although those are numerous and may require quite
            complex processing when using standard XML tools or programming languages. 
         </div>
         <div class="para e25">We call link or reference any URL, URN, URI, IRI, XLink (see [
            <div class="xref e26" linkend="URI"></div>]
            and [
            <div class="xref e27" linkend="XLink"></div>]) be it relative or absolute that can be found in a given
            XML document instance, either under the form of an attribute or as a text node (once
            parsed, an XML document is composed of element nodes, attribute nodes or text nodes:
            see
            [
            <div class="xref e28" linkend="XML"></div>] for a general description of XML standard). 
         </div>
         <div class="para e29"> The method and conceptual models we propose hereby allow concise and efficient XML
            descriptions of links that can be heavily reused, and enable adequate descriptions
            of
            main link-based operations required in XML processing environments, especially link
            relocation for packaging clusters of documents and associated resources, verification
            of
            link properties with respect to security, conformance to a predefined selection of
            HTTP
            servers, simplification and normalization of link representation inside a given XML
            instance, smooth redirection of database requests hidden inside the structure of links,
            to cite a few among the huge variety of relevant cases. 
         </div>
         <div class="para e30"> The knowledge about links is formalized into a specification language that 
            <div class="orderedlist e31">
               <div class="listitem e32">
                  <div class="para e33">describes links location and typology inside a family of XML documents
                     
                  </div>
               </div>
               <div class="listitem e34">
                  <div class="para e35"> tags these link descriptions in such a way that they can be further
                     designated and reused either individually or collectively. 
                  </div>
               </div>
            </div> The operations on XML instances use the link descriptions above in order
            to 
            <div class="itemizedlist e36">
               <div class="listitem e37">
                  <div class="para e38">verify the compliance of links according to the standards describing
                     properties that these links must satisfy (e.g. lexical and syntactic
                     structure),
                  </div>
               </div>
               <div class="listitem e39">
                  <div class="para e40">check the conformance to specific or general properties (e.g. URI must be
                     relative, or must match a given pattern),
                  </div>
               </div>
               <div class="listitem e41">
                  <div class="para e42">generate a list of all links contained in the instance (dependencies),
                     with related useful meta-information such as the path expression that
                     uniquely locate them inside the hierarchical structure and the type of link
                     (URI, IRI, XLink,…)
                  </div>
               </div>
               <div class="listitem e43">
                  <div class="para e44">rewrite some links into other links (reference relocation), depending on
                     matching patterns, side conditions of source document as well as side
                     conditions of referenced objects (links targets).
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ProblemoverviewANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e45">
         <div class="title e46">Problem overview</div>
         <div class="para e47"> There are currently two different ways (inside XML standard) for identifying and
            designating items inside or outside a document. The first one is based on ID/IDREF
            mechanisms which only apply to intra-document references. The second one, more general,
            is based on URL (Uniform Resource Locator) that has been historically derived into
            several variants (e.g. URI, uniform resource identifiers; IRI, internationalized
            resource identifier; URN Uniform resource name), each having different intended use
            and
            slight lexical variations (see [
            <div class="xref e48" linkend="URI"></div>,
            <div class="xref e49" linkend="IRI"></div>]). 
         </div>
         <div class="para e50"> This research work, whose results are described hereby, focused on the second kind
            of
            references. According to the related standards, references have a syntactic structure
            that enables describing the protocol used for accessing resources over networks, the
            address of the server providing the resource, the path which uniquely designates the
            object to be accessed, and in some cases the fragment inside the document (i.e. a
            unique
            element identifier) and/or parameters. For instance the URL
            
            <div class="emphasis e51">http://ds-1/example/dog.jpeg</div> designates an object located on
            the “ds-1” server and accessible through the “http” protocol. This object is called
            “dog.jpeg” and the server is supposed to find it through the path “/example” before
            delivering it back to the caller that invoked the protocol. 
         </div>
         <div class="para e52"> Although the referential objects are precisely defined through their syntactic and
            semantic structure, we have poor information about the context in which they are used
            and where they are located inside a given document. In the best case, an XML instance
            is
            compliant with an XML schema, e.g. XHTML, and thus we hopefully know where one can
            find
            such a reference, e.g. inside any 
            <div class="emphasis e53">img</div> element, and more precisely,
            inside the value of its 
            <div class="emphasis e54">href</div> attribute. Note that the semantics of
            the reference is implicitly defined by the informal description of the HTML standard
            (it
            points to an image; it must be fetched through the URL and incorporated into the visual
            representation of the containing document). 
         </div>
         <div class="para e55"> However, many specific transformation operations can be envisioned which are quite
            focused on these referential objects, and no methods or tools are proposed today to
            simplify these operations and to make them more reliable and easier to specify. Among
            others, one can mention : 
            <div class="itemizedlist e56">
               <div class="listitem e57">
                  <div class="para e58">
                     <div class="emphasis e59">link relocation</div>, which consists in changing the
                     external environment of a given instance (for instance, changing absolute
                     reference to an external server into a pointer on a local cache where the
                     target resources are stored )
                  </div>
               </div>
               <div class="listitem e60">
                  <div class="para e61">
                     <div class="emphasis e62">document and resource packaging</div>, which consists for
                     instance in building an archive containing all dependent resources under a
                     suitable directory structure
                  </div>
               </div>
               <div class="listitem e63">
                  <div class="para e64">
                     <div class="emphasis e65">selective link stabilization </div>; this operation allows
                     one to substitute some references by others pointing to the same resources,
                     but via a storage system that guaranties the long term stability of the
                     access
                  </div>
               </div>
               <div class="listitem e66">
                  <div class="para e67">
                     <div class="emphasis e68">static xml:base attribute processing</div> ; this operation
                     aims at interpreting the xml:base attribute according to the W3C standard
                     [
                     <div class="xref e69" linkend="XBase"></div>], but as a standalone operation (usually, this
                     process is done – or just ignored…- inside the applications)
                  </div>
               </div>
               <div class="listitem e70">
                  <div class="para e71">
                     <div class="emphasis e72">static XInclude resolution</div> ; similar remark than
                     above
                  </div>
               </div>
            </div>
         </div>
         <div class="para e73">Our contribution can be understood as a way to express link specific schemas,
            validations and transformations. It is orthogonal (and complementary) to general purpose
            schemas.
         </div>
      </div><a name="StateoftheArtANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e74">
         <div class="title e75">State of the Art</div><a name="XCatalogANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e76">
            <div class="title e77">XCatalog</div>
            <div class="para e78">XCatalog [
               <div class="xref e79" linkend="XCalatog"></div>,
               <div class="xref e80" linkend="XCataEx"></div>] is an XML standard
               which allows describing link resolving mechanisms. More precisely, the links are
               categorized into references to XML entities, DTD and XML schema resolution (W3C
               schemas only) on the one hand, and general URI that are defined as strings that must
               match a given prefix on the other hand. 
            </div>
            <div class="para e81"> The first category is focused on link resolution, an operational concept that
               concerns only programmatic toolkits and software libraries that are in charge of
               retrieving the content of pointed objects (so called
               
               <div class="emphasis e82">resolvers</div>). It means that the only underlying semantics is
               predefined as “fetch the pointed resource when needed, the way I specify”, and this
               behavior must be implemented by the XCatalog aware processor (typically, XML
               parsers). A strange point is that the XML catalog specification defines "what" and
               "how", but not "when". In other words, the semantics of links is presupposed, and
               indeed strongly related to the XML validation that is accomplished after parsing.
               
            </div>
            <div class="para e83"> The other link category is quite general, but only defined through the concept of
               “exact prefix matching”. Nothing is said about the location of links and a fortiori
               about their context. 
            </div>
            <div class="para e84"> Thus there is a deep conceptual difference between our proposal and XCatalog: the
               latter is focused on resolving links, where links are recognized through their
               content, whereas our proposal is based upon a methodology which makes explicit the
               description of links through their localization in the document structure. These
               descriptions can be used for specifying various link oriented validation and
               transformation operations. 
            </div>
         </div><a name="XLinkANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e85">
            <div class="title e86">XLink</div>
            <div class="para e87"> XLink [
               <div class="xref e88" linkend="XLink"></div>] is a standard that describes a vocabulary and
               syntax for specifying generic links inside XML documents. This standard relies in
               a
               rich model allowing among others the specification of hyper-graphs, that is, graphs
               based on a generalized notion of arcs possibly binding several sources to several
               targets. XLink is based upon URI mechanism and namespace modularity. 
            </div>
            <div class="para e89"> It is not comparable with our approach, as it is a way to express links whereas
               our method is a way to express properties of links and the related validation or
               transformation operations that can be derived from these properties. As a
               consequence, XLink objects are specific targets of the description mechanisms we
               propose, so as with XInclude, XPointer and other generic linking objects (URI,
               IRI,...) (see 
               <div class="xref e90" linkend="link-descriptors"></div>) 
            </div>
         </div>
      </div><a name="ApproachPrincipleANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e91">
         <div class="title e92">Approach Principle</div>
         <div class="para e93">In order to express high level properties over links and their localization inside
            instances, one needs a specialized language and dedicated abstractions. Moreover,
            in
            order to consider the link normalization phenomenon, we also need an execution model.
            Once captured in an adapted format, the link descriptions we propose in this paper
            might
            be reusable for specifying almost any XML link-related operations. 
         </div>
         <div class="para e94">Our method relies on a specification method, a specialized matching language and an
            execution model.
         </div><a name="SpecificationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e95">
            <div class="title e96">Specification</div>
            <div class="para e97"> From the specification point of view, our vocabulary allows one to 
               <div class="orderedlist e98">
                  <div class="listitem e99" xml:id="it1">
                     <div class="para e100">express link features by means of three separate sections:</div>
                     <div class="orderedlist e101">
                        <div class="listitem e102">
                           <div class="para e103">the link typology and localization (links description), thanks
                              to an appropriate sublanguage, typically but not exclusively,
                              XPath [
                              <div class="xref e104" linkend="XPath"></div>]
                           </div>
                        </div>
                        <div class="listitem e105">
                           <div class="para e106">the link’s expected properties (validation description)</div>
                           <div class="para e107">This part expresses properties that (groups of) links have to
                              satisfy inside a given XML instance in order to be considered as
                              valid,
                           </div>
                        </div>
                        <div class="listitem e108">
                           <div class="para e109">the link transformation rules (link translation description) :</div>
                           <div class="orderedlist e110">
                              <div class="listitem e111">
                                 <div class="para e112">transposition (selected links are eventually
                                    normalized, matched against some pattern and
                                    rewritten)
                                 </div>
                              </div>
                              <div class="listitem e113">
                                 <div class="para e114">dependency extraction rules (dependency
                                    description)
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="listitem e115" xml:id="it2">
                     <div class="para e116">identify, group and designate link descriptions</div>
                     <div class="para e117">This one allows the user to attach one or several tags to link
                        descriptors, and offers a mechanism for factorizing the tag assignation.
                        Tags are simple labels intended to abstract over the semantics of links
                        and to memorize them easily.
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e118"> The idea of points 
               <div class="xref e119" linkend="it1"></div> and 
               <div class="xref e120" linkend="it2"></div> above is to
               express bindings between the descriptive section and the other sections through a
               convenient designation mechanism. Hence there is little overhead, and the method
               enables reusing link descriptions in various applicative contexts. 
            </div>
         </div><a name="MatchinglanguageANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e121">
            <div class="title e122">Matching language</div>
            <div class="para e123">The specialized matching language is designed in order to optimize the ratio
               expressive power versus complexity; in other words, it simplifies the task of
               expressing the structural properties of links, the (pre/post) processing and
               transformation of links; by offering the right abstractions, and by relying on the
               inherent lexical/syntactical structure of links, it avoids the burden of mastering
               general regular expression languages, tricky and error prone for a non-specialist.
               Details on this aspect of our contribution can be found in 
               <div class="xref e124" linkend="app-match"></div>
            </div>
         </div><a name="ExecutionmodelANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e125">
            <div class="title e126">Execution model</div>
            <div class="para e127">From the execution model point of view, our approach allows one to </div>
            <div class="orderedlist e128">
               <div class="listitem e129">
                  <div class="para e130">use the link validation description either via an interpreter or via a
                     compiler to operate the verification on any instance expected to comply with
                     the description; the verification may output an error report including the
                     faulty links, their location in the document and an indicative error message
                     or any other relevant information ;
                  </div>
               </div>
               <div class="listitem e131">
                  <div class="para e132">use the link translation descriptions either via a direct interpretation
                     or via a compilation/execution scheme to operate the modification of links
                     and possibly generate a new document instance in which relevant links have
                     been modified according to the transcription rules (but without any other
                     structural changes); this operation may output a log report indicating which
                     links have been processed and any other relevant information ;
                  </div>
               </div>
               <div class="listitem e133">
                  <div class="para e134">use the dependency extraction rules either via an interpreter or via a
                     compiler to produce a list of all dependencies, i.e. all resources the given
                     instance is sensitive to, as estimated by the designer who specified the
                     dependency rules (Order may be significant, if specified so).
                  </div>
               </div>
            </div>
            <div class="para e135">Details of significant steps behind applying XRM to some target XML instances can
               be found in appendix 
               <div class="xref e136" linkend="app-verif"></div>
            </div>
         </div>
      </div><a name="TheapproachinmoredetailANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e137">
         <div class="title e138">The approach in more detail</div><a name="LinkDescriptionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e139">
            <div class="title e140">Link Description</div><a name="OverviewANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e141">
               <div class="title e142">Overview</div>
               <div class="para e143">Links are described in a dedicated XRM element called “links” associated with information
                  <div class="itemizedlist e144">
                     <div class="listitem e145">
                        <div class="para e146"> indicating a unique logical name for this section, which will be
                           used for designing it without ambiguity 
                        </div>
                     </div>
                     <div class="listitem e147">
                        <div class="para e148"> specifying the namespace of the target document, if any (see
                           [
                           <div class="xref e149" linkend="wikipedia-NS"></div>] for a description of
                           namespaces) 
                        </div>
                     </div>
                     <div class="listitem e150">
                        <div class="para e151"> providing the URL of one or several schemas to which the target
                           document is expected to comply with (optional) 
                        </div>
                     </div>
                     <div class="listitem e152">
                        <div class="para e153"> listing all tags used to annotate the link descriptions; this
                           list is optional, but if provided, it defines exactly and
                           exhaustively the authorized tags. Tags are names with any relevant
                           lexical structure, as commonly found in the art. 
                        </div>
                     </div>
                  </div>
               </div>
               <div class="para e154">Inside the section, the designer of the description can input as many
                  descriptors, possibly embedded in grouping subsections. These subsections are
                  decorated with a tag list; the meaning of this grouping subsection is that all
                  embedded descriptions will be automatically assigned the associated tags. It is
                  thus a way to simplify the specification of descriptors (see example 
                  <div class="xref e155" linkend="link-description"></div>). 
               </div>
            </div><a name="ThelinkdescriptorsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e156" xml:id="link-descriptors">
               <div class="title e157">The link descriptors</div>
               <div class="para e158">The descriptors themselves are specified through one of the following keywords
                  :
               </div>
               <div class="orderedlist e159">
                  <div class="listitem e160">
                     <div class="para e161">
                        <div class="emphasis e162">URL</div> stands for Uniform Resource Locator (see
                        [
                        <div class="xref e163" linkend="URI"></div>]) and is commonly used to give information on
                        where a resource is located, understanding that the implicit action is
                        to fetch this resource in order to incorporate it inside the document
                        (e.g. an image, a sub-part) or to interpret it with respect to the
                        current document (e.g. a script)
                     </div>
                  </div>
                  <div class="listitem e164">
                     <div class="para e165">
                        <div class="emphasis e166">URN</div> stands for Uniform Resource Name and aims at
                        naming resources in a worldwide unique and temporally stable way. Thus
                        no specific action or usage is associated with them, they are just used
                        to designate things (e.g. in PUBLIC field of DTDs); however, they often
                        have a specific lexical structure, mainly a “urn” scheme and ‘:’
                        separated sequence of characters (e.g. urn:example:animal:ferret:nose
                        )
                     </div>
                  </div>
                  <div class="listitem e167">
                     <div class="para e168">
                        <div class="emphasis e169">URI</div> stands for Uniform Resource Identifier
                        ([
                        <div class="xref e170" linkend="URI"></div>]) and commonly used to identify a resource
                        in a broader way. The RFC 3986 from IETF explicitly says: 
                        <div class="popupBox e171">
                           <div class="popupLabel" onmouseover="$('#d1e288').show('1000');" onmouseout="$('#d1e288').hide('1000');">[ blockquote ]</div>
                           <div id="d1e288" style="display: none;">
                              <div class="blockquote">
                                 <div class="para e172">
                                    
                                    <div class="quote e173"> […] A Uniform Resource Identifier (URI) is a compact
                                       sequence of characters that identifies an abstract or
                                       physical resource. […] 
                                    </div>
                                    
                                 </div>
                                 <div class="attribution e174">
                                    <div class="citation e175">RFC 3986 from IETF</div>
                                 </div>
                              </div>
                           </div>
                        </div> This excerpt insists on the potential abstract nature of
                        the pointed resource. In the sequel, the abstraction hierarchy and
                        relationship between URL, URN and URI is clearly described: 
                        <div class="popupBox e176">
                           <div class="popupLabel" onmouseover="$('#d1e298').show('1000');" onmouseout="$('#d1e298').hide('1000');">[ blockquote ]</div>
                           <div id="d1e298" style="display: none;">
                              <div class="blockquote">
                                 <div class="para e177">
                                    
                                    <div class="quote e178"> […] URI can be further classified as a locator, a name,
                                       or both. The term "Uniform Resource Locator" (URL) refers to
                                       the subset of URIs that, in addition to identifying a
                                       resource, provide a means of locating the resource by
                                       describing its primary access mechanism (e.g., its network
                                       "location"). The term "Uniform Resource Name" (URN) has been
                                       used historically to refer to both URIs under the "urn"
                                       scheme [RFC2141], which are required to remain globally
                                       unique and persistent even when the resource ceases to exist
                                       or becomes unavailable, and to any other URI with the
                                       properties of a name. […] 
                                    </div>
                                    
                                 </div>
                                 <div class="attribution e179">
                                    <div class="citation e180">idem</div>
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                     <div class="para e181"> From the lexical point of view, a URI must only use UCS (Universal
                        Character Set) code points; these code points must be converted to bytes
                        through the UTF-8 encoding, but when the character doesn’t belong to the
                        unreserved subset, it must be escaped using a “%HH” pattern before
                        encoding (full details in [
                        <div class="xref e182" linkend="URI"></div>]). 
                     </div>
                  </div>
                  <div class="listitem e183">
                     <div class="para e184">
                        <div class="emphasis e185">IRI</div> stands for Internationalized Resource
                        Identifier (see [
                        <div class="xref e186" linkend="IRI"></div>]) and has the same meaning and
                        syntactic structure than URI, but a more abstract lexical structure. An
                        IRI uses hence an extended character set supporting foreign languages
                        (foreign should be understood here as non-English), including
                        right-to-left writing languages such as Arabic. The specification
                        describes the translation algorithm that transforms an IRI into an URI
                        (thus allowing physical access if required) through a character
                        normalization phase followed by an escaping mechanism based on %HH
                        patterns (H stands for any hexadecimal letter taken from the 0-9A-F
                        alphabet).
                     </div>
                  </div>
                  <div class="listitem e187">
                     <div class="para e188">
                        <div class="emphasis e189">HREF</div> refers to “Hyper-references” defined in the
                        HTML vocabulary among others. Those links have a specific encoding
                        policy, using a similar escaping mechanism than URI, but with stricter
                        character set (namely, ASCII)
                     </div>
                  </div>
                  <div class="listitem e190">
                     <div class="para e191">
                        <div class="emphasis e192">XInclude</div> refers not only to the link associated
                        with it, but to the whole node. This element is meant to express
                        document inclusion, a not so simple mechanism whose semantics is
                        precisely specified in [
                        <div class="xref e193" linkend="XInclude"></div>] and makes use of a
                        predefined attribute “href” containing a specifically encoded URI
                        according to section 4.2.2 of the XML 1.1 specification [
                        <div class="xref e194" linkend="xml-1.1"></div>]: 
                        <div class="popupBox e195">
                           <div class="popupLabel" onmouseover="$('#d1e332').show('1000');" onmouseout="$('#d1e332').hide('1000');">[ blockquote ]</div>
                           <div id="d1e332" style="display: none;">
                              <div class="blockquote">
                                 <div class="para e196">
                                    
                                    <div class="quote e197"> […] System identifiers (and other XML strings meant to
                                       be used as URI references) MAY contain characters that,
                                       according to [IETF RFC 2396] and [IETF RFC 2732], must be
                                       escaped before a URI can be used to retrieve the referenced
                                       resource. The characters to be escaped are the control
                                       characters #x0 to #x1F and #x7F (most of which cannot appear
                                       in XML), space #x20, the delimiters '&lt;' #x3C,
                                       '&gt;' #x3E and '"' #x22, the unwise characters '{'
                                       #x7B, '}' #x7D, '|' #x7C, '\' #x5C, '^' #x5E and '`' #x60,
                                       as well as all characters above #x7F. Since escaping is not
                                       always a fully reversible process, it MUST be performed only
                                       when absolutely necessary and as late as possible in a
                                       processing chain. In particular, neither the process of
                                       converting a relative URI to an absolute one nor the process
                                       of passing a URI reference to a process or software
                                       component responsible for dereferencing it SHOULD trigger
                                       escaping. When escaping does occur, it MUST be performed as
                                       follows: 1. Each character to be escaped is represented in
                                       UTF-8 [Unicode] as one or more bytes. 2. The resulting bytes
                                       are escaped with the URI escaping mechanism (that is,
                                       converted to %HH, where HH is the hexadecimal notation of
                                       the byte value). 3. The original character is replaced by
                                       the resulting character sequence. […] 
                                    </div>
                                    
                                 </div>
                                 <div class="attribution e198">
                                    <div class="citation e199">World Wide Web Consortium</div>
                                 </div>
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="listitem e200">
                     <div class="para e201">
                        <div class="emphasis e202">XLink</div> as for XInclude, refers to a node supposed
                        to contain XLink related attributes (see [
                        <div class="xref e203" linkend="XLink"></div>]); the
                        specific href attribute from the XLink namespace is an URI. The general
                        semantics constraints of XLink are captured by this descriptor.
                     </div>
                  </div>
                  <div class="listitem e204">
                     <div class="para e205">
                        <div class="emphasis e206">XPointer</div> describes a very rich mechanism (see
                        [
                        <div class="xref e207" linkend="XPtr-scheme"></div>, 
                        <div class="xref e208" linkend="XPtr-frame"></div>]),
                        based on URI and possibly using various selection languages (so-called
                        
                        <div class="emphasis e209">schemes</div>), one of them, most notably, extending
                        XPath in order to designate one or several fragments of an XML document
                        tree including segments in text nodes.
                     </div>
                  </div>
               </div>
               <div class="para e210"> Each such descriptor is associated with a locator, that is, an expression of
                  a node selection language that defines where the link should be located in the
                  document instances under consideration. Note that these XPath may use various
                  namespaces, provided they are consistently declared thanks to a special element
                  called 
                  <div class="emphasis e211">ns</div> (the same mechanism is used inside Schematron
                  specifications [
                  <div class="xref e212" linkend="Schematron"></div>])
               </div>
               <div class="para e213"> The Figure below illustrates how our method can be used to describe links in
                  any XHTML compliant document 
                  <div class="popupBox e214">
                     <div class="popupLabel" onmouseover="$('#d1e369').show('1000');" onmouseout="$('#d1e369').hide('1000');">[ footnote ]</div>
                     <div id="d1e369" style="display: none;">
                        <div class="footnote">
                           <div class="para e215">All XPath expressions are here interpreted inside the default
                              namespace specified in top-level element "links" through the "ns"
                              attribute.
                           </div>
                        </div>
                     </div>
                  </div>. 
               </div>
               <div class="figure e216" xml:id="link-description">
                  <div class="title e217">a link description for XHTML</div>
                  <div class="programlisting e218" xml:space="preserve">
                     
                     &lt;links id="xhtml-1.0"  ns="http://www.w3.org/1999/xhtml"&gt;
                     &lt;!-- XHTML 1.0 --&gt;
                     
                     &lt;tags&gt;image-locator source-locator code-locator
                     header links descriptor citation doc-base&lt;/tags&gt;
                     
                     &lt;group tag="header" locator="/html/head"&gt;
                     &lt;iri locator="/@profile"/&gt;
                     &lt;iri tag="doc-base" locator="/base/@href" /&gt;
                     &lt;iri tag="links" locator="/link/@href"/&gt;
                     &lt;uri tag="source-locator code-locator" locator="/script/@src"/&gt;
                     &lt;/group&gt;
                     
                     &lt;iri tag="descriptor" locator="//iframe/@longdesc"/&gt;
                     &lt;iri tag="source-locator" locator="//iframe/@src"/&gt;
                     &lt;iri tag="image-locator" locator="/body/@background"/&gt;
                     
                     &lt;group tag="citation"&gt;
                     &lt;iri locator="//blockquote/@cite"/&gt;
                     &lt;iri locator="//ins/@cite"/&gt;
                     &lt;iri locator="//del/@cite"/&gt;
                     &lt;iri locator="//q/@cite"/&gt;
                     &lt;/group&gt;
                     
                     &lt;group tag="references"&gt;
                     &lt;iri locator="//a/@href"/&gt;
                     &lt;group locator="//object"&gt;
                     &lt;iri locator="/@classid"/&gt;
                     &lt;iri  tag="code-locator" locator="/@codebase"/&gt;
                     &lt;iri locator="/@data"/&gt;
                     &lt;iri locator="/@archive" list="yes"/&gt;
                     &lt;iri locator="/@usemap"/&gt;
                     &lt;/group&gt;
                     &lt;iri tag="code-locator" locator="//applet/@codebase"/&gt;
                     &lt;/group&gt;
                     
                     &lt;group  locator="//img"&gt;
                     &lt;iri tag="image-locator" locator="/@src"/&gt;
                     &lt;iri tag="descriptor" locator="/@longdesc"/&gt;
                     &lt;iri locator="/@usemap"/&gt;
                     &lt;/group&gt;
                     
                     &lt;iri locator="//area/@href"/&gt;
                     &lt;iri locator="//form/@action"/&gt;
                     &lt;iri locator="//input/@src"/&gt;
                     &lt;iri locator="//input/@usemap"/&gt;
                     
                     &lt;/links&gt;
                     
                     
                  </div>
                  <div class="caption e219">
                     <div class="para e220">An example of a generic link description for XHTML. The descriptors
                        can be further reused for other operations through a tag based
                        designation mechanism
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="LinkValidationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e221">
            <div class="title e222">Link Validation</div>
            <div class="para e223">The link verification is specified in a dedicated section called
               
               <div class="emphasis e224">validate</div> which contains at least the reference on a link
               description section, as detailed above (this reference is an URL), which can be
               located inside or outside the document containing the 
               <div class="emphasis e225">validate</div>
               section. If no other information is specified, all links should be checked with
               respect to the specified semantics. This means that when the verification is
               executed on a given target XML instance, the links are extracted thanks to the
               localization information and are examined in accordance with their type as detailed
               in the previous section. 
            </div>
            <div class="para e226"> Additional constraints can be provided through one or many “properties”
               subsections. 
            </div>
            <div class="para e227"> Each properties subsection applies to one or several link subsets designated
               through a list of one or several tags. Each tag may designate one or several links,
               depending on the link description section, as explained above. Each properties
               subsection is optionally identified through a unique identifier. 
            </div>
            <div class="para e228">The properties are specified through one or several descriptors as listed
               hereafter:
            </div>
            <div class="orderedlist e229" numeration="arabic">
               <div class="listitem e230">
                  <div class="para e231">
                     
                     <div class="emphasis e232">scheme</div> defines the expected scheme, e.g. “http”, “ftp”
                     or “mailto”
                  </div>
               </div>
               <div class="listitem e233">
                  <div class="para e234">
                     
                     <div class="emphasis e235">absolute</div> expresses that an absolute link is expected
                     (the scheme and server location are provided)
                  </div>
               </div>
               <div class="listitem e236">
                  <div class="para e237">
                     <div class="emphasis e238">relative</div> expresses that a relative link is expected
                     (the path, resource name and optionally the fragments are provided; the
                     scheme and server location are those of the base URI of the target instance,
                     as specified in [
                     <div class="xref e239" linkend="URI"></div>])
                  </div>
               </div>
               <div class="listitem e240">
                  <div class="para e241">
                     
                     <div class="emphasis e242">matches(p)</div> expresses that the link content must match
                     the provided pattern p. This pattern is expressed according to the method
                     described later. 
                  </div>
               </div>
               <div class="listitem e243">
                  <div class="para e244">
                     
                     <div class="emphasis e245">path(p)</div> expresses that the “path” part of the link (see
                     URI syntactic structure in [
                     <div class="xref e246" linkend="URI"></div>]) must match the given
                     pattern p. 
                  </div>
               </div>
               <div class="listitem e247">
                  <div class="para e248">
                     
                     <div class="emphasis e249">fragment(p)</div> expresses that the “fragment” part of the
                     link (see [
                     <div class="xref e250" linkend="URI"></div>]) must match the given pattern p. 
                  </div>
               </div>
               <div class="listitem e251">
                  <div class="para e252">
                     <div class="emphasis e253">query(p) </div>expresses that the “query” part of the link
                     (see [
                     <div class="xref e254" linkend="URI"></div>]) must match the given pattern p. 
                  </div>
               </div>
               <div class="listitem e255">
                  <div class="para e256">
                     
                     <div class="emphasis e257">target()</div> expresses that the target reference is
                     available at the time of the verification; one of several sub-descriptor can
                     be specified, in order to make-it more precise: 
                  </div>
                  <div class="orderedlist e258">
                     <div class="listitem e259" xml:id="ra">
                        <div class="para e260">
                           
                           <div class="emphasis e261">mime-type </div>This is a standardized notation for
                           indicating the type of internet resources (see [15]) 
                        </div>
                     </div>
                     <div class="listitem e262" xml:id="rb">
                        <div class="para e263">
                           
                           <div class="emphasis e264">namespace(ns)</div> (makes sense only if the
                           mime-type is text/xml or derived). 
                        </div>
                     </div>
                     <div class="listitem e265" xml:id="rc">
                        <div class="para e266">
                           
                           <div class="emphasis e267">condition(p)</div> ; as for previous item, this
                           condition needs a parsable XML content ; requires checking if
                           conditions p holds (p is a XPath qualifier expression) 
                        </div>
                     </div>
                  </div>
                  <div class="para e268"> Note that points 
                     <div class="xref e269" linkend="rb"></div> and 
                     <div class="xref e270" linkend="rc"></div> above
                     require solving the reference at verification time, and also possibly XML
                     decoding and/or parsing. 
                  </div>
               </div>
            </div>
            <div class="para e271">If no descriptor is specified, only standard verifications related to the nature
               of links are conducted. 
            </div>
            <div class="para e272"> An additional error message can be specified within each property descriptor,
               that will be used to report any property violation (e.g.
               matches(http://{*}:{*}/{*},”an explicit port number is expected”) will display the
               error message for non-matching link such as
               
               <div class="emphasis e273">http://barnum/circus.jpg</div>) 
            </div>
            <div class="para e274">The following example illustrates the method when applied to an XHTML document </div>
            <div class="figure e275">
               <div class="title e276">A link validation specification</div>
               <div class="programlisting e277" xml:space="preserve">
                  
                  &lt;validate link-description="../schemas/html.xrm.xml#xhtml-1.0"&gt;
                  
                  &lt;property of="code-locator" xml:id="code1"&gt;
                  &lt;relative&gt;references to code-related objects
                  are expected to be relative&lt;/relative&gt;
                  &lt;fragment&gt; references on code location
                  cannot point to document fragments &lt;/fragment&gt;
                  
                  &lt;matches normalize="yes"
                  pattern="http://bonobo:{*}/code/{*}"/&gt;
                  &lt;/property&gt;
                  
                  &lt;property of="image-locator"&gt;
                  &lt;relative/&gt;
                  &lt;query&gt;
                  references to images cannot contain query
                  &lt;/query&gt;
                  &lt;matches pattern="http://bonobo:{*}/image/{*}"/&gt;
                  &lt;/property&gt;
                  
                  &lt;/validate&gt;
                  
                  
               </div>
               <div class="caption e278">
                  <div class="para e279">This specification reuses the generic description of XHTML links as shown
                     
                     <div class="xref e280" linkend="link-description"></div>
                     
                  </div>
               </div>
            </div>
         </div><a name="LinkTransformationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e281">
            <div class="title e282">Link Transformation</div>
            <div class="para e283"> Link transformations are specified in a dedicated section called “rewrite” which
               comprises a header having the following attributes: 
               <div class="orderedlist e284">
                  <div class="listitem e285">
                     <div class="para e286">
                        <div class="emphasis e287">link-description</div>: the name of a link description
                        section, against which link tags will be interpreted (mandatory)
                     </div>
                  </div>
                  <div class="listitem e288">
                     <div class="para e289">
                        <div class="emphasis e290">normalize</div>: take the value yes or no (defaults to
                        yes if omitted); if set to yes, the relevant normalization process will
                        be performed on all links before applying matching operation (the exact
                        nature of normalization operation depends upon the nature of link); if
                        set to no, the pattern matching operation will be applied on the
                        original link 
                        <div class="popupBox e291">
                           <div class="popupLabel" onmouseover="$('#d1e513').show('1000');" onmouseout="$('#d1e513').hide('1000');">[ footnote ]</div>
                           <div id="d1e513" style="display: none;">
                              <div class="footnote" xml:id="norma">
                                 <div class="para e292">Some normalization operation may nevertheless occur due to standard XML
                                    processing, such as interpretation of escaping sequences and expansion of
                                    reference entities.
                                 </div>
                              </div>
                           </div>
                        </div>; 
                     </div>
                  </div>
                  <div class="listitem e293">
                     <div class="para e294">
                        <div class="emphasis e295">resolving-base</div>: optionally specifies an URI that
                        will be considered as the reference URI for solving relative link. It
                        supersedes the xml:base information, if present, or the static-base-uri
                        of the original document.
                     </div>
                  </div>
               </div>
               
               
            </div>
            <div class="para e296">Beside header attributes, this section is composed of zero or many rewriting
               descriptors possibly embedded inside a base descriptor. Each base descriptor has
               
               <div class="orderedlist e297" continuation="continues">
                  <div class="listitem e298">
                     <div class="para e299">an optional “location” attribute which expresses where an xml:base
                        attribute must be inserted inside the transformed document. When
                        omitted, the xml:base attribute is inserted into the root node (of
                        course, in any case, it is an inconsistency error if several base
                        descriptors are allocated to the same node).
                     </div>
                  </div>
                  <div class="listitem e300">
                     <div class="para e301">a “value” attribute which defines the content of the xml:base
                        attribute. This must be an absolute URL in accordance with the standard
                        [
                        <div class="xref e302" linkend="XBase"></div>]; if omitted, the static-base-uri is used.
                        
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e303"> Each rewriting descriptor may have 
               <div class="itemizedlist e304">
                  <div class="listitem e305">
                     <div class="para e306">a 
                        <div class="emphasis e307">tags</div> attribute, which is a list of tag name
                        corresponding to the links to be selected as candidates (all link
                        descriptors are considered if the tags attribute is omitted) 
                     </div>
                  </div>
                  <div class="listitem e308">
                     <div class="para e309">a 
                        <div class="emphasis e310">condition</div> attribute, which optionally specifies
                        an additional condition to be checked before trying to apply the
                        rewriting (typically, an XPath expression)
                     </div>
                  </div>
                  <div class="listitem e311">
                     <div class="para e312">a 
                        <div class="emphasis e313">from</div> attribute, which optionally specifies a
                        pattern matching expression that must be successfully applied in order
                        to rewrite the link ; such pattern may define matching variables (see
                        the subsection 3.4 “Specification of Patterns” for the whole description
                        of the link pattern language).
                     </div>
                  </div>
                  <div class="listitem e314">
                     <div class="para e315">an 
                        <div class="emphasis e316">into</div> attribute, which optionally specifies a
                        new value for the link. This value may partially or totally reuse the
                        pattern variables defined inside the from pattern (see the subsection
                        3.4 “Specification of Patterns”) if any. 
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e317">In the case where a rewriting descriptor has no “from” and no “into” attribute, it
               may have one or more rewrite sub-descriptor, each of it having a pair of “from/into”
               attribute. The meaning of this list is that each rewriting is tried in order, until
               a matching “from” is found.
            </div>
            <div class="para e318">Below is an example of link rewriting based on a two-rule sequence to be applied
               on any link tagged as "images" or "scripts"
            </div>
            <div class="programlisting e319" xml:space="preserve">
               
               &lt;rewrite
               link-description=”../schemas/html.xrm.xml#xhtml-1.0”
               tags=”images scripts” &gt;
               &lt;rewriting from=”{{*}}/{name}.jpg” into=”./images/JPEG/{name}.jpg”/&gt;
               &lt;rewriting from=”{{*}}/{name}.js” into=”./javascripts/{name}.js”/&gt;
               &lt;/rewrite&gt;
               
               
            </div>
            <div class="para e320"> Note that after computing the rewritten link, and if the rewriting descriptor is
               embedded inside a base descriptor, the result is checked against the value of the
               base descriptor, and made relative if required. 
            </div>
            <div class="programlisting e321" xml:space="preserve">
               
               &lt;base location=”/html/body”&gt;
               &lt;rewrite
               link-description=”../schemas/html.xrm.xml#xhtml-1.0”
               tags=”images scripts” &gt;
               &lt;rewriting from=”{{A}}/{name}.jpg” into=”{{A}}/JPEG/{name}.jpg”/&gt;
               &lt;rewriting from=”{{A}}/{name}.js” into=”{{A}}/javascripts/{name}.js”/&gt;
               &lt;/rewrite&gt;
               &lt;/base&gt;
               
               
            </div>
            <div class="para e322">The example above will, for instance, change the document below </div>
            <div class="programlisting e323" xml:space="preserve">
               
               &lt;html &gt;
               &lt;body&gt;
               &lt;img href=”http://catworld:8080/friends/garfield.jpg” /&gt;
               &lt;/body&gt;
               &lt;/html&gt;
               
               
            </div>
            <div class="para e324">into</div>
            <div class="programlisting e325" xml:space="preserve">
               
               &lt;html &gt;
               &lt;body xml:base=”http://catworld:8080” &gt;
               &lt;img href=”JPEG/garfield.jpg” /&gt;
               &lt;/body&gt;
               &lt;/html&gt;
               
               
            </div>
            <div class="para e326">where the 
               <div class="emphasis e327">xml:base</div> attribute attached to the body element has
               been extrapolated from the static-base-uri of the input document (because no more
               precise information was provided)
            </div>
         </div><a name="LinkDependenciesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e328">
            <div class="title e329">Link Dependencies</div>
            <div class="para e330">They are described using a similar mechanism than for link transformation, through
               a dedicated section “dependencies” having the following attributes:
            </div>
            <div class="orderedlist e331">
               <div class="listitem e332">
                  <div class="para e333">
                     <div class="emphasis e334">link-description</div>: the name of a link description
                     section, against which link tags will be interpreted (mandatory)
                  </div>
               </div>
               <div class="listitem e335">
                  <div class="para e336">
                     <div class="emphasis e337">normalize-input</div>: take the value yes or no (defaults
                     to yes if omitted); if set to yes, the relevant normalization process will
                     be performed on all links before testing operation (the exact nature of
                     normalization operation depends upon the nature of link); if set to no, all
                     tests will be applied on the original link
                     <div class="xref e338" linkend="norma"></div>;
                  </div>
               </div>
               <div class="listitem e339">
                  <div class="para e340">
                     <div class="emphasis e341">normalize-output</div>: take the value yes or no (defaults
                     to yes if omitted); if set to yes, the relevant normalization process will
                     be performed on all links before dumping the dependency (the exact nature of
                     normalization operation depends upon the nature of link); when set to no,
                     minimal transformation may nevertheless occur
                     <div class="xref e342" linkend="norma"></div>. 
                  </div>
               </div>
               <div class="listitem e343">
                  <div class="para e344">
                     <div class="emphasis e345">resolving-base</div>: optionally specifies an URI that will
                     be considered as the reference URI for solving relative link. It supersedes
                     the xml:base information, if present, or the static-base-uri of the original
                     document otherwise.
                  </div>
               </div>
               <div class="listitem e346">
                  <div class="para e347">
                     <div class="emphasis e348">sorting</div>: takes one of the following values
                     {“document-order”, “content-order”, “tag-order”}, and expresses the method
                     used to order the link dependencies dumped into the dependency report. With
                     document-order, links are organized in the same order than found inside the
                     original input document. Using content-order, links are alphabetically
                     classified according to the lexical structure of the URL. The flag mode use
                     an alphabetical classification based on the tag name of the link, as defined
                     by the link description section. If omitted, the sorting attribute defaults
                     to “document-order”.
                  </div>
               </div>
            </div>
            <div class="para e349">Note that if no 
               <div class="emphasis e350">extract</div> sub-descriptor is provided, all links
               found in the input document are dumped into the dependency report.
            </div>
         </div>
      </div><a name="ConclusionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e351">
         <div class="title e352">Conclusion</div>
         <div class="para e353"> We have implemented most of the features described in this proposal through an XML
            syntax from which the examples above are extracted, which comes with a RelaxNG schema.
            An XSLT 2.0 stylesheet (interpreter/compiler front-end) analyzes the specifications
            and
            generates another XSLT 2.0 stylesheet for each of the three operations (link
            verification, link transformation and link dependencies) ; the link description section
            is only interpreted during the compilation phase in order to produce the adequate
            code.
            A dedicated, home-made XSLT 2.0 library defines common operations (such as pattern
            matching functions), and is reused by all stylesheets including the front-end analyzer.
            The compiled stylesheet can be dumped for later use, or directly executed through
            the
            on-the-fly invocation mechanism offered by the Open Source Saxonica Engine [
            <div class="xref e354" linkend="Saxonica"></div>]. 
         </div>
         <div class="para e355"> Our experimental results demonstrate that the approach is realistic, useful and leads
            to realistic performance levels (no particular implementation issue raised). 
         </div>
         <div class="para e356">Evaluation of the qualitative aspect of such a proposal is always a difficult issue,
            because strongly related to usability and far from being objective matter.
         </div>
         <div class="para e357">From this point of view, we were happy to observe that the verbosity of specifications
            turned out to be nicely under control, mainly thanks to the clear conceptual separation
            between link descriptors and operations, and also because we designed well-targeted
            default parameters and behaviors. An other fruitful principle we tried to follow was
            trying to capture as much as possible common and simple operations into simple
            abstractions, and to scale up most complex operations toward adding attributes or
            embedding additional information inside the element content (e.g. a simple rewrite
            operation can use the "from" and "into" attributes whereas a more complex rewrite
            operation can be decomposed into a sublist of ordered rewriting rules to try
            sequentially)
         </div>
         <div class="para e358">Regarding the expressive power, it turned out to be adequate for the cases we had
            to
            analyze. Of course, the difficult point is to extrapolate to cases we did not forecast.
            What we can say is that the methodology we have adopted allowed us to abstract over
            applications and to focus as much as possible on the functions associated with
            referential objects
         </div>
         <div class="para e359">We now consider opening the technology and related tools to a larger technical
            community as a service accessible through a corporate web portal, and thus to understand
            if it triggers interest, and hopefully to understand in a deeper way the potential
            enhancements and evolutions we could envision.
         </div>
      </div><a name="ThepatternmatchinglanguageANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e360" xml:id="app-match">
         <div class="title e361">The pattern matching language</div>
         <div class="para e362">The pattern matching language we propose hereafter is based on the “{” and “}”
            characters to serve as delimiters of pattern variables. Those characters have no precise
            meaning (see the URI specification [
            <div class="xref e363" linkend="URI"></div>]) and do not belong to the
            standard alphabet or separator sets. Variables are named through using any identifier
            built from any alphabet excluding the braces and the star “*”. A label can only be
            used
            once in a given pattern. If a star is used instead of a name (e.g. “{*}”), it just
            means
            that the matching substring is not stored. Double braces mean that the longest matching
            substring is expected, whereas the shortest match is returned for single braces. 
         </div>
         <div class="para e364"> The table below illustrates the various pattern matching mechanisms:</div>
         <div class="table e365" border="1">
            <div class="thead e366">
               <div class="tr e367">
                  <div class="th e368">Pattern</div>
                  <div class="th e369">Value</div>
                  <div class="th e370">Result</div>
               </div>
            </div>
            <div class="tbody e371">
               <div class="tr e372">
                  <div class="td e373" rowspan="3">http://{server}:{*}/{*}.jpg</div>
                  <div class="td e374">http://barnum:80/circus/jumper.jpg</div>
                  <div class="td e375">Matches=yes ; server=”barnum” </div>
               </div>
               <div class="tr e376">
                  <div class="td e377">http://barnum:80/circus/acrobats/juggler.jpg</div>
                  <div class="td e378">Matches=yes ; server=”barnum” </div>
               </div>
               <div class="tr e379">
                  <div class="td e380">https://barnum:80/circus/jumper.jpg</div>
                  <div class="td e381">Matches=no </div>
               </div>
               <div class="tr e382">
                  <div class="td e383" rowspan="2">http://{server}/{{path}}/{object}</div>
                  <div class="td e384">http://barnum:80/circus/jumper.gif</div>
                  <div class="td e385">Matches=yes server=”barnum:80” path=”circus” object=”jumper.gif” </div>
               </div>
               <div class="tr e386">
                  <div class="td e387">http://barnum:80/circus/acrobats/juggler.jpg</div>
                  <div class="td e388">Matches=yes server=”barnum:80” path=”circus/acrobat” object=”juggler.gif”
                     
                  </div>
               </div>
               <div class="tr e389">
                  <div class="td e390" rowspan="2">http://{server}/{path}/{object}</div>
                  <div class="td e391">http://barnum:80/circus/jumper.gif</div>
                  <div class="td e392">Matches=yes server=”barnum:80” path=”circus” object =”jumper.gif” </div>
               </div>
               <div class="tr e393">
                  <div class="td e394">http://barnum:80/circus/acrobats/juggler.jpg</div>
                  <div class="td e395">Matches=yes server=”barnum:80” path=”circus” object =”acrobats/juggler.jpg”
                     
                  </div>
               </div>
            </div>
         </div>
      </div><a name="VerificationandexecutionofXRMspecifications(principles)ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e396" xml:id="app-verif">
         <div class="title e397">Verification and execution of XRM specifications (principles)</div>
         <div class="para e398">Our descriptions can be expressed through XML or any appropriate language. If the
            language is not based on XML, a bidirectional, lossless, translation to XML could
            be
            provided (this technique is used by the RelaxNG [
            <div class="xref e399" linkend="wikipedia-RelaxNG"></div>]
            schema language, which provides both an XML based syntax and a so-called “compact
            syntax”, strictly equivalent). 
         </div>
         <div class="para e400">In order to be consistent and usable, our link descriptions must comply with specific
            properties that can be checked in order to assess the correctness of the specifications:
            
         </div>
         <div class="orderedlist e401">
            <div class="listitem e402">
               <div class="para e403">Wellformedness of the logical structure (correct occurrence of sections,
                  subsections and attributes)
               </div>
            </div>
            <div class="listitem e404">
               <div class="para e405">Correct use of tags (no dangling tag references, coherence of tag declarations
                  if any)
               </div>
            </div>
            <div class="listitem e406">
               <div class="para e407">Correct structure of URI (reference on link descriptions)</div>
            </div>
         </div>
         <div class="para e408">The execution model of any processing component functionally encompasses 3 stages
            (points 
            <div class="xref e409" linkend="vr1"></div>, 
            <div class="xref e410" linkend="vr2"></div>, 
            <div class="xref e411" linkend="vr3"></div> below all
            cover the third stage, depending on the active operation): 
         </div>
         <div class="orderedlist e412" continuation="continues">
            <div class="listitem e413" xml:id="vr1">
               <div class="para e414">Performs the XML parsing</div>
            </div>
            <div class="listitem e415" xml:id="vr2">
               <div class="para e416">Extracts of the so-called 
                  <div class="emphasis e417">base-uri</div> (the URL that describes
                  the localization of the instance to be processed) 
               </div>
            </div>
            <div class="listitem e418" xml:id="vr3">
               <div class="para e419">For each link specified into the link validation description,</div>
               <div class="orderedlist e420">
                  <div class="listitem e421">
                     <div class="para e422">Extracts the link value, using the localization information described
                        in point 1.a above, and accessed through the tag designation
                        mechanism
                     </div>
                  </div>
                  <div class="listitem e423">
                     <div class="para e424">Perform a partial normalization of the link, according to information
                        provided (deals only with escaping issues, depending on the kind of
                        reference, as specified)
                     </div>
                  </div>
                  <div class="listitem e425">
                     <div class="para e426">Verifies if the lexical structure of link meets the validation
                        requirement, depending on those:
                     </div>
                     <div class="orderedlist e427">
                        <div class="listitem e428">
                           <div class="para e429">The link structure is compliant with the declared link
                              type
                           </div>
                        </div>
                        <div class="listitem e430">
                           <div class="para e431">The link is verifying the condition (if provided)</div>
                        </div>
                        <div class="listitem e432">
                           <div class="para e433">The link is matching the pattern (if provided)</div>
                        </div>
                        <div class="listitem e434">
                           <div class="para e435">The link target is available (if this constraint is
                              specified)
                           </div>
                        </div>
                        <div class="listitem e436">
                           <div class="para e437">The link target verifies the expected properties, if any such
                              is specified (namespace, node selection condition)
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="listitem e438">
               <div class="para e439">For each link specified into the link transformation description,</div>
               <div class="orderedlist e440">
                  <div class="listitem e441">
                     <div class="para e442">Extracts the link value, using the localization information described
                        in point 1.a above, and accessed through the tag designation
                        mechanism
                     </div>
                  </div>
                  <div class="listitem e443">
                     <div class="para e444">Normalizes the link, according to the information provided by the
                        
                        <div class="emphasis e445">normalize</div> attribute of the link transformation
                        section (if normalize is set to true, solves the relative references
                        into absolute references, in accordance with the XML Base standard
                        [
                        <div class="xref e446" linkend="XBase"></div>] ; deal with escaping issues, depending on
                        the kind of reference, as specified)
                     </div>
                  </div>
                  <div class="listitem e447">
                     <div class="para e448">Applies the rule logic as described above for rewriting
                        descriptors
                     </div>
                  </div>
                  <div class="listitem e449">
                     <div class="para e450">Normalizes the resulting link, with respect to xml:base mechanism, if
                        required
                     </div>
                  </div>
                  <div class="listitem e451">
                     <div class="para e452">Handle forbidden characters inside link content, as required by its
                        type (use escaping mechanisms defined in [
                        <div class="xref e453" linkend="URI"></div>], e.g. a
                        space “ “ is escaped into “%20”)
                     </div>
                  </div>
                  <div class="listitem e454">
                     <div class="para e455">Inserts the resulting link into the output document in replacement of
                        the original link
                     </div>
                  </div>
               </div>
            </div>
            <div class="listitem e456">
               <div class="para e457">For each link specified in the dependencies section,</div>
               <div class="orderedlist e458">
                  <div class="listitem e459">
                     <div class="para e460">extracts all relevant link values satisfying the filtering conditions
                        (prior normalization if required)
                     </div>
                  </div>
                  <div class="listitem e461">
                     <div class="para e462">normalize the link (if required by the extract sub-descriptor) and
                        orders the links according to the specified ordering policy
                     </div>
                  </div>
                  <div class="listitem e463">
                     <div class="para e464">creates an output report with the relevant meta-information: for
                        instance the date and time of the dependency extraction operation ; the
                        URL of the input document, the URL of the link dependencies
                        specification interpreted by the operation
                     </div>
                  </div>
                  <div class="listitem e465">
                     <div class="para e466">dumps the links in the right order inside the report with the relevant
                        meta-information as specified by show-tag and show-location
                        attributes
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e467">
         <div class="title e468">References</div>
         <div class="bibliomixed e469" xml:id="URI" xreflabel="1">
            
            <div class="emphasis e470">Uniform Resource Identifier: Generic syntax (URI)</div>, IETF - RFC 3986
            T. Berners-Lee, R. Fielding, L. Masinter, January 2005 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e471" xlink:actuate="onRequest" xlink:href="http://www.ietf.org/rfc/rfc3986.txt" xlink:show="new" xlink:type="simple">rfc content</div>
            
         </div>
         <div class="bibliomixed e472" xml:id="XCalatog" xreflabel="2">
            
            <div class="emphasis e473">XML Catalogs</div>, OASIS Committee specification, August 2001 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e474" xlink:actuate="onRequest" xlink:href="http://www.oasis-open.org/committees/entity/spec-2001-08-06.html" xlink:show="new" xlink:type="simple">specification</div>
            
         </div>
         <div class="bibliomixed e475" xml:id="XLink" xreflabel="3">
            
            <div class="emphasis e476">XML Linking Language</div> W3C Recommendation, June 2003, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e477" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xlink/" xlink:show="new" xlink:type="simple">recommendation</div>
            
         </div>
         <div class="bibliomixed e478" xml:id="XML" xreflabel="4">
            
            <div class="emphasis e479">Extensible Markup Language (XML) 1.0 (Second Edition)</div> World Wide
            Web Consortium, 2000, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e480" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2000/REC-xml-20001006" xlink:show="new" xlink:type="simple">specification</div>
            
         </div>
         <div class="bibliomixed e481" xml:id="XBase" xreflabel="5">
            
            <div class="emphasis e482">XML Base</div> W3C Recommendation, June 2001, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e483" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xmlbase/" xlink:show="new" xlink:type="simple">recommendation</div>
            
         </div>
         <div class="bibliomixed e484" xml:id="XCataEx" xreflabel="6">
            
            <div class="emphasis e485">How to Write an XML Catalog File</div> Bob Stayton, In “DocBook XSL: The
            Complete Guide”, Part 1, Chapter 5 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e486" xlink:actuate="onRequest" xlink:href="http://www.sagehill.net/docbookxsl/WriteCatalog.html" xlink:show="new" xlink:type="simple">article</div>
            
         </div>
         <div class="bibliomixed e487" xml:id="XPath" xreflabel="7">
            
            <div class="emphasis e488">XML Path Language (XPath), version 1.0</div> W3C recommendation, 16
            November 1999, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e489" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xpath" xlink:show="new" xlink:type="simple">recommendation</div>
            
         </div>
         <div class="bibliomixed e490" xml:id="IRI" xreflabel="8">
            
            <div class="emphasis e491">Internationalized Resource Identifiers (IRIs)</div> IETF – RFC 3987,
            Duerest and Suignard, January 2005, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e492" xlink:actuate="onRequest" xlink:href="http://www.ietf.org/rfc/rfc3987.txt" xlink:show="new" xlink:type="simple">rfc content</div>
            
         </div>
         <div class="bibliomixed e493" xml:id="XInclude" xreflabel="9">
            
            <div class="emphasis e494">XML Inclusion 1.0 (XInclude - Second Edition)</div> W3C recommendation,
            15 November 2006, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e495" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xinclude/" xlink:show="new" xlink:type="simple">recommendation</div>
            
         </div>
         <div class="bibliomixed e496" xml:id="xml-1.1" xreflabel="10">
            
            <div class="emphasis e497">Extensible Markup Language (XML) 1.1</div> W3C recommendation, 4 February
            2004 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e498" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2004/REC-xml11-20040204/#sec-external-ent" xlink:show="new" xlink:type="simple">recommendation (ext. entity)</div>
            
         </div>
         <div class="bibliomixed e499" xml:id="XPtr-scheme" xreflabel="11">
            
            <div class="emphasis e500">XPointer xpointer() Scheme</div> W3C Working Draft 19 December 2002 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e501" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xptr-xpointer/" xlink:show="new" xlink:type="simple">working draft</div>
            
         </div>
         <div class="bibliomixed e502" xml:id="XPtr-frame" xreflabel="12">
            
            <div class="emphasis e503">XPointer Framework</div> W3C Recommendation, 25 March 2005 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e504" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xptr-framework/" xlink:show="new" xlink:type="simple">recommendation</div>
            
         </div>
         <div class="bibliomixed e505" xml:id="wikipedia-NS" xreflabel="13">
            
            <div class="emphasis e506">XML Namespaces</div> Wikipedia, the free Encyclopedia 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e507" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/XML_namespace" xlink:show="new" xlink:type="simple">article</div>
            
         </div>
         <div class="bibliomixed e508" xml:id="wikipedia-RelaxNG" xreflabel="14">
            
            <div class="emphasis e509">RelaxNG</div> Wikipedia, the free Encyclopedia 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e510" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/RELAX_NG" xlink:show="new" xlink:type="simple">article</div>
            
         </div>
         <div class="bibliomixed e511" xml:id="Mime" xreflabel="15">
            
            <div class="emphasis e512">Mime Media Types</div> IANA (Internet Assigned Numbers Authority) 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e513" xlink:actuate="onRequest" xlink:href="http://www.iana.org/assignments/media-types/" xlink:show="new" xlink:type="simple">specification</div>
            
         </div>
         <div class="bibliomixed e514" xml:id="Mime-files" xreflabel="16">
            
            <div class="emphasis e515">Mime Types File References</div> non normative list of mime media types
            and usual associated file name extensions 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e516" xlink:actuate="onRequest" xlink:href="http://www.mimetype.org/" xlink:show="new" xlink:type="simple">http://www.mimetype.org/</div>
            
         </div>
         <div class="bibliomixed e517" xml:id="Saxonica" xreflabel="17">
            
            <div class="emphasis e518">Saxonica, XSLT and XQuery processing</div> Michael Kay, 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e519" xlink:actuate="onRequest" xlink:href="http://www.saxonica.com/" xlink:show="new" xlink:type="simple">http://www.saxonica.com/</div>
            
         </div>
         <div class="bibliomixed e520" xml:id="Schematron" xreflabel="18">
            
            <div class="emphasis e521">ISO Schematron, a language for making assertions about patterns found in XML
               documents
            </div>, Topologi , 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e522" xlink:actuate="onRequest" xlink:href="http://www.schematron.com/" xlink:show="new" xlink:type="simple">web site</div>
            
         </div>
      </div>
   </div>
</div>