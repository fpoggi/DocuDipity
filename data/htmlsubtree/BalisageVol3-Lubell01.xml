<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#DocumentingandImplementingGuidelineswith%0ASchematronANCHOR" name="DocumentingandImplementingGuidelineswith%0ASchematronTOC">Documenting and Implementing Guidelines with
               Schematron</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#WhyGuidelines?ANCHOR" name="WhyGuidelines?TOC">Why Guidelines?</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ImplementingGuidelineswithSchematronANCHOR" name="ImplementingGuidelineswithSchematronTOC">Implementing Guidelines with Schematron</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ALiterateProgrammingApproachANCHOR" name="ALiterateProgrammingApproachTOC">A Literate Programming Approach</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TheNDRProfileExperienceANCHOR" name="TheNDRProfileExperienceTOC">The NDRProfile Experience</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#DiscussionANCHOR" name="DiscussionTOC">Discussion</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ReferencesANCHOR" name="ReferencesTOC">References</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">all</div>
         <div class="singletermTERMS">Architectures in an XML World</div>
         <div class="singletermTERMS">August 11 - 14, 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">business rules</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2009</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">class</div>
         <div class="singletermTERMS">Customizability</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">Don't Invent XML Languages</div>
         <div class="singletermTERMS">DITA Version 1.1 Specification Overview</div>
         <div class="singletermTERMS">DocBook 5.0: The Definitive Guide</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">Extreme Markup Languages 2004</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
         <div class="singletermTERMS">guidelines</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">iso-schematron.rng</div>
         <div class="singletermTERMS">Inclusiveness</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
         <div class="singletermTERMS">Joshua</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">Literate Programming</div>
         <div class="singletermTERMS">Literate programming</div>
         <div class="singletermTERMS">Literate Documentation for XML Schema</div>
         <div class="singletermTERMS">lubell@nist.gov</div>
         <div class="singletermTERMS">Lubell</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">Markup Languages: Theory and Practice</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">NDRs</div>
         <div class="singletermTERMS">NDRProfile Schema Version 1.0 User Guide</div>
         <div class="singletermTERMS">Naming and Design Rules</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">policy</div>
         <div class="singletermTERMS">p.rng</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">role</div>
         <div class="singletermTERMS">RelaxNG with Son of ODD</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">status</div>
         <div class="singletermTERMS">script</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">Universal Business Language 1.0</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">XML Designers: Take Cue from the Web</div>
         <div class="singletermTERMS">XML Applications and Initiatives</div>
         <div class="singletermTERMS">XML Path Language (XPath) Version 1.0</div>
         <div class="singletermTERMS">XML Schema Part 0: Primer Second Edition</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="DocumentingandImplementingGuidelineswith%0ASchematronANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.2">
      <div class="title e1">Documenting and Implementing Guidelines with
         Schematron
      </div>
      <div class="info e2">
         <div class="confgroup e3">
            <div class="conftitle e4">Balisage: The Markup Conference 2009</div>
            <div class="confdates e5">August 11 - 14, 2009</div>
         </div>
         <div class="abstract e6">
            <div class="para e7">
               
               Data exchange specifications must be broad and general in order to
               achieve acceptance, yet they must also be customizable in a controlled
               and interoperable manner in order to be useful. This paper describes
               an approach employing the Schematron language and literate programming
               ideas for developing the guidelines needed to effectively use data
               exchange specifications.
               
               
            </div>
         </div>
         <div class="author e8">
            <div class="personname e9">
               <div class="firstname e10">Joshua</div>
               <div class="surname e11">Lubell</div>
            </div>
            <div class="personblurb e12">
               <div class="para e13">
                  
                  Josh Lubell uses information technology to solve manufacturing
                  engineering and e-business software interoperability problems. He is
                  particularly interested in long-term retention of digital data and was
                  awarded the Department of Commerce Silver Medal for his leadership in
                  developing ISO 10303-203:2008, a standard for representation and
                  exchange of computer-aided designs.
                  
                  	
               </div>
            </div>
            <div class="email e14">lubell@nist.gov</div>
         </div>
         <div class="legalnotice e15">
            <div class="para e16">Official contribution of the National Institute of Standards and Technology; not subject
               to copyright in the United States.
            </div>
         </div>
      </div><a name="WhyGuidelines?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e17">
         <div class="title e18">Why Guidelines?</div>
         <div class="para e19">
            
            Data exchange specifications for electronic business (e-business)
            applications describe in a computer-interpretable fashion the
            information to be transferred between systems. Thanks to the ubiquity
            and success of the Extensible Markup Language [
            <div class="xref e20" linkend="xml"></div>]
            as an implementation technology, these specifications are often
            encoded using XML schemas [
            <div class="xref e21" linkend="xsd"></div>]. XML's approval as a
            World Wide Web Consortium (W3C) Recommendation in 1998 precipitated a
            deluge of proposed XML schemas for data exchange [
            <div class="xref e22" linkend="cover"></div>], many of them rigidly designed for a specific
            vertical area of application. Most of these schemas were subsequently
            abandoned as developers learned that having too many non-interoperable
            languages hinders rather than enables systems integration.
            
            
         </div>
         <div class="para e23">
            
            Recognition of the need for interoperability led to a drive to
            standardize XML schemas meeting two
            requirements: 
            <div class="itemizedlist e24">
               <div class="listitem e25">
                  <div class="para e26">
                     
                     
                     <div class="emphasis e27">Customizability</div> – to enable
                     interoperable extensions to be added,
                     
                     
                  </div>
               </div>
               <div class="listitem e28">
                  <div class="para e29">
                     
                     
                     <div class="emphasis e30">Inclusiveness</div> – to facilitate use in
                     multiple contexts.
                     
                     
                  </div>
               </div>
            </div> These customizable and inclusive
            schemas are more horizontal in nature and fewer in number than the
            first generation of proposed schemas. Examples from the e-business and
            e-government domains include the Universal Business Language [
            <div class="xref e31" linkend="ubl"></div>], the Open Applications Group Integration
            Specification [
            <div class="xref e32" linkend="oagis"></div>], and the National Information
            Exchange Model [
            <div class="xref e33" linkend="niem"></div>] standards.
            
            
         </div>
         <div class="para e34">
            
            Unlike e-business and e-government, where the use of markup language
            for data exchange is a relatively recent phenomenon, customizable and
            inclusive standards for textual documentation have been around for
            decades and predate the advent of XML. Examples of widely used
            horizontal and extensible XML schema standards for text documentation
            include DocBook [
            <div class="xref e35" linkend="docbook"></div>], Darwin Information Typing
            Architecture [
            <div class="xref e36" linkend="dita"></div>], the Text Encoding Initiative
            [
            <div class="xref e37" linkend="tei"></div>], and S1000D [
            <div class="xref e38" linkend="s1000d"></div>]. These
            documentation standards (with the exception of DITA) have been in
            existence longer than UBL, OAGIS, and NIEM.
            
            
         </div>
         <div class="para e39">
            
            Whether they apply to e-business or text processing applications,
            interoperable data exchange specifications must be both inclusive
            enough to appeal to a broad community of developers and customizable
            enough to allow developers to add new elements when needed. This is
            where 
            <div class="emphasis e40">guidelines</div> — or rules — come
            into play. A schema that is inclusive is typically loosely specified
            in order to make it acceptable to the community at large. This means
            heavy use of optional elements, optional attributes, unrestricted data
            types and, possibly, unconstrained content models. The result is a
            schema that often needs to be more tightly constrained for specific
            use cases, by mutual agreement of the actors involved. Such guidelines
            are commonly called 
            <div class="emphasis e41">business rules</div>.
            
            
         </div>
         <div class="para e42">
            
            As a simple example of a business rule adding an additional constraint
            to a schema, consider a data exchange schema with an element
            
            <div class="code e43">policy</div>, where 
            <div class="code e44">policy</div> has an attribute
            
            <div class="code e45">status</div> whose type is a string. Now suppose that a group
            implementing the schema adds a business rule to further constrain
            
            <div class="code e46">status</div> to be one of an enumerated set of
            values. Validating an XML instance is now a two-step process. First,
            the instance is validated against the original schema. If the instance
            is schema-valid, it is then validated against the business rule. 
            <div class="xref e47" linkend="br-example"></div> shows the validation steps.
            
            
         </div>
         <div class="figure e48" xml:id="br-example">
            <div class="mediaobject e49">
               <div class="imageobject e50">
                  <div class="metaBox e51"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e98').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e98" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e51'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Lubell01/Lubell01-001.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e52">
                  <div class="para e53">Validation of an instance against a schema with an
                     	  added business rule.
                  </div>
               </div>
            </div>
         </div>
         <div class="para e54">
            
            XML schema Naming and Design Rules [
            <div class="xref e55" linkend="ndr"></div>] are a
            noteworthy special case of business rules. An NDR is a set of
            guidelines for developing a new XML schema or extending an existing
            schema.  NDRs are useful both for promoting good design practice and
            for ensuring that schema developers follow consistent naming
            conventions. NDR validation is similar to the general case shown
            in 
            <div class="xref e56" linkend="br-example"></div>, except that the XML schema is a
            schema defining the syntax of the XML schema definition language, the
            XML instance is a schema specified in that definition language, and
            the business rules are an NDR. 
            <div class="xref e57" linkend="ndr-example"></div> shows an
            example where an XML schema containing a complex type definition
            containing an 
            <div class="code e58">all</div> group is validated against an NDR with
            a rule forbidding the use of 
            <div class="code e59">all</div>.
            
            
         </div>
         <div class="figure e60" xml:id="ndr-example">
            <div class="mediaobject e61">
               <div class="imageobject e62">
                  <div class="metaBox e63"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e119').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e119" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e63'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Lubell01/Lubell01-002.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e64">
                  <div class="para e65">Validation of an XML schema against an NDR.</div>
               </div>
            </div>
         </div>
         <div class="para e66">
            
            The NDR approach is applicable to any schema language with an XML
            syntax and a “schema for schemas” defining the grammar
            of the schema language. However, NDRs are most often used to promote
            quality and interoperability of schemas written in the W3C XML schema
            definition language. This is because many large-scale data exchange
            specifications are defined using W3C XML schemas, and standards
            developers have found that the W3C XML schema definition language's
            many features must be used judiciously to ensure that extensions are
            compatible with one another and with the base schema.
            
            
         </div>
      </div><a name="ImplementingGuidelineswithSchematronANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e67">
         <div class="title e68">Implementing Guidelines with Schematron</div>
         <div class="para e69">
            
            To summarize the previous section, XML data exchange schemas need to
            be both inclusive and customizable, guidelines known as
            
            <div class="emphasis e70">business rules</div> are used to make an inclusive
            schema more restrictive to a subset of the exchange schema's users,
            and guidelines known as 
            <div class="emphasis e71">NDRs</div> are used to control
            the use of the exchange schema's definition language for the purpose
            of ensuring that schema extensions are interoperable. Many data
            exchange standards allow both for the addition of constraints via
            business rules and for the addition of extensions as permitted by an
            NDR.
            
            
         </div>
         <div class="para e72">
            
            But guidelines in and of themselves are of only limited value unless
            they are implemented in software. Without automated enforcement,
            guidelines may be subject to multiple human interpretations. Also, a
            set of guidelines may be inconsistent, making it impossible for an XML
            document to satisfy one guideline without violating another. While
            implementing guidelines does not prevent these problems, the
            implementation process often makes ambiguities and inconsistencies
            more obvious and thus more likely to be discovered and remedied. Most
            important, automating guideline enforcement makes it more likely that
            the guidelines will actually be followed as opposed to relying on
            human diligence alone.
            
            
         </div>
         <div class="para e73">
            
            Because NDRs are a special case of business rules, any implementation
            method for business rules is also applicable for NDRs. Although just
            about any computer-interpretable language is a potential guideline
            implementation method, a popular choice is Schematron [
            <div class="xref e74" linkend="schematron"></div>], a schema language for XML. Schematron differs
            from other schema languages in that it is rule-based and uses XPath
            [
            <div class="xref e75" linkend="xpath"></div>] expressions instead of grammars. Instead of
            imposing a grammar on an XML document, a Schematron processor applies
            assertions to specific context paths within the document. If the XML
            document fails to meet an assertion, a diagnostic message supplied by
            the author of the Schematron schema is displayed. Because Schematron
            supports assertions about arbitrary patterns in XML documents,
            Schematron can enforce constraints that would be hard to enforce using
            grammar-based schema languages. Also, Schematron's modular, rule-based
            syntax and author-supplied diagnostic messages make it an attractive
            method for implementing guidelines
            <div class="popupBox e76">
               <div class="popupLabel" onmouseover="$('#d1e144').show('1000');" onmouseout="$('#d1e144').hide('1000');">[ footnote ]</div>
               <div id="d1e144" style="display: none;">
                  <div class="footnote">
                     <div class="para e77">Version 1.1 of the
                        W3C XML Schema standard [
                        <div class="xref e78" linkend="xsd11"></div>], a Candidate
                        Recommendation at the time of this writing, adds Schematron-like
                        capabilities to the XML Schema Definition Language. Once
                        implementations become available, XML Schema 1.1 might be worth
                        considering as an alternative to Schematron.
                     </div>
                  </div>
               </div>
            </div>.
            
            
         </div>
         <div class="para e79">
            
            
            <div class="xref e80" linkend="exchange-spec"></div> shows how NDRs, business rules, and
            Schematron fit together in the context of data exchange schema
            interoperability. The NDR controls how the schema is extended should
            new definitions need to be added. The business rules facilitate
            inclusiveness by allowing a broad-based consensus standard to coexist
            alongside additional constraints required by exchange partners. Both
            the business rules and the NDR (which is effectively a set of business
            rules restricting the language — typically the W3C XML schema
            definition language — used to specify the exchange schema) may
            be implemented in Schematron. This implementation scenario sets the
            stage for the next section's discussion of implementing guidelines using
            a literate programming approach.
            
            
         </div>
         <div class="figure e81" xml:id="exchange-spec">
            <div class="mediaobject e82">
               <div class="imageobject e83">
                  <div class="metaBox e84"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e157').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e157" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e84'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Lubell01/Lubell01-003.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e85">
                  <div class="para e86">Using NDR, business rules and Schematron to ensure
                     	  exchange schema interoperability.
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ALiterateProgrammingApproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e87">
         <div class="title e88">A Literate Programming Approach</div>
         <div class="para e89">
            
            Literate programming [
            <div class="xref e90" linkend="knuth"></div>, 
            <div class="xref e91" linkend="litprog"></div>], a software development method invented by Donald
            Knuth, seeks to free implementers from the confines of computer
            language syntax — allowing them to code in a manner more
            consistent with human thought processes than traditional programming
            paradigms. Literate programming elevates human narrative to the same
            status as computer-interpretable code by allowing them to be
            co-mingled together in a “web.” A literate programming
            system includes tools for “weaving” formatted
            human-readable documentation from the source and
            “tangling” (i.e., rearranging) the source to produce
            compilable code.
            
            
         </div>
         <div class="para e92">
            
            In traditional approaches, documentation for human consumption such as
            source code comments, algorithm descriptions, requirements, and design
            rationale has second class status relative to computer-interpretable
            code. Even when source code in traditionally-developed software is
            well-documented with comments, the comments serve as an aid to
            understanding the code rather than something from which the code
            evolves. Because XML is well suited both for data exchange between
            software applications and for producing human-readable documentation
            in numerous formats, XML and literate programming are a good
            fit. Therefore, it is no surprise that a number of literate
            programming-inspired XML applications have been developed [
            <div class="xref e93" linkend="reiss"></div>]. One of the more well-known of these is “One
            Document Does it all” (ODD) [
            <div class="xref e94" linkend="ODD"></div>], a literate
            programming XML vocabulary from which TEI schemas and documentation
            can be generated [
            <div class="xref e95" linkend="Roma"></div>].
            
            
         </div>
         <div class="para e96">
            
            Schematron is a particularly useful literate programming tool for
            documenting and implementing guidelines. Schematron's syntax mimics an
            itemized list of guidelines. Schematron gives authors full flexibility
            in specifying diagnostic messages triggered upon an assertion passing
            or failing. And Schematron allows for “always-true”
            assertions, enabling guidelines that are untestable or unimplemented
            to nevertheless be included in the Schematron schema. Consider the
            following rule, adapted from [
            <div class="xref e97" linkend="jelliffe"></div>]:
            
            
            <div class="programlisting e98" xml:space="preserve">
               &lt;sch:rule context="/"&gt;
               &lt;sch:assert test="true()"  role="Untestable" &gt;The document shall 
               be maintainable&lt;/sch:assert&gt;
               &lt;sch:assert test="true()"  role="UnImplemented" &gt;All terms must be
               standard English words.&lt;/sch:assert&gt;
               &lt;/sch:rule&gt;
               
            </div>
            
            A Schematron processor will not check for these two
            constraints. However, the Schematron language not only allows for
            expressing text describing the constraints, but also provides
            constructs such as the 
            <div class="code e99">role</div> attribute for metadata.
            Additionally, Schematron processors ignore foreign markup and child
            elements inside foreign markup, making it easy to intersperse the
            Schematron syntax with content marked up in a text documentation
            language such as DocBook or the Extensible HyperText Markup Language
            [
            <div class="xref e100" linkend="xhtml"></div>].
            
            
         </div>
         <div class="para e101">
            
            Consider the following Schematron schema containing two business
            rules. The first rule, from 
            <div class="xref e102" linkend="br-example"></div>, restricts a
            policy's status to an enumerated set of values. The second rule, a
            co-occurrence constraint, requires an “approved” policy
            to have an effective date.
            
            
            <div class="programlisting e103" xml:space="preserve">
               &lt;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron"
               	    xmlns="http://www.w3.org/1999/xhtml"&gt;
               &lt;sch:title&gt;Business Rules&lt;/sch:title&gt;
               &lt;sch:pattern&gt;
               &lt;sch:rule context="policy"&gt;
               &lt;h3&gt;Rule 1&lt;/h3&gt;
               &lt;p&gt;A policy's status must be either &lt;strong&gt;draft&lt;/strong&gt;,
               &lt;strong&gt;approved&lt;/strong&gt;, or &lt;strong&gt;deprecated&lt;/strong&gt;.&lt;/p&gt;
               &lt;sch:assert test=
               "@status = 'draft' or @status = 'approved' or @status = 'deprecated'"&gt;
               Value for attribute 'status' of element 'policy' is not one of
               'draft', 'approved', 'deprecated'.&lt;/sch:assert&gt;
               &lt;/sch:rule&gt;
               &lt;sch:rule context="policy/@status[. = 'approved']"&gt;
               &lt;h3&gt;Rule 2&lt;/h3&gt;
               &lt;p&gt;An approved policy must specify an effective date.&lt;/p&gt;
               &lt;sch:assert test="../@effectiveDate"&gt;
               Value for attribute 'status' of element 'policy' is 'approved', but
               attribute 'effectiveDate' is not present.&lt;/sch:assert&gt;
               &lt;/sch:rule&gt;
               &lt;/sch:pattern&gt;
               &lt;/sch:schema&gt;
               
            </div>
            
            This is a perfectly valid Schematron schema, even though it contains
            XHTML markup. The XHTML-enhanced Schematron exemplifies the literate
            programming ideal of a single source co-mingling processable code with
            documentation, where the code and documentation have equal status. The
            Schematron-valid source can be used as-is by a Schematron processor to
            validate an XML instance against the business rules — no
            literate programming “tangling” operation is needed. The
            formatted web page shown in 
            <div class="xref e104" linkend="formatted-rules"></div> is
            generated using a very simple transformation accomplishing the
            literate programming “weaving” operation.
            
            
         </div>
         <div class="figure e105" xml:id="formatted-rules">
            <div class="mediaobject e106">
               <div class="imageobject e107">
                  <div class="metaBox e108"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e202').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e202" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e108'
                           </span><span class="metaAttribute">fileref='../../../vol3/graphics/Lubell01/Lubell01-004.png'
                           </span><span class="metaAttribute">format='png'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
               <div class="caption e109">
                  <div class="para e110">Documentation generated using a simple transformation
                     	  of the Schematron schema.
                  </div>
               </div>
            </div>
         </div>
         <div class="para e111">
            
            Although the example uses XHTML rather than DocBook for enhancing the
            Schematron, DocBook may actually be more suitable since the DocBook
            data model is designed specifically for representing technical
            documentation. I choose XHTML over DocBook for the examples in this
            paper purely as a convenience to myself and to readers. Generating
            formatted output from XHTML is easy. And anyone familiar with XML
            technologies has seen XHTML syntax.
            
            
         </div>
      </div><a name="TheNDRProfileExperienceANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e112">
         <div class="title e113">The NDRProfile Experience</div>
         <div class="para e114">
            
            The previous section presented the case for implementing guidelines
            using a Schematron-based literate programming approach. This section
            discusses a recent effort employing a non-literate programming
            approach to guidelines (specifically NDR) development.
            
            
         </div>
         <div class="para e115">
            
            The National Institute of Standards and Technology (NIST) Quality of
            Design (QOD) application [
            <div class="xref e116" linkend="morris"></div>] provides a
            mechanism for checking XML schema design quality against NDRs in a
            collaborative environment.  Recognizing the need for an XML vocabulary
            to represent NDRs, NIST created NDRProfile [
            <div class="xref e117" linkend="harvey"></div>]
            — an XML schema providing a common format in which NDRs can be
            exchanged, managed and reused. Although the NDRProfile schema's
            development was inspired by QOD, the schema can be used independently
            of QOD, either as a means of authoring an NDR document or as a vehicle
            for sharing rules between NDRProfile schema-compliant software
            applications.
            
            
         </div>
         <div class="para e118">
            
            Unlike the previous section's example co-mingling Schematron and
            XHTML, NDRProfile represents a set of guidelines using its own
            specialized vocabulary. Implementations of each guideline are
            specified using a 
            <div class="code e119">script</div> element whose content is
            computer-interpretable code, most commonly Schematron code. The
            following is an example of an NDRProfile instance containing a single
            NDR rule for UBL prohibiting the use of the XML Schema
            
            <div class="code e120">all</div> element.
            
            
         </div>
         <div class="programlisting e121" xml:space="preserve">
            &lt;NDRProfile NDRProfileID="prd-UBL-NDR-2.0"&gt;
            &lt;NDRTitle&gt;Universal Business Language Naming and Design Rules&lt;/NDRTitle&gt;
            &lt;OrganizationInformation&gt;
            &lt;OrganizationName&gt;OASIS&lt;/OrganizationName&gt;
            &lt;ContactURI&gt;http://www.oasis-open.org&lt;/ContactURI&gt;
            &lt;/OrganizationInformation&gt;
            &lt;Guidance guidanceID="UBL-2.0-GXS-8"&gt;
            &lt;Classification&gt;General&lt;/Classification&gt;
            &lt;EnforcementLevel&gt;Mandatory&lt;/EnforcementLevel&gt;
            &lt;Status&gt;Draft&lt;/Status&gt;
            &lt;Testability&gt;Fully-Testable&lt;/Testability&gt;
            &lt;GuidanceText&gt;xsd:all MUST NOT be used.&lt;/GuidanceText&gt;
            &lt;TestCases&gt;
            &lt;TestCase testCaseID="UBL-2.0-GXS-8-1" ruleType="ISO-Schematron"&gt;
            	&lt;TestName&gt;GXS8&lt;/TestName&gt;
            	&lt;Script&gt;&lt;![CDATA[
            &lt;?xml version="1.0" encoding="UTF-8"?&gt; 
            &lt;schema xmlns="http://purl.oclc.org/dsdl/schematron"&gt; 
            &lt;ns uri="http://www.w3.org/3301/XMLSchema" prefix="xsd"/&gt; 
            &lt;pattern id="UBL-2.0-GSX-8"&gt; 
            &lt;rule context="xsd:all"&gt;
            &lt;report test="true()"&gt;Error: The xsd:all element MUST
            NOT be used.&lt;/report&gt;&lt;/rule&gt;&lt;/pattern&gt;&lt;/schema&gt;
            ]]&gt;&lt;/Script&gt;&lt;/TestCase&gt;&lt;/TestCases&gt;&lt;/Guidance&gt;&lt;/NDRProfile&gt;
            
         </div>
         <div class="para e122">
            
            This example illustrates a number of disadvantages of the NDRProfile
            schema design relative to the approach discussed in the previous
            section. Because NDRProfile does not permit foreign markup, the
            Schematron code in the 
            <div class="code e123">script</div> element must be either
            enclosed in a CDATA section, or the left angle brackets must be
            escaped. This not only makes the instance uglier, but also requires
            extraction of the Schematron code before it can be executed by a
            Schematron processor. In the previous section's example, no extraction
            is necessary because the document is already a valid Schematron
            schema.
            
            
         </div>
         <div class="para e124">
            
            Another disadvantage is that NDRProfile lacks the elegance of the
            literate programming approach. The code is a second class citizen
            relative to the documentation, so the documentation and code do not
            share equal status. In fact, an NDRProfile developer is likely to
            write the Schematron code as a separate endeavor from authoring the
            NDRProfile instance and paste it into the instance after the
            fact. This is contrary to literate programming, where the code and
            documentation are created in concert with one another.
            
            
         </div>
         <div class="para e125">
            
            Finally, because the NDRProfile schema defines its own vocabulary
            rather than maximizing reuse of existing XML languages, custom tools
            must be developed for authoring, validating, and processing it. Thus
            NDRProfile shares the barriers to success of other newly-invented
            languages. And it is usually a bad idea to invent a new XML language
            [
            <div class="xref e126" linkend="bray"></div>].
            
            
         </div>
         <div class="para e127">
            
            So why was NDRProfile designed the way it was? The main reason was
            that the normative form of most NDRs is an unstructured document in a
            proprietary word processor format. This caused us to think of an
            NDRProfile as a text document foremost, rather than as an application
            of literate programming. A second reason was that we wanted to allow
            for other implementation languages besides Schematron. However, by
            using “always-true” assertions, 
            <div class="code e128">role</div>
            metadata, and foreign markup, one can use a Schematron-based
            vocabulary while at the same time allowing for other implementation
            methods.
            
            
         </div>
         <div class="para e129">
            
            The following example shows how an NDRProfile can be represented using
            a variant of the previous section's literate programming approach,
            with XHTML 
            <div class="code e130">class</div> attributes added to provide NDR-specific
            annotations.
            
            
         </div>
         <div class="programlisting e131" xml:space="preserve">
            &lt;sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron"
            	    xmlns="http://www.w3.org/1999/xhtml" id="prd-UBL-NDR-2.0"&gt;
            &lt;sch:title&gt;Universal Business Language Naming and Design Rules&lt;/sch:title&gt;
            &lt;sch:ns uri="http://www.w3.org/2001/XMLSchema" prefix="xsd"/&gt; 
            &lt;sch:p class="schemaType"&gt;NDRProfile&lt;/sch:p&gt;
            &lt;p class="OrganizationInformation"&gt;
            &lt;span class="OrganizationName"&gt;OASIS&lt;/span&gt;
            &lt;a class="ContactURI" href="http://www.oasis-open.org"&gt;
            http://www.oasis-open.org&lt;/a&gt;&lt;/p&gt;
            &lt;sch:pattern id="UBL-2.0-GXS-8"&gt;
            &lt;sch:rule context="xsd:all" id="UBL-2.0-GXS-8-1"&gt;
            &lt;p class="Classification"&gt;General&lt;/p&gt;
            &lt;p class="EnforcementLevel"&gt;Mandatory&lt;/p&gt;
            &lt;p class="Status"&gt;Draft&lt;/p&gt;
            &lt;p class="Testability"&gt;Fully-Testable&lt;/p&gt;
            &lt;p class="GuidanceText"&gt;&lt;strong&gt;GXS8&lt;/strong&gt;: xsd:all MUST NOT
            be used.&lt;/p&gt;
            &lt;sch:report test="true()"&gt;Error: The xsd:all element MUST
            NOT be used.&lt;/sch:report&gt;&lt;/sch:rule&gt;&lt;/sch:pattern&gt;&lt;/sch:schema&gt;
            
         </div>
         <div class="para e132">
            
            This approach has neither of the NDRProfile schema's first two
            disadvantages. The third disadvantage is minimized by reusing
            existing, well-established XML vocabularies as much as possible.
            
            
         </div>
      </div><a name="DiscussionANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e133">
         <div class="title e134">Discussion</div>
         <div class="para e135">
            
            In this paper, I first introduced two kinds of guidelines needed for
            effective use of data exchange schemas: business rules for further
            constraining a schema, and NDR for controlling the design of schema
            extensions. Next I illustrated how Schematron can be used in
            conjunction with literate programming principles to simultaneously
            document and implement guidelines. I then discussed past experience
            with NDRProfile, an approach to encoding guidelines that at the time
            seemed intuitive and sensible, but in retrospect is more convoluted
            and less efficient than the literate programming approach.
            
            
         </div>
         <div class="para e136">
            
            My approach emphasizes Schematron because Schematron is an appropriate
            language for implementing NDRs and business rules as well as (with
            annotations added) a suitable guideline documentation language. This
            is not to imply that all XML-based literate programming systems should
            use Schematron. For applications such as ODD, where the underlying TEI
            data model is more complex, hierarchical, and harder to represent as a
            set of independent rules, Schematron's benefits as a literate
            programming tool may not be as great.
            
            
         </div>
         <div class="para e137">
            
            A key enabler of the Schematron-based literate programming approach
            advocated in this paper is the ability of a single XML document to
            incorporate multiple vocabularies. This is distinct from the more
            conventional notion of a single-vocabulary XML document that can be
            processed multiple ways. An XML document having multiple vocabularies
            is not a new idea. Back in the mid-1990s, ISO standardized the
            Architectural Form Definition Requirements [
            <div class="xref e138" linkend="afdr"></div>,
            
            <div class="xref e139" linkend="lubell"></div>]. Unlike a Document Type Definition (DTD), an
            “architecture” as defined by the AFDR need not specify a
            complete document type. Instead, an architecture defines rules known
            as “architectural forms” that developers can apply in
            defining their vocabularies. A document can use multiple
            architectures, and architectures themselves can inherit grammar rules
            from other architectures.
            
            
         </div>
         <div class="para e140">
            
            Although the AFDR never gained widespread traction among XML
            developers, the AFDR authors were incredibly forward-thinking in
            foreseeing the need to decouple vocabularies from document
            types. Software applications today are moving off of desktops and are
            increasingly being provided as services over the Internet. XML
            developers are coming to realize that XML documents and vocabularies
            should mimic the characteristics of the World Wide Web. Since the Web
            is a decentralized network of chunks of interconnected information,
            XML document designs should maximize the use of small,
            independently-developed vocabularies [
            <div class="xref e141" linkend="costello"></div>].
            
            
         </div>
         <div class="para e142">
            
            The newly-standardized Namespace-based Validation Dispatching Language
            [
            <div class="xref e143" linkend="nvdl"></div>] provides a method for validating XML
            documents containing multiple vocabularies defined using different
            schema languages. NVDL supports a variety of schema languages
            including the XML Schema Definition Language, DTDs, Schematron and
            RELAX NG [
            <div class="xref e144" linkend="rng"></div>]. NVDL thus enables the validation of
            a document such as the previous section's example of a literate
            programming approach to NDRProfile. Consider the following NVDL
            document describing the validation of a Schematron schema with
            embedded XHTML paragraph elements:
            
            
         </div>
         <div class="programlisting e145" xml:space="preserve">
            &lt;rules xmlns="http://purl.oclc.org/dsdl/nvdl/ns/structure/1.0"
            xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
            startMode="sch"&gt;
            &lt;mode name="sch"&gt;&lt;namespace ns="http://purl.oclc.org/dsdl/schematron"&gt;
            &lt;validate schema="iso-schematron.rng" useMode="xhtmlpara"/&gt;
            &lt;/namespace&gt;&lt;/mode&gt;
            &lt;mode name="xhtmlpara"&gt;&lt;namespace ns="http://www.w3.org/1999/xhtml"&gt;
            &lt;validate schema="p.rng"/&gt;&lt;/namespace&gt;&lt;/mode&gt;&lt;/rules&gt;
            
         </div>
         <div class="para e146">
            
            This NVDL document specifies that the Schematron schema with embedded
            XHTML is validated by initially checking all Schematron elements
            against the normative RELAX NG schema (assumed to be in the file
            
            <div class="code e147">iso-schematron.rng</div>) for the Schematron language. Whenever
            an XHTML element is encountered, the XHTML is validated against
            
            <div class="code e148">p.rng</div>, assumed to be a customization of the normative
            RELAX NG schema for XHTML allowing 
            <div class="code e149">p</div> as a starting
            element. The NVDL document does not validate syntactic correctness of
            NDRProfile annotations. NDRProfile annotation checking could be done
            by further customization of 
            <div class="code e150">iso-schematron.rng</div> and
            
            <div class="code e151">p.rng</div>, or alternatively by writing a separate Schematron
            schema specifically for NDRProfile annotation checking and adding an
            “NDRProfile” mode to the NVDL document.
            
            
         </div>
      </div><a name="ReferencesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e152">
         <div class="title e153">References</div>
         <div class="bibliomixed e154" xml:id="afdr" xreflabel="AFDR">
            ISO/IEC 10744:1997. Information processing — Time-based
            Structuring Language (HyTime)- 2d edition. Annex A.3 Architectural
            Form Definition Requirements (AFDR). [cited 08 Jun
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e155" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www1.y12.doe.gov/capabilities/sgml/wg8/document/n1920</div>
            
         </div>
         <div class="bibliomixed e156" xml:id="bray" xreflabel="Bray">Tim
            Bray. 
            <div class="emphasis e157">Don't Invent XML
               Languages
            </div>. 2006-01-09. [cited 24 Apr
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e158" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.tbray.org/ongoing/When/200x/2006/01/08/No-New-XML-Languages</div>
         </div>
         <div class="bibliomixed e159" xml:id="costello" xreflabel="Costello">
            Roger Costello. 
            <div class="emphasis e160">XML Designers: Take Cue from the
               Web
            </div>. xFront. [citied 09 Jun
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e161" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://xfront.com/xml-designers-take-cue-from-the-web/index.html</div>
            
         </div>
         <div class="bibliomixed e162" xml:id="cover" xreflabel="Cover">
            Cover Pages. 
            <div class="emphasis e163">XML Applications and
               Initiatives
            </div>. [cited 21 May 2009].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e164" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://xml.coverpages.org/xmlApplications.html</div>
            
         </div>
         <div class="bibliomixed e165" xml:id="dita" xreflabel="DITA">
            OASIS. 
            <div class="emphasis e166">DITA Version 1.1 Specification
               Overview
            </div>. 1 August 2007. [cited 08 May
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e167" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://docs.oasis-open.org/dita/v1.1/overview/overview.html</div>
            
         </div>
         <div class="bibliomixed e168" xml:id="docbook" xreflabel="DocBook">
            Norman Walsh. 
            <div class="emphasis e169">DocBook 5.0: The Definitive
               Guide
            </div>. ISBN: 156592-580-7. O'Reilly &amp; Associates, Inc. Version
            0.0.25. [cited 08 May 2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e170" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://docbook.org</div>
            
         </div>
         <div class="bibliomixed e171" xml:id="harvey" xreflabel="Harvey">Betty Harvey,
            Joshua Lubell, Puja Goyal, KC Morris. 
            <div class="emphasis e172">NDRProfile Schema
               Version 1.0 User Guide
            </div>. National Institute of Standards and
            Technology. NISTIR 7547. December 2008. [cited 24 Apr 2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e173" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://qod.sourceforge.net/ndrprofile/</div>
         </div>
         <div class="bibliomixed e174" xml:id="jelliffe" xreflabel="Jelliffe">Rick
            Jelliffe. 
            <div class="emphasis e175">Expressing untested and untestable constraints in
               Schematron
            </div>. [cited 23 Apr
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e176" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.oreillynet.com/xml/blog/2007/03/expressing_untested_and_untest.html</div>
            
         </div>
         <div class="bibliomixed e177" xml:id="knuth" xreflabel="Knuth">
            D.E. Knuth. 
            <div class="emphasis e178">Literate Programming</div>. The Computer
            Journal 1984 27(2):97-111; doi:
            <div class="biblioid doi e179">10.1093/comjnl/27.2.97</div>.
            British Computer Society. [cited 11 May 2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e180" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.literateprogramming.com/knuthweb.pdf</div>
            
         </div>
         <div class="bibliomixed e181" xml:id="litprog" xreflabel="LitProg">Wikipedia. 
            
            <div class="emphasis e182">Literate programming</div>. [cited 23 Apr 2009]. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e183" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://en.wikipedia.org/wiki/Literate_programming</div>
            
         </div>
         <div class="bibliomixed e184" xml:id="lubell" xreflabel="Lubell">
            Joshua Lubell. 
            <div class="emphasis e185">Architectures in an XML World</div>. 
            
            <div class="emphasis e186">Markup Languages: Theory and
               Practice
            </div>. Vol. 3. No. 4. Fall
            2001. doi:
            <div class="biblioid doi e187">10.1162/109966202760152167</div>. [cited 08 Jun 2009]. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e188" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.mel.nist.gov/div826/staff/lubell/xsltoolbox/apex/</div>
            
         </div>
         <div class="bibliomixed e189" xml:id="morris" xreflabel="Morris">K.C. Morris et al. 
            
            <div class="emphasis e190">User's Guide for the Quality of Design Testing Tool and the 
               Content Checker
            </div>. National Institute of Standards and
            Technology. NISTIR 7538. October 2008. [cited 11 May 2009]. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e191" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.mel.nist.gov/publications/view_pub.cgi?pub_id=824715</div>
            
         </div>
         <div class="bibliomixed e192" xml:id="niem" xreflabel="NIEM">
            National Information Exchange Model. [cited 08 May
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e193" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.niem.gov</div>
            
         </div>
         <div class="bibliomixed e194" xml:id="ndr" xreflabel="NDR">Cover
            Pages. 
            <div class="emphasis e195">Naming and Design Rules</div>. [cited 24 Apr
            2009]. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e196" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://xml.coverpages.org/ndr.html</div>
            
         </div>
         <div class="bibliomixed e197" xml:id="nvdl" xreflabel="NVDL">
            ISO/IEC 19757-4. 
            <div class="emphasis e198">Information technology — Document
               Schema Definition Languages (DSDL) — Part 4: Namespace-based
               Validation Dispatching Language (NVDL)
            </div>. First edition
            2006-06-01. [cited 04 Jun
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e199" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.iso.org/PubliclyAvailableStandards</div>
            
         </div>
         <div class="bibliomixed e200" xml:id="rng" xreflabel="RelaxNG">
            ISO/IEC 19757-2. 
            <div class="emphasis e201">Information technology — Document
               Schema Definition Languages (DSDL) — Part 2:
               Regular-grammar-based validation — RELAX NG
            </div>. First edition
            2003-12-01. [cited 09 Jun
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e202" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.iso.org/PubliclyAvailableStandards</div>
            
         </div>
         <div class="bibliomixed e203" xml:id="oagis" xreflabel="OAGIS">
            Open Applications Group Integration Specification (OAGIS) Release
            9.3. [cited 07 May 2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e204" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.oagi.org</div>
            
         </div>
         <div class="bibliomixed e205" xml:id="ODD" xreflabel="Burnard">
            Lou Burnard and Sebastian Rahtz. 
            <div class="emphasis e206">RelaxNG with Son of
               ODD
            </div>. Proceedings of 
            <div class="emphasis e207">Extreme Markup
               Languages 2004
            </div> conference (Montreal, Quebec). August
            2004. [cited 05 Jun
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e208" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://conferences.idealliance.org/extreme</div>
            
         </div>
         <div class="bibliomixed e209" xml:id="reiss" xreflabel="Reiss">Kevin
            Reiss. 
            <div class="emphasis e210">Literate Documentation for XML
               Schema
            </div>. Digital Humanities 2007 poster materials. [cited 24
            Apr 2009]. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e211" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://kreisscas.blogspot.com/2007/06/digital-humanities-materials.html</div>
            
         </div>
         <div class="bibliomixed e212" xml:id="Roma" xreflabel="Roma">
            Roma: generating validators for the TEI. [cited 05 Jun
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e213" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.tei-c.org/Roma</div>
            
         </div>
         <div class="bibliomixed e214" xml:id="s1000d" xreflabel="S1000D">
            AeroSpace and Defence Industries Association of
            Europe. 
            <div class="emphasis e215">S1000D International specification for technical
               publications
            </div>. Issue 4.0. 2008-08-01. [cited 08 May
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e216" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.s1000d.org</div>
            
         </div>
         <div class="bibliomixed e217" xml:id="schematron" xreflabel="Schematron">
            ISO/IEC 19757-3. 
            <div class="emphasis e218">Information technology — Document
               Schema Definition Languages (DSDL) — Part 3: Rule-based
               validation — Schematron
            </div>. First edition
            2006-06-01. [cited 23 Apr
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e219" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.iso.org/PubliclyAvailableStandards</div>
            
         </div>
         <div class="bibliomixed e220" xml:id="tei" xreflabel="TEI">
            Text Encoding Initiative Consortium. 
            <div class="emphasis e221">TEI P5: Guidelines for
               Electronic Text Encoding and Interchange
            </div>. edited by Lou
            Burnard and Syd Bauman. Version 1.3.0. Last updated on February 1,
            2009. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e222" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.tei-c.org</div>
            
         </div>
         <div class="bibliomixed e223" xml:id="ubl" xreflabel="UBL">
            OASIS. 
            <div class="emphasis e224">Universal Business Language 1.0</div>. 15
            September 2004. [cited 07 May
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e225" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://docs.oasis-open.org/ubl/cd-UBL-1.0/</div>
            
         </div>
         <div class="bibliomixed e226" xml:id="xhtml" xreflabel="XHTML">
            World Wide Web Consortium. 
            <div class="emphasis e227">XHTML™ 1.0 The Extensible
               HyperText Markup Language (Second Edition)
            </div>. W3C
            Recommendation 26 January 2000, revised 1 August 2002. [cited 21 May
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e228" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xhtml1/</div>
            
         </div>
         <div class="bibliomixed e229" xml:id="xml" xreflabel="XML">
            World Wide Web Consortium. 
            <div class="emphasis e230">Extensible Markup Language (XML)
               1.0 (Fifth Edition)
            </div>. W3C Recommendation 26 November
            2008. [cited 15 Apr
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e231" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xml/</div>
         </div>
         <div class="bibliomixed e232" xml:id="xpath" xreflabel="XPath">
            World Wide Web Consortium. 
            <div class="emphasis e233">XML Path Language (XPath) Version
               1.0
            </div>. W3C Recommendation 16 November 1999. [cited 23 Apr
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e234" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xpath</div>
         </div>
         <div class="bibliomixed e235" xml:id="xsd" xreflabel="XSchema">
            World Wide Web Consortium. 
            <div class="emphasis e236">XML Schema Part 0: Primer Second
               Edition
            </div>. W3C Recommendation 28 October 2004. [cited 15 Apr
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e237" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xmlschema-0/</div>
         </div>
         <div class="bibliomixed e238" xml:id="xsd11" xreflabel="XSchema1.1">
            World Wide Web Consortium. 
            <div class="emphasis e239">W3C XML Schema Definition
               Language (XSD) 1.1 Part 1: Structures
            </div>. W3C Candidate
            Recommendation 30 April 2009. [cited 11 Jun
            2009]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e240" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/xmlschema11-1/</div>
            
         </div>
      </div>
   </div>
</div>