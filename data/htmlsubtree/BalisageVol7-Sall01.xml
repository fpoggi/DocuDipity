<div id="mainContainerTOC">
   <div id="mainContainerTitleTOC" onclick="$('#mainContainerEntriesTOC').toggle('1000');">Table of Content</div>
   <div id="mainContainerEntriesTOC" style="display:none;">
      <div class="headedContainerTOC">
         <div class="headedContainerTitleTOC"><a href="#DeterminingtheImpactofEricClaptononMusicUsingRDFGraphsANCHOR" name="DeterminingtheImpactofEricClaptononMusicUsingRDFGraphsTOC">Determining the Impact of Eric Clapton on Music Using RDF Graphs</a></div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#IntroductionandPreHistoryANCHOR" name="IntroductionandPreHistoryTOC">Introduction and Pre-History</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ProblemStatementANCHOR" name="ProblemStatementTOC">Problem Statement</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#DataSourcesANCHOR" name="DataSourcesTOC">Data Sources</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#WikipediaandInfoboxesANCHOR" name="WikipediaandInfoboxesTOC">Wikipedia and Infoboxes</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DBpediaANCHOR" name="DBpediaTOC">DBpedia</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MusicBrainzANCHOR" name="MusicBrainzTOC">MusicBrainz</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#FreebaseANCHOR" name="FreebaseTOC">Freebase</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#MethodologyANCHOR" name="MethodologyTOC">Methodology</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DevelopmentEnvironmentANCHOR" name="DevelopmentEnvironmentTOC">Development Environment</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#WorkingDefinitionsofKeyPropertiesANCHOR" name="WorkingDefinitionsofKeyPropertiesTOC">Working Definitions of Key Properties</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#RDFVisualizationCodingANCHOR" name="RDFVisualizationCodingTOC">RDF Visualization Coding</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#InterfaceScreenshotsANCHOR" name="InterfaceScreenshotsTOC">Interface Screenshots</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ChallengesandResultsANCHOR" name="ChallengesandResultsTOC">Challenges and Results</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PropertiesofaMusicalArtistANCHOR" name="PropertiesofaMusicalArtistTOC">Properties of a Musical Artist</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AlongComestheAssociationANCHOR" name="AlongComestheAssociationTOC">Along Comes the Association</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#BridgingtheDataSourcesANCHOR" name="BridgingtheDataSourcesTOC">Bridging the Data Sources</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#YouSayIt'sYourBirthday?ANCHOR" name="YouSayIt'sYourBirthday?TOC">You Say It's Your Birthday?</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#TopRecordLabelsANCHOR" name="TopRecordLabelsTOC">Top Record Labels</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#MusicalGenresANCHOR" name="MusicalGenresTOC">Musical Genres</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#LimitationsandFurtherEffortsANCHOR" name="LimitationsandFurtherEffortsTOC">Limitations and Further Efforts</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DataInconsistenciesANCHOR" name="DataInconsistenciesTOC">Data Inconsistencies</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#FurtherRDFVisualizationWorkANCHOR" name="FurtherRDFVisualizationWorkTOC">Further RDF Visualization Work</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#FurtherAttemptstoAddresstheOriginalProblemsANCHOR" name="FurtherAttemptstoAddresstheOriginalProblemsTOC">Further Attempts to Address the Original Problems</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#QueriesAcrossDatasetsANCHOR" name="QueriesAcrossDatasetsTOC">Queries Across Datasets</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#PuttheLODRightonMeANCHOR" name="PuttheLODRightonMeTOC">Put the LOD Right on Me</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#AdvantagesandDisadvantagesANCHOR" name="AdvantagesandDisadvantagesTOC">Advantages and Disadvantages</a></div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#AdvantagesofOurApproachANCHOR" name="AdvantagesofOurApproachTOC">Advantages of Our Approach</a></div>
            </div>
            <div class="headedContainerTOC">
               <div class="headedContainerTitleTOC"><a href="#DisadvantagesofOurApproachANCHOR" name="DisadvantagesofOurApproachTOC">Disadvantages of Our Approach</a></div>
            </div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#RecommendationsANCHOR" name="RecommendationsTOC">Recommendations</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#ConclusionsANCHOR" name="ConclusionsTOC">Conclusions</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#TripleCountsANCHOR" name="TripleCountsTOC">Triple Counts</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#Drupal618ModulesANCHOR" name="Drupal618ModulesTOC">Drupal 6.18 Modules</a></div>
         </div>
         <div class="headedContainerTOC">
            <div class="headedContainerTitleTOC"><a href="#BibiographyANCHOR" name="BibiographyTOC">Bibiography</a></div>
         </div>
      </div>
   </div>
</div>
<div id="mainContainerTERMS">
   <div id="mainContainerTitleTERMS" onclick="$('#mainContainerEntriesTERMS').toggle('1000')">Index of Terms</div>
   <div id="mainContainerEntriesTERMS" style="display:none;">
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">a</div>
         <div class="singletermTERMS">associatedActs</div>
         <div class="singletermTERMS">Associated_acts</div>
         <div class="singletermTERMS">associatedBand</div>
         <div class="singletermTERMS">associatedMusicalArtist</div>
         <div class="singletermTERMS">arts and culture infobox templates</div>
         <div class="singletermTERMS">answers.semanticweb.com</div>
         <div class="singletermTERMS">activity</div>
         <div class="singletermTERMS">August 2 - 5, 2011</div>
         <div class="singletermTERMS">A.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">b</div>
         <div class="singletermTERMS">beginDate</div>
         <div class="singletermTERMS">Band_MusicGroup</div>
         <div class="singletermTERMS">Backward-chaining reasoning</div>
         <div class="singletermTERMS">Balisage: The Markup Conference 2011</div>
         <div class="singletermTERMS">B.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">c</div>
         <div class="singletermTERMS">categories</div>
         <div class="singletermTERMS">concert's Wikipedia page</div>
         <div class="singletermTERMS">Clapton's Wikipedia page</div>
         <div class="singletermTERMS">Comprehensive Knowledge Archive Network (CKAN)</div>
         <div class="singletermTERMS">Complete Recordings</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">d</div>
         <div class="singletermTERMS">drupal_json</div>
         <div class="singletermTERMS">dc:title</div>
         <div class="singletermTERMS">DEFINE input:same-as "yes"</div>
         <div class="singletermTERMS">discography page</div>
         <div class="singletermTERMS">DBpedia "About: Eric Clapton"</div>
         <div class="singletermTERMS">database overview</div>
         <div class="singletermTERMS">database statistics</div>
         <div class="singletermTERMS">data quality</div>
         <div class="singletermTERMS">dbpedia-owl:musicalArtist</div>
         <div class="singletermTERMS">dbpedia-owl:associatedMusicalArtist</div>
         <div class="singletermTERMS">dbpprop:associatedActs</div>
         <div class="singletermTERMS">dbpedia-owl:associatedBand</div>
         <div class="singletermTERMS">dbpedia-owl:genre</div>
         <div class="singletermTERMS">DOT language</div>
         <div class="singletermTERMS">description of associated_acts</div>
         <div class="singletermTERMS">DBpedia Infobox Mappings</div>
         <div class="singletermTERMS">Demos including DBpedia and MusicBrainz</div>
         <div class="singletermTERMS">DBpedia Extended Datasets</div>
         <div class="singletermTERMS">DBpedia SPARQL endpoint</div>
         <div class="singletermTERMS">DBpedia Amazon Machine Instance (AMI)</div>
         <div class="singletermTERMS">Direct access to raw RDF at command line level -</div>
         <div class="singletermTERMS">DBpedia Assertions</div>
         <div class="singletermTERMS">DBpedia: A Nucleus for a Web of Open Data.</div>
         <div class="singletermTERMS">Drupal 7 Module Development.</div>
         <div class="singletermTERMS">DBpedia 3.6 released</div>
         <div class="singletermTERMS">Drupal</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">e</div>
         <div class="singletermTERMS">Eric Clapton MusicBrainz page</div>
         <div class="singletermTERMS">Eric Clapton's main Freebase page</div>
         <div class="singletermTERMS">Encyclopedia of Rock</div>
         <div class="singletermTERMS">Errors of omission:</div>
         <div class="singletermTERMS">Erroneous data:</div>
         <div class="singletermTERMS">Examination of error messages -</div>
         <div class="singletermTERMS">Eric Clapton's Wikipedia page</div>
         <div class="singletermTERMS">Eric Clapton Frequently Asked Questions</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">f</div>
         <div class="singletermTERMS">FILTER</div>
         <div class="singletermTERMS">full list of predicates relating to MusicalArtist</div>
         <div class="singletermTERMS">From the Cradle</div>
         <div class="singletermTERMS">Frequently Observed Problems on the Web of Data</div>
         <div class="singletermTERMS">Freddie King, Phil Collins</div>
         <div class="singletermTERMS">Freebase home page</div>
         <div class="singletermTERMS">Freebase Data Dumps</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">g</div>
         <div class="singletermTERMS">GRAPH GROUPs</div>
         <div class="singletermTERMS">GRAPH GROUP</div>
         <div class="singletermTERMS">George Harrison</div>
         <div class="singletermTERMS">Graphviz home page</div>
         <div class="singletermTERMS">Graphviz</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">h</div>
         <div class="singletermTERMS">https://www.recordresearch.com</div>
         <div class="singletermTERMS">Human Web</div>
         <div class="singletermTERMS">Higher limits -</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">i</div>
         <div class="singletermTERMS">INSERT</div>
         <div class="singletermTERMS">infobox</div>
         <div class="singletermTERMS">impact</div>
         <div class="singletermTERMS">infobox</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">j</div>
         <div class="singletermTERMS">Joel Whitburn's Billboard books</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">k</div>
         <div class="singletermTERMS">kensall@gmail.com</div>
         <div class="singletermTERMS">Kenneth</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">l</div>
         <div class="singletermTERMS">Linking Open Data</div>
         <div class="singletermTERMS">LOD cloud diagram</div>
         <div class="singletermTERMS">Limited knowledge of inner workings -</div>
         <div class="singletermTERMS">LOD</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">m</div>
         <div class="singletermTERMS">musicalguests</div>
         <div class="singletermTERMS">MINUS</div>
         <div class="singletermTERMS">main page</div>
         <div class="singletermTERMS">music infobox templates</div>
         <div class="singletermTERMS">MusicBrainz documentation</div>
         <div class="singletermTERMS">Music Ontology</div>
         <div class="singletermTERMS">MusicArtist</div>
         <div class="singletermTERMS">musicbrainz_guid</div>
         <div class="singletermTERMS">Members of Blind Faith - from Freebase</div>
         <div class="singletermTERMS">More precise SPARQL timing metrics -</div>
         <div class="singletermTERMS">Musicbrainz Triples Count</div>
         <div class="singletermTERMS">Metaweb Query Language</div>
         <div class="singletermTERMS">MusicBrainz home page</div>
         <div class="singletermTERMS">music</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">n</div>
         <div class="singletermTERMS">NAMED GRAPH</div>
         <div class="singletermTERMS">NAMED GRAPHs</div>
         <div class="singletermTERMS">NOT EXISTS</div>
         <div class="singletermTERMS">No execution timeout -</div>
         <div class="singletermTERMS">Networks - An Introduction.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">o</div>
         <div class="singletermTERMS">owl:sameAs</div>
         <div class="singletermTERMS">open world assumption</div>
         <div class="singletermTERMS">owl:sameAs</div>
         <div class="singletermTERMS">Open Knowledge Foundation</div>
         <div class="singletermTERMS">Open World Assumption</div>
         <div class="singletermTERMS">one thousand</div>
         <div class="singletermTERMS">OpenCyc for the Semantic Web</div>
         <div class="singletermTERMS">OpenLink Virtuoso Universal Server</div>
         <div class="singletermTERMS">OWL</div>
         <div class="singletermTERMS">ontology</div>
         <div class="singletermTERMS">Open Data</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">p</div>
         <div class="singletermTERMS">POST</div>
         <div class="singletermTERMS">Poor data curation:</div>
         <div class="singletermTERMS">Publish example SPARQL queries:</div>
         <div class="singletermTERMS">Peter Frame's Rock Family Trees</div>
         <div class="singletermTERMS">Pro Drupal Development.</div>
         <div class="singletermTERMS">Principal</div>
         <div class="singletermTERMS">Principal Systems Engineer/XML Data Analyst</div>
         <div class="singletermTERMS">P.</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">q</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">r</div>
         <div class="singletermTERMS">resource</div>
         <div class="singletermTERMS">rdf-schema#label</div>
         <div class="singletermTERMS">rdfs:subProperties</div>
         <div class="singletermTERMS">rdfs:subClassOf</div>
         <div class="singletermTERMS">rule_set</div>
         <div class="singletermTERMS">regex</div>
         <div class="singletermTERMS">RRecktek LLC</div>
         <div class="singletermTERMS">RDF link on the Eric Clapton page</div>
         <div class="singletermTERMS">Rolling Stone's</div>
         <div class="singletermTERMS">Ringo Starr's Wikipedia page</div>
         <div class="singletermTERMS">Ringo Starr &amp; His All-Starr Band Wikipedia page</div>
         <div class="singletermTERMS">Ron Reck's demo site</div>
         <div class="singletermTERMS">rreck@rrecktek.com</div>
         <div class="singletermTERMS">Ronald</div>
         <div class="singletermTERMS">RDF</div>
         <div class="singletermTERMS">Reck</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">s</div>
         <div class="singletermTERMS">SimpleXMLElement</div>
         <div class="singletermTERMS">starring</div>
         <div class="singletermTERMS">supporting_musician</div>
         <div class="singletermTERMS">See</div>
         <div class="singletermTERMS">Selected MusicBrainz Statistics</div>
         <div class="singletermTERMS">Static datastore -</div>
         <div class="singletermTERMS">Six Degrees of Kevin Bacon</div>
         <div class="singletermTERMS">SPARQL By Example - A Tutorial</div>
         <div class="singletermTERMS">SPARQL by Example: The Cheat Sheet</div>
         <div class="singletermTERMS">Six Degrees of Separation</div>
         <div class="singletermTERMS">SPARQL Query Language for RDF</div>
         <div class="singletermTERMS">SPARQL</div>
         <div class="singletermTERMS">semantics</div>
         <div class="singletermTERMS">Semantic Web</div>
         <div class="singletermTERMS">SVG</div>
         <div class="singletermTERMS">Sall</div>
         <div class="singletermTERMS">Swanbeck</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">t</div>
         <div class="singletermTERMS">template for the infobox of musicial artists</div>
         <div class="singletermTERMS">terminology page</div>
         <div class="singletermTERMS">The Concert for Bangladesh</div>
         <div class="singletermTERMS">The Pedantic Web</div>
         <div class="singletermTERMS">The Eric Clapton Fan Club Magazine</div>
         <div class="singletermTERMS">The DBpedia Dataset</div>
         <div class="singletermTERMS">The DBpedia Ontology</div>
         <div class="singletermTERMS">The Billboard Albums</div>
         <div class="singletermTERMS">Top Pop Albums</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">u</div>
         <div class="singletermTERMS">UNION</div>
         <div class="singletermTERMS">Unclear semantics:</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">v</div>
         <div class="singletermTERMS">virtuoso.ini</div>
         <div class="singletermTERMS">variants of Clapton's 461 Ocean Boulevard album</div>
         <div class="singletermTERMS">Virtuoso defines</div>
         <div class="singletermTERMS">Virtuoso SPARQL Tutorial, Part 2</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">x</div>
         <div class="singletermTERMS">XML Family of Specifications: A Practical Guide</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">y</div>
      </div>
      <div class="letterContainerTERMS">
         <div class="letterlableTERMS">z</div>
      </div>
   </div>
</div>
<div id="mainContainerIML"><a name="DeterminingtheImpactofEricClaptononMusicUsingRDFGraphsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="article e0" version="5.0-subset Balisage-1.3" xml:id="Bal2011sall0227">
      <div class="title e1">Determining the Impact of Eric Clapton on Music Using RDF Graphs</div>
      <div class="subtitle e2">Selected Challenges of Semantics Across and Within Datasets</div>
      <div class="info e3">
         <div class="confgroup e4">
            <div class="conftitle e5">Balisage: The Markup Conference 2011</div>
            <div class="confdates e6">August 2 - 5, 2011</div>
         </div>
         <div class="abstract e7">
            <div class="para e8">
               As music is a topic of interest to many, it is no surprise that 
               developers have applied web and semantic technology to provide various RDF datasets
               
               for describing relationships among musical artists, albums, 
               songs, genres, and more. As avid fans of blues and rock music, we 
               wondered if we could construct SPARQL queries to examine properties and 
               relationships between performers in order to answer global questions 
               such as "Who has had the greatest impact on rock music?" Our primary 
               focus was Eric Clapton, a musical artist with a decades-spanning career 
               who has enjoyed both a very successful solo career as well as having 
               performed in several world-renowned bands.
               
            </div>
            <div class="para e9">The application of semantic technology to a public 
               dataset can provide useful insights into how similar approaches can be 
               applied to realistic domain problems, such as finding relationships 
               between persons of interest. Clearly understood semantics of available 
               RDF properties in the dataset is of course crucial but is a substantial 
               challenge especially when leveraging information from similar yet 
               different data sources.
            </div>
            <div class="para e10">This paper explores the use of DBpedia and MusicBrainz data sources 
               using OpenLink Virtuoso Universal Server with a Drupal frontend. Much 
               attention is given to the challenges we encountered, especially with 
               respect to relatively large datasets of community-entered open data sources of varying
               quality
               and the strategies we employed or recommend to overcome the challenges.          
               
               
            </div>
         </div>
         <div class="author e11">
            <div class="personname e12">
               <div class="firstname e13">Ronald</div>
               <div class="othername e14">P.</div>
               <div class="surname e15">Reck</div>
            </div>
            <div class="personblurb e16">
               <div class="para e17"> For over a decade Ronald P. Reck has operated the consulting company, 
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e18" xlink:actuate="onRequest" xlink:href="http://www.rrecktek.com/" xlink:show="new" xlink:type="simple">RRecktek LLC</div>, outside of
                  Washington DC metropolitan area. RRecktek LLC has enjoyed over one hundred
                  contracts ranging from the data warehousing of state, local, and federal law
                  enforcement incident reports outside of submarine bases for The Navy Criminal
                  Investigative Service (NCIS) to vocabulary projects for the management and
                  dissemination of controlled vocabularies for the Directorate of National
                  Intelligence (DNI) as a member of the Intelligence Community Metadata Working
                  Group staff and a "simple" content management system for build out drawings for
                  global telecom company. Among the companies served include Nextel, Winstar, ANS
                  +COre, AOL, Standard &amp; Poors, The Federal Communications Commission,
                  Kiplingers Newletter, Radio Free Asia, Eastman Kodak, The United States
                  Information Agency, The Council of Better Business Bureaus, Department of
                  Defense Health Affairs and others. He prides himself on developing scalable,
                  open source architectural strategies for difficult problems. Ron resides with his
                  lovely wife Olga and the best son in the entire world. 
                  
               </div>
            </div>
            <div class="affiliation e19">
               <div class="jobtitle e20">Principal</div>
               <div class="orgname e21">RRecktek LLC.</div>
            </div>
            <div class="email e22">rreck@rrecktek.com</div>
         </div>
         <div class="author e23">
            <div class="personname e24">
               <div class="firstname e25">Kenneth</div>
               <div class="othername e26">B.</div>
               <div class="surname e27">Sall</div>
            </div>
            <div class="personblurb e28">
               <div class="para e29"> Ken Sall has been supporting the US federal government in XML efforts since
                  1998. His customers include NASA, General Services Administration (GSA),
                  Department of Homeland Security (DHS), and the Intelligence Community. Sall has been
                  an active contributor to XML and data standardization efforts including the Federal
                  Enterprise Architecture - Data Reference Model (FEA DRM), the National Information
                  Exchange Model (NIEM), and the Intelligence Community Metadata Standards for
                  Publication (IC MSP), as well as participating in several federal XML and data
                  management working groups. As the author of 
                  
                  <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e30" xlink:actuate="onRequest" xlink:href="http://www.amazon.com/XML-Family-Specifications-Practical-Guide/dp/0201703599/" xlink:show="new" xlink:type="simple">XML Family of Specifications: A
                     Practical Guide
                  </div> (Addison-Wesley, 2002), he basks in the glory of quarterly
                  statements from his publisher that no longer include payments. Music is his
                  passion. XML too. 
                  
               </div>
            </div>
            <div class="affiliation e31">
               <div class="jobtitle e32">Principal Systems Engineer/XML Data Analyst</div>
               <div class="orgname e33">Ken Sall Consulting</div>
            </div>
            <div class="email e34">kensall@gmail.com</div>
         </div>
         <div class="author e35">
            <div class="personname e36">
               <div class="firstname e37">Wendy</div>
               <div class="othername e38">A.</div>
               <div class="surname e39">Swanbeck</div>
            </div>
            <div class="personblurb e40">
               <div class="para e41">
                  Wendy Swanbeck has worked as a software engineer for over 20 years. In the
                  past she has worked on a variety of projects including graphical design
                  programs, mainframe control systems, and CAD design software for commercial and
                  government projects. More recently she has been working at Eastman Kodak Company
                  writing software for networking systems, color management and photo manipulation
                  GUI software. She also donates some of her time creating websites for groups
                  that need it. Her passion is to architect and write clean, flexible and robust
                  software using the right tools for the job.
                  
               </div>
            </div>
            <div class="affiliation e42">
               <div class="jobtitle e43">Principal</div>
               <div class="orgname e44">Wendy Swanbeck</div>
            </div>
            <div class="email e45">Wendy.Swanbeck@verizon.net</div>
         </div>
         <div class="legalnotice e46">
            <div class="para e47">Copyright © 2011 Ronald P. Reck, Kenneth B. Sall, Wendy A. Swanbeck.  All rights reserved.</div>
         </div>
         <div class="keywordset e48" role="author">
            <div class="keyword e49">RDF</div>
            <div class="keyword e50">SPARQL</div>
            <div class="keyword e51">OWL</div>
            <div class="keyword e52">semantics</div>
            <div class="keyword e53">Semantic Web</div>
            <div class="keyword e54">ontology</div>
            <div class="keyword e55">Open Data</div>
            <div class="keyword e56">LOD</div>
            <div class="keyword e57">SVG</div>
            <div class="keyword e58">Graphviz</div>
            <div class="keyword e59">Drupal</div>
            <div class="keyword e60">music</div>
         </div>
      </div>
      <div class="mediaobject e61">
         <div class="imageobject e62">
            <div class="metaBox e63"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e111').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e111" class="metaSource" style="display:none;">                
                  &lt;imagedata<span class="metaAttribute">class='e63'
                     </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-001.png'
                     </span><span class="metaAttribute">format='png'
                     </span><span class="metaAttribute">width='90%'
                     </span>
                  &gt;
                  
               </div>
            </div>
         </div>
      </div><a name="IntroductionandPreHistoryANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e64">
         <div class="title e65">Introduction and Pre-History</div>
         <div class="para e66">A long, long time ago in a galaxy much like our own, one of the authors, Ken Sall,
            was fascinated by the number of musicians who had played with John Mayall. 
            <div class="popupBox e67">
               <div class="popupLabel" onmouseover="$('#d1e117').show('1000');" onmouseout="$('#d1e117').hide('1000');">[ footnote ]</div>
               <div id="d1e117" style="display: none;">
                  <div class="footnote" xml:id="intro01">
                     <div class="para e68">He believes it was circa 1972 in Buffalo, New York. But his recollection
                        of the Seventies is much like his recollection of the Sixties.
                     </div>
                  </div>
               </div>
            </div>          
            Armed only with paper, pencil and lots of record album jackets, he drew a diagram
            
            with Mayall at the center and arcs pointing to musicians who played with him, such
            as
            Eric Clapton, Peter Green, Mick Taylor, etc. Then he drew arcs from these musicians
            to others they
            had played with. Soon he reached the limit of the paper. Since this was prior to the
            
            emergence of the PC, there was no option to scroll or easily copy to a larger drawing
            area. But Ken held onto this labor of trivia for nearly 40 years.
            (
            <div class="emphasis e69" role="ital">See </div>
            <div class="xref e70" linkend="mayall"></div>.)
            Meanwhile, Pete Frame developed far more detailed and visually appealing 
            rock family trees 
            <div class="xref e71" linkend="pframe"></div>, 
            some of which appeared in various publications such as Rolling Stone magazine
            and the 
            <div class="emphasis e72" role="ital">Encyclopedia of Rock</div>. 
            
         </div>
         <div class="para e73">
            Nearly everyone is familiar with the Six Degrees of Kevin Bacon
            trivia game 
            <div class="xref e74" linkend="kbacon"></div>.
            The Bacon number is based on a game where actors were rated on distance they were
            away from the actor
            Kevin Bacon. Actors who appeared in a movie with Kevin Bacon were given a Bacon number
            of 1, and actors
            having only been in movies with actors with a Bacon number of 1 were given a Bacon
            number of 2.
            Each degree of separation lead to increasing the Bacon number by 1.
            The object is to connect any movie star to Mr. Bacon with no more than six hops based
            on 
            two people appearing in either the same movie or commercial.        
            This is a popular special case
            of the more general Six Degrees of Separation 
            <div class="xref e75" linkend="sixDegrees"></div>
            also known as the 
            <div class="quote e76">Human Web</div>. The idea is that any two people on the planet can be
            connected by no more than six hops.
            According to Wikipedia," Mathematicians use an analogous notion of collaboration distance".
            
         </div>
         <div class="figure e77" xml:id="mayall">
            <div class="title e78">John Mayall Connections</div>
            <div class="mediaobject e79">
               <div class="imageobject e80">
                  <div class="metaBox e81"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e144').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e144" class="metaSource" style="display:none;">                
                        &lt;imagedata<span class="metaAttribute">class='e81'
                           </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-002.jpg'
                           </span><span class="metaAttribute">format='jpg'
                           </span><span class="metaAttribute">width='100%'
                           </span>
                        &gt;
                        
                     </div>
                  </div>
               </div>
            </div>
            <div class="caption e82">
               <div class="para e83">Dozens of musicians are within a few degrees of separation from John Mayall (circa
                  1972).
               </div>
            </div>
         </div>
      </div><a name="ProblemStatementANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e84">
         <div class="title e85">Problem Statement</div>
         <div class="para e86"> 
            Using semantic technology, we can certainly improve upon hand copying of data from
            record album jackets. If we can refer to a recording artist with all the associations
            to
            other musicians and to the albums they appeared on together, we can produce more
            complete graphs than what is shown in 
            <div class="xref e87" linkend="mayall"></div>.
            
            As avid fans of blues and rock music, we wondered if we could construct SPARQL queries
            to examine properties and relationships between performers in order to answer global
            questions such as "Who has had the greatest impact on rock music?" Our primary focus
            was
            Eric Clapton, a musical artist with a decades-spanning career who has enjoyed both
            a
            very successful solo career as well as having performed in several world-renowned
            bands.
            Then using Drupal and SVG to visualize the results, we could traverse the musician
            graphs in a straightforward manner. 
            
         </div>
         <div class="para e88">This paper explores the use of DBpedia and MusicBrainz data sources using OpenLink
            Virtuoso Universal Server with a Drupal frontend. Much attention is given to the
            challenges we encountered, especially with respect to community-entered open data
            sources and the strategies we employed to overcome the challenges.
            One such challenge we encountered was that there were several properties by which
            an artist
            could be connected to another and the semantics were not well-defined, as discussed
            later.
            
         </div>
         <div class="para e89">
            We should be able to draw inferences from the data. According to Dean Allemang and
            Jim Hendler:
         </div>
         <div class="popupBox e90">
            <div class="popupLabel" onmouseover="$('#d1e161').show('1000');" onmouseout="$('#d1e161').hide('1000');">[ blockquote ]</div>
            <div id="d1e161" style="display: none;">
               <div class="blockquote">
                  <div class="para e91">In the context of the Semantic Web, inferencing simply means that given some stated
                     information,
                     we can determine other related information that we can also consider as if it had
                     been stated.              
                     
                  </div>
                  <div class="attribution e92">
                     <div class="xref e93" linkend="SemWebBook"></div>
                  </div>
               </div>
            </div>
         </div>
         <div class="para e94">For example, ultimately we plan to use RDF and SPARQL to address questions such as
            these:
            
            <div class="orderedlist e95" xml:id="problemList" xreflabel="Problems">
               <div class="listitem e96">
                  <div class="para e97">Which recording artist has directly played with the most musicians?</div>
               </div>
               <div class="listitem e98">
                  <div class="para e99">Which recording artist has the most connections within six degrees?</div>
               </div>
               <div class="listitem e100">
                  <div class="para e101">Which musician has been a session man for the most number of artists?</div>
               </div>
               <div class="listitem e102">
                  <div class="para e103">Which recording artist was most active during a particular decade?</div>
               </div>
               <div class="listitem e104">
                  <div class="para e105">Among all artists of a particular genre, who has played with the most other musicians?</div>
               </div>
               <div class="listitem e106">
                  <div class="para e107">Which rock artist's extended graph has the most other artists in 2 degrees? 3 degrees?
                     4 degrees?
                  </div>
               </div>
               <div class="listitem e108">
                  <div class="para e109">Who has appeared on the most albums?</div>
               </div>
               <div class="listitem e110">
                  <div class="para e111">If we weight results by the length of time a band stays together, how does that impact
                     other queries?
                  </div>
               </div>
               <div class="listitem e112">
                  <div class="para e113">Can we distinguish between legitimate releases and unofficial releases?</div>
               </div>
               <div class="listitem e114">
                  <div class="para e115">What additional inferences can be made when multiple graphs are queried?</div>
               </div>
               <div class="listitem e116">
                  <div class="para e117">Can results be corroborated by comparing results to ground truths (i.e. documented
                     in 
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e118" xlink:actuate="onRequest" xlink:href="http://recordresearch.com/" xlink:show="new" xlink:type="simple">Joel Whitburn's Billboard books</div>)?
                  </div>
               </div>
               <div class="listitem e119">
                  <div class="para e120">Which musician-related properties are reversible (inverse makes sense)?</div>
               </div>
               <div class="listitem e121">
                  <div class="para e122">How can we differentiate between a musician's playing in a band, being associated
                     with other musicians, 
                     starring together in a live show, and others collaborating with the musician?
                  </div>
               </div>
               <div class="listitem e123">
                  <div class="para e124">Does total number of songs or album released correlate with other measures of success?</div>
               </div>
               <div class="listitem e125">
                  <div class="para e126">Who created the most songs?</div>
               </div>
               <div class="listitem e127">
                  <div class="para e128">Which song has been recorded the most times by any artists? 
                     ("Yesterday" and "White Christmas" are typically cited.)
                  </div>
               </div>
               <div class="listitem e129">
                  <div class="para e130">Is there a predominant record label in the music world?</div>
               </div>
               <div class="listitem e131">
                  <div class="para e132">Which solo artist has had the longest career?</div>
               </div>
               <div class="listitem e133">
                  <div class="para e134">Which band has been together (in some form) the longest time?</div>
               </div>
               <div class="listitem e135">
                  <div class="para e136">What is the average age of a musician when he/she first joined a band?</div>
               </div>
               <div class="listitem e137">
                  <div class="para e138">For bands with changing membership, can we conclude which configuration lasted the
                     longest?
                  </div>
               </div>
               <div class="listitem e139">
                  <div class="para e140">What is the "Eric Clapton number" (a la Kevin Bacon number) for various musicians?</div>
               </div>
               <div class="listitem e141">
                  <div class="para e142">Can we use our own knowledge of Eric Clapton to clarify some of the semantics behind
                     some of the RDF data we encounter?
                  </div>
               </div>
            </div>                
            
         </div>
         <div class="para e143">
            Our notion of a musical artist's activity and impact can be explained in general terms.
            We consider
            
            <div class="emphasis e144" role="ital">activity</div> to be correlated with the number of recordings produced. 
            Another factor that we chose not to consider is an artist's concert performances 
            unless they resulted in a commercially available recording.
            An artist's 
            <div class="emphasis e145" role="ital">impact</div> is more subjective. The greater the number of
            musicians that play with a performer (the greater the number of associations), the
            greater the
            potential impact of the performer, provided that the performer is not simply a session
            man. 
            Another measure that would have proved extremely helpful in determining both
            activity and impact in a more quantitative manner would be the use of Billboard chart
            data.
            Unfortunately, use of Billboard data is not royalty free.
            <div class="popupBox e146">
               <div class="popupLabel" onmouseover="$('#d1e252').show('1000');" onmouseout="$('#d1e252').hide('1000');">[ footnote ]</div>
               <div id="d1e252" style="display: none;">
                  <div class="footnote">
                     <div class="para e147">
                        According to 
                        <div class="xref e148" linkend="billboardAlbums"></div>, 
                        Clapton released 41 albums (including reissues) from 1970 to 2005. (He has released
                        three more as of July 2011.) 
                        This includes eleven Top 10 albums
                        and three number 1 albums. Whitburn devised a formula for ranking artists by their
                        chart success,
                        with rankings per decade and overall. According to Whitburn's calculations as of 2006,
                        
                        Clapton ranked #10 in the 1990's and ranked #12 all-time; he ranks #21 in most charted
                        albums.
                        
                     </div>
                  </div>
               </div>
            </div>
            
         </div>
         <div class="para e149">
            Furthermore, our working definitions  of activity and impact is primarily based on
            commercial recordings of an artist.
            We acknowledge that some artists tend to perform numerous live concerts and yet have
            produced
            relatively few commerical recordings; many of these concerts may be available on bootleg
            recordings.
            The argument could easily be made that the number of concerts and/or number of bootleg
            recordings
            are correlated with activity and/or impact. We have chosen not to consider these factors
            at this time.
            
         </div>
      </div><a name="DataSourcesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e150" xml:id="dataSources" xreflabel="Data Sources">
         <div class="title e151">Data Sources</div>
         <div class="para e152">Fortunately in 2011, there is a tremendous wealth of information about musicians freely
            available on the Web either in structured markup, especially triples, that lends itself
            to
            SPARQL queries. For example, Wikipedia tells us that Eric Clapton 
            <div class="xref e153" linkend="eclapton"></div> is associated with:
            Dire Straits, The Yardbirds, John Mayall &amp; the Bluesbreakers, Powerhouse, Cream, Free
            Creek, 
            The Dirty Mac, Blind Faith, J.J. Cale, The Plastic Ono Band, Delaney, Bonnie &amp; Friends,
            Derek and the Dominos, and T.D.F.
            By comparison, Ringo Starr 
            <div class="xref e154" linkend="rstarr"></div> is associated with The Beatles, Rory Storm and the Hurricanes, 
            Ringo Starr &amp; His All-Starr Band, and Plastic Ono Band. On the surface, Ringo's direct
            associations are fewer,
            but actually Ringo Starr &amp; His All-Starr Band has had 11 different lineups (to date)
            with a total of 42 unique musicians, most of whom have a number of associations as
            well. 
            <div class="xref e155" linkend="allStarBand"></div>
            
         </div>
         <div class="para e156">The various data sources we leveraged are discussed in the following subsections.</div><a name="WikipediaandInfoboxesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e157" xml:id="wikipediaSection" xreflabel="Wikipedia Section">
            <div class="title e158">Wikipedia and Infoboxes</div>
            <div class="para e159">
               The primary (although indirect) source for our RDF data was Wikipedia which
               is a major source of detailed information about musicians, among many other things.
               To understand both
               the kinds of properties available and their open community origins, some details about
               Wikipedia are in order.
               
            </div>
            <div class="para e160">
               As illustrated by the excerpt from 
               <div class="xref e161" linkend="claptonWikipedia"></div> below, 
               the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e162" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Eric_Clapton" xlink:show="new" xlink:type="simple">main page</div> for a musical artist
               contains an abstract at the top, a contents navigation box below the abstract with
               a variable number
               of section links pointing to the main content of the page, 
               and a so-called 
               <div class="emphasis e163" role="ital">infobox</div> in the upper right.
               In addition to a main page,
               most musical artists with more than a handful of albums or singles have a separate
               
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e164" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Eric_Clapton_discography" xlink:show="new" xlink:type="simple">discography page</div> with
               varying amount of detail and organization regarding studio albums, live albums, compilations,
               singles, etc.
               The discography is linked to the musician's main page and vice versa.
               
            </div>
            <div class="figure e165" xml:id="claptonWikipedia" xreflabel="Clapton's Wikipedia page">
               <div class="title e166">Eric Clapton's Wikipedia Page (excerpt with Infobox on right)</div>
               <div class="mediaobject e167">
                  <div class="imageobject e168">
                     <div class="metaBox e169"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e296').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e296" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e169'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-003.png'
                              </span><span class="metaAttribute">format='png'
                              </span><span class="metaAttribute">width='100%'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
               <div class="caption e170">
                  <div class="para e171">Wikipedia. "Eric Clapton -- Wikipedia, The Free Encyclopedia". 2011.</div>
               </div>
            </div>
            <div class="para e172"> An 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e173" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Help:Infobox" xlink:show="new" xlink:type="simple">infobox</div> is
               a fixed-format table designed to be added to the top right-hand corner of Wikipedia
               articles to consistently and concisely present a summary of some common aspects that
               the articles of the same category (i.e., musical artist) share, as well as to
               improve navigation to other interrelated articles (i.e., music genres). Infoboxes
               are an instance of MediaWiki's template feature; there are numerous infobox
               templates arranged by broad 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e174" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Category:Infobox_templates" xlink:show="new" xlink:type="simple">categories</div> such as 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e175" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Category:Arts_and_culture_infobox_templates" xlink:show="new" xlink:type="simple">arts and culture infobox templates</div>, which is further divided into 10
               subcategories including templates for film, fictional characters, and music. There
               are over 50 templates in the subcategory 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e176" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Category:Music_infobox_templates" xlink:show="new" xlink:type="simple">music
                  infobox templates
               </div> of which the most relevant to our work is the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e177" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Template:Infobox_musical_artist" xlink:show="new" xlink:type="simple">template for the infobox of musicial artists</div>. (See the right side of
               
               <div class="xref e178" linkend="infoboxTable"></div> below.) This infobox template is used by
               Wikipedia authors to create infoboxes such as Clapton's, shown in the left side of
               the table. The
               correspondence between the template and the resultant infobox is apparent when
               viewed side by side. Most of the properties that we used in our queries (e.g., name,
               genres, associated acts, etc.) are based on the contents of the infobox, with the
               notable exception of albums (from the discography page).
               
            </div>
            <div class="table e179" cellspacing="50" xml:id="infoboxTable" xreflabel="Table 1">
               <div class="caption e180">
                  <div class="para e181">Clapton's Infobox (left) and Generic Musical Artist Infobox Template (right) [cited
                     03 Apr 2011]
                  </div>
               </div>
               <div class="tbody e182" align="center">
                  <div class="tr e183" align="center">
                     <div class="td e184">
                        
                        <div class="inlinemediaobject e185">
                           <div class="imageobject e186">
                              <div class="metaBox e187"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e330').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e330" class="metaSource" style="display:none;">                
                                    &lt;imagedata<span class="metaAttribute">class='e187'
                                       </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-004.png'
                                       </span>
                                    &gt;
                                    
                                 </div>
                              </div>
                           </div>
                        </div>                          
                        
                     </div>
                     <div class="td e188">
                        
                        <div class="inlinemediaobject e189">
                           <div class="imageobject e190">
                              <div class="metaBox e191"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e336').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e336" class="metaSource" style="display:none;">                
                                    &lt;imagedata<span class="metaAttribute">class='e191'
                                       </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-005.png'
                                       </span>
                                    &gt;
                                    
                                 </div>
                              </div>
                           </div>
                        </div>                           
                        
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e192">
               The wiki source markup of the infobox is shown in 
               <div class="xref e193" linkend="infoboxMarkup"></div>. For a much more complete
               explanation of the Wikipedia extraction process employed by DBpedia including a discussion
               of 
               the design and development of infobox templates,
               see 
               <div class="xref e194" linkend="Auer1"></div> and 
               <div class="xref e195" linkend="Auer2"></div>.
               
               <div class="figure e196" xml:id="infoboxMarkup" xreflabel="Figure 3">
                  <div class="title e197">Wiki Source Markup for Clapton Infobox</div>
                  <div class="mediaobject e198">
                     <div class="imageobject e199">
                        <div class="metaBox e200"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e351').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e351" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e200'
                                 </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-006.png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
                  <div class="caption e201">
                     <div class="para e202">Compare markup to rendering shown in Table 1.</div>
                  </div>
               </div>
               
            </div>
         </div><a name="DBpediaANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e203" xml:id="dbpediaSection" xreflabel="DBpedia Section">
            <div class="title e204">DBpedia</div>
            <div class="para e205">
               One of the two primary dataset we used was DBpedia 3.6 en (English) based on Wikipedia
               dumps from October/November 2010.
               DBpedia 
               <div class="xref e206" linkend="dbp01"></div> is a community effort to provide sophisticated query access to the structured content
               of
               Wikipedia, thereby allowing a small group of researchers and developers to enhance
               Wikipedia by linking to additional datasets.
               The DBpedia 3.6 release announcement
               describes the content in detail:            
               
               <div class="popupBox e207">
                  <div class="popupLabel" onmouseover="$('#d1e363').show('1000');" onmouseout="$('#d1e363').hide('1000');">[ blockquote ]</div>
                  <div id="d1e363" style="display: none;">
                     <div class="blockquote">
                        <div class="para e208">
                           "The new DBpedia dataset 
                           <div class="xref e209" linkend="dbp02"></div> describes more than 3.5 million things, of which
                           1.67 million are classified in a consistent ontology, including 364,000
                           persons, 462,000 places, 99,000 music albums, 54,000 films, 16,500 video
                           games, 148,000 organizations, 148,000 species and 5,200 diseases.
                           
                           The DBpedia dataset features labels and abstracts for 3.5 million things in
                           up to 97 different languages; 1,850,000 links to images and 5,900,000 links
                           to external web pages; 6,500,000 external links into other RDF datasets, and
                           632,000 Wikipedia categories.
                           
                           The dataset consists of 672 million pieces of information (RDF triples) out
                           of which 286 million were extracted from the English edition of Wikipedia
                           and 386 million were extracted from other language editions and links to
                           external datasets."
                           
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e210">  The DBpedia Ontology 
               <div class="xref e211" linkend="dbp03"></div> is a cross-domain ontology 
               created from the most commonly used infoboxes within Wikipedia. 
               The ontology currently covers over 272 classes with 1,300 different properties and
               1.667 million resources,
               364,000 of which are Persons.  
               DBpedia predicate IRIs 
               <div class="popupBox e212">
                  <div class="popupLabel" onmouseover="$('#d1e373').show('1000');" onmouseout="$('#d1e373').hide('1000');">[ footnote ]</div>
                  <div id="d1e373" style="display: none;">
                     <div class="footnote">
                        <div class="para e213">IRI is Internationalized Resource Identifier, a generalization of the Uniform Resource
                           Identifier (IRI) 
                           enabling the use of Unicode. In this paper, we refer to IRI rather than URI since
                           SPARQL
                           technically permits IRIs.
                        </div>
                     </div>
                  </div>
               </div> begin with either 
               <div class="code e214">http://dbpedia.org/ontology</div> or 
               
               <div class="code e215">http://dbpedia.org/property</div>; entitites are designated 
               by 
               <div class="code e216">http://dbpedia.org/resource</div>.
               
            </div>
            <div class="para e217">
               We initially used a simple SPARQL query 
               <div class="xref e218" linkend="sparql01"></div> to determine what properties are relevant to a musician
               as shown in the following two listings. Some musicians had less than the 23 properties
               shown;
               others had more. Note that the 
               <div class="code e219">resource</div> IRI designating the musician is a straightforward rendering of
               the artist's name in English with underscores replacing spaces: 
               
               <div class="code e220">http://dbpedia.org/resource/Eric_Clapton</div>.
               
               <div class="figure e221">
                  <div class="title e222">Display Properties Defined for Eric Clapton (as object)</div>
                  <div class="programlisting e223" xml:space="preserve">
                     
                     SELECT DISTINCT (?predicate) WHERE {
                     ?s ?predicate &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.
                     } ORDER BY ?predicate         
                     
                     
                  </div>
               </div>             
               
               <div class="figure e224" xml:id="ClaptonPropertiesV1" xreflabel="Clapton's DBpedia Properties - Version 1">
                  <div class="title e225">Clapton's DBpedia Properties - Version 1 (23 Predicates)</div>
                  <div class="programlisting e226" xml:space="preserve">
                     http://dbpedia.org/ontology/artist
                     http://dbpedia.org/ontology/associatedBand
                     http://dbpedia.org/ontology/associatedMusicalArtist
                     http://dbpedia.org/ontology/composer
                     http://dbpedia.org/ontology/musicComposer
                     http://dbpedia.org/ontology/musicalArtist
                     http://dbpedia.org/ontology/musicalBand
                     http://dbpedia.org/ontology/partner
                     http://dbpedia.org/ontology/producer
                     http://dbpedia.org/ontology/spouse
                     http://dbpedia.org/ontology/starring
                     http://dbpedia.org/ontology/wikiPageDisambiguates
                     http://dbpedia.org/ontology/writer
                     http://dbpedia.org/property/associatedActs
                     http://dbpedia.org/property/before
                     http://dbpedia.org/property/currentMembers
                     http://dbpedia.org/property/music
                     http://dbpedia.org/property/pastMembers
                     http://dbpedia.org/property/producer
                     http://dbpedia.org/property/spouse
                     http://dbpedia.org/property/starring
                     http://dbpedia.org/property/writer
                     http://www.w3.org/2002/07/owl#sameAs
                     
                  </div>
               </div>
               In a later section, we discuss alternative property-related queries with different
               results.
               
            </div>
            <div class="para e227">Wikipedia-like categories can also be specified in queries. The following query returns
               the short list of musical artists who have three distinctions: Grammy Award winners,
               Rock and Roll Hall of Fame inductees, and
               MTV Video Music Awards winners.
               
            </div>
            <div class="programlisting e228" xml:space="preserve">
               
               SELECT  ?allAwards
               { 
               ?allAwards &lt;http://purl.org/dc/terms/subject&gt; 
               &lt;http://dbpedia.org/resource/Category:Grammy_Award_winners&gt;.
               ?allAwards &lt;http://purl.org/dc/terms/subject&gt; 
               &lt;http://dbpedia.org/resource/Category:Rock_and_Roll_Hall_of_Fame_inductees&gt;.
               ?allAwards &lt;http://purl.org/dc/terms/subject&gt; 
               &lt;http://dbpedia.org/resource/Category:MTV_Video_Music_Awards_winners&gt;
               } ORDER BY ?allAwards                
               
               
            </div>
            <div class="para e229">The thrice-honored, distinguished musical artists are:
               
               <div class="popupBox e230">
                  <div class="popupLabel" onmouseover="$('#d1e414').show('1000');" onmouseout="$('#d1e414').hide('1000');">[ footnote ]</div>
                  <div id="d1e414" style="display: none;">
                     <div class="footnote">
                        <div class="para e231">If we add one more clause to the query asking also for 
                           
                           <div class="code e232">http://dbpedia.org/resource/Category:English_rock_guitarists</div>, 
                           then Eric Clapton is the only result.
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="programlisting e233" xml:space="preserve">
               
               http://dbpedia.org/resource/Aerosmith
               http://dbpedia.org/resource/Bruce_Springsteen
               http://dbpedia.org/resource/Elton_John
               http://dbpedia.org/resource/Eric_Clapton
               http://dbpedia.org/resource/Johnny_Cash
               http://dbpedia.org/resource/Madonna_%28entertainer%29
               http://dbpedia.org/resource/Metallica
               http://dbpedia.org/resource/Michael_Jackson
               http://dbpedia.org/resource/R.E.M.
               http://dbpedia.org/resource/The_Beatles
               http://dbpedia.org/resource/The_Rolling_Stones
               http://dbpedia.org/resource/U2
               http://dbpedia.org/resource/Van_Halen                
               
               
            </div>
            <div class="para e234">
               The 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e235" xlink:actuate="onRequest" xlink:href="http://mappings.dbpedia.org/server/ontology/classes/MusicalArtist" xlink:show="new" xlink:type="simple">full list of predicates relating to MusicalArtist</div> 
               is quite large. The figure below is a partial view of the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e236" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/page/Eric_Clapton" xlink:show="new" xlink:type="simple">DBpedia "About: Eric Clapton"</div> page.
               The IRI 
               <div class="code e237">http://dbpedia.org/resource/Eric_Clapton</div> forwards to this page.
               
               <div class="figure e238">
                  <div class="title e239">Dereferencing the Eric Clapton DBpedia IRI (excerpt)</div>
                  <div class="mediaobject e240">
                     <div class="imageobject e241">
                        <div class="metaBox e242"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e439').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e439" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e242'
                                 </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-007.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='100%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                     <div class="imageobject e243">
                        <div class="metaBox e244"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e441').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e441" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e244'
                                 </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-008.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='100%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
               </div>            
               
            </div>
         </div><a name="MusicBrainzANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e245" xml:id="musicbrainzSection" xreflabel="MusicBrainz Section">
            <div class="title e246">MusicBrainz</div>
            <div class="para e247">MusicBrainz 
               <div class="xref e248" linkend="musicBrainz"></div> is another comprehensive public database for musician information; it
               contains detailed data about artists, release groups, releases, tracks, record labels
               and many relationships between them.
               As described in the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e249" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/doc/MusicBrainz_Database#Data_Overview" xlink:show="new" xlink:type="simple">database overview</div>,
               MusicBrainz defines artist attributes including the artist's name, aliases, GUID,
               annotation, type (individual or group), and
               begin and end dates (birth/death of an individual or formation/disbanding for a group).
               A release group is a logical grouping
               of variant releases (deluxe/limited editions, reissues/remasters, international variations,
               box sets, etc.). One example is
               the release group describing several 
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e250" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/release-group/ced848a4-b94b-3f34-b08b-6dc8bf8aed8f.html" xlink:show="new" xlink:type="simple">variants of Clapton's 461 Ocean Boulevard album</div>.
               Each release group is identified by type (album, single, EP, compilation, soundtrack,
               live, etc.), as well as by artist, title, and ID.
               An individual release has the same properties as a release group as well as status
               (official, bootleg, etc.), Amazon ASIN,
               annotation, language, release event (date, country, format, label, etc.) and more.
               Each track has properties such as
               duration (in milliseconds) and PUID (the MusicIP acoustic fingerprint identifier for
               the track) as well as artist, title, and ID.
               Record labels are also described with a number of detailed attributes. 
               
            </div>
            <div class="para e251">
               Every MusicBrainz ID (MBID) is a permanent GUID. There is a direct relationship between
               an artist's MBID, a IRI that
               identifies the artist, and a web page that collects information about the artist.
               For example:
               
               <div class="itemizedlist e252">
                  <div class="listitem e253">
                     <div class="para e254">Eric Clapton's MBID is 618b6900-0618-4f1e-b835-bccb17f84294</div>
                  </div>
                  <div class="listitem e255">
                     <div class="para e256">Eric Clapton's IRI is 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e257" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://musicbrainz.org/mm-2.1/artist/618b6900-0618-4f1e-b835-bccb17f84294</div> (points to basic RDF metadata)
                     </div>
                  </div>
                  <div class="listitem e258">
                     <div class="para e259">His MusicBrainz page is 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e260" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://musicbrainz.org/artist/618b6900-0618-4f1e-b835-bccb17f84294.html</div>
                     </div>
                  </div>
               </div>            
               
            </div>
            <div class="para e261"> Below is a screenshot of the
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e262" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/artist/618b6900-0618-4f1e-b835-bccb17f84294.html" xlink:show="new" xlink:type="simple">Eric Clapton MusicBrainz page</div>.
               MusicBrainz offers a tremendous amount of detail about releases as exemplified by
               the page for Clapton's classic
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e263" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/show/release/relationships.html?releaseid=3923" xlink:show="new" xlink:type="simple">From the Cradle</div> blues album.
               
               <div class="figure e264">
                  <div class="title e265">Eric Clapton's MusicBrainz Main Page</div>
                  <div class="mediaobject e266">
                     <div class="imageobject e267">
                        <div class="metaBox e268"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e488').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e488" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e268'
                                 </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-009.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='100%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
               </div>                     
               
            </div>
            <div class="para e269">
               MusicBrainz also provides a 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e270" xlink:actuate="onRequest" xlink:href="http://wiki.musicbrainz.org/XML_Web_Service" xlink:show="new" xlink:type="simple">web service interface</div> to its extensive database.
               Requests may be English-like such as 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e271" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://musicbrainz.org/ws/1/artist/?type=xml&amp;name=Eric+Clapton</div> or
               may contain MBIDs such as 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e272" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://musicbrainz.org/mm-2.1/album/1301e027-b038-4017-9b4c-7655bff78f6b</div> for the 
               "461 Ocean Boulevard" album, shown below. (Release dates of 1974 and three from 1996
               are collapsed 
               in the screenshot.)
               
               <div class="figure e273">
                  <div class="title e274"> Web Service Result - Query for 461 Ocean Boulevard</div>
                  <div class="mediaobject e275">
                     <div class="imageobject e276">
                        <div class="metaBox e277"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e506').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e506" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e277'
                                 </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-010.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
               </div>   
               
            </div>
            <div class="para e278">
               MusicBrainz maintains numerous 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e279" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/statistics" xlink:show="new" xlink:type="simple">database statistics</div>,
               a small sampling of which appear below. It is interesting to note that in the three
               months since the draft version
               of this paper, although the number of Recordings increased by approximately 37,000,
               the Artist count dropped by roughly 8,000.  This seems to suggest the dynamic nature
               of the data both in terms
               of quantity and in how recordings are categorized. (For example, artists may have
               appeared under variant name 
               spellings.) We could not find a definition for the new term 
               <div class="emphasis e280" role="ital">Works</div> in the
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e281" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/doc/MusicBrainz_Terminology" xlink:show="new" xlink:type="simple">terminology page</div> or other
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e282" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/doc/MusicBrainz_Documentation" xlink:show="new" xlink:type="simple">MusicBrainz documentation</div>.
               
            </div>
            <div class="table e283" frame="border">
               <div class="caption e284">
                  <div class="para e285">
                     <div class="emphasis e286" role="bold">Selected MusicBrainz Statistics</div> [accessed 10 April 2011; updated 26 June 2011]
                  </div>
               </div>
               <div class="tbody e287">
                  <div class="tr e288">
                     <div class="td e289">Artists</div>
                     <div class="td e290">612,428</div>
                  </div>
                  <div class="tr e291">
                     <div class="td e292">Release Groups</div>
                     <div class="td e293">787,918</div>
                  </div>
                  <div class="tr e294">
                     <div class="td e295">Releases</div>
                     <div class="td e296">952,743</div>
                  </div>
                  <div class="tr e297">
                     <div class="td e298">Disc IDs</div>
                     <div class="td e299">460,876</div>
                  </div>
                  <div class="tr e300">
                     <div class="td e301">Recordings [tracks]</div>
                     <div class="td e302">10,307,311</div>
                  </div>
                  <div class="tr e303">
                     <div class="td e304">Labels</div>
                     <div class="td e305">52,156</div>
                  </div>
                  <div class="tr e306">
                     <div class="td e307">Works</div>
                     <div class="td e308">276,864</div>
                  </div>
                  <div class="tr e309">
                     <div class="td e310">Relationships [links]</div>
                     <div class="td e311">3,160,096</div>
                  </div>
               </div>
            </div>
            <div class="para e312">
               The MusicBrainz 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e313" xlink:actuate="onRequest" xlink:href="http://musicbrainz.org/doc/Data_Quality" xlink:show="new" xlink:type="simple"> data quality</div> page
               states that one of the goals is "Establish a method to determine the quality of an
               artist and the releases that belong to that artist. 
               This provides consumers of MusicBrainz a clue about the relative quality rating of
               the data in the database."
               The page explains the connection between the quality number, voting periods, and strictness
               regarding edits.
               
            </div>
            <div class="popupBox e314">
               <div class="popupLabel" onmouseover="$('#d1e574').show('1000');" onmouseout="$('#d1e574').hide('1000');">[ blockquote ]</div>
               <div id="d1e574" style="display: none;">
                  <div class="blockquote">
                     <div class="para e315">To accomplish these goals, this feature will allow editors to indicate the quality
                        for a given artist. 
                        An artist can be of unknown, low, medium or high data quality. The data quality indicator
                        determines what 
                        level of effort is required to change the artist information or to add/remove albums
                        from an artist. 
                        An artist with unknown or medium quality will roughly require the amount of effort
                        that MusicBrainz currently 
                        requires to edit the database. An artist with low data quality will make it easier
                        to add/remove albums or
                        to change the artist information (name, sortname, aliases). And an artist with high
                        data quality will 
                        require more effort to add/remove albums or the change the artist information. 
                        The data quality concept also applies to releases in the same manner. Changing a release
                        with low data
                        quality will be easier than changing a release with high data quality.
                        
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="FreebaseANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e316" xml:id="freebaseSection" xreflabel="Freebase Section">
            <div class="title e317">Freebase</div>
            <div class="para e318"> Initially we considered using music data from Freebase 
               <div class="xref e319" linkend="freebaseHome"></div>, an open, community-based, Creative Commons licensed
               repository of structured data describing millions of entities (i.e., person, place,
               thing) which are connected as a graph. Freebase IDs can be used to uniquely identify
               entities from any web-reachable source. At the time of this writing, the 1.22 GB
               (uncompressed) music segment of Freebase contained 9 million topics and 33 million
               facts. The music category contains classical, opera, and many other genres in
               addition to blues and rock music. Data is formatted as approximately 50 separate Tab
               Separated Values files with filenames such as group_member.tsv,
               group_membership.tsv, musical_group.tsv, guitarist.tsv, album.tsv, artist.tsv,
               release.tsv, and track.tsv (the largest file at roughly 671 MB). A total of over
               151,000 groups are listed in musical_group.tsv. 
               <div class="popupBox e320">
                  <div class="popupLabel" onmouseover="$('#d1e585').show('1000');" onmouseout="$('#d1e585').hide('1000');">[ footnote ]</div>
                  <div id="d1e585" style="display: none;">
                     <div class="footnote">
                        <div class="para e321">The full Freebase data set in TSV format is 1.3 GB compressed. The entire
                           Freebase data dump is also available as quadruples in a 3.36 GB download.
                           When uncompressed, the single file freebase-datadump-quadruples.tsv is 27.3
                           GB. 
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e322"> Freebase data can be used in several ways. MQL (Metaweb Query Language) 
               <div class="xref e323" linkend="mql"></div> is a query API analogous to SPARQL for RDF. MQL uses JSON
               objects as queries via standard HTTP requests and responses. For example, the IRI
               below will return all the genres associated with Eric Clapton (line breaks added for
               readability). 
               <div class="programlisting e324" xml:space="preserve">
                  
                  http://api.freebase.com/api/service/mqlread?query={%20%22query%22:
                  {%20%22active_start%22:null,%20%22genre%22:[],%20%22name%22:%22Eric%20Clapton%22,
                  %20%22type%22:%22/music/artist%22%20}%20}                   
                  
                  
               </div> will produce the following result,
               indicating all the genres associated with Eric Clapton: 
            </div>
            <div class="para e325">
               
               <div class="figure e326">
                  <div class="title e327">Freebase Genre Results for Eric Clapton</div>
                  <div class="programlisting e328" xml:space="preserve">
                     {
                     "code": "/api/status/ok",
                     "result": {
                     "active_start": null,
                     "genre": [
                     "Blues",
                     "Rock music",
                     "Blues-rock",
                     "Pop rock",
                     "Hard rock",
                     "Psychedelic rock",
                     "Reggae"
                     ],
                     "name": "Eric Clapton",
                     "type": "/music/artist"
                     },
                     "status": "200 OK",
                     "transaction_id": "cache;cache03.p01.sjc1:8101;2011-01-26T22:45:13Z;0054"
                     }
                     
                  </div>
               </div> We will see later that this list of genres differs from other data
               sources. 
            </div>
            <div class="para e329">For any given group, band members are non-sequential within the
               group_membership.tsv file. The relevant lines for the members of Blind Faith are
               collected in the table below.
            </div>
            <div class="table e330">
               <div class="caption e331">
                  <div class="para e332">
                     <div class="emphasis e333" role="bold">Members of Blind Faith - from
                        Freebase
                     </div>
                  </div>
               </div>
               <div class="thead e334">
                  <div class="tr e335">
                     <div class="th e336">id</div>
                     <div class="th e337">member</div>
                     <div class="th e338">group</div>
                     <div class="th e339">(role)</div>
                     <div class="th e340">start</div>
                     <div class="th e341">end</div>
                  </div>
               </div>
               <div class="tbody e342">
                  <div class="tr e343">
                     <div class="td e344">/m/01tfhrr</div>
                     <div class="td e345">Ginger Baker</div>
                     <div class="td e346">Blind Faith</div>
                     <div class="td e347"> </div>
                     <div class="td e348">1968</div>
                     <div class="td e349">1969-10</div>
                  </div>
                  <div class="tr e350">
                     <div class="td e351">/m/01tfhry</div>
                     <div class="td e352">Steve Winwood</div>
                     <div class="td e353">Blind Faith</div>
                     <div class="td e354"> </div>
                     <div class="td e355">1968</div>
                     <div class="td e356">1969-10</div>
                  </div>
                  <div class="tr e357">
                     <div class="td e358">/m/01wvwr8</div>
                     <div class="td e359">Ric Grech</div>
                     <div class="td e360">Blind Faith</div>
                     <div class="td e361"> </div>
                     <div class="td e362">1968</div>
                     <div class="td e363">1969-10</div>
                  </div>
                  <div class="tr e364">
                     <div class="td e365">/m/01tfhrk</div>
                     <div class="td e366">Eric Clapton</div>
                     <div class="td e367">Blind Faith</div>
                     <div class="td e368"> </div>
                     <div class="td e369">1968</div>
                     <div class="td e370">1969-10</div>
                  </div>
               </div>
            </div>
            <div class="para e371"> The group_membership.tsv file contains dozens of entries for Clapton, one line
               for each band or other association in which he participated. Each entry (line) is
               identified by a different ID. For example:
               
               <div class="programlisting e372" xml:space="preserve">
                  /m/01t73cp	Eric Clapton	Derek and the Dominos                   
                  
               </div>
               
            </div>
            <div class="para e373">
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e374" xlink:actuate="onRequest" xlink:href="http://www.freebase.com/view/en/eric_clapton" xlink:show="new" xlink:type="simple">Eric Clapton's
                  main Freebase page
               </div> is shown below. The IRI format for Clapton as a topic
               is 
               <div class="code e375">http://www.freebase.com/view/en/eric_clapton</div>. 
               <div class="figure e376">
                  <div class="title e377">Eric Clapton's Freebase Page</div>
                  <div class="mediaobject e378">
                     <div class="imageobject e379">
                        <div class="metaBox e380"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e695').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e695" class="metaSource" style="display:none;">                
                              &lt;imagedata<span class="metaAttribute">class='e380'
                                 </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-011.png'
                                 </span><span class="metaAttribute">format='png'
                                 </span><span class="metaAttribute">width='100%'
                                 </span>
                              &gt;
                              
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="para e381">Ultimately we elected not to use Freebase as a data source because we, like
               others, were unable to locate the complete Freebase dataset rendered as RDF and
               determined that the conversion process would be non-trivial. In fact, we found
               mailing list and forum messages with others expressing the same problem. Initially
               we had downloaded the dataset in its native format and considered converting it into
               RDF. This would have been possible although many of the lines contained a fourth
               element consisting of a number of values concatenated together; it was unclear how
               that could be cleanly converted into a named graph. After the rough draft of our
               paper was submitted, we discovered that RDF data is available manually by following
               a link labeled "RDF" near the bttom of each Freebase page. It appears that
               this RDF is rendered at execution time since there is a slight delay in the display
               of the RDF. For example, follow the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e382" xlink:actuate="onRequest" xlink:href="http://rdf.freebase.com/rdf/en.eric_clapton" xlink:show="new" xlink:type="simple">RDF link on the Eric
                  Clapton page
               </div>. Had we discovered this sooner we might have attempted to
               obtain the Freebase RDF for Rock and Roll stars using some automated process.
               
            </div>
         </div>
      </div><a name="MethodologyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e383">
         <div class="title e384">Methodology</div>
         <div class="para e385">In this section, we discuss our frontend and backend development platform, a few term
            definitions,
            and details concerning the Graphviz visualization which is still under development
            as of this July writing.
            
         </div><a name="DevelopmentEnvironmentANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e386">
            <div class="title e387">Development Environment</div>
            <div class="para e388">The front end to our SPARQL queries was a guest virtual machine running under Sun
               VirtualBox 3.1.6_OSE. on a Dell Inspiron with an Intel Core 2 Quad CPU Q9400 running
               at 2.66GHz. The guest operating system is the 10.10 server release of Ubuntu Linux.
                The
               database machine leverages 2 Intel Xeon X5650 CPUs overclocked to 3.12GHz with 48
               gigabytes of RAM. From the perspective of the 10.10 Ubuntu Desktop operating system,
               the 2 hexcore processors are regarded as 24 processors (149867.81 BogoMIPS). 
            </div>
            <div class="para e389">
               Our RDF store was the open source (freely-available) version of
               OpenLink Virtuoso Universal Server 
               <div class="xref e390" linkend="virtuoso"></div> (Version 06.01.3127) running in "Full Mode". Configuration changes were made to 
               maximize use of available RAM by making a change to the 
               <div class="code e391">virtuoso.ini</div> file: 
               "NumberOfBuffers = 7000000".
               
            </div>
            <div class="para e392">
               On the frontend, our queries were facilitated by Drupal 6.18 with the modules listed
               in the
               
               <div class="xref e393" linkend="drupalModules"></div> appendix.
               It was necessary to configure PHP to allow Drupal more memory, so "memory_limit =
               512M" 
               was added to 
               <div class="code e394">/etc/php5/apache2/php.ini</div>.
               
            </div>
            <div class="para e395">Drupal 7.0 became available during 2011, but we elected not to migrate to that version.
               Although Drupal 7.0 does have substantially better support for RDF data than earlier
               
               versions, that is likely to only effect people publishing information that was
               authored or stored inside Drupal. Our use of Drupal was for collaborative development
               of and storing of
               queries, as well as for the visualization capabilities.
            </div>
         </div><a name="WorkingDefinitionsofKeyPropertiesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e396" xml:id="workingDefs" xreflabel="Working Definitions">
            <div class="title e397">Working Definitions of Key Properties</div>
            <div class="para e398">The definition list below presents our current thinking about several key concepts
               that
               are covered in details in later sections; some refer to 
               <div class="xref e399" linkend="openCyc"></div>.
               
            </div>
            <div class="variablelist e400">
               <div class="varlistentry e401">
                  <div class="term e402">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e403" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/ontology/musicalArtist" xlink:show="new" xlink:type="simple">dbpedia-owl:musicalArtist</div>
                  </div>
                  <div class="listitem e404">
                     <div class="para e405">a person who is either a musician who plays one or more instruments,
                        or is a singer, or is a music composer; similar (but not identical) to
                        
                        <div class="code e406">http://musicbrainz.org/mm/mm-2.1#Artist</div>
                     </div>
                  </div>
               </div>
               <div class="varlistentry e407">
                  <div class="term e408">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e409" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/ontology/associatedMusicalArtist" xlink:show="new" xlink:type="simple">dbpedia-owl:associatedMusicalArtist</div>
                  </div>
                  <div class="listitem e410">
                     <div class="para e411">both the subject and object of this predicate are musicians;
                        similar to 
                        <div class="code e412">http://musicbrainz.org/ar/ar-1.0#collaboratedWith</div>
                     </div>
                  </div>
               </div>
               <div class="varlistentry e413">
                  <div class="term e414">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e415" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/property/associatedActs" xlink:show="new" xlink:type="simple">dbpprop:associatedActs</div>
                  </div>
                  <div class="listitem e416">
                     <div class="para e417">this is mapped either to associatedBand (for subjects who are individual artists)
                        or
                        associatedMusicalArtist (for bands)
                     </div>
                  </div>
               </div>
               <div class="varlistentry e418">
                  <div class="term e419">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e420" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/ontology/associatedBand" xlink:show="new" xlink:type="simple">dbpedia-owl:associatedBand</div>
                  </div>
                  <div class="listitem e421">
                     <div class="para e422">
                        OpenCyc: An element of 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e423" xlink:actuate="onRequest" xlink:href="http://sw.opencyc.org/concept/Mx4rvgEZGJwpEbGdrcN5Y29ycA" xlink:show="new" xlink:type="simple">Band_MusicGroup</div> 
                        is a (small or large) group of musicians who play 
                        non-Classical music together on either a regular or intermittent schedule. 
                        
                     </div>
                  </div>
               </div>
               <div class="varlistentry e424">
                  <div class="term e425">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e426" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/ontology/genre" xlink:show="new" xlink:type="simple">dbpedia-owl:genre</div>
                  </div>
                  <div class="listitem e427">
                     <div class="para e428">a categorization of music into types that can be distinguished from other types of
                        music;
                        can be applied to a musical artist, a band, an album, or individual songs.
                     </div>
                  </div>
               </div>
            </div>
         </div><a name="RDFVisualizationCodingANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e429">
            <div class="title e430">RDF Visualization Coding</div>
            <div class="para e431">
               In order to better understand our result sets a form of visualization was 
               implemented as a custom Drupal module, written in PHP.  
               The front end was a simple HTML form with JQuery and AJAX for displaying the information.
               
               Main processing was handled by the PHP module setup to intercept a post to a particular
               URL.  
               The PHP module first accesses the POST data and extracts the input search term which
               became the subject of the following SPARQL query:
               
               <div class="programlisting e432" xml:space="preserve">
                  
                  SELECT DISTINCT ?predicate ?object 
                  WHERE {&lt;" . $subject . "&gt; ?predicate ?object } 
                  ORDER BY ?predicate
                  
                  
               </div> 
               where in our initial implementation 
               <div class="code e433">$subject</div> is replaced by the musician subject requested by the user.
               XML output is specified by the request as the desired return format.
               
            </div>
            <div class="para e434">
               The next step was to convert the XML results output from the query to the
               Graphviz input format 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e435" xlink:actuate="onRequest" xlink:href="http://www.graphviz.org/content/dot-language" xlink:show="new" xlink:type="simple">DOT language</div>. 
               Graphviz 
               <div class="xref e436" linkend="graphvizHome"></div> is open source graph visualization software that converts
               descriptions of graphs in a simple text language either to diagrams in various formats
               
               (e.g., images, SVG, PDF, Postscript) or for display in an interactive graph browser.
               
            </div>
            <div class="para e437">
               Using the 
               <div class="code e438">SimpleXMLElement</div> class (from the PHP library), the code loops through the 
               results of the SPARQL query &lt;binding&gt; elements, accessing the “name” attribute of
               each one. 
               If the name attribute is ‘predicate’ (from the ?predicate variable in our SPARQL query),
               
               the predicate is obtained from the &lt;uri&gt; subelement.  
               If the name attribute is ‘object’ (from the ?object variable in the query), 
               the value is obtained from the &lt;uri&gt; subelement or the &lt;literal&gt; subelement, 
               depending on which is present in the XML output of the query.  
               If the &lt;uri&gt; subelement is found, we use the uri target for display, 
               but use the complete uri for the link, for use in future queries that the user can
               select.
               
               
            </div>
            <div class="para e439"> The Graphviz text input file is constructed incrementally by adding Graphviz
               format input statements for each &lt;binding&gt; element. Since Graphviz defines
               links and colors in a separate section of the file, the XML &lt;binding&gt; elements
               are searched a second time to create the Graphviz 
               <div class="code e440">[label]</div> entries. (To
               improve performance, we may do this in a single loop populating two sections of the
               Graphviz input at once.) A static set of predefined colors is defined in the module.
               As new predicates (i.e., artist, associatedMusicalArtist, associatedBand,
               musicComposer, producer, writer, etc.) are encountered, new colors are assigned by
               taking the next one from the list and associating it with the new predicate.
               Use of an associative array allows predicates of the same type to be assigned the
               same color.
               The Graphviz input string is completed when all the &lt;binding&gt; elements have
               been processed and a header and footer are added. 
               
            </div>
            <div class="para e441"> The SVG data is created by sending the Graphviz input string to the
               graphviz_filter_process method available by means of a Graphviz filter module
               installed on the Drupal site. The SVG description is serialized by the filter
               module. At this point the return information is structured using the Drupal function
               
               <div class="code e442">drupal_json</div> to create JSON formatted data. The SVG data and the XML
               data are each added as named elements of the JSON data and returned to the caller.
               
            </div>
            <div class="para e443"> To use this module, an HTML page with a short embedded JQuery script invokes the
               module and displays the results. The HTML defines an input text field, a search
               button and two &lt;div&gt; elements which initially contain no content. They are
               given the IDs outputGraph and outputTable so content can be associated later using
               JavaScript (JQuery).The user interface is a simple text field into which the user
               types the name of the musician subject and then presses a search button which runs
               a
               JQuery function that posts the input field to the module previously described using
               AJAX. The AJAX method waits for the data to be returned from the module in JSON
               format. When the JSON data arrives, the returned SVG data and XML data are assigned
               to the &lt;div&gt; elements with the correct IDs. 
               
            </div>
            <div class="para e444">The figure below shows one of the Graphviz digraphs.
               
               
               <div class="figure e445" xml:id="digraphFig" xreflabel="Graphviz SVG Digraph">
                  <div class="title e446">Sample Graphviz SVG Digraph (linebreaks added for readability)</div>
                  <div class="programlisting e447" xml:space="preserve">
                     
                     digraph G {
                     /*
                     * @title = CLAPTON
                     * @formats = svg
                     */
                     rankdir=LR
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Unplugged_(Eric_Clapton_album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Just_One_Night_(album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Behind_the_Sun_(Eric_Clapton_album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Journeyman_(album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Back_Home_(Eric_Clapton_album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Reptile_(album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Live_in_Japan_(George_Harrison_album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;August_(album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Steppin&amp;#039;_Out_(Eric_Clapton_album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Edge_of_Darkness_(soundtrack)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Backless&amp;quot;[ label
                     = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;461_Ocean_Boulevard&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;No_Reason_to_Cry&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Slowhand&amp;quot;[ label
                     = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;Pilgrim_(Eric_Clapton_album)&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;From_the_Cradle&amp;quot;[
                     label = &amp;quot;artist&amp;quot; ]
                     &amp;quot;http://dbpedia.org/resource/Eric_Clapton&amp;quot;-&amp;gt;&amp;quot;One_More_Car,_One_More_Ride]
                     &lt;/span&gt; &lt;/div&gt;
                     &lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt; 
                     [log] =&gt; [] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [revision_timestamp] =&gt; [1300136539] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span
                     style="color: black;"&gt; 
                     [format] =&gt; [4] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [name] =&gt; [wendy] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt; 
                     [picture] =&gt; [] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [data] =&gt; [a:1:{s:13:&amp;quot;form_build_id&amp;quot;;s:37:&amp;quot;form-18d527e00db0361bf4cea1b231176078&amp;quot;;}]
                     &lt;/span&gt; &lt;/div&gt;
                     &lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: green;"&gt; 
                     [rdf] =&gt; array ( &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: green;"&gt;
                     ) &lt;/span&gt; &lt;/div&gt;
                     &lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: green;"&gt; 
                     [path] =&gt; [content/claptonsvg] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;);&lt;/div&gt;&lt;/div&gt;&lt;/fieldset&gt;&lt;/div&gt;
                     &lt;div&gt;&lt;fieldset class="toggler"&gt;
                     &lt;legend&gt;&lt;strong&gt;&lt;a href="#"&gt;&lt;em&gt;view&lt;/em&gt; $node-&gt;112&lt;/a&gt;&lt;/strong&gt;&lt;/legend&gt;
                     &lt;div class="content" style="display: none;"&gt;&lt;div&gt;&amp;nbsp;$node = (&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
                     
                     &lt;span style="color: black;"&gt; 
                     [nid] =&gt; [112] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [type] =&gt; [graph] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt; 
                     [language] =&gt; [] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [uid] =&gt; [3] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [status] =&gt; [1] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     [created] =&gt; [1300117673] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt; 
                     [changed] =&gt; [1300136539] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt; 
                     [comment] =&gt; [0] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [promote] =&gt; [1] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [moderate] =&gt; [0] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt; 
                     [sticky] =&gt; [0] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [tnid] =&gt; [0] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [translate] =&gt; [0] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt; 
                     [vid] =&gt; [112] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color: black;"&gt;
                     
                     [revision_uid] =&gt; [3] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt; 
                     [title] =&gt; [claptonSvg] &lt;/span&gt; &lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style="color:
                     black;"&gt;
                     [body] =&gt; [&amp;lt;div class=&amp;quot;graphviz graphviz-&amp;quot;svg&amp;gt;
                     &amp;lt;object type=&amp;quot;image/svg+xml&amp;quot;
                     data=&amp;quot;http://www.vocabutek.com/sites/default/files/graphviz/ca80a36e3d121526b2b93ec1f1e076a3.svg&amp;quot;&amp;gt;
                     &amp;lt;embed type=&amp;quot;image/svg+xml&amp;quot; 
                     src=&amp;quot;http://www.vocabutek.com/sites/default/files/graphviz/ca80a36e3d121526b2b93ec1f1e076a3.svg&amp;quot;
                     pluginspage=&amp;quot;http://www.adobe.com/svg/viewer/install/&amp;quot; /&amp;gt;
                     &amp;lt;/object&amp;gt;
                     &amp;lt;/div&amp;gt;
                     ]                
                     
                     
                  </div>
               </div>
               The SVG graphic produced by this Graphviz DOT file was too large to present here.
               See 
               <div class="xref e448" linkend="vocabutek"></div>.
               
            </div>
         </div><a name="InterfaceScreenshotsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e449">
            <div class="title e450">Interface Screenshots</div>
            <div class="para e451">
               A sampling of our interface on 
               <div class="xref e452" linkend="vocabutek"></div> is presented in the following figures.
               As of this writing, the Graphviz visualization is expected to undergo changes.
               
               <div class="xref e453" linkend="qEntry"></div> illustrates how we entered queries in the Drupal interface to test.
               
            </div>
            <div class="figure e454" xml:id="qEntry">
               <div class="title e455">Query Entry</div>
               <div class="mediaobject e456">
                  <div class="imageobject e457">
                     <div class="metaBox e458"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e843').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e843" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e458'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-012.png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e459">
               <div class="xref e460" linkend="qResult"></div> displays the result of executing the query shown in 
               <div class="xref e461" linkend="qEntry"></div>.
            </div>
            <div class="figure e462" xml:id="qResult">
               <div class="title e463">Query Result</div>
               <div class="mediaobject e464">
                  <div class="imageobject e465">
                     <div class="metaBox e466"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e854').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e854" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e466'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-013.png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e467">We used the Drupal adminstration content management to organize queries into cascading
               menus, as shown
               in 
               <div class="xref e468" linkend="qAdmin"></div>.
            </div>
            <div class="figure e469" xml:id="qAdmin">
               <div class="title e470">Query Administration - Menu Organization</div>
               <div class="mediaobject e471">
                  <div class="imageobject e472">
                     <div class="metaBox e473"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e864').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e864" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e473'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-014.png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e474">The result of the query organzation is shown in 
               <div class="xref e475" linkend="qMenus"></div>
            </div>
            <div class="figure e476" xml:id="qMenus">
               <div class="title e477">Cascading Menus</div>
               <div class="mediaobject e478">
                  <div class="imageobject e479">
                     <div class="metaBox e480"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e873').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e873" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e480'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-015.png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e481">
               <div class="xref e482" linkend="qVisualize"></div> illustrates the interface for running a query to send to Graphviz for
               rendering in SVG. Pre-tested queries can be copy/pasted into a single string (topmost
               text field) or new
               queries can be entered. The subject defaults to Eric Clapton but any musician can
               be entered.
            </div>
            <div class="figure e483" xml:id="qVisualize">
               <div class="title e484">Visualize a Query - Copy/Paste or Enter</div>
               <div class="mediaobject e485">
                  <div class="imageobject e486">
                     <div class="metaBox e487"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e882').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e882" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e487'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-016.png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
            <div class="para e488">Finally, 
               <div class="xref e489" linkend="qGraphviz"></div> depicts part of the SVG resulting from a query, as 
               rendered by Graphviz. (This is one aspect we plan to improve over time.)
            </div>
            <div class="figure e490" xml:id="qGraphviz">
               <div class="title e491">Graphviz AssociatedBand SVG</div>
               <div class="mediaobject e492">
                  <div class="imageobject e493">
                     <div class="metaBox e494"><img src="resources/manbluflag.jpg" class="metaImage" onclick="$('#d1e893').toggle('1000');" alt="Marker: click here for details..." title="Marker: click here for details..."><div id="d1e893" class="metaSource" style="display:none;">                
                           &lt;imagedata<span class="metaAttribute">class='e494'
                              </span><span class="metaAttribute">fileref='../../../vol7/graphics/Sall01/Sall01-017.png'
                              </span>
                           &gt;
                           
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div><a name="ChallengesandResultsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e495" xml:id="results" xreflabel="Challenges and Results">
         <div class="title e496">Challenges and Results</div>
         <div class="para e497">Our results were hampered by various anomalies or complications discovered in the
            data sources
            especially in terms of semantics. 
            In this section, we present some of the problems we encountered and either how they
            were solved or how they might be approached
            in the future.
            
         </div><a name="PropertiesofaMusicalArtistANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e498">
            <div class="title e499">Properties of a Musical Artist</div>
            <div class="para e500">We next consider a different view of Clapton predicates.
               The query below returns properties with an object value that contains the string "Eric
               Clapton".
            </div>
            <div class="para e501">
               
               <div class="figure e502">
                  <div class="title e503">Find Predicates for Which Clapton is (all or part of) the Object</div>
                  <div class="programlisting e504" xml:space="preserve">
                     
                     SELECT DISTINCT ?predicate  WHERE  {
                     ?s ?predicate ?o.
                     FILTER regex(?o, "Eric Clapton").
                     } ORDER BY ?predicate                       
                     
                     
                  </div>
               </div>
               
            </div>
            <div class="para e505">
               Compare the result below to that presented in figure 
               <div class="xref e506" linkend="ClaptonPropertiesV1"></div>.
               
               
               <div class="figure e507" xml:id="claptonPropertiesV2" xreflabel="Clapton's DBpedia Properties - Version 2">
                  <div class="title e508">Clapton's DBpedia Properties - Version 2 (44 Predicates)</div>
                  <div class="programlisting e509" xml:space="preserve">
                     http://dbpedia.org/ontology/abstract
                     http://dbpedia.org/ontology/alias
                     http://dbpedia.org/property/after
                     http://dbpedia.org/property/album
                     http://dbpedia.org/property/alias
                     http://dbpedia.org/property/allWriting
                     http://dbpedia.org/property/altArtist
                     http://dbpedia.org/property/artist
                     http://dbpedia.org/property/associatedActs
                     http://dbpedia.org/property/aux
                     http://dbpedia.org/property/before
                     http://dbpedia.org/property/caption
                     http://dbpedia.org/property/chronology
                     http://dbpedia.org/property/composer
                     http://dbpedia.org/property/cover
                     http://dbpedia.org/property/description
                     http://dbpedia.org/property/extra
                     http://dbpedia.org/property/founders
                     http://dbpedia.org/property/fromAlbum
                     http://dbpedia.org/property/img
                     http://dbpedia.org/property/imgCapt
                     http://dbpedia.org/property/label
                     http://dbpedia.org/property/lastAlbum
                     http://dbpedia.org/property/lyrics
                     http://dbpedia.org/property/music
                     http://dbpedia.org/property/musicalguests
                     http://dbpedia.org/property/name
                     http://dbpedia.org/property/namedAfter
                     http://dbpedia.org/property/nextAlbum
                     http://dbpedia.org/property/note
                     http://dbpedia.org/property/notes
                     http://dbpedia.org/property/partner
                     http://dbpedia.org/property/pastMembers
                     http://dbpedia.org/property/producer
                     http://dbpedia.org/property/recordedBy
                     http://dbpedia.org/property/shortDescription
                     http://dbpedia.org/property/starring
                     http://dbpedia.org/property/text
                     http://dbpedia.org/property/thisAlbum
                     http://dbpedia.org/property/title
                     http://dbpedia.org/property/writer
                     http://purl.org/dc/elements/1.1/title
                     http://www.w3.org/2000/01/rdf-schema#label
                     http://xmlns.com/foaf/0.1/name                           
                     
                  </div>
               </div>
               
            </div>
            <div class="para e510">
               When we subsequently connected the DBpedia and MusicBrainz data sources as discussed
               in
               
               <div class="xref e511" linkend="bridgingSources"></div> below, we obtained a third view of Clapton's properties,
               shown in figure 
               <div class="xref e512" linkend="claptonPropertiesCombined"></div>.
               
            </div>
         </div><a name="AlongComestheAssociationANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e513">
            <div class="title e514">Along Comes the Association</div>
            <div class="para e515">
               The paramount requirement in determining an Eric Clapton Number is the ability to
               unambiguously identify those musicians with whom he directly worked. Originally we
               thought this would be rather straightforward. Properties that seemed relevant to
               making that determination included:
               
               <div class="itemizedlist e516">
                  <div class="listitem e517">
                     <div class="para e518">
                        <div class="code e519">http://dbpedia.org/property/associatedActs</div>
                     </div>
                  </div>
                  <div class="listitem e520">
                     <div class="para e521">
                        <div class="code e522">http://dbpedia.org/ontology/associatedBand</div>
                     </div>
                  </div>
                  <div class="listitem e523">
                     <div class="para e524">
                        <div class="code e525">http://dbpedia.org/ontology/associatedMusicalArtist</div>
                     </div>
                  </div>
                  <div class="listitem e526">
                     <div class="para e527">
                        <div class="code e528">http://dbpedia.org/property/starring</div>
                     </div>
                  </div>
                  <div class="listitem e529">
                     <div class="para e530">
                        <div class="code e531">http://dbpedia.org/property/musicalguests</div>
                     </div>
                  </div>
               </div>
               The 
               <div class="code e532">musicalguests</div> property was eliminated because it relates only to variety shows such as 
               "The Late Show". The 
               <div class="code e533">starring</div> property also proved to be unreliable since multiple
               musicians might have all been considered stars of a performance but might not have
               played together.
               One case in point is the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e534" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/page/The_Concert_for_Bangladesh" xlink:show="new" xlink:type="simple">The Concert for Bangladesh</div>; 
               a query returned Klaus Voorman, Billy Preston,
               Bob Dylan, Eric Clapton, George Harrison, Leon Russell, Ravi Shankar, and Ringo Starr.
               While
               most of these performers did share the stage at one time during the concert, Ravi
               Shankar did not
               perform with the others. Furthermore, members of the band Badfinger did play with
               most of the
               others, but they were not returned by the query although we note that Badfinger is
               cited in the abstract of
               the Wikipedia article in the list of stars of the supergroup.  On the other hand,
               if we look at the infobox
               on the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e535" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Concert_For_Bangladesh" xlink:show="new" xlink:type="simple">concert's Wikipedia page</div>, 
               Badfinger is not listed as one of the stars.
               
            </div>
            <div class="para e536">
               We considered the 
               <div class="code e537">associatedActs</div> property since that is the term used in the infobox.
               As seen in 
               <div class="xref e538" linkend="infoboxTable"></div>, the infobox on 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e539" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Eric_Clapton" xlink:show="new" xlink:type="simple">Clapton's Wikipedia page</div> 
               lists these associated acts:
               "The Yardbirds, John Mayall &amp; the Bluesbreakers, Powerhouse, Cream, Free Creek, The
               Dirty Mac,
               Blind Faith, J.J. Cale, The Plastic Ono Band, Delaney, Bonnie &amp; Friends, Derek and
               the Dominos".        
               
            </div>
            <div class="para e540"> Our initial attempt to retrieve these artists was a little surprising. Our query
               was: 
               <div class="programlisting e541" xml:space="preserve">
                  
                  SELECT DISTINCT  ?who
                  {  &lt;http://dbpedia.org/resource/Eric_Clapton&gt; &lt;http://dbpedia.org/property/associatedActs&gt;
                  ?who.
                  } ORDER BY ?who                    
                  
                  
               </div> The result, shown below, was one long string
               
               <div class="popupBox e542">
                  <div class="popupLabel" onmouseover="$('#d1e986').show('1000');" onmouseout="$('#d1e986').hide('1000');">[ footnote ]</div>
                  <div id="d1e986" style="display: none;">
                     <div class="footnote">
                        <div class="para e543">Technically this is an object value comprised of a number of strings concatenated
                           into a single field.
                        </div>
                     </div>
                  </div>
               </div>
               the contents of which represented a superset of the associated acts on the
               Wikipedia page. The additional associated acts are underlined below.
               
               <div class="programlisting e544" xml:space="preserve">  
                  "The Yardbirds, John Mayall &amp; the Bluesbreakers, Powerhouse, Cream, Free Creek, Dire
                  Straits, 
                  
                  <div class="emphasis e545" role="under">George Harrison</div>, The Dirty Mac, Blind Faith, 
                  <div class="emphasis e546" role="under">Freddie King, Phil Collins</div>, 
                  J.J. Cale, The Plastic Ono Band, Delaney, Bonnie &amp; Friends, Derek and the Dominos,
                  
                  
                  <div class="emphasis e547" role="under">T.D.F., Jeff Beck, Paul McCartney, Steve Winwood, B.B. King, The Beatles, The Band</div>"@en
                  
               </div>
               It is unclear how there could be this disparity since the DBpedia data is derived
               from Wikipedia. Although several of the underlined performers played with Clapton,
               they were not in bands together (as far as we could determine). Furthermore, several
               of the bands listed on the original Wikipedia page are arguably not exactly bands
               in
               the general sense since they existed only briefly and for a specific purpose. The
               Dirty
               Mac were a supergroup consisting of Eric Clapton, John Lennon, Keith Richards and
               Mitch Mitchell that came together for The Rolling Stones' TV special. Free Creek was
               a band composed of many musical artists, including Eric Clapton, Jeff Beck, Keith
               Emerson, for one super-session album. Powerhouse only recorded a few songs, only three
               of
               which were released on a compilation album. These "bands" are certainly not
               on a par with the others in the infobox since they were never intended to exist beyond
               their stated purpose.
               
            </div>
            <div class="para e548">
               Perhaps our interpretation of the 
               <div class="code e549">associatedActs</div> property was incorrect? Further
               examination of the DBpedia and Wikipedia documentation pointed us to the 
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e550" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Template:Infobox_musical_artist" xlink:show="new" xlink:type="simple">template for the infobox of musicial artists</div>, 
               shown on the right side of 
               <div class="xref e551" linkend="infoboxTable"></div> in the earlier Wikipedia section.       
               The template 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e552" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Template:Infobox_musical_artist#associated_acts" xlink:show="new" xlink:type="simple">description of associated_acts</div>
               from Wikipedia follows. (Numbers have been added for ease of reference and 
               the text has been reformatted.)
               
               <div class="programlisting e553" xml:space="preserve">
                  This field is for professional relationships with other musicians or bands
                  that are significant and notable to this artist's career.                  
                  This field can include, for example, any of the following:           
                  a1) For individuals: groups of which he or she has been a member
                  a2) Other acts with which this act has collaborated on multiple occasions, 
                  or on an album, or toured with as a single collaboration act playing together
                  a3) Groups which have spun off from this group
                  a4) A group from which this group has spun off            
                  Separate multiple entries with commas. 
                  
                  The following uses of this field should be avoided:           
                  b1) Association of groups with members' solo careers
                  b2) Groups with only one member in common
                  b3) Association of producers, managers, etc. (who are themselves acts) 
                  with other acts (unless the act essentially belongs to the producer, 
                  as in the case of a studio orchestra formed by and working exclusively 
                  with a producer)
                  b4) One-time collaboration for a single, or on a single song
                  b5) Groups that are merely similar
                  
               </div>
               Based on (a1), (a2) and (b4), it would seem that Powerhouse and arguably The Dirty
               Mac and Free Creek
               should be eliminated from the list of groups of which Clapton was a member.
               
               <div class="popupBox e554">
                  <div class="popupLabel" onmouseover="$('#d1e1019').show('1000');" onmouseout="$('#d1e1019').hide('1000');">[ footnote ]</div>
                  <div id="d1e1019" style="display: none;">
                     <div class="footnote">
                        <div class="para e555">We believe this is indicative of the 
                           
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e556" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Open_world_assumption" xlink:show="new" xlink:type="simple">open world assumption</div> in formal logic.
                        </div>
                     </div>
                  </div>
               </div>
               
               
            </div>
            <div class="para e557">
               Further investigation brought us to the numerous
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e558" xlink:actuate="onRequest" xlink:href="http://mappings.dbpedia.org/index.php?title=Special%3AAllPages&amp;from=&amp;to=&amp;namespace=204" xlink:show="new" xlink:type="simple">DBpedia Infobox Mappings</div>
               and specifically to the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e559" xlink:actuate="onRequest" xlink:href=" http://mappings.dbpedia.org/index.php/Mapping:Infobox_musical_artist" xlink:show="new" xlink:type="simple">ontology mapping for the Infobox for Musical Artists</div>.
               The (infobox) template property 
               <div class="code e560">Associated_acts</div> maps to two ontology properties,
               
               <div class="code e561">associatedBand</div> and 
               <div class="code e562">associatedMusicalArtist</div>, meaning that the infobox property
               can refer to either a group (case (a3) and (a4) above) or to an individual (cases
               (a1) and (a2)).
               
            </div>
            <div class="para e563">
               Therefore we turned our attention to queries involving the ontology properties
               
               <div class="code e564">associatedBand</div> and 
               <div class="code e565">associatedMusicalArtist</div>. The following query
               asks for the bands in which Clapton was a member.
               
               <div class="programlisting e566" xml:space="preserve">
                  
                  SELECT DISTINCT  ?who WHERE
                  {&lt;http://dbpedia.org/resource/Eric_Clapton&gt; &lt;http://dbpedia.org/ontology/associatedBand&gt;
                  ?who.
                  } ORDER BY ?who                    
                  
                  
               </div>
               The results are shown below. Note that the results are nearly identical to the string
               superset 
               shown earlier. (The only exception is X-sample and a few band name variations.)
               The same results are obtained if the predicate is replaced by 
               <div class="code e567">http://dbpedia.org/ontology/associatedMusicalArtist</div>.
               
               <div class="programlisting e568" xml:space="preserve">
                  
                  http://dbpedia.org/resource/B.B._King
                  http://dbpedia.org/resource/Blind_Faith
                  http://dbpedia.org/resource/Cream_%28band%29
                  http://dbpedia.org/resource/Delaney,_Bonnie_&amp;_Friends
                  http://dbpedia.org/resource/Derek_and_the_Dominos
                  http://dbpedia.org/resource/Dire_Straits
                  http://dbpedia.org/resource/Eric_Clapton%27s_Powerhouse
                  http://dbpedia.org/resource/Freddie_King
                  http://dbpedia.org/resource/Free_Creek_%28band%29
                  http://dbpedia.org/resource/George_Harrison
                  http://dbpedia.org/resource/J.J._Cale
                  http://dbpedia.org/resource/Jeff_Beck
                  http://dbpedia.org/resource/John_Mayall_&amp;_the_Bluesbreakers
                  http://dbpedia.org/resource/Paul_McCartney
                  http://dbpedia.org/resource/Phil_Collins
                  http://dbpedia.org/resource/Steve_Winwood
                  http://dbpedia.org/resource/The_Band
                  http://dbpedia.org/resource/The_Beatles
                  http://dbpedia.org/resource/The_Dirty_Mac
                  http://dbpedia.org/resource/The_Plastic_Ono_Band
                  http://dbpedia.org/resource/The_Yardbirds
                  http://dbpedia.org/resource/X-sample                    
                  
                  
               </div>
               
            </div>
            <div class="para e569">
               When we reverse the order of the subject and object, the results can be interpreted
               as musicians who have
               played on Clapton's albums. The query:
               
               <div class="programlisting e570" xml:space="preserve">
                  
                  SELECT DISTINCT  ?who WHERE
                  {?who &lt;http://dbpedia.org/ontology/associatedBand&gt; &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.
                  } ORDER BY ?who              
                  
                  
               </div>
               yields these results:
               
               <div class="programlisting e571" xml:space="preserve">
                  
                  http://dbpedia.org/resource/Aashish_Khan
                  http://dbpedia.org/resource/Alan_Clark_%28keyboardist%29
                  http://dbpedia.org/resource/Albert_Lee
                  http://dbpedia.org/resource/Andy_Fairweather_Low
                  http://dbpedia.org/resource/B.B._King
                  http://dbpedia.org/resource/Billy_Preston
                  http://dbpedia.org/resource/Bobby_Keys
                  http://dbpedia.org/resource/Chris_Stainton
                  http://dbpedia.org/resource/Chuck_Leavell
                  http://dbpedia.org/resource/Dave_Carlock
                  http://dbpedia.org/resource/Dave_Mason
                  http://dbpedia.org/resource/Doyle_Bramhall_II
                  http://dbpedia.org/resource/Freddie_King
                  http://dbpedia.org/resource/Ian_Wallace_%28drummer%29
                  http://dbpedia.org/resource/Jamie_Oldaker
                  http://dbpedia.org/resource/Jeff_Beck
                  http://dbpedia.org/resource/Jesse_Ed_Davis
                  http://dbpedia.org/resource/Jim_Gordon_%28musician%29
                  http://dbpedia.org/resource/Leon_Russell
                  http://dbpedia.org/resource/Mac_and_Katie_Kissoon
                  http://dbpedia.org/resource/Marc_Benno
                  http://dbpedia.org/resource/Marcella_Detroit
                  http://dbpedia.org/resource/Nathan_East
                  http://dbpedia.org/resource/Otis_Spann
                  http://dbpedia.org/resource/P._P._Arnold
                  http://dbpedia.org/resource/Phil_Collins
                  http://dbpedia.org/resource/Phil_Palmer
                  http://dbpedia.org/resource/Pino_Palladino
                  http://dbpedia.org/resource/Plastic_Ono_Band
                  http://dbpedia.org/resource/Ray_Cooper
                  http://dbpedia.org/resource/Reverend_Zen
                  http://dbpedia.org/resource/Richard_Cole
                  http://dbpedia.org/resource/Rita_Coolidge
                  http://dbpedia.org/resource/Rob_Fraboni
                  http://dbpedia.org/resource/Sheryl_Crow
                  http://dbpedia.org/resource/Steve_Ferrone
                  http://dbpedia.org/resource/Steve_Jordan_%28musician%29
                  http://dbpedia.org/resource/Stevie_Ray_Vaughan
                  http://dbpedia.org/resource/The_Shaun_Murphy_Band
                  http://dbpedia.org/resource/Yvonne_Elliman                    
                  
                  
               </div>
               The same results are obtained if the predicate is replaced by 
               <div class="code e572">http://dbpedia.org/ontology/associatedMusicalArtist</div>.
               
            </div>
            <div class="para e573">
               How are 
               <div class="code e574">associatedBand</div>, 
               <div class="code e575">associatedMusicalArtist</div>, and 
               <div class="code e576">associatedActs</div> related? 
               We believe the relationship varies across performers depending upon how individual
               collaborators interpreted the terms.
               Consider the following similar queries and their very different results, including
               many performers who are
               unfamiliar to all of the present authors.  
               
               <div class="figure e577">
                  <div class="title e578">Comparsion of associatedBand, associatedActs and associatedMusicalArtist</div>
                  <div class="programlisting e579" xml:space="preserve">
                     
                     SELECT  ?artist (count (?who) as ?count) {  
                     ?artist  &lt;http://dbpedia.org/ontology/associatedBand&gt; ?who.         
                     }  ORDER BY DESC (?count) LIMIT 10 
                     
                     http://dbpedia.org/resource/Stan_Levey                                           
                     80
                     http://dbpedia.org/resource/Frank_Fenter                                         
                     46
                     http://dbpedia.org/resource/Gary_Kellgren                                        
                     42
                     http://dbpedia.org/resource/Norman_Granz                                         
                     42
                     http://dbpedia.org/resource/Tim_&amp;_Bob                                            
                     39
                     http://dbpedia.org/resource/Frankie_Banali                                       
                     38
                     http://dbpedia.org/resource/Neil_Cooper_%28ROIR%29                               
                     37
                     http://dbpedia.org/resource/Ian_Wallace_%28drummer%29                            
                     34
                     http://dbpedia.org/resource/Tha_Dogg_Pound                                       
                     34
                     http://dbpedia.org/resource/DonGuralEsko                                         
                     31   
                     ------------------------------------------------------------------------------------
                     
                     SELECT  ?artist (count (?who) as ?count) {  
                     ?artist  &lt;http://dbpedia.org/property/associatedActs&gt; ?who. 
                     }  ORDER BY DESC (?count) LIMIT 10   
                     
                     http://dbpedia.org/resource/Gary_Kellgren                                        
                     42
                     http://dbpedia.org/resource/Johnny_Goudie                                        
                     36
                     http://dbpedia.org/resource/Even_Steven_Levee                                    
                     33
                     http://dbpedia.org/resource/Shelter_%28band%29                                   
                     29
                     http://dbpedia.org/resource/Emmylou_Harris                                       
                     29
                     http://dbpedia.org/resource/Conny_Plank                                          
                     27
                     http://dbpedia.org/resource/Exit-13                                              
                     27
                     http://dbpedia.org/resource/K.Will                                               
                     27
                     http://dbpedia.org/resource/Warren_Zevon                                         
                     27
                     http://dbpedia.org/resource/Damian_LeGassick                                     
                     25  
                     ------------------------------------------------------------------------------------
                     
                     SELECT ?person (count(?person) as ?count) {
                     ?artist &lt;http://dbpedia.org/ontology/associatedMusicalArtist&gt; ?person.
                     } ORDER BY DESC (?count) LIMIT 10
                     
                     http://dbpedia.org/resource/Snoop_Dogg                                           
                     81
                     http://dbpedia.org/resource/Ozzy_Osbourne                                        
                     63
                     http://dbpedia.org/resource/Wu-Tang_Clan                                         
                     56
                     http://dbpedia.org/resource/Dr._Dre                                              
                     52
                     http://dbpedia.org/resource/Guns_N%27_Roses                                      
                     52
                     http://dbpedia.org/resource/Lil_Wayne                                            
                     51
                     http://dbpedia.org/resource/Morning_Musume                                       
                     50
                     http://dbpedia.org/resource/Jay-Z                                                
                     50
                     http://dbpedia.org/resource/Bob_Dylan                                            
                     48
                     http://dbpedia.org/resource/Miles_Davis                                          
                     48
                     
                     
                  </div>
               </div>
               
            </div>
         </div><a name="BridgingtheDataSourcesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e580" xml:id="bridgingSources" xreflabel="Bridging Data Sources">
            <div class="title e581">Bridging the Data Sources</div>
            <div class="para e582">
               In order to address some of the more difficult questions or compare results between
               data sources,
               we needed a way to combine the RDF datasets, or at least to connect musical artist
               identifiers
               across DBpedia and MusicBrainz. 
               
            </div>
            <div class="para e583"> We employed the OpenLink Virtuoso Universal Server 
               <div class="xref e584" linkend="virtuoso"></div> as
               an RDF store. While there are other very good RDF stores such as 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e585" xlink:actuate="onRequest" xlink:href="http://4store.org/" xlink:show="new" xlink:type="simple">4store</div>, the Virtuoso Universal Server 
               <div class="popupBox e586">
                  <div class="popupLabel" onmouseover="$('#d1e1102').show('1000');" onmouseout="$('#d1e1102').hide('1000');">[ footnote ]</div>
                  <div id="d1e1102" style="display: none;">
                     <div class="footnote">
                        <div class="para e587">The OpenLink Virtuoso Universal Server supports relational data
                           management, XML and RDF data management, free text content management with
                           full text indexing and web services, and functions as a document web server,
                           linked data server and web application server.
                        </div>
                     </div>
                  </div>
               </div> is compelling because it supports reasoning. 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e588" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Backward_chaining" xlink:show="new" xlink:type="simple">Backward-chaining
                  reasoning
               </div> is the ability to derive new information based on existing
               information at run time. This contrasts with forward chaining reasoning in which derived
               information
               is expressed explicitly. An example of forward chaining reasoning would be creating
               and adding triples that represented new information that was inherent in information
               the
               datastore already contained. 
               
               <div class="popupBox e589">
                  <div class="popupLabel" onmouseover="$('#d1e1109').show('1000');" onmouseout="$('#d1e1109').hide('1000');">[ footnote ]</div>
                  <div id="d1e1109" style="display: none;">
                     <div class="footnote">
                        <div class="para e590">"Inference is moreso the means or mechanisms by which reasoning
                           occurs. Reasoning is the 'goal' whereas inferencing is the
                           'implementation'". -- From 
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e591" xlink:actuate="onRequest" xlink:href="http://answers.semanticweb.com/questions/3036/whats-the-difference-between-reasoning-and-inferencing" xlink:show="new" xlink:type="simple">answers.semanticweb.com</div>. 
                        </div>
                     </div>
                  </div>
               </div> 
               There are two major costs to leveraging backward chaining reasoning. The
               first and foremost cost is that derived information is created each time it is needed;
               it is therefore quite likely
               that the same information is derived repeatedly at run time. The advantage, however,
               is that the derived information does not take up any space in the database. The
               second requirement for leveraging backward chaining reasoning in Virtuoso is the use
               of specific predicates, none of which were available in the native datasets with
               which we worked. 
               
            </div>
            <div class="para e592"> 
               Given that the IRI for Eric Clapton was different in DBPedia and MusicBrainz, we used
               forward
               chaining to express the relatedness between these two IRI’s and thereby facilitating
               backward chaining reasoning in queries. We used the SPARQL
               
               <div class="code e593">INSERT</div> directive to create new statements which made
               assertions explicit as a forward-chaining reasoning strategy. Specifically, the
               assertions we added leveraged the 
               <div class="code e594">owl:sameAs</div>
               <div class="popupBox e595">
                  <div class="popupLabel" onmouseover="$('#d1e1123').show('1000');" onmouseout="$('#d1e1123').hide('1000');">[ footnote ]</div>
                  <div id="d1e1123" style="display: none;">
                     <div class="footnote">
                        <div class="para e596">
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e597" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/owl-ref/#sameAs-def" xlink:show="new" xlink:type="simple">owl:sameAs</div> is often used in establishing mappings between two or more ontologies.
                        </div>
                     </div>
                  </div>
               </div> predicates 
               
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e598" xlink:actuate="onRequest" xlink:href="http://docs.openlinksw.com/virtuoso/rdfsparqlrule.html#rdfsameas" xlink:show="new" xlink:type="simple">Virtuoso defines</div> to empower
               reasoning. The
               following query was used to create an assertion stating that the DBpedia Subject IRI
               of type
               
               <div class="code e599">http://dbpedia.org/ontology/MusicalArtist</div> corresponds to the MusicBrainz Subject IRIs of type
               
               <div class="code e600">http://musicbrainz.org/mm/mm-2.1#Artist</div> whenever the DBpedia
               
               <div class="code e601">rdf-schema#label</div> matches the MusicBrainz 
               <div class="code e602">dc:title</div>
               exactly. 
               <div class="programlisting e603" xml:space="preserve">
                  
                  SPARQL INSERT in GRAPH inference/sameAs&gt; 
                  {?mbiri &lt;http://www.w3.org/2002/07/owl#sameAs&gt; ?s} 
                  WHERE { 
                  ?s &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://dbpedia.org/ontology/MusicalArtist&gt;.
                  
                  ?s &lt;http://www.w3.org/2000/01/rdf-schema#label&gt; ?dbpedianame. 
                  ?mbiri &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://musicbrainz.org/mm/mm-2.1#Artist&gt;.
                  
                  ?mbiri &lt;http://purl.org/dc/elements/1.1/title&gt; ?mbname. 
                  FILTER (str(?mbname) = str (?dbpedianame)) };    
                  
                  
               </div>
               This query resulted in the addition of 16,029 
               <div class="code e604">owl:sameAs</div> assertions to our datastore which took 
               109,692,665 msec (30.47 hours) to complete.
               
            </div>
            <div class="para e605">Since neither these assertions nor the DBpedia and MusicBrainz assertions were in
               the same 
               <div class="code e606">NAMED GRAPH</div>, it was necessary to use another unique
               capability of the Virtuoso Universal Server called 
               <div class="code e607">GRAPH GROUPs</div>. 
               This enabled us to refer to multiple 
               <div class="code e608">NAMED GRAPHs</div> as if they were one. First we
               created a 
               <div class="code e609">GRAPH GROUP</div> with the following command: 
               
            </div>
            <div class="programlisting e610" xml:space="preserve">
               DB.DBA.RDF_GRAPH_GROUP_CREATE ('http://group.dbpedia.inference','1'); 
               
            </div>
            <div class="para e611">
               Then we placed the previously created 
               <div class="code e612">owl:sameAs</div> assertions, as well as
               the 
               <div class="code e613">NAMED GRAPHs</div> containing DBpedia assertions and the MusicBrainz assertions 
               into the 
               <div class="code e614">GRAPH GROUP</div>:   
               
            </div>
            <div class="programlisting e615" xml:space="preserve">
               DB.DBA.RDF_GRAPH_GROUP_INS('http://group.dbpedia.inference' , 'inference/sameAs');
               
               DB.DBA.RDF_GRAPH_GROUP_INS('http://group.dbpedia.inference' , 'http://mytest.com');
               DB.DBA.RDF_GRAPH_GROUP_INS('http://group.dbpedia.inference' , 'http://musicbrainz.com');
               
               
            </div>
            <div class="para e616">
               To demonstrate that the 
               <div class="code e617">owl:sameAs</div> assertions we are indeed
               intersecting the two datasets, consider the following query that determines the properties
               connecting Eric Clapton to resources. Compare this to the figure
               
               <div class="xref e618" linkend="ClaptonPropertiesV1"></div>.
               
            </div>
            <div class="programlisting e619" xml:space="preserve">
               
               DEFINE input:same-as "yes" 
               SELECT DISTINCT ?predicate  
               FROM &lt;http://group.dbpedia.inference&gt; WHERE 
               {  
               ?s ?predicate &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.             
               } ORDER BY ?predicate 
               
               
            </div>
            <div class="para e620">
               The result of this query is 30 properties which is 7 more than the result when querying
               only DBpedia,
               6 of which come from MusicBrainz. Compare this result to the previous query results
               shown in
               figures 
               <div class="xref e621" linkend="ClaptonPropertiesV1"></div> and 
               <div class="xref e622" linkend="claptonPropertiesV2"></div>.
               
            </div>
            <div class="figure e623" xml:id="claptonPropertiesCombined" xreflabel="Clapton's Properties Combined">
               <div class="title e624">Clapton's Properties in Combined Datastore (DBpedia and MusicBrainz) (30 predicates)</div>
               <div class="programlisting e625" xml:space="preserve">
                  
                  http://dbpedia.org/ontology/artist
                  http://dbpedia.org/ontology/associatedBand
                  http://dbpedia.org/ontology/associatedMusicalArtist
                  http://dbpedia.org/ontology/composer
                  http://dbpedia.org/ontology/musicComposer
                  http://dbpedia.org/ontology/musicalArtist
                  http://dbpedia.org/ontology/musicalBand
                  http://dbpedia.org/ontology/partner
                  http://dbpedia.org/ontology/producer
                  http://dbpedia.org/ontology/spouse
                  http://dbpedia.org/ontology/starring
                  http://dbpedia.org/ontology/wikiPageDisambiguates
                  http://dbpedia.org/ontology/writer
                  http://dbpedia.org/property/associatedActs
                  http://dbpedia.org/property/before
                  http://dbpedia.org/property/currentMembers
                  http://dbpedia.org/property/music
                  http://dbpedia.org/property/pastMembers
                  http://dbpedia.org/property/producer
                  http://dbpedia.org/property/spouse
                  http://dbpedia.org/property/starring
                  http://dbpedia.org/property/writer
                  http://musicbrainz.org/ar/ar-1.0#composer
                  http://musicbrainz.org/ar/ar-1.0#instrument
                  http://musicbrainz.org/ar/ar-1.0#performer
                  http://musicbrainz.org/ar/ar-1.0#producer
                  http://musicbrainz.org/ar/ar-1.0#toArtist
                  http://musicbrainz.org/ar/ar-1.0#vocal
                  http://purl.org/dc/elements/1.1/creator
                  http://www.w3.org/2002/07/owl#sameAs                
                  
                  
               </div>
            </div>
            <div class="para e626">
               Any queries that benefit from using a single IRI to refer to the same artist in both
               datasets 
               becomes available by adding 
               <div class="code e627">DEFINE input:same-as "yes"</div> before our result clause.
               
            </div>
            <div class="para e628">
               The same 30 results can be obtained with the 
               <div class="code e629">UNION</div> query below. However, this query
               requires knowledge of the GUID-based MusicBrainz IRI for each musician of interest,
               whereas the above query takes advantage of the previously established
               correspondence between the methods of artist identification in DBpedia and MusicBrainz.
               Therefore, the 
               <div class="code e630">owl:sameAs</div> approach is clearly the better solution.
               
            </div>
            <div class="programlisting e631" xml:space="preserve">
               
               SELECT DISTINCT ?predicate WHERE {
               { 
               ?s ?predicate &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.             
               } 
               UNION
               { 
               ?s ?predicate &lt;http://musicbrainz.org/mm-2.1/artist/618b6900-0618-4f1e-b835-bccb17f84294&gt;.
               
               } 
               } ORDER BY ?predicate                
               
               
            </div>
         </div><a name="YouSayIt'sYourBirthday?ANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e632">
            <div class="title e633">You Say It's Your Birthday?</div>
            <div class="para e634"> Given the ability to bridge the two datasets, we can now issue queries that
               compare data values across the sets. The query below obtains the birthdates for each
               musical artist in both sources and returns the discrepancies. 
            </div>
            <div class="programlisting e635" xml:space="preserve">
               
               DEFINE input:same-as "yes" select ?musician ?DBPdate  ?MBdate 
               {
               ?s &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://dbpedia.org/ontology/MusicalArtist&gt;.
               
               ?s &lt;http://dbpedia.org/ontology/birthDate&gt; ?DBPdate . 
               ?s &lt;http://musicbrainz.org/mm/mm-2.1#beginDate&gt; ?MBdate. 
               ?s &lt;http://www.w3.org/2000/01/rdf-schema#label&gt; ?musician. 
               FILTER (str(?MBdate) != str (?DBPdate))
               } 
               ORDER BY ?musician               
               
               
            </div>
            <div class="para e636"> A sampling of the nearly 
               <div class="emphasis e637" role="ital">one thousand</div> mismatched
               birthdates follows. Typically the differences are one day, one month, or one year,
               but note several major differences. We have yet to independently verify all of the
               discrepancies, but we note that the birthday of George Harrison is incorrect in
               MusicBrainz. In fact, MusicBrainz often uses "00-00" dates indicating only the year
               is known. It is probably safe to conjecture that Courtney Love is not 21 and Five
               For Fighting (singer-songwriter John Ondrasik) is not 14, so these birthdates are
               more likely when their musical careers started. Wikipedia confirms that 1997 is indeed
               the first "year active" for Five For Fighting, but Love's initial "year
               active" is 1982. Clearly the interpretation of MusicBrainz's 
               <div class="code e638">beginDate</div> property
               varies across artists.
               Our tentative conclusion is that DBpedia is more accurate than
               MusicBrainz with respect to birthdates. 
            </div>
            <div class="programlisting e639" xml:space="preserve">
               musician            DBPdate 	 MBdate
               50 Cent                1975-07-06 	1976-07-06
               Andy Partridge         1953-11-11 	1953-12-11
               Astrud Gilberto        1940-03-29 	1940-03-30
               Blind Willie Johnson   1897-01-22 	1902-00-00     [5 year difference]
               Blind Willie McTell    1898-05-05 	1901-05-05     [3 year difference]
               Carl Perkins           1932-04-09 	1928-08-16     [4 year difference]
               Courtney Love          1964-07-09 	1990-00-00     [extremely different!]
               David Lee Roth         1954-10-10 	1955-10-10
               Eddie Van Halen        1955-01-26 	1956-01-26
               Edgar Winter           1947-12-28 	1946-12-28
               Five for Fighting      1965-01-07 	1997-00-00     [extremely different!]
               Frankie Valli          1934-05-03 	1937-05-03     [3 year difference]
               George Harrison        1943-02-25 	1943-02-24
               Jennifer Lopez         1969-07-24 	1970-07-24
               
            </div>
         </div><a name="TopRecordLabelsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e640">
            <div class="title e641">Top Record Labels</div>
            <div class="para e642">
               One of our original questions was "Is there a predominant record label in the music
               world?"
               The following query answers that question.
               
            </div>
            <div class="programlisting e643" xml:space="preserve">
               
               SELECT ?label (count(?label) as ?count)
               {
               ?artist &lt;http://dbpedia.org/ontology/recordLabel&gt; ?label
               } 
               ORDER BY DESC (?count) LIMIT 20      
               
               
            </div>
            <div class="para e644">The results are shown below.</div>
            <div class="programlisting e645" xml:space="preserve">
               
               http://dbpedia.org/resource/Columbia_Records         5762
               http://dbpedia.org/resource/EMI                      4215
               http://dbpedia.org/resource/Warner_Bros._Records     3518
               http://dbpedia.org/resource/Epic_Records             3509
               http://dbpedia.org/resource/Atlantic_Records         3502
               http://dbpedia.org/resource/Capitol_Records          3264
               http://dbpedia.org/resource/Virgin_Records           2926
               http://dbpedia.org/resource/RCA_Records              2590
               http://dbpedia.org/resource/MCA_Records              1975
               http://dbpedia.org/resource/Mercury_Records          1919
               http://dbpedia.org/resource/Island_Records           1800
               http://dbpedia.org/resource/A&amp;M_Records              1697
               http://dbpedia.org/resource/Sony_BMG                 1513
               http://dbpedia.org/resource/Elektra_Records          1480
               http://dbpedia.org/resource/Reprise_Records          1406
               http://dbpedia.org/resource/Arista_Records           1382
               http://dbpedia.org/resource/Geffen_Records           1372
               http://dbpedia.org/resource/Universal_Music_Group    1339
               http://dbpedia.org/resource/Universal_Records        1277
               http://dbpedia.org/resource/Interscope_Records       1226  
               
               
            </div>
         </div><a name="MusicalGenresANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e646" xml:id="genres" xreflabel="Musical Genres">
            <div class="title e647">Musical Genres</div>
            <div class="para e648">In order to determine which artist is most influential in rock music, we needed to
               be able to
               reliably specify the genre of interest. However, formulating queries involving genres
               is more difficult than it would seem. DBpedia (and presumably Wikipedia)
               defines 2,887 musical genres of which 330 contain "rock" in their label. Rock-related
               genres literally run the gamut
               from A to Z -- Aboriginal_rock to Zulu_rock (really!). To our surprise, the single
               concept of "rock and roll music"
               is represented by 18 distinctly different IRIs, as determined by the following query.
               
               <div class="popupBox e649">
                  <div class="popupLabel" onmouseover="$('#d1e1250').show('1000');" onmouseout="$('#d1e1250').hide('1000');">[ footnote ]</div>
                  <div id="d1e1250" style="display: none;">
                     <div class="footnote">
                        <div class="para e650">Actually, there is a 19th IRI if the query is not constrained to require the string
                           "roll": 
                           
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e651" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://dbpedia.org/resource/Rock_music</div>. This link redirects to a page which among other things lists 
                           many subgenres of rock.
                           
                        </div>
                     </div>
                  </div>
               </div>
               
            </div>
            <div class="programlisting e652" xml:space="preserve">
               
               SELECT DISTINCT (?genre)
               {
               ?album &lt;http://dbpedia.org/ontology/genre&gt; ?genre.
               ?album &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://dbpedia.org/ontology/Album&gt;.
               FILTER regex (?genre, "[Rr]ock") .
               FILTER regex (?genre, "[Rr]oll") .
               }
               ORDER BY ?genre                
               
               
            </div>
            <div class="para e653">The variants of "rock and roll" are:</div>
            <div class="programlisting e654" xml:space="preserve">
               
               http://dbpedia.org/resource/British_Rock_and_Roll
               http://dbpedia.org/resource/Real_Rock_and_Roll
               http://dbpedia.org/resource/Rock%27n%27Roll
               http://dbpedia.org/resource/Rock%27n%27roll
               http://dbpedia.org/resource/Rock%27n_roll
               http://dbpedia.org/resource/Rock_%27N%27_Roll
               http://dbpedia.org/resource/Rock_%27n%27_Roll
               http://dbpedia.org/resource/Rock_%27n%27_roll
               http://dbpedia.org/resource/Rock_%27n_Roll
               http://dbpedia.org/resource/Rock_&amp;_Roll
               http://dbpedia.org/resource/Rock_&amp;_roll
               http://dbpedia.org/resource/Rock_N%27_Roll
               http://dbpedia.org/resource/Rock_and_Roll
               http://dbpedia.org/resource/Rock_and_Roll_music
               http://dbpedia.org/resource/Rock_and_roll
               http://dbpedia.org/resource/Rock_n%27_Roll
               http://dbpedia.org/resource/Rock_n_Roll
               http://dbpedia.org/resource/Spanish_language_rock_and_roll               
               
               
            </div>
            <div class="para e655">The first and last results above could be considered outliers since they are 
               narrowings of the generic rock and roll classification.
            </div>
            <div class="para e656">
               Although Clapton is identified by only a few genres on Wikipedia, his albums fall
               into 18 genres,
               as determined by the query:
               
            </div>
            <div class="programlisting e657" xml:space="preserve">
               
               SELECT DISTINCT (?genre) WHERE 
               	{
               	?s &lt;http://dbpedia.org/ontology/artist&gt; &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.
               	?s &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://dbpedia.org/ontology/Album&gt;.
               	?s &lt;http://dbpedia.org/ontology/genre&gt; ?genre
               	}
               ORDER BY ?genre                
               
               
            </div>
            <div class="para e658">Genres associated with Clapton's albums follow. Note four variants each for the 
               concepts "blues-rock" and "rock and roll".
            </div>
            <div class="programlisting e659" xml:space="preserve">
               
               http://dbpedia.org/resource/Acoustic_blues
               http://dbpedia.org/resource/Blues
               http://dbpedia.org/resource/Blues-Rock
               http://dbpedia.org/resource/Blues-rock
               http://dbpedia.org/resource/Blues_Rock
               http://dbpedia.org/resource/Blues_rock
               http://dbpedia.org/resource/British_Blues
               http://dbpedia.org/resource/Electric_blues
               http://dbpedia.org/resource/Folk_music
               http://dbpedia.org/resource/Jazz
               http://dbpedia.org/resource/Orchestral
               http://dbpedia.org/resource/Pop_music
               http://dbpedia.org/resource/Reggae
               http://dbpedia.org/resource/Rock_%28music%29
               http://dbpedia.org/resource/Rock_and_Roll
               http://dbpedia.org/resource/Rock_and_roll
               http://dbpedia.org/resource/Rock_music
               http://dbpedia.org/resource/Soul_blues    
               
               
            </div>
            <div class="para e660">For any given album, more than one genre may apply. For example, the 1975 album 
               "There's One in Every Crowd" is classified as both reggae and blues-rock.
               For those wondering which Clapton album could possibly be considered jazz or orchestral,
               that distinction
               belongs to the first "Lethal Weapon" soundtrack, which is also designated as blues.
               
               However, the genre query above does not capture all genres associated with Clapton.
               For example,
               the genre for "Lethal Weapon 3" soundtrack is simply "soundtrack".
               
               
            </div>
            <div class="para e661">
               If we wish to display all of Clapton's blues and rock albums, we could use a query
               such as:
               
            </div>
            <div class="programlisting e662" xml:space="preserve">
               
               SELECT DISTINCT (?genre) ?album WHERE 
               	{
               	?album &lt;http://dbpedia.org/ontology/artist&gt; &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.
               	?album &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://dbpedia.org/ontology/Album&gt;.
               	?album &lt;http://dbpedia.org/ontology/genre&gt; ?genre .
               FILTER ( regex (?genre, "[Rr]ock") ||  regex (?genre, "[Bb]lues"))
               	}
               ORDER BY ?album                
               
               
            </div>
            <div class="para e663">
               To display all of Clapton's albums and their associated genre(s), we used the following
               query:
               
            </div>
            <div class="programlisting e664" xml:space="preserve">
               
               SELECT ?album ?genre WHERE 
               	{
               	?album &lt;http://dbpedia.org/ontology/artist&gt; &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.
               	?album &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://dbpedia.org/ontology/Album&gt;.
               	?album &lt;http://dbpedia.org/ontology/genre&gt; ?genre .
               	}
               ORDER BY ?album                
               
               
            </div>
            <div class="para e665">
               The result including albums with several genres listed follows. (The common portion
               of the IRI,
               
               <div class="code e666">http://dbpedia.org/resource/</div> has been removed from each resource to make the results 
               more readable.)
               
            </div>
            <div class="programlisting e667" xml:space="preserve">
               
               album                                         genre
               24_Nights                                                       Rock_music
               24_Nights                                                       Blues
               461_Ocean_Boulevard                                             Blues-rock
               Another_Ticket                                                  Blues-rock
               August_%28album%29                                              Rock_music
               August_%28album%29                                              Pop_music
               Back_Home_%28Eric_Clapton_album%29                              Blues-Rock
               Backless                                                        Rock_and_roll
               Backtrackin%27                                                  Rock_%28music%29
               Behind_the_Sun_%28Eric_Clapton_album%29                         Rock_music
               Behind_the_Sun_%28Eric_Clapton_album%29                         Pop_music
               Blues_%28Eric_Clapton_album%29                                  Blues-rock
               Clapton_%282010_album%29                                        Blues-rock
               Clapton_Chronicles:_The_Best_of_Eric_Clapton                    Rock_and_Roll
               Crossroads_%28Eric_Clapton_album%29                             Blues-rock
               Crossroads_2:_Live_in_the_Seventies                             Blues-rock
               E._C._Was_Here                                                  Blues-rock
               Eric_Clapton%27s_Rainbow_Concert                                Blues-rock
               Eric_Clapton_%28album%29                                        Rock_and_Roll
               From_the_Cradle                                                 Blues
               From_the_Cradle                                                 Electric_blues
               From_the_Cradle                                                 Soul_blues
               From_the_Cradle                                                 British_Blues
               Guitar_Boogie                                                   Rock_and_roll
               Guitar_Boogie                                                   Blues-rock
               Journeyman_%28album%29                                          Blues-rock
               Just_One_Night_%28album%29                                      Blues-rock
               Lethal_Weapon_%28soundtrack%29                                  Jazz
               Lethal_Weapon_%28soundtrack%29                                  Blues
               Lethal_Weapon_%28soundtrack%29                                  Orchestral
               Live_in_Hyde_Park_%28Eric_Clapton_album%29                      Rock_music
               Live_in_Hyde_Park_%28Eric_Clapton_album%29                      Blues
               Live_in_Japan_%28George_Harrison_album%29                       Rock_and_roll
               Me_and_Mr._Johnson                                              Blues
               Money_and_Cigarettes                                            Blues-rock
               No_Reason_to_Cry                                                Rock_and_roll
               One_More_Car,_One_More_Rider                                    Blues-rock
               Pilgrim_%28Eric_Clapton_album%29                                Rock_music
               Pilgrim_%28Eric_Clapton_album%29                                Blues
               Pilgrim_%28Eric_Clapton_album%29                                Pop_music
               Reptile_%28album%29                                             Rock_music
               Reptile_%28album%29                                             Blues
               Riding_with_the_King_%28B._B._King_and_Eric_Clapton_album%29    Blues-rock
               Riding_with_the_King_%28B._B._King_and_Eric_Clapton_album%29    Blues_rock
               Slowhand 	                                                    Rock_music
               Steppin%27_Out_%28Eric_Clapton_album%29 	                    Blues-rock
               The_Cream_of_Clapton                                            Rock_music
               The_Cream_of_Clapton                                            Blues_Rock
               The_Cream_of_Eric_Clapton 	                                    Rock_music
               The_History_of_Eric_Clapton                                     Rock_music
               The_History_of_Eric_Clapton                                     Blues
               There%27s_One_in_Every_Crowd                                    Reggae
               There%27s_One_in_Every_Crowd                                    Blues-rock
               Time_Pieces:_The_Best_of_Eric_Clapton                           Blues_Rock
               Unplugged_%28Eric_Clapton_album%29 	                            Folk_music
               Unplugged_%28Eric_Clapton_album%29 	                            Acoustic_blues
               
               
            </div>
            <div class="para e668">
               However, if we omit a reference to genre and simply ask for Clapton's albums
               using the query:              
               
            </div>
            <div class="programlisting e669" xml:space="preserve">
               
               SELECT ?album WHERE 
               	{
               	?album &lt;http://dbpedia.org/ontology/artist&gt; &lt;http://dbpedia.org/resource/Eric_Clapton&gt;.
               	?album &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt; &lt;http://dbpedia.org/ontology/Album&gt;.
               	}
               ORDER BY ?album                  
               
               
            </div>
            <div class="para e670">
               then the results contain 7 additional albums (below). We have not been able to determine
               the 
               reason for this disparity since there is genre information for each of them when we
               dereference
               their IRIs on the DBpedia site.
               
            </div>
            <div class="programlisting e671" xml:space="preserve">
               Clapton_%281973_album%29                dbpprop:genre    Rock       
               [compilation from 1973]
               
               Complete_Clapton                        dbpprop:genre    Blues      
               [compilation from 2007]
               
               Edge_of_Darkness_%28soundtrack%29       dbpprop:genre    Soundtracks 
               [18 minute 1985 soundtrack for British TV series]
               
               Eric_Clapton_at_His_Best                dbpprop:genre    Rock         
               [compilation from 1972]
               
               Lethal_Weapon_3_%28soundtrack%29        dbpprop:genre    Orchestral, Jazz, and Blues
               
               [Wikipedia soundtrack entry shares page with the movie; 2 infoboxes]
               
               Live_from_Madison_Square_Garden_%28Eric_Clapton_and_Steve_Winwood_album%29  dbpprop:genre
               Blues/Rock            
               [note the slash]
               
               Rush_%28soundtrack%29                   dbpedia-owl:type dbpedia:Soundtrack  
               [Wikipedia soundtrack entry shares page with the movie; but no album infobox]    
               
               
            </div>
            <div class="para e672"> 
               A better solution for managing the permutations between the
               representations for the genre concept "Rock and Roll" as well as its narrowings would
               be to
               again use reasoning. The semantically equivalent variant genres could be represented
               as 
               
               <div class="code e673">rdfs:subProperties</div> of one
               another, thereby enabling a single genre representation to refer to many. 
               <div class="popupBox e674">
                  <div class="popupLabel" onmouseover="$('#d1e1306').show('1000');" onmouseout="$('#d1e1306').hide('1000');">[ footnote ]</div>
                  <div id="d1e1306" style="display: none;">
                     <div class="footnote">
                        <div class="para e675">However, we chose to use 
                           <div class="code e676">rdfs:subClassOf</div> because it was the most appropriate RDFS property that the 
                           Virtuoso database reasoner supported.
                        </div>
                     </div>
                  </div>
               </div> This would
               require analogous steps to where we created and loaded assertions, defined a graph,
               define a graph group, and in this case define a 
               <div class="code e677">rule_set</div> in Virtuoso. Then, using the
               proper syntax we could query using that 
               <div class="code e678">rule_set</div> to include exactly the genres we
               intend to use in our queries. A less elegant approach would be to enumerate them one
               by one and construct a
               
               <div class="code e679">UNION</div> of results. 
               
            </div>
         </div>
      </div><a name="LimitationsandFurtherEffortsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e680">
         <div class="title e681">Limitations and Further Efforts</div>
         <div class="para e682">We recognize several limitations in our work to date:
            
            <div class="itemizedlist e683">
               <div class="listitem e684">
                  <div class="para e685">data inconsistencies</div>
               </div>
               <div class="listitem e686">
                  <div class="para e687">need for further RDF visualization work</div>
               </div>
               <div class="listitem e688">
                  <div class="para e689">need to address more of the original problems</div>
               </div>
               <div class="listitem e690">
                  <div class="para e691">constructing queries across datasets</div>
               </div>
            </div>  
            Each is discussed in the following subsections.
            
         </div><a name="DataInconsistenciesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e692">
            <div class="title e693">Data Inconsistencies</div>
            <div class="para e694">While we would wish the source RDF data could be regarded as ground truth, we realize
               there are
               several problems with our sources.
               
               <div class="itemizedlist e695">
                  <div class="listitem e696">
                     <div class="para e697">
                        <div class="emphasis e698" role="ital">Errors of omission: </div> Since the original data in Wikipedia is community-entered,
                        it is predictable that certain facts will be missing from the data but are in fact
                        true. Some
                        of thes facts may be obscure while others may be more obvious to a subject matter
                        expert 
                        for the given topic. For example, what if Eric Clapton were to enter his own data
                        about himself?
                     </div>
                  </div>
               </div>
               
               <div class="itemizedlist e699">
                  <div class="listitem e700">
                     <div class="para e701">
                        <div class="emphasis e702" role="ital">Poor data curation: </div> In some cases, Wikipedia data may
                        have been present and complete, but there might have been problems in the extraction
                        process from Wikipedia
                        to DBpedia.
                     </div>
                  </div>
               </div>
               
               <div class="itemizedlist e703">
                  <div class="listitem e704">
                     <div class="para e705">
                        <div class="emphasis e706" role="ital">Erroneous data: </div> Such problems are due to simple data entry errors, 
                        unintentional errors in stating what the data entry person considers facts,
                        or possibly intentional falsehoods or unsubstantiated facts.
                     </div>
                  </div>
               </div>                
               
               <div class="itemizedlist e707">
                  <div class="listitem e708">
                     <div class="para e709">
                        <div class="emphasis e710" role="ital">Unclear semantics: </div> The various properties which were of importance to us were
                        generally not defined in the ontology, as discussed in 
                        <div class="xref e711" linkend="workingDefs"></div>. We struggled to interpret
                        these terms in a consistent manner. It is possible that individuals who care less
                        about the precision of 
                        information may have entered relationships not necessarily using the correct semantics.
                        We believe that the ambiguity of the musician-related properties was the most significant
                        problem with the reliability of the data and therefore the biggest challenge in testing
                        our
                        hypothesis.
                     </div>
                  </div>
               </div>
               
            </div>
         </div><a name="FurtherRDFVisualizationWorkANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e712">
            <div class="title e713">Further RDF Visualization Work</div>
            <div class="para e714"> Since AJAX facilitates updating a web page without reloading the entire page,
               we plan to insert additional links within the SVG graphic to add more
               interactivity, invoking additional queries. Links could also be added during the
               module processing. CSS and XSLT could also be used to enhance the XML
               presentation. 
            </div>
            <div class="para e715"> The current visualization graph is quite wide and long, making it difficult to
               view in a web browser without additional panning and zooming capabilities. Useful
               visualization of the result set is difficult but we intend to improve the
               visualization to facilitate traversing the dataset using hyperlinks. The
               hyperlinks are there now, but there is currently a problem with the JavaScript
               
               <div class="code e716">POST</div> method. 
               
            </div>
         </div><a name="FurtherAttemptstoAddresstheOriginalProblemsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e717">
            <div class="title e718">Further Attempts to Address the Original Problems</div>
            <div class="para e719">
               We initially formulated nearly two dozen questions [see 
               <div class="xref e720" linkend="problemList"></div>]
               that we believed we could use the DBpedia and MusicBrainz
               RDF  datasets to answer. As of this July writing, few of these questions have been
               answered definitively. 
               If properly bounded, the following are the questions we should be able to address
               in the future.
               
            </div>
            <div class="orderedlist e721">
               <div class="listitem e722">
                  <div class="para e723">Which recording artist has directly played with the most musicians?</div>
               </div>
               <div class="listitem e724">
                  <div class="para e725">Which recording artist has the most connections within six degrees?</div>
               </div>
               <div class="listitem e726">
                  <div class="para e727">Which musician has been a session man for the most number of artists?</div>
               </div>
               <div class="listitem e728">
                  <div class="para e729">Which recording artist was most active during a particular decade?</div>
               </div>
               <div class="listitem e730">
                  <div class="para e731">Among all artists of a particular genre, who has played with the most other musicians?</div>
               </div>
               <div class="listitem e732">
                  <div class="para e733">Which rock artist's extended graph has the most other artists in 2 degrees? 3 degrees?
                     4 degrees?
                  </div>
               </div>
               <div class="listitem e734">
                  <div class="para e735">Who has appeared on the most albums?</div>
               </div>
               <div class="listitem e736">
                  <div class="para e737">Which musician-related properties are reversible (inverse makes sense)?</div>
               </div>
               <div class="listitem e738">
                  <div class="para e739">Who created the most songs?</div>
               </div>
               <div class="listitem e740">
                  <div class="para e741">Which song has been recorded the most times by any artists? 
                     ("Yesterday" and "White Christmas" are typically cited.)
                  </div>
               </div>
               <div class="listitem e742">
                  <div class="para e743">What is the average age of a musician when he/she first joined a band?</div>
               </div>
            </div>
            <div class="para e744">
               Other questions we may potentially be able to address include:
               
            </div>
            <div class="orderedlist e745">
               <div class="listitem e746">
                  <div class="para e747">If we weight results by the length of time a band stays together, how does that impact
                     other queries?
                  </div>
               </div>
               <div class="listitem e748">
                  <div class="para e749">Does total number of songs or album released correlate with other measures of success?</div>
               </div>
               <div class="listitem e750">
                  <div class="para e751">Which solo artist has had the longest career?</div>
               </div>
               <div class="listitem e752">
                  <div class="para e753">Which band has been together (in some form) the longest time?</div>
               </div>
               <div class="listitem e754">
                  <div class="para e755">For bands with changing membership, can we conclude which configuration lasted the
                     longest?
                  </div>
               </div>
               <div class="listitem e756">
                  <div class="para e757">What is the "Eric Clapton number" (a la Kevin Bacon number) for various musicians?</div>
               </div>
            </div>
         </div><a name="QueriesAcrossDatasetsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e758">
            <div class="title e759">Queries Across Datasets</div>
            <div class="para e760">
               Since we have established a mechanism to 
               refer to a given artist in both datasets using a single IRI,
               we are prepared to ask queries that span the datasets, including
               queries that would not be possible without both sources. A few such queries are as
               follows:
               
            </div>
            <div class="itemizedlist e761">
               <div class="listitem e762">
                  <div class="para e763">Which albums of a given artist occur in one dataset but not the other?
                     Since we are using Virtuoso which does not support the SPARQL 1.1 
                     <div class="code e764">MINUS</div> construct,
                     we would need to use OpenLink's proprietary approach. 
                     <div class="popupBox e765">
                        <div class="popupLabel" onmouseover="$('#d1e1462').show('1000');" onmouseout="$('#d1e1462').hide('1000');">[ footnote ]</div>
                        <div id="d1e1462" style="display: none;">
                           <div class="footnote">
                              <div class="para e766">It is possible that 
                                 <div class="code e767">NOT EXISTS</div> in SPARQL 1.0 would be sufficient.
                              </div>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div class="listitem e768">
                  <div class="para e769">Which albums that occur in both datasets have the same title and record producer but
                     different release dates?
                     This might be difficult to determine because of differences in representation of the
                     record producer name.
                     
                  </div>
               </div>
               <div class="listitem e770">
                  <div class="para e771">For a given artist, return their spouse(s) and children even if they themselves were
                     not
                     musical artists. MusicBrainz only has names of children if they themselves are artists
                     (e.g., has
                     John Lennon's sons but not Paul McCartney's children).
                  </div>
               </div>
            </div>
         </div><a name="PuttheLODRightonMeANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e772">
            <div class="title e773">Put the LOD Right on Me</div>
            <div class="para e774">
               Regrettably, we focused most of our attention on DBpedia, MusicBrainz and Freebase
               web sites, rather than 
               casting a broader net to the 
               <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e775" xlink:actuate="onRequest" xlink:href="http://www.w3.org/wiki/SweoIG/TaskForces/CommunityProjects/LinkingOpenData" xlink:show="new" xlink:type="simple">Linking Open Data</div> 
               community effort initiated by the  W3C's (now closed) Semantic Web Education and Outreach
               (SWEO) Interest Group.
               As we were finalizing this paper, we discovered several key 
               resources that could prove extremely useful in answering some of our original
               questions; we hope to explore resources such as the following over the next year:
               
            </div>
            <div class="itemizedlist e776">
               <div class="listitem e777">
                  <div class="para e778">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e779" xlink:actuate="onRequest" xlink:href="http://www.delicious.com/kidehen/linked_data_demo" xlink:show="new" xlink:type="simple">Demos including DBpedia and MusicBrainz</div> (and many others)
                  </div>
               </div>
               <div class="listitem e780">
                  <div class="para e781">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e782" xlink:actuate="onRequest" xlink:href="http://wiki.dbpedia.org/Downloads32" xlink:show="new" xlink:type="simple">DBpedia Extended Datasets</div> 
                     for MusicBrainz and Freebase
                  </div>
               </div>
               <div class="listitem e783">
                  <div class="para e784">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e785" xlink:actuate="onRequest" xlink:href="http://richard.cyganiak.de/2007/10/lod/" xlink:show="new" xlink:type="simple">LOD cloud diagram</div>, an imagemap showing datasets published in Linked Data format (maintained by Richard
                     Cyganiak and Anja Jentzsch)
                  </div>
               </div>
               <div class="listitem e786">
                  <div class="para e787">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e788" xlink:actuate="onRequest" xlink:href="http://ckan.org/" xlink:show="new" xlink:type="simple">Comprehensive Knowledge Archive Network (CKAN)</div>
                     web-based software for storage and distribution of data supported by the 
                     
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e789" xlink:actuate="onRequest" xlink:href="http://okfn.org/" xlink:show="new" xlink:type="simple">Open Knowledge Foundation</div>
                  </div>
               </div>
               <div class="listitem e790">
                  <div class="para e791">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e792" xlink:actuate="onRequest" xlink:href="http://musicontology.com/" xlink:show="new" xlink:type="simple">Music Ontology</div> especially 
                     
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e793" xlink:actuate="onRequest" xlink:href="http://musicontology.com/#term_MusicArtist" xlink:show="new" xlink:type="simple">MusicArtist</div>, 
                     
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e794" xlink:actuate="onRequest" xlink:href="http://musicontology.com/#term_musicbrainz_guid" xlink:show="new" xlink:type="simple">musicbrainz_guid</div> and
                     
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e795" xlink:actuate="onRequest" xlink:href="http://musicontology.com/#term_supporting_musician" xlink:show="new" xlink:type="simple">supporting_musician</div>
                  </div>
               </div>
               <div class="listitem e796">
                  <div class="para e797">
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e798" xlink:actuate="onRequest" xlink:href="http://linkeddatabook.com/book" xlink:show="new" xlink:type="simple">Linked Data: Evolving the Web into a Global Data Space</div>,  
                     a new book by Tom Heath and Christian Bizer (2011)
                  </div>
               </div>
            </div>
         </div>
      </div><a name="AdvantagesandDisadvantagesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e799">
         <div class="title e800">Advantages and Disadvantages</div>
         <div class="para e801">Next we offer our subjective opinion about the relative advantages and disadvantages
            of our approach
            as compared to simply using the 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e802" xlink:actuate="onRequest" xlink:href="http://dbpedia.org/sparql" xlink:show="new" xlink:type="simple">DBpedia SPARQL endpoint</div> 
            (which also runs on a Virtuoso server).
            
         </div><a name="AdvantagesofOurApproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e803">
            <div class="title e804">Advantages of Our Approach</div>
            <div class="para e805">
               Our Drupal frontend to a dedicated Virtuoso server under our fine-grained control
               afforded us several advantages
               
               <div class="popupBox e806">
                  <div class="popupLabel" onmouseover="$('#d1e1537').show('1000');" onmouseout="$('#d1e1537').hide('1000');">[ footnote ]</div>
                  <div id="d1e1537" style="display: none;">
                     <div class="footnote">
                        <div class="para e807">We note, however, that the 
                           
                           <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e808" xlink:actuate="onRequest" xlink:href="http://blog.dbpedia.org/2011/01/31/dbpedia-36-ami-available/" xlink:show="new" xlink:type="simple">DBpedia Amazon Machine Instance (AMI)</div> 
                           released earlier in 2011 shares several of the advantages discussed in this section.
                        </div>
                     </div>
                  </div>
               </div>, namely:
               
               <div class="itemizedlist e809">
                  <div class="listitem e810">
                     <div class="para e811">
                        <div class="emphasis e812" role="ital">No execution timeout -</div> Time-intensive queries were allowed to run
                        to completion rather than being subject to an externally specified time limit on a
                        shared server.
                        
                     </div>
                  </div>
                  <div class="listitem e813">
                     <div class="para e814">
                        <div class="emphasis e815" role="ital">Higher limits -</div> SPARQL endpoints shared by multiple users are
                        often constrained to a limited number of results (i.e., 2000 for DBpedia endpoint).
                        We did not
                        need to limit the number of results returned since our number of "users" never exceeded
                        three.
                        
                     </div>
                  </div>
                  <div class="listitem e816">
                     <div class="para e817">
                        <div class="emphasis e818" role="ital">Direct access to raw RDF at command line level -</div> When results
                        were not as expected or did not seem to make sense, the ability to examine the actual
                        RDF files
                        (which had been ingested into our datastore) in our Linux environment was invaluable.
                        
                     </div>
                  </div>
                  <div class="listitem e819">
                     <div class="para e820">
                        <div class="emphasis e821" role="ital">Collaborative SPARQL development for saving queries in Drupal -</div>
                        As the three authors worked remotely, it was quite helpful to enter our SPARQL queries
                        into
                        a Drupal interface, run the queries, save the queries, and optionally enter them into
                        a cascading
                        menu system for each other to try so we could discuss results.
                        
                     </div>
                  </div>
                  <div class="listitem e822">
                     <div class="para e823">
                        <div class="emphasis e824" role="ital">More precise SPARQL timing metrics -</div> Again, since we could
                        control which other processes were running and other variables that would otherwise
                        impact
                        timing metrics, we could more accurately time our queries. For example, we found it
                        took
                        on average 3477.6 msec for a query with one 
                        <div class="code e825">FILTER</div> statement comprised of two 
                        
                        <div class="code e826">regex</div> expressions joined by "&amp;&amp;" compared to only
                        731 msec for a similar query in which each 
                        <div class="code e827">regex</div> expression was the parameter of
                        a separate 
                        <div class="code e828">FILTER</div> statement. See the first example in the 
                        <div class="xref e829" linkend="genres"></div> section.
                        
                     </div>
                  </div>
                  <div class="listitem e830">
                     <div class="para e831">
                        <div class="emphasis e832" role="ital">Test harness for repeatedly running the same query -</div> We employed
                        a perl test harness for iterative execution and averaging of results. For example,
                        the previously
                        mentioned 
                        <div class="code e833">FILTER</div> and 
                        <div class="code e834">regex</div> tests were run 1,000 times.
                        
                     </div>
                  </div>
                  <div class="listitem e835">
                     <div class="para e836">
                        <div class="emphasis e837" role="ital">Examination of error messages -</div> We had access to server logging
                        of error messages.
                        
                     </div>
                  </div>
               </div>                
               
            </div>
         </div><a name="DisadvantagesofOurApproachANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e838">
            <div class="title e839">Disadvantages of Our Approach</div>
            <div class="para e840">
               
               <div class="itemizedlist e841">
                  <div class="listitem e842">
                     <div class="para e843">
                        <div class="emphasis e844" role="ital">Static datastore -</div> After we ingested the RDF files, our datastore
                        did not change so it could not take advantage of possible improvements in the DBpedia
                        and Musicbrainz 
                        data throughout the first half of 2011. On the other hand, this was also an advatange
                        since it meant
                        we were not subject to subtle changes that might have impacted previous queries.
                        
                     </div>
                  </div>
                  <div class="listitem e845">
                     <div class="para e846">
                        <div class="emphasis e847" role="ital">Limited knowledge of inner workings -</div> Since we were not members
                        of either the DBpedia or Musicbrainz developer communities, we were not privy to any
                        internal documentation
                        that might have answered some of the questions we raised and helped us to address
                        some of the problems we
                        encountered. In a volunteer developer collaborative environment, it is likely that
                        user-facing 
                        documentation may lag behind actual implementation changes; relevant examples may
                        also be lacking.
                        
                     </div>
                  </div>
               </div>
               
            </div>
         </div>
      </div><a name="RecommendationsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e848">
         <div class="title e849">Recommendations</div>
         <div class="para e850">
            The problems we encountered suggest several recommendations we would like to share
            with the DBPedia and MusicBrainz communities:
            
            <div class="orderedlist e851">
               <div class="listitem e852">
                  <div class="para e853">
                     <div class="emphasis e854" role="bold">Publish example SPARQL queries:</div> Although sample data is readily available
                     on the music sites, we did not find SPARQL queries, just endpoints to explore.
                     
                  </div>
               </div>
               <div class="listitem e855">
                  <div class="para e856">
                     <div class="emphasis e857" role="bold">Provide detailed explanation of IRI conventions and property semantics:</div> We
                     found that it was not always obvious what the significance was for IRI differences,
                     nor what non-alphabetic
                     characters should be used in multi-word IRIs. For example, what is the difference
                     between
                     
                     <div class="code e858">http://dbpedia.org/ontology</div> and  
                     <div class="code e859">http://dbpedia.org/property</div> IRIs?
                     
                  </div>
               </div>
               <div class="listitem e860">
                  <div class="para e861">
                     <div class="emphasis e862" role="bold">Include examples of intersecting graphs from other music-oriented sites:</div>
                     In the spirit of 
                     <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e863" xlink:actuate="onRequest" xlink:href="http://www.w3.org/wiki/SweoIG/TaskForces/CommunityProjects/LinkingOpenData" xlink:show="new" xlink:type="simple">Linking Open Data</div>, 
                     it would be helpful if both DBpedia and MusicBrainz created and posted
                     demos (or links to demos) on their sites to illustrate linking of their data sources
                     to other popular music data stores.
                     
                  </div>
               </div>
            </div>
            
         </div>
      </div><a name="ConclusionsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="section e864">
         <div class="title e865">Conclusions</div>
         <div class="para e866">
            Although at this time we have fallen far short of our lofty goal of answering two
            dozen complex questions
            by means of RDF and SPARQL, we believe we have uncovered several significant challenges
            
            regarding the consistency of the data sources and the interpretation of the semantics
            underlying various key properties of musical artists. We believe similar problems
            would be
            encountered with using other large community-entered datasets of relatively low quality.
            
         </div>
         <div class="para e867">
            While Wikipedia editors often focus on crafting the most accessible presentation of
            encyclopedic 
            information for human consumption, there are other factors to consider. Individuals
            working with data at the
            semantic level could improve the semantic representation by isolating outliers, as
            in
            the case of multiple representations of the "Rock and Roll music" genre concept.
            Data quality and therefore utility would be greatly enhanced
            by making the necessary modifications to "normalize" or decrease
            spurious diversity that is not based on any actual or intended semantic distinction.
            
            <div class="popupBox e868">
               <div class="popupLabel" onmouseover="$('#d1e1658').show('1000');" onmouseout="$('#d1e1658').hide('1000');">[ footnote ]</div>
               <div id="d1e1658" style="display: none;">
                  <div class="footnote">
                     <div class="para e869">For example, see 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e870" xlink:actuate="onRequest" xlink:href="http://pedantic-web.org/" xlink:show="new" xlink:type="simple">The Pedantic Web</div>,
                        especially 
                        <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e871" xlink:actuate="onRequest" xlink:href="http://pedantic-web.org/fops.html" xlink:show="new" xlink:type="simple">Frequently Observed Problems on the Web of Data</div>.
                     </div>
                  </div>
               </div>
            </div>         
            
         </div>
         <div class="para e872">
            In the end, any accurate measure of impact a given musician has on a genre is likely
            to be the product of a
            weighted measurement of several variables and is therefore largely subjective. The
            number
            of bands someone played with, the number of songs they wrote, the number of albums
            they
            produced or the length of time they were active are only part of the equation. An
            artist
            who wrote a single song that has enjoyed frequent airplay for decades and/or was covered
            by artists in many
            different genres clearly demonstrates a substantial impact. Other measurements not
            available in
            the RDF datasets are likely to be even more revealing of an artist's true impact,
            such as the
            number of concerts they played, the number of people who recognize their name, and
            their
            success on music charts (i.e., Billboard).
            
         </div>
         <div class="para e873">
            By the same token, a strong argument could be made that an individual musician whose
            career lasted only a short time with a limited repertoire but perhaps created or
            influenced a new genre could be regard to have a major impact. Therefore, one
            would have to somehow compare Eric Clapton to early genre pioneers. For example, Robert
            Johnson, a major influence on Clapton, recorded only 29 songs and basically enjoyed
            only
            a 2-year (1936-37) recording career. Yet Clapton himself has called Johnson "the
            most important blues singer that ever lived".
            <div class="popupBox e874">
               <div class="popupLabel" onmouseover="$('#d1e1672').show('1000');" onmouseout="$('#d1e1672').hide('1000');">[ footnote ]</div>
               <div id="d1e1672" style="display: none;">
                  <div class="footnote">
                     <div class="para e875">Booklet accompanying Johnson's 
                        <div class="emphasis e876" role="ital">Complete Recordings</div> box set, 
                        Stephen LaVere, Sony Music Entertainment, 1990, Clapton quote on p. 26.
                     </div>
                  </div>
               </div>
            </div>    
            Johnson was ranked fifth in 
            <div class="emphasis e877" role="ital">Rolling Stone's</div> list of 100 Greatest Guitarists of All Time.
            
         </div>
         <div class="para e878"> 
            Given our knowledge and supporting resources surrounding Eric Clapton's career, we
            believe
            that some of what we perceive as errors are indeed just that -- mistakes. Whether
            those
            mistakes are based on individuals simply being incorrect, or not understanding the
            semantics really does not matter in the final analysis. What this highlights, for
            us, 
            is a limitation induced
            by the 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e879" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Open_World_Assumption" xlink:show="new" xlink:type="simple">Open World Assumption</div>. 
            When an assertion is not made, we cannot also assume its
            negation. Having assertions stating that Clapton created 30 albums does not mean he
            did
            not create 45. Likewise, because we know that Clapton did participate in collaboration
            efforts like Powerhouse, The Dirty Mac and Free Creek, we cannot state unequivocally
            that
            it happened only a
            single time and therefore violates the semantics of the 
            <div class="code e880">associatedActs</div> predicate.
            
         </div>
      </div><a name="TripleCountsANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e881" xml:id="triplesCounts" xreflabel="Triples Counts">
         <div class="title e882">Triple Counts</div>
         <div class="programlisting e883" xml:id="musicbrainzTriples" xml:space="preserve" xreflabel="Musicbrainz Triples Count">
            	      
            <div class="emphasis e884" role="bital">Musicbrainz Triples Count</div> 
            
            4301998 albums.rdf
            1824953 albums_tracklists.rdf
            1712434 artists.rdf
            427027 relations_artist_to_artist.rdf
            292955 albums_tags.rdf
            188708 tracks.rdf
            114285 relations_album_to_artist.rdf
            --------------------------------------
            8,862,360 total triples            
            
         </div>
         <div class="programlisting e885" xml:id="dbpediaAssertions" xml:space="preserve" xreflabel="DBPedia Assertions">
            	      
            <div class="emphasis e886" role="bital">DBpedia Assertions</div> 
            
            130166251 page_links_en.nt
            43640719 infobox_properties_en.nt
            23917050 wikipedia_links_en.nt
            13795664 mappingbased_properties_en.nt
            12161691 article_categories_en.nt  
            9485630 revisions_en.nt
            9485630 page_ids_en.nt
            7972385 labels_en.nt
            6173940 instance_types_en.nt
            5907507 external_links_en.nt
            4615815 images_en.nt
            4503651 redirects_en.nt
            3261096 short_abstracts_en.nt
            3261096 long_abstracts_en.nt
            2529082 skos_categories_en.nt
            1745873 persondata_en.nt
            1544820 geo_coordinates_en.nt
            928708 disambiguations_en.nt
            910517 article_related_geo_countries_en.nt
            632615 category_labels_en.nt
            414195 homepages_en.nt
            387336 specific_mappingbased_properties_en.nt
            81602 infobox_property_definitions_en.nt
            1555 pnd_en.nt 
            ---------------------------------------------------	  
            287,524,428 total assertions           
            
         </div>
      </div><a name="Drupal618ModulesANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="appendix e887" xml:id="drupalModules" xreflabel="Drupal Modules">
         <div class="title e888">Drupal 6.18 Modules</div>
         <div class="programlisting e889" xml:space="preserve">
            Admin role 6.x-1.3
            Administration menu 6.x-1.6
            Advanced help 6.x-1.2
            Backup and Migrate 6.x-2.4
            Colorpicker 6.x-2.1
            Content Construction Kit (CCK) 6.x-2.9
            Date 6.x-2.7
            Devel 6.x-1.23
            Drupal For Firebug 6.x-1.4
            Google Visualization API 6.x-1.3
            Graphviz Filter 6.x-1.6
            Graphviz Styles 6.x-1.0
            jQuery Update 6.x-2.0-alpha1
            Masquerade 6.x-1.5
            Node export 6.x-2.24
            Node import 6.x-1.0
            Pathauto 6.x-1.5
            RDF CCK 6.x-2.x-dev (2011-Feb-25)
            Resource Description Framework (RDF) 6.x-1.0-alpha8
            SPARQL 6.x-1.0-alpha1
            Includes: SPARQL API
            Sphinx (Sphinx search integration) 6.x-1.3
            Tagadelic 6.x-1.2
            Taxonomy import/export via XML 6.x-1.3
            Taxonomy Manager 6.x-2.2
            Taxonomy Menu 6.x-2.9
            Token 6.x-1.15
            Views 6.x-2.12      
            
         </div>
      </div><a name="BibiographyANCHOR" href="#mainContainerTitleTOC" class="anchor">toc</a><div class="bibliography e890">
         <div class="title e891">Bibiography</div>
         <div class="bibliomixed e892" xml:id="Auer1" xreflabel="Auer and Lehmann 2007">
            Auer, Sören; Lehmann, Jens: 
            
            <div class="emphasis e893" role="ital">What Have Innsbruck and Leipzig in Common? Extracting Semantics from Wiki Content.</div>
            ISBN-13: 978-3-540-72666-1. Springer Verlag. © 2007.
            Lecture Notes in Computer Science, 2007, Volume 4519/2007, pp. 503-517, DOI: 10.1007/978-3-540-72667-8_36.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e894" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.springerlink.com/content/3131t21p634191n2/</div> and
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e895" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.71.1314&amp;rep=rep1&amp;type=pdf</div>.
            
         </div>
         <div class="bibliomixed e896" xml:id="Auer2" xreflabel="Auer et al 2007">
            Auer, Sören; Bizer, Christian; Kobilarov, Georgi; Lehmann, Jens; Cyganiak, Richard;
            Ives, Zachary:
            
            <div class="emphasis e897" role="ital">DBpedia: A Nucleus for a Web of Open Data.</div>
            ISBN-13: 978-3-540-76297-3.  Springer Verlag. © 2007.
            Lecture Notes in Computer Science, 2007, Volume 4825/2007, pp. 722-735, DOI: 10.1007/978-3-540-76298-0_52.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e898" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.springerlink.com/content/rm32474088w54378/</div> and
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e899" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.informatik.uni-leipzig.de/~auer/publication/dbpedia.pdf</div>.
            
         </div>
         <div class="bibliomixed e900" xml:id="SemWebBook" xreflabel="Allemang and Hendler 2008">
            Allemang, Dean; Hendler, James A.:
            
            <div class="emphasis e901" role="ital">Semantic Web for the Working Ontologist: Effective Modeling in RDFS and OWL.</div>
            ISBN-13: 978-0-12-373556-0. Elsevier Inc. © 2008.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e902" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.workingontologist.org/index.html</div>
            
         </div>
         <div class="bibliomixed e903" xml:id="kbacon" xreflabel="Bacon">
            
            <div class="emphasis e904" role="ital">Six Degrees of Kevin Bacon</div>. [online]. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e905" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://en.wikipedia.org/wiki/Six_Degrees_of_Kevin_Bacon</div>
            
         </div>
         <div class="bibliomixed e906" xml:id="butcher" xreflabel="Butcher 2010">
            Butcher, Matt et al. 
            <div class="emphasis e907" role="ital">Drupal 7 Module Development.</div> 
            ISBN-10: 1849511160. First edition.
            Packt Publishing © 2010. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e908" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.amazon.com/Drupal-Module-Development-Matt-Butcher/dp/1849511160/</div>  
            
         </div>
         <div class="bibliomixed e909" xml:id="eclapton" xreflabel="Clapton">
            
            <div class="emphasis e910" role="ital">Eric Clapton's Wikipedia page</div>. [online]. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e911" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://en.wikipedia.org/wiki/Eric_clapton</div>
            
         </div>
         <div class="bibliomixed e912" xml:id="claptonFAQ" xreflabel="Clapton FAQ">
            
            <div class="emphasis e913" role="ital">Eric Clapton Frequently Asked Questions</div>,
            part of 
            <div class="emphasis e914" role="ital">The Eric Clapton Fan Club Magazine</div>. [online]. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e915" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.whereseric.com/eric-clapton-faq</div>
            
         </div>
         <div class="bibliomixed e916" xml:id="dbp01" xreflabel="DBpedia Dataset">
            
            <div class="emphasis e917" role="ital">The DBpedia Dataset</div>. [online]. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e918" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://wiki.dbpedia.org/Datasets</div>
            
         </div>
         <div class="bibliomixed e919" xml:id="dbp03" xreflabel="DBpedia Ontology">
            
            <div class="emphasis e920" role="ital">The DBpedia Ontology</div>. [online]. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e921" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://wiki.dbpedia.org/Ontology</div>
            
         </div>
         <div class="bibliomixed e922" xml:id="dbp02" xreflabel="DBpedia Release">
            
            <div class="emphasis e923" role="ital">DBpedia 3.6 released</div>. [online]. [cited 08 Apr 
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e924" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://blog.dbpedia.org/2011/01/17/dbpedia-36-released/</div>.
         </div>
         <div class="bibliomixed e925" xml:id="sparqlByExample" xreflabel="Feigenbaum and Prud'hommeaux 2008">
            
            <div class="emphasis e926" role="ital">SPARQL By Example - A Tutorial</div>. [online] [cited 08 Apr 2011].
            Feigenbaum, Lee and Prud'hommeaux, Eric. Cambridge Semantics, 2008. Updated 2011-01-25.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e927" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.cambridgesemantics.com/2008/09/sparql-by-example/</div>
            
         </div>
         <div class="bibliomixed e928" xml:id="sparqlCheatSheet" xreflabel="Feigenbaum 2008">
            
            <div class="emphasis e929" role="ital">SPARQL by Example: The Cheat Sheet</div>. [online] [cited 08 Apr 2011].
            Feigenbaum, Lee. Cambridge Semantics, 2008.
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e930" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.slideshare.net/LeeFeigenbaum/sparql-cheat-sheet</div>
            
         </div>
         <div class="bibliomixed e931" xml:id="pframe" xreflabel="Frame 1983">
            
            <div class="emphasis e932" role="ital">Peter Frame's Rock Family Trees</div>. [online and 3 books]. [cited 08 Apr
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e933" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.familyofrock.com/browse/details/trees.html</div>
            
         </div>
         <div class="bibliomixed e934" xml:id="freebaseHome" xreflabel="Freebase">
            
            <div class="emphasis e935" role="ital">Freebase home page</div>. [online]. [cited 08 Apr 
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e936" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.freebase.com/</div>
            
         </div>
         <div class="bibliomixed e937" xml:id="freebaseData" xreflabel="Freebase Data Dumps">
            
            <div class="emphasis e938" role="ital">Freebase Data Dumps</div>. [online]. [cited 08 Apr 
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e939" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://wiki.freebase.com/wiki/Data_dumps/</div>
            
         </div>
         <div class="bibliomixed e940" xml:id="graphvizHome" xreflabel="Graphviz">
            
            <div class="emphasis e941" role="ital">Graphviz home page</div>. [online]. [cited 08 Apr 
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e942" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.graphviz.org/</div>
            
         </div>
         <div class="bibliomixed e943" xml:id="mql" xreflabel="MQL">
            
            <div class="emphasis e944" role="ital">Metaweb Query Language</div>. [online]. [cited 08 Apr 
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e945" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://wiki.freebase.com/wiki/MQL</div>
            
         </div>
         <div class="bibliomixed e946" xml:id="musicBrainz" xreflabel="MusicBrainz">
            
            <div class="emphasis e947" role="ital">MusicBrainz home page</div>. [online]. [cited 08 Apr 2011]. 
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e948" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://musicbrainz.org/</div>
            
         </div>
         <div class="bibliomixed e949" xml:id="newman" xreflabel="Newman 2010">
            Newman, Mark. 
            <div class="emphasis e950" role="ital">Networks - An Introduction.</div> 
            ISBN-10: 9780199206650. First edition.
            Oxford University Press, USA © 2010. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e951" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.amazon.com/Networks-Introduction-Mark-Newman/dp/0199206651/</div>
            
         </div>
         <div class="bibliomixed e952" xml:id="openCyc" xreflabel="OpenCyc for the Semantic Web">
            
            <div class="emphasis e953" role="ital">OpenCyc for the Semantic Web</div>. [online]. [Cited 26 Jun 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e954" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://sw.opencyc.org/</div>
            
         </div>
         <div class="bibliomixed e955" xml:id="sixDegrees" xreflabel="Six Degrees">
            
            <div class="emphasis e956" role="ital">Six Degrees of Separation</div>. [online]. [Cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e957" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://en.wikipedia.org/wiki/Six_degrees_of_separation</div>
            
         </div>
         <div class="bibliomixed e958" xml:id="sparql01" xreflabel="SPARQL 1.0">
            
            <div class="emphasis e959" role="ital">SPARQL Query Language for RDF</div>. [online] [cited 08 Apr 2011].
            W3C Recommendation 15 January 2008. W3C © 2006-2007
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e960" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.w3.org/TR/rdf-sparql-query/</div>
            
         </div>
         <div class="bibliomixed e961" xml:id="rstarr" xreflabel="Starr">
            
            <div class="emphasis e962" role="ital">Ringo Starr's Wikipedia page</div>. [online] [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e963" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://en.wikipedia.org/wiki/Ringo_Starr</div>
            
         </div>
         <div class="bibliomixed e964" xml:id="allStarBand" xreflabel="Ringo Starr &amp; His All-Starr Band">
            
            <div class="emphasis e965" role="ital">Ringo Starr &amp; His All-Starr Band Wikipedia page</div>. [online] [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e966" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://en.wikipedia.org/wiki/Ringo_Starr_%26_His_All-Starr_Band</div>
            
         </div>
         <div class="bibliomixed e967" xml:id="vandykWestgate" xreflabel="VanDyke and Westgate 2007">
            VanDyk, John K and Westgate, Matt 
            <div class="emphasis e968" role="ital">Pro Drupal Development.</div> 
            ISBN-10: 1590597559. First edition.
            APress © 2007. [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e969" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.amazon.com/Pro-Drupal-Development-John-VanDyk/dp/1590597559/</div>
            
         </div>
         <div class="bibliomixed e970" xml:id="virtuoso" xreflabel="Virtuoso Universal Server">
            
            <div class="emphasis e971" role="ital">OpenLink Virtuoso Universal Server</div>. [online]. [cited 08 Apr 
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e972" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://virtuoso.openlinksw.com/</div>
            
         </div>
         <div class="bibliomixed e973" xml:id="virtuosoSparql" xreflabel="Virtuoso SPARQL Tutorial">
            
            <div class="emphasis e974" role="ital">Virtuoso SPARQL Tutorial, Part 2</div>. [online]. [cited 08 Apr 
            2011]. 
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e975" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://virtuoso.openlinksw.com/presentations/SPARQL_Tutorials/SPARQL_Tutorials_Part_2/SPARQL_Tutorials_Part_2.html</div>
            
         </div>
         <div class="bibliomixed e976" xml:id="vocabutek" xreflabel="Vocabutek Web Site">
            
            <div class="emphasis e977" role="ital">Ron Reck's demo site</div>. [online] [cited 08 Apr 2011].
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e978" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">http://www.vocabutek.com/</div>
            
         </div>
         <div class="bibliomixed e979" xml:id="billboardAlbums" xreflabel="Whitburn 2006">
            Whitburn, Joel. 
            <div class="emphasis e980" role="ital">The Billboard Albums</div>. 
            ISBN-13 0-89820-166-7. Sixth edition.
            Record Research Inc. © 2006. 
            [Data from 1956-2006; other editions are entitled 
            <div class="emphasis e981" role="ital">Top Pop Albums</div>.]
            
            <div xmlns:xlink="http://www.w3.org/1999/xlink" class="link e982" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple">https://www.recordresearch.com</div>
            
         </div>
      </div>
   </div>
</div>