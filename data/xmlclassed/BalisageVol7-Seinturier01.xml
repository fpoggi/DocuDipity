<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3" xml:id="HR-23632987-8973"><title class="po-block e1 e1"><textual class="po-textual">An XML engine to model  and query multimodal concurrent linguistic annotations
  </textual></title><subtitle class="po-block e2 e2"><textual class="po-textual">Application to the OTIM Project</textual></subtitle><info class="po-record e3 e3"><confgroup class="po-record e4 e4"><conftitle class="po-field e5 e5"><textual class="po-textual">Balisage: The Markup Conference 2011</textual></conftitle><confdates class="po-field e6 e6"><textual class="po-textual">August 2 - 5, 2011</textual></confdates></confgroup><abstract class="po-container e7 e7"><para class="po-block e8 e8"><textual class="po-textual">
	    This paper presents an XML engine defined to model and query multimodal concurrent annotated data. 
	    This work stands in the context of the OTIM (Tools for Multimodal Annotation) project which aims at developing conventions and tools 
	    for multimodal annotation of a large conversational French speech corpus; it groups together Social Science and Computer Science researchers. 
	    Within OTIM, our objective is to provide linguists with a unique framework 
	    to encode and manipulate numerous linguistic domains: morpho-syntax, prosody, phonetics, disfluencies, discourse,  gesture and posture. 
	    For that, it has to be possible to bring together and align all the different pieces of information (called annotations) associated to a corpus.
	  </textual></para><para class="po-block e9 e9"><textual class="po-textual">
	    We propose a complete pipeline from the annotation step to the management of the data within an XML Information System. This pipeline first relies on 
		the formalisation of the linguistic knowledge and data within a OTIM specific XML format. A Java framework is proposed for interfacing with both linguists specific 
		annotation tools and XML Information System. Finally, the querying of multimodal annotations within the XML information system using XQuery is presented. 
		As annotations are time aligned, an extension of XQuery to Allen temporal relations is proposed.
	  </textual></para><para class="po-block e10 e10"><textual class="po-textual">
	    The paper conclude on a discussion about the interest of a pure XML approach for linguistic annotations information system and the question of the 
		integration of the semantic within the pipeline. 
	  </textual></para></abstract><author class="po-record e11 e11"><personname class="po-record e12 e12"><firstname class="po-field e13 e13"><textual class="po-textual">Julien</textual></firstname><surname class="po-field e14 e14"><textual class="po-textual">Seinturier</textual></surname></personname><personblurb class="po-container e15 e15"><para class="po-block e16 e16"><textual class="po-textual">Julien Seinturier is a PhD in Computer Sciences at the 
		      University of Sud Toulon-Var (South of France) since 2007. He is 
			  post doctorate at the CNRS Laboratory of Information Science and systems(LSIS) 
			  within the computer science teaching department. 
			  His fields of research covers Knowledge Representation, Semantic Web, XML data management. 
			  His research activities have been supported 
			  by French National and European pluridisciplinary research projects. </textual></para></personblurb><affiliation class="po-record e17 e17"><jobtitle class="po-field e18 e18"><textual class="po-textual">Post-Doctorate</textual></jobtitle><orgname class="po-block e19 e19"><textual class="po-textual">Laboratoire LSIS UMR CNRS 6168, Université du Sud Toulon et Var</textual></orgname></affiliation><email class="po-field e20 e20"><textual class="po-textual">seinturier@univ-tln.fr</textual></email></author><author class="po-record e21 e21"><personname class="po-record e22 e22"><firstname class="po-field e23 e23"><textual class="po-textual">Elisabeth</textual></firstname><surname class="po-field e24 e24"><textual class="po-textual">Murisasco</textual></surname></personname><personblurb class="po-container e25 e25"><para class="po-block e26 e26"><textual class="po-textual">Elisabeth Murisasco is Professor in Computer Sciences at 
		      the University of Sud Toulon-Var (South of France) since 2007. 
			  She is researcher at the CNRS Laboratory of Information Science 
			  and systems  (LSIS) and she is member of the computer science 
			  teaching department .
              Her main research experience and scientific expertise covers databases, 
			  XML-based data, semantic web technologies. Her research activities 
			  have been supported by French National research projects. 
	    </textual></para></personblurb><affiliation class="po-record e27 e27"><jobtitle class="po-field e28 e28"><textual class="po-textual">Professor</textual></jobtitle><orgname class="po-block e29 e29"><textual class="po-textual">Laboratoire LSIS UMR CNRS 6168, Université du Sud Toulon et Var</textual></orgname></affiliation><email class="po-field e30 e30"><textual class="po-textual">murisasco@univ-tln.fr</textual></email></author><author class="po-record e31 e31"><personname class="po-record e32 e32"><firstname class="po-field e33 e33"><textual class="po-textual">Emmanuel</textual></firstname><surname class="po-field e34 e34"><textual class="po-textual">Bruno</textual></surname></personname><personblurb class="po-container e35 e35"><para class="po-block e36 e36"><textual class="po-textual">Emmanuel Bruno is Assistant Professor in Computer Sciences at the 
		      University of Sud Toulon-Var (South of France) since 2001. He is 
			  researcher at the CNRS Laboratory of Information Science and systems(LSIS) 
			  and he is member of the computer science teaching department. 
			  His main fields of research covers databases, XML data management, 
			  semantic web technologies. His research activities have been supported 
			  by French National research projects. 
	    </textual></para></personblurb><affiliation class="po-record e37 e37"><jobtitle class="po-field e38 e38"><textual class="po-textual">Lecturer</textual></jobtitle><orgname class="po-block e39 e39"><textual class="po-textual">Laboratoire LSIS UMR CNRS 6168, Université du Sud Toulon et Var</textual></orgname></affiliation><email class="po-field e40 e40"><textual class="po-textual">bruno@univ-tln.fr</textual></email></author><legalnotice class="po-container e41 e41"><para class="po-block e42 e42"><textual class="po-textual">Copyright © 2011 by the authors. Used with permission.</textual></para></legalnotice><keywordset class="po-table e43 e43" role="author"><keyword class="po-field e44 e44"><textual class="po-textual">Knowledge Engineering</textual></keyword><keyword class="po-field e45 e45"><textual class="po-textual">XML Information System</textual></keyword><keyword class="po-field e46 e46"><textual class="po-textual">Application</textual></keyword></keywordset></info><section class="po-hcontainer e47 e47"><title class="po-block e48 e48"><textual class="po-textual">Introduction</textual></title><para class="po-block e49 e49"><textual class="po-textual">
	  In this paper, our intention is to present an XML engine defined to model and query multimodal concurrent annotated data. 
	  This work stands in the context of the OTIM (Tools for Multimodal Annotation) project which aims at developing conventions and tools 
	  for multimodal annotation of a large conversational French speech corpus (</textual><link class="po-inline e50 e50" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://aune.lpl.univ-aix.fr/~otim/</textual></link><textual class="po-textual">) [</textual><xref class="po-milestone e51 e51" linkend="LAW2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. This interdisciplinary project 
	  is funded by the French ANR agency; it groups together Social Science and Computer Science researchers. Within OTIM, our objective is to provide linguists with a unique framework 
	  to encode and manipulate numerous linguistic domains: morpho-syntax, prosody, phonetics, disfluencies, discourse,  gesture and posture [</textual><xref class="po-milestone e52 e52" linkend="ICGL2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. For that, it has 
	  to be possible to bring together and align all the different pieces of information 
	  (called annotations) associated to a corpus. 
	</textual></para><para class="po-block e53 e53"><textual class="po-textual">
	  Since some years, several works have studied concurrent markups/annotations associated to the same data, in particular in the context of XML documents. These 
	  documents are usually called multistructured. Indeed, XML documents are mainly hierarchical. The hierarchy, captured in a tree-like structure corresponds to 
	  one level of analysis of the data contained in the document. Concurrent markup opens a way for dynamically linking and aggregating documents with different 
	  structures associated to the same data. The CONCUR feature of SGML [</textual><xref class="po-milestone e54 e54" linkend="SGML"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] first pointed out this need in the nineties in context of 
	  document-centric encoding where some applications needed to consider more than one hierarchy over the same text. 
	</textual></para><para class="po-block e55 e55"><textual class="po-textual">
	  The main problem with concurrent structures is that merging every hierarchy in an unique XML document implies overlapping: structures 
	  cannot be merged in order to get a well-formed XML document without using a flat representation or hyperlinks that make the structure difficult to query with 
	  standards XML languages like XPath (</textual><link class="po-inline e56 e56" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/xpath/</textual></link><textual class="po-textual">), XQuery (</textual><link class="po-inline e57 e57" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/xquery/</textual></link><textual class="po-textual">) or XSLT (</textual><link class="po-inline e58 e58" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/xslt/</textual></link><textual class="po-textual">). 
	  See [</textual><xref class="po-milestone e59 e59" linkend="WITT2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">][</textual><xref class="po-milestone e60 e60" linkend="DEROSE2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] for a review about the problem of overlapping and about multiple hierarchies. Another approach 
	  is to keep one document by hierarchy and to solve the problem of the concurrent querying. We stand our work in this last approach: we want to keep each structure 
	  safe to use available XML tools and languages for its manipulation.
	</textual></para><para class="po-block e61 e61"><textual class="po-textual">
	  Main proposals are usually classified in three categories [</textual><xref class="po-milestone e62 e62" linkend="BRUNO2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">][</textual><xref class="po-milestone e63 e63" linkend="PORTIER2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. 
	</textual></para><para class="po-block e64 e64"><textual class="po-textual">
	  Historical solutions which propose syntactic solutions for the representation of multiple hierarchies in the same text, like the CONCUR feature [</textual><xref class="po-milestone e65 e65" linkend="HILBERT2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] 
	  of SGML or TEI specifications [</textual><xref class="po-milestone e66 e66" linkend="TEIP4"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] (e.g. a flat representation  or a main (hierarchical) structure and the use references (ID/IDREF) for 
	  the description of the other structures).  These solutions make impossible querying by means of standards XML languages.
	</textual></para><para class="po-block e67 e67"><textual class="po-textual">
	Proprietary graph based-model (and possible alternative syntax to XML) like LNML [</textual><xref class="po-milestone e68 e68" linkend="TENNINSON2002"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], TexMecs[</textual><link class="po-inline e69 e69" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://decentius.aksis.uib.no/mlcd/2003/Papers/texmecs.html</textual></link><textual class="po-textual">], 
	XCONCUR [</textual><link class="po-inline e70 e70" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.xconcur.org/</textual></link><textual class="po-textual">], Annotation graphs [</textual><xref class="po-milestone e71 e71" linkend="BIRD2001"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] (coming from the linguistic domain coupled to specific extension of XPath) or 
	MVDM [</textual><xref class="po-milestone e72 e72" linkend="DJEMAL2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. They allow the concurrent markup relying on a granule of data common to all the structures. Nevertheless, hierarchical structures 
	are easier to exploit compared to the graph structure which remain complex when a large number of structures exist. XML syntax for serialization or import/export XML syntax do 
	not make easy their querying by XML standard languages.   
	</textual></para><para class="po-block e73 e73"><textual class="po-textual">
	Finally, the third category is XML compatible contributions; they generally propose extensions of XML data model (XDM) (</textual><link class="po-inline e74 e74" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/XML/Datamodel.html</textual></link><textual class="po-textual">) to consider a set of XML trees 
	[</textual><xref class="po-milestone e75 e75" linkend="JLM2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">][</textual><xref class="po-milestone e76 e76" linkend="JAGADISH2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] or several trees sharing their leaves [</textual><xref class="po-milestone e77 e77" linkend="DEKHTYAR2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">][</textual><xref class="po-milestone e78 e78" linkend="BRUNO2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">][</textual><xref class="po-milestone e79 e79" linkend="BRUNO2007B"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]
	[</textual><xref class="po-milestone e80 e80" linkend="CHATTI2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. For querying, these proposals define extensions of XPath or XQuery in order to navigate between different structures either by extending the notion 
	of step in XPath [</textual><xref class="po-milestone e81 e81" linkend="JAGADISH2004"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] or by adding new axis [</textual><xref class="po-milestone e82 e82" linkend="DEKHTYAR2005"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. Another solution is to extend the semantics of the XQuery filter [</textual><xref class="po-milestone e83 e83" linkend="BRUNO2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] 
	to use as much as possible an unchanged  XQuery structure. Adding Allen’s relations [</textual><xref class="po-milestone e84 e84" linkend="ALLEN1991"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] by means of function definitions enable to deal with overlapping [</textual><xref class="po-milestone e85 e85" linkend="BRUNO2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">][</textual><xref class="po-milestone e86 e86" linkend="CHATTI2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">].  
	</textual></para><para class="po-block e87 e87"><textual class="po-textual">
	  Besides, some linguistic projects have a similar objective than OTIM, for instance NITE (</textual><link class="po-inline e88 e88" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://groups.inf.ed.ac.uk/nxt/</textual></link><textual class="po-textual">), 
	  AGTK (</textual><link class="po-inline e89 e89" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://weblex.ens-lsh.fr/projects/xitools/logiciels/AGTK/agtk.htm</textual></link><textual class="po-textual">), ATLAS [</textual><xref class="po-milestone e90 e90" linkend="BIRD2000"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], 
	  PAULA (</textual><link class="po-inline e91 e91" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.sfb632.uni-potsdam.de/~d1/paula/doc/</textual></link><textual class="po-textual">), XStandoff [</textual><xref class="po-milestone e92 e92" linkend="SPERBERG2000"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. 
	  These projects rely on graph-based model. They generally propose toolkits for multi-level annotation by means of libraries of data and annotation management. The 
	  multiplication of annotation schemes and coding formats is a severe limitation for interoperability. One solution consists in developing higher level approaches (e.g. GrAF [</textual><xref class="po-milestone e93 e93" linkend="IDE2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) 
	  or annotation graphs based formats on top of which conversion routines between tools can be developed (see the Atlas Interchange Format [</textual><xref class="po-milestone e94 e94" linkend="STHRENBERG2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]). 
	  However, these experiments still remain very programmatic. 
	</textual></para><para class="po-block e95 e95"><textual class="po-textual">
	  Interoperability of linguistic annotated resources requires over all to be independent from the coding format. This means to specify and organize the information to be encoded 
	  independently from the constraints or restriction of the format (or the annotation tool), then to encode the information into an standard XML format, readable whatever the edition or 
	  annotation system. Moreover we have made the choice not to provide new anootation tools for linguists as they have a long experience and they are efficient with their own tools.
	</textual></para><para class="po-block e96 e96"><textual class="po-textual">
	This paper is organised as follows: the context and motivations are presented, then we describe the project objectives and its functional architecture. A visual UML representation of 
	the linguistic knowledge is proposed before the OTIM XML representation and Java framework are explicited. The end of the work shows the methods for querying and managing linguistic annotations 
	within the XML engine and the implementation of the whole corpus construction and management before a conclusion.
	</textual></para></section><section class="po-hcontainer e97 e97"><title class="po-block e98 e98"><textual class="po-textual">Context and motivations</textual></title><para class="po-block e99 e99"><textual class="po-textual">The OTIM project can be summarized in two main steps.</textual></para><para class="po-block e100 e100"><textual class="po-textual">The first step concerns the multimodal annotation of a conversational speech between two persons. It is under the responsibility of linguists; 
	      annotation is done according to different levels of linguistic analysis. Each expert has to annotate the same data flow according to its knowledge 
		  domain and the nature of the signal on which he annotates (signal transcription or signal). Experts generally use dedicated tools like PRAAT 
		  </textual><link class="po-inline e101 e101" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.fon.hum.uva.nl/praat/</textual></link><textual class="po-textual">, ANVIL </textual><link class="po-inline e102 e102" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.anvil-software.de/</textual></link><textual class="po-textual"> or ELAN </textual><link class="po-inline e103 e103" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.lat-mpi.eu/tools/elan/</textual></link><textual class="po-textual">. 
		  The qualifier multimodal is due to the nature of the studied corpus which is composed of text, sound, video.
	</textual></para><para class="po-block e104 e104"><textual class="po-textual">
	 Within the project OTIM, linguists propose an encoding for annotating spoken language data, with the acoustic signal as well as its orthographic 
	 transcription. They have chosen to use Typed Feature Structures [</textual><xref class="po-milestone e105 e105" linkend="CARPENTER1992"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">][</textual><xref class="po-milestone e106 e106" linkend="COPESTAKE2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] (TFS) to represent in an unified view the knowledge and the information 
	 they need for annotation. TFS representation is usual for linguists: it aims at normalizing, sharing and exchanging annotation schemas between experts. 
	 Linguistic annotation tools rely on native and not often open formats which are not directly interoperable. TFS provides an abstract description using a 
	 high level formalism independent from coding languages and tools.  
	</textual></para><para class="po-block e107 e107"><textual class="po-textual">
	  The second step concerns the representation and manipulation of multimodal annotation. To analyze and find correlations between annotated linguistic 
	  domains, it is necessary to consider them grouped together: it implies the definition of a formal model for describing and manipulating them in a concurrent 
	  way.  The main difficulty in defining a data model comes from the heterogeneity and the distribution of the resources. Concurrent manipulation consists in 
	  querying annotations belonging to two or more modalities or in querying the relationships between modalities. For instance, we need to be able to express queries 
	  over gestures and intonation contours (what kind of intonation contour does the speaker use when he looks at the listener?) and to query temporal relationships 
	  (in terms of anticipation, synchronization or delay) between both gesture strokes and lexical affiliates. The results of queries could be useful to help in constructing 
	  new annotations or to extend existing ones.
	</textual></para><para class="po-block e108 e108"><textual class="po-textual">
	  The paper focuses on the second step. It describes an XML engine based on an architecture dedicated to the construction and the exploitation of multimodal annotated 
	  linguistic corpus. Our theoretical standpoint being to share data and resources, we will use open standards from the XML universe (see </textual><link class="po-inline e109 e109" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org</textual></link><textual class="po-textual">). 
	</textual></para><para class="po-block e110 e110"><textual class="po-textual">
	  Linguistic knowledge is captured by means of three types of information:
      </textual><itemizedlist class="po-table e111 e111"><listitem class="po-container e112 e112"><para class="po-block e113 e113"><textual class="po-textual">Properties: the set of characteristics of an object. An object is a type of information to be annotated in the corpus ,</textual></para></listitem><listitem class="po-container e114 e114"><para class="po-block e115 e115"><textual class="po-textual">Relations: the set of relations that an object has with other objects,</textual></para></listitem><listitem class="po-container e116 e116"><para class="po-block e117 e117"><textual class="po-textual">Constituents: complex objects are composed of other objects called constituents.</textual></para></listitem></itemizedlist><textual class="po-textual">
      Typed Feature Structures proposes a formal presentation of each object in terms of feature structures and type hierarchies: properties are encoded by features, 
	  constituency is implemented with complex features, and relations make use feature structure indexing; each linguistic domain is represented as a hierarchical model. 
	</textual></para><para class="po-block e118 e118"><textual class="po-textual">
	  </textual><figure class="po-container e119 e119" xml:id="TFS-prosody"><title class="po-block e120 e120"><textual class="po-textual">TFS of the prosodic domain</textual></title><mediaobject class="po-container e121 e121"><imageobject class="po-container e122 e122"><imagedata class="po-meta e123 e123" fileref="../../../vol7/graphics/Seinturier01/Seinturier01-001.png" format="png" width="40%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e124 e124"><para class="po-block e125 e125"><textual class="po-textual">TFS description of the prosodic domain within the OTIM project.</textual></para></caption></figure><textual class="po-textual">
      For example, </textual><xref class="po-milestone e126 e126" linkend="TFS-prosody"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> graphically describes TFS representation of the prosodic domain. Notice that every feature of the domain related to 
	  signal is a sub-feature of the </textual><emphasis class="po-inline e127 e127" role="ital"><textual class="po-textual">OtimObject</textual></emphasis><textual class="po-textual"> that is constituted of an </textual><emphasis class="po-inline e128 e128" role="ital"><textual class="po-textual">INDEX</textual></emphasis><textual class="po-textual"> feature in order to be referred 
	  and a </textual><emphasis class="po-inline e129 e129" role="ital"><textual class="po-textual">LOCALISATION</textual></emphasis><textual class="po-textual"> feature that represents an interval, 
	  which boundaries are defined by the features </textual><emphasis class="po-inline e130 e130" role="ital"><textual class="po-textual">START</textual></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e131 e131" role="ital"><textual class="po-textual">END</textual></emphasis><textual class="po-textual">, with temporal value (usually milliseconds). 
	  Prosodic phrases are of two different types: </textual><emphasis class="po-inline e132 e132" role="ital"><textual class="po-textual">ap</textual></emphasis><textual class="po-textual"> (accentual phrases) 
	  and </textual><emphasis class="po-inline e133 e133" role="ital"><textual class="po-textual">ip</textual></emphasis><textual class="po-textual"> (intonation phrases). Accentual phrases are constituted of two appropriate features: the </textual><emphasis class="po-inline e134 e134" role="ital"><textual class="po-textual">LABEL</textual></emphasis><textual class="po-textual">, 
	  which value is simply the name of the corresponding type, and the list of </textual><emphasis class="po-inline e135 e135" role="ital"><textual class="po-textual">CONSTITUENTS</textual></emphasis><textual class="po-textual">, in this case a list of syllables. The features of 
	  type </textual><emphasis class="po-inline e136 e136" role="ital"><textual class="po-textual">ip</textual></emphasis><textual class="po-textual"> contain the list of its </textual><emphasis class="po-inline e137 e137" role="ital"><textual class="po-textual">CONSTITUENTS</textual></emphasis><textual class="po-textual"> (a set of </textual><emphasis class="po-inline e138 e138" role="ital"><textual class="po-textual">ap</textual></emphasis><textual class="po-textual">) as well as the 
	  description of its </textual><emphasis class="po-inline e139 e139" role="ital"><textual class="po-textual">CONTOUR</textual></emphasis><textual class="po-textual"> which is a prosodic event, situated at the end of the </textual><emphasis class="po-inline e140 e140" role="ital"><textual class="po-textual">ip</textual></emphasis><textual class="po-textual"> and is usually associated to 
	  an </textual><emphasis class="po-inline e141 e141" role="ital"><textual class="po-textual">ap</textual></emphasis><textual class="po-textual">. The prosodic phrases are formally defined as set of syllables. A syllable (</textual><emphasis class="po-inline e142 e142" role="ital"><textual class="po-textual">syl</textual></emphasis><textual class="po-textual">) is constituted of features: 
	  </textual><emphasis class="po-inline e143 e143" role="ital"><textual class="po-textual">STRUCT</textual></emphasis><textual class="po-textual"> that describes the syllable structure (for example </textual><emphasis class="po-inline e144 e144" role="ital"><textual class="po-textual">CVC</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e145 e145" role="ital"><textual class="po-textual">CCVC</textual></emphasis><textual class="po-textual">, etc.), the 
	  position of the syllable in the word (</textual><emphasis class="po-inline e146 e146" role="ital"><textual class="po-textual">POSITION</textual></emphasis><textual class="po-textual">), its possibility to be accented or prominent (resp. </textual><emphasis class="po-inline e147 e147" role="ital"><textual class="po-textual">ACCENTUABLE</textual></emphasis><textual class="po-textual">, 
	  </textual><emphasis class="po-inline e148 e148" role="ital"><textual class="po-textual">PROMINENCE</textual></emphasis><textual class="po-textual">). Features of type </textual><emphasis class="po-inline e149 e149" role="ital"><textual class="po-textual">const_syl</textual></emphasis><textual class="po-textual">, contains two different features: a set of phonemes, denoted 
	  </textual><emphasis class="po-inline e150 e150" role="ital"><textual class="po-textual">PHON</textual></emphasis><textual class="po-textual">, and the type of the constituent (</textual><emphasis class="po-inline e151 e151" role="ital"><textual class="po-textual">onset</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e152 e152" role="ital"><textual class="po-textual">nucleus</textual></emphasis><textual class="po-textual"> and 
	  </textual><emphasis class="po-inline e153 e153" role="ital"><textual class="po-textual">coda</textual></emphasis><textual class="po-textual">), denoted </textual><emphasis class="po-inline e154 e154" role="ital"><textual class="po-textual">CONST_TYPE</textual></emphasis><textual class="po-textual">. Note that each syllable constituent can contain a set of phonemes.
	</textual></para></section><section class="po-hcontainer e155 e155"><title class="po-block e156 e156"><textual class="po-textual">Objectives and functional architecture</textual></title><para class="po-block e157 e157"><textual class="po-textual">
	TFS is well suited to take into account the heterogeneous characteristics of annotated data. TFS provides an abstract 
	description using a high level formalism independent from coding languages and tools. Nevertheless, due to its theoretical 
	nature, such a representation cannot be used within an applicative framework and has to be implemented into other formalisms.
	</textual></para><para class="po-block e158 e158"><textual class="po-textual">
	In this context, our contributions are the following:
	</textual><itemizedlist class="po-table e159 e159"><listitem class="po-container e160 e160"><para class="po-block e161 e161"><textual class="po-textual">The representation of the knowledge expressed by means of TFS in an XML formalism. We base our proposal on XDM (XML data model, </textual><link class="po-inline e162 e162" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/XML/Datamodel.html</textual></link><textual class="po-textual">),</textual></para></listitem><listitem class="po-container e163 e163"><para class="po-block e164 e164"><textual class="po-textual">
			    The automatic construction of XML annotated multimodal linguistic corpus. We define an operational multimodal data processing 
			    from TFS and (semi) automatic procedures to convert legacy data and annotations to the XML formalism,
              </textual></para></listitem><listitem class="po-container e165 e165"><para class="po-block e166 e166"><textual class="po-textual">
			    The concurrent querying of multilevel annotated linguistic data represented in the XML formalism. We use the XML 
			    Query Language XQuery that we have extended to multistructured XML documents [</textual><xref class="po-milestone e167 e167" linkend="BRUNO2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], in particular in order to take 
				into account Allen’s temporal relations. 
			  </textual></para></listitem></itemizedlist><textual class="po-textual">
	</textual></para><para class="po-block e168 e168"><textual class="po-textual">
	  In summary, from the organization of annotations in terms of TFS, we automatically generate a XML schema [</textual><link class="po-inline e169 e169" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/XML/Schema</textual></link><textual class="po-textual">] for each linguistic domain. 
	  All the annotations are then encoded following this schema and data are represented in standard XML document. This representation provides a 
	  high level of modularity for applicative requirements and enables to modify only the structure / schema needed and it can be queried by our XQuery 
	  extension which supports Allen’s relations. Notice that the TEI consortium has proposed guidelines for implementing feature structures in XML  (</textual><link class="po-inline e170 e170" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.tei-c.org/Guidelines/P5/</textual></link><textual class="po-textual">) 
	  however, we have decided not to encode TFS this way because type hierarchies and inheritance are not easily and directly represented and no querying support 
	  has be defined. This engine, from TFS to XML data, based on formalisms independent from linguistic coding languages and tools is an element of answer to 
	  the question of interoperability.  
	</textual></para><para class="po-block e171 e171"><textual class="po-textual">
	</textual><figure class="po-container e172 e172" xml:id="otim-framework"><title class="po-block e173 e173"><textual class="po-textual">The OTIM Framework</textual></title><mediaobject class="po-container e174 e174"><imageobject class="po-container e175 e175"><imagedata class="po-meta e176 e176" fileref="../../../vol7/graphics/Seinturier01/Seinturier01-002.png" format="png" width="60%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e177 e177"><para class="po-block e178 e178"><textual class="po-textual">The OTIM project applicative framework.</textual></para></caption></figure><textual class="po-textual">
	  </textual><xref class="po-milestone e179 e179" linkend="otim-framework"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the functional architecture of our XML engine. It is composed of three parts:
	  </textual><itemizedlist class="po-table e180 e180"><listitem class="po-container e181 e181"><para class="po-block e182 e182"><textual class="po-textual">Linguistics tools and formalisms chosen by linguists in the OTIM project, </textual></para></listitem><listitem class="po-container e183 e183"><para class="po-block e184 e184"><textual class="po-textual">An XML information system dedicated to the representation and querying of XML annotated multimodal corpus, </textual></para></listitem><listitem class="po-container e185 e185"><para class="po-block e186 e186"><textual class="po-textual">
		    A Java API that interfaces with both XML information system and linguistic specific annotation tools.
          </textual></para></listitem></itemizedlist><textual class="po-textual">
	</textual></para><para class="po-block e187 e187"><textual class="po-textual">
	  Our approach guarantees that no information is lost when translating one format into the target formalism. However, the Java / XML framework does not provide 
	  linguists with a visual representation equivalent to the graphical representation of TFS. Therefore, we have chosen to make a preliminary work within the representation process 
	  that leads to XML / Java. This work is the representations of TFS by means of UML diagrams. This representation has two advantages: first it is standard, secondly there is many 
	  friendly and ergonomic tools that enable to build UML diagrams like Omondo (</textual><link class="po-inline e188 e188" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.omondo.com/</textual></link><textual class="po-textual">) or Poseidon (</textual><link class="po-inline e189 e189" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.gentleware.com/</textual></link><textual class="po-textual">).
	</textual></para></section><section class="po-hcontainer e190 e190"><title class="po-block e191 e191"><textual class="po-textual">UML Representation</textual></title><para class="po-block e192 e192"><textual class="po-textual">As we have already said, TEI consortium proposes guidelines for implementing TFS in XML (</textual><link class="po-inline e193 e193" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.tei-c.org/Guidelines/P5/</textual></link><textual class="po-textual">). However, OTIM consortium has decided 
	      not to encode TFS this way for several reasons [</textual><xref class="po-milestone e194 e194" linkend="ICGL2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. First, 
	      there is a need of representation for type hierarchies and inheritance. Secondly, it is not realistic, or even possible, to encode all information by means of a TFS, 
		  that rapidly becomes huge and intractable. This last argument is important in the perspective of interoperability: annotation tools mainly focus on properties annotation (the 
		  encoding of object characteristics). Only some of them propose solution for constituency representation (e.g. in terms of primary/secondary tracks). None implement typing machinery. 
		  We think then preferable a decentralized representation in which objects are represented separately, their organization in hierarchy being encoded independently from their properties. 
		  Such an encoding offers the advantage to be close to the traditional way of encoding annotations without losing the richness of TFS representation.</textual></para><para class="po-block e195 e195"><textual class="po-textual">OTIM UML representation relies on two different views. Static one describes the static structure in terms of objects, attributes, operations and relationships. This view 
	      includes class diagrams. Dynamic view emphasizes the dynamic behavior of a system. One of its advantages is that the language includes a set of graphical notation 
		  techniques to create and share intuitive visual models. We can represent a TFS description by a set of UML class diagrams by means of the following mapping:
          </textual><itemizedlist class="po-table e196 e196"><listitem class="po-container e197 e197"><para class="po-block e198 e198"><textual class="po-textual">to each complex TFS corresponds a class,</textual></para></listitem><listitem class="po-container e199 e199"><para class="po-block e200 e200"><textual class="po-textual">to each TFS atomic attribute corresponds a class attribute,</textual></para></listitem><listitem class="po-container e201 e201"><para class="po-block e202 e202"><textual class="po-textual">the inheritance relationship defined on the TFS is represented by an inheritance relationship between classes,</textual></para></listitem><listitem class="po-container e203 e203"><para class="po-block e204 e204"><textual class="po-textual">the constituency relationships between TFS are represented by aggregation relationships between classes,</textual></para></listitem></itemizedlist><textual class="po-textual">
		  
          </textual><figure class="po-container e205 e205" xml:id="uml-phonetics"><title class="po-block e206 e206"><textual class="po-textual">The phonetics domain</textual></title><mediaobject class="po-container e207 e207"><imageobject class="po-container e208 e208"><imagedata class="po-meta e209 e209" fileref="../../../vol7/graphics/Seinturier01/Seinturier01-003.png" format="png" width="125%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e210 e210"><para class="po-block e211 e211"><textual class="po-textual">UML representation of phonetics domain.</textual></para></caption></figure><textual class="po-textual">
          </textual><xref class="po-milestone e212 e212" linkend="uml-phonetics"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the UML representation of phonetics and prosody domains. This graphical representation provides a global standard view of the two domains and a suitable way for experts to share 
		  their knowledge.
    </textual></para></section><section class="po-hcontainer e213 e213"><title class="po-block e214 e214"><textual class="po-textual">XML / Java representation</textual></title><section class="po-hcontainer e215 e215"><title class="po-block e216 e216"><textual class="po-textual">From TFS to XSchema</textual></title><para class="po-block e217 e217"><textual class="po-textual">
      XML representation of the knowledge and data within the OTIM framework relies on XSchema. We generate an XSchema for each linguistic domain 
	  (for example phonetics and prosody). Data are then represented in different documents validated by the associated XSchemas. This method is motivated 
	  by two important points already said: 
	  </textual><itemizedlist class="po-table e218 e218"><listitem class="po-container e219 e219"><para class="po-block e220 e220"><textual class="po-textual">this representation provides a high level of modularity for applicative requirements and enables to modify only the structure / schema needed</textual></para></listitem><listitem class="po-container e221 e221"><para class="po-block e222 e222"><textual class="po-textual">recents works on multistructured documents open a way for dynamically linking and aggregating various documents with different structure [</textual><xref class="po-milestone e223 e223" linkend="BRUNO2006"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">].</textual></para></listitem></itemizedlist><textual class="po-textual">
	  Within such a framework, it is possible to deal with a TFS-like XML representation and to process data as standard XML documents.
	</textual></para><para class="po-block e224 e224"><textual class="po-textual">
      For the sake of simplicity, we call OTIM XML our set of XML schemas constructed from TFS. From a linguistic point of view, this set can be seen as the </textual><quote class="po-inline e225 e225"><textual class="po-textual">third component</textual></quote><textual class="po-textual"> mentioned as a perspective 
	  in [</textual><xref class="po-milestone e226 e226" linkend="SCHMIDT2009"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. This component, besides a basic encoding of data exportable into linguistic standard AIF (Atlas Interchange Format)
	  </textual><footnote class="po-popup e227 e227"><para class="po-block e228 e228"><link class="po-inline e229 e229" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.itl.nist.gov/iaui/894.01/atlas/new/develop/aif.html</textual></link></para></footnote><textual class="po-textual">, encodes every information concerning the organization as well as the constraints 
	  on the structures. In the same way, as TFS are used as a tree description language in theories such as HPSG (Head-Driven Phrase Structure Grammar, </textual><link class="po-inline e230 e230" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://hpsg.stanford.edu/</textual></link><textual class="po-textual">), the 
	  XML schema generated from our TFS representation also plays the same role with respect to the XML annotation data file. On the one hand, basic data can be encoded with AIF, on the other hand, the 
	  XML schema encodes all higher level information. Both components (basic data + structural constraints) guarantee against information lost that otherwise occurs when translating from one coding 
	  format to another (for example from Anvil to Praat).
    </textual></para><para class="po-block e231 e231"><textual class="po-textual">
	  The creation of the XSchema from the linguistic knowledge is done from the TFS or the UML representation if it is available. The first step consists in representing 
	  all the information available within TFS. Each feature of a TFS appears in the associated XSchema:
	  </textual><itemizedlist class="po-table e232 e232"><listitem class="po-container e233 e233"><para class="po-block e234 e234"><textual class="po-textual">feature types encoding atomic type are represented with a simple type (integer, string, ...),</textual></para></listitem><listitem class="po-container e235 e235"><para class="po-block e236 e236"><textual class="po-textual">composite feature types are represented with complex types.</textual></para></listitem></itemizedlist><textual class="po-textual">
	  From type definitions, a feature is represented by an XML element. The two relations of the TFS formalism (hierarchy and constituency) are represented respectively by type 
	  hierarchy and element aggregation. This representation guarantees that every information described within OTIM XML formalism can be represented by XML documents.
	  </textual><xref class="po-milestone e237 e237" linkend="app-prosody-xschema"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the complete XSchema of the prosodic domain. It shows all required components for annotating the prosody of a 
	  dialog within the OTIM project.
	</textual></para><para class="po-block e238 e238"><textual class="po-textual">
	  The choice of constructing one XSchema by linguistic domain is motivated by two reasons. The OTIM project crosses several domains but a significant part of the data processing is 
	  made within each domain. Independence between schemas implies that expert only has to work with XML documents containing the needed information. Moreover, as the knowledge 
	  on the domains evolves, a modular approach of the formal representation enables to be more reactive and efficient for updating or revising the XSchemas according to the 
	  TFS updating.
	</textual></para></section><section class="po-hcontainer e239 e239"><title class="po-block e240 e240"><textual class="po-textual">From raw annotations to XML documents</textual></title><para class="po-block e241 e241"><textual class="po-textual">
	    XSchemas enable to represent the knowledge of the linguistic domains and to describe the complex structure of data but linguists work with specific tools (like PRAAT or ELAN) that provide 
	    data as raw text files or specific XML documents that are not valid with our schemas. Generating valid OTIM XML documents relies on a transformation from the outputs of linguistic tools to 
		the OTIM XML representation.
      </textual></para><para class="po-block e242 e242"><textual class="po-textual">
	    Documents generation relies on the expression of the link between the data present within the annotation tool outputs and the value of the elements of the OTIM XML documents. 
		This link is called </textual><quote class="po-inline e243 e243"><textual class="po-textual">Annotation Scheme</textual></quote><textual class="po-textual"> and describes what kind of information is contained within raw annotation files and what element is attached to within the 
		OTIM XML document. The annotation scheme also describes good practices to experts for a consistent and repeatable annotation. The construction of a set of valid XML documents is made by processing 
        the raw annotation files with the annotation scheme. 		
	  </textual></para></section><section class="po-hcontainer e244 e244"><title class="po-block e245 e245"><textual class="po-textual">A Java framework for managing linguistic data</textual></title><para class="po-block e246 e246"><textual class="po-textual">
	    The OTIM project aims to fully annotate an 8 hours long corpus of recorded dialog. The raw annotation outputs from linguists' specific tools have to be processed in an efficient way 
		with respect to the OTIM XML description proposed. As linguists are very familiar with their annotation tools (PRAAT, ANVIL, ...), it was not an option to provide new tools from scratch 
		to directly make annotations within OTIM XML representation. Moreover, the diversity of the tools would make difficult to provide and maintain extensions for them in order to conform with 
		the OTIM XML. A solution for providing data processing capability that can deal with both raw annotation files and OTIM XML document is an applicative framework composed of specific modules.
	  </textual></para><para class="po-block e247 e247"><textual class="po-textual">
	    We made the choice of developing a Java framework for OTIM that is composed of two main parts (see </textual><xref class="po-milestone e248 e248" linkend="otim-framework"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">):
		</textual><itemizedlist class="po-table e249 e249"><listitem class="po-container e250 e250"><para class="po-block e251 e251"><textual class="po-textual">an implementation of the OTIM XSchemas within Object paradigm,</textual></para></listitem><listitem class="po-container e252 e252"><para class="po-block e253 e253"><textual class="po-textual">a set of modules that can interface with both raw annotation files and XML documents.</textual></para></listitem></itemizedlist><textual class="po-textual">
	  </textual></para><para class="po-block e254 e254"><textual class="po-textual">
	    The first part of the framework is distributed as </textual><quote class="po-inline e255 e255"><textual class="po-textual">OTIM API</textual></quote><textual class="po-textual"> and enables to deal with linguistic annotations with respect to OTIM XSchemas 
	   (and also TFS). The link between XML schemas and Java implementation is guaranteed by using the </textual><emphasis class="po-inline e256 e256" role="ital"><textual class="po-textual">Java Architecture For XML Binding</textual></emphasis><textual class="po-textual"> (JAXB)
	   </textual><footnote class="po-popup e257 e257"><para class="po-block e258 e258"><textual class="po-textual">http://www.oracle.com/technetwork/articles/javase/index-140168.html</textual></para></footnote><textual class="po-textual">. This technology provides method for automatically generating Java classes from a set of XSchemas. 
	   Using JAXB makes implicit and always consistent the link between XSchemas and their Java representation. When a schema is modified, the associated Java classes are automatically regenerated.
	   In most case, a minor change within XSchemas only involves an automatic update of the Java classes (changing an element name, changing a value, ...). When the changes are important: 
	   the structure of an XSchema or the annotation scheme are modified, the update of the Java classes need to be manually performed as implementation can be heavily modified. This can be seen as a limit but this 
	   kind of changes are rare in a standardidation context.
	  </textual></para><para class="po-block e259 e259"><textual class="po-textual">
	    The second part of the framework is a set of I/O modules that provide data exchange capabilities between OTIM XML documents and raw annotations files. The most important work of these 
		modules is to generate OTIM XML documents from raw annotations. This work is done by parsing annotations and interpreting them against the annotation scheme. Another important need is to reinsert 
		annotations that are expressed within OTIM XML format into a specific annotation tool. The I/O modules enable to export from XML documents to PRAAT or ANVIL tools and so, linguists can see 
		annotations performed by other teams on other domains within their own tools. This capability can be seen as a partial response to interoperability between different annotation tools and enable to 
		make a full pipeline from the annotation step to information system. 
	  </textual></para></section></section><section class="po-hcontainer e260 e260"><title class="po-block e261 e261"><textual class="po-textual">Querying and managing annotations in XML</textual></title><para class="po-block e262 e262"><textual class="po-textual">
	  The OTIM project aims to provide a fully annotated corpus represented in XML which can be queried by the standard XQuery language. Annotations can be used in various ways: simple viewing, domain crossing or reinsertion within standard tools. 
	  Every need of access to annotations relies on a query on the corpus. We first present general queries on the corpus and then the OTIM specific queries related to time and temporal relations between 
	  annotations. These last queries need an extention of XQuery with temporal capabilities.
	</textual></para><section class="po-hcontainer e263 e263"><title class="po-block e264 e264"><textual class="po-textual">General queries</textual></title><para class="po-block e265 e265"><textual class="po-textual">
	Queries are classified into two groups: those involving only a single domain and those taking into account several domains. In addition, for each group we distinguish between filtering queries and queries 
	requiring the construction of new XML documents.
	</textual></para><para class="po-block e266 e266"><textual class="po-textual">
	Filtering queries enables to extract a subset of data in the corpus. Filtering on a single domain produces a subset of the involved OTIM XML documents. 
	For example, the following query filters the phonemes from the phonetic annotations (described within the document phonetics.xml) by getting only those 
	that are tagged with the label "A":
	</textual><programlisting class="po-block e267 e267" xml:space="preserve"><textual class="po-textual">for $phoneme in fn:doc("phonetics.xml")/SyntacticPhrase/words/word/phonemes/phoneme[@label="A"]
return $phoneme</textual></programlisting><textual class="po-textual">
    Such a quite simple query is very important for linguists as it enables to target only annotations with specific characteristics. One another example of query is the filtering of phonemes according to their 
	temporal anchoring. The following query extracts each phoneme that verifies a condition on its temporal bounds:
	</textual><programlisting class="po-block e268 e268" xml:space="preserve"><textual class="po-textual">for $phoneme in fn:doc("phonetics.xml")/SyntacticPhrase/words/word/phonemes/phoneme
where ($phoneme/TimeInterval/start/@time &gt; 250) and ($phoneme/TimeInterval/end/@time &lt; 500) 
return $phoneme
</textual></programlisting><textual class="po-textual">
   Filtered fragments can be reorganised in the </textual><emphasis class="po-inline e269 e269" role="ital"><textual class="po-textual">return</textual></emphasis><textual class="po-textual"> clause specifying  the structure of the result to match linguistic specific needs. For example, the following query builds an empty element 
   A (searched label) for each filtered phoneme computing its duration:  
   </textual><programlisting class="po-block e270 e270" xml:space="preserve"><textual class="po-textual">for $phoneme in fn:doc("phonetics.xml")/SyntacticPhrase/words/word/phonemes/phoneme
where ($phoneme/TimeInterval/start/@time &gt; 250) and ($phoneme/TimeInterval/end/@time &lt; 500) 
return &lt;A duration='{$phoneme/TimeInterval/end/@time - $phoneme/TimeInterval/start/@time}'/&gt;
   </textual></programlisting><textual class="po-textual">
   Finally, the following query shows an example of concurent querying based on phonetics and prosody domains. For each accentual phrase (</textual><emphasis class="po-inline e271 e271" role="ital"><textual class="po-textual">ap</textual></emphasis><textual class="po-textual">) with at least 6 syllables the query builds an 
   element phoneme which is the first phoneme of the phrase as their share same start time (see inner where clause).
   </textual><programlisting class="po-block e272 e272" xml:space="preserve"><textual class="po-textual">for $ap in fn:doc("prosody-IP_AP.xml")/TurnConversationalUnit/phrases/ip/constituents/ap
where count($ap/syllables/syllable) &gt; 6
return 
  &lt;phoneme id='{$ap/@id}'&gt;{$ap/label}
  {for $phoneme in fn:doc("phonemes.xml")/phonemes/phoneme
   where $phoneme/TimeInterval/start/@time = $ap/TimeInterval/start/@time return $phoneme}
&lt;/phoneme&gt;
   </textual></programlisting><textual class="po-textual">
	</textual></para></section><section class="po-hcontainer e273 e273"><title class="po-block e274 e274"><textual class="po-textual">Time related queries</textual></title><para class="po-block e275 e275"><textual class="po-textual">
	Among the queries shown above, some take into account the notion of time. For a corpus of annotations aligned with a signal such as video, time is indeed the dimension with which 
	the studied objects are related. However, even if the time can be taken in account in an absolute way without extending XQuery, the use of temporal relation (such as relations described 
	within Allen algebra) cannot be expressed. A relative expression of time position (before, after, during, ...) is a critical need when linguists process the corpus for determining some 
    complex object (</textual><emphasis class="po-inline e276 e276" role="ital"><textual class="po-textual">before</textual></emphasis><textual class="po-textual">, 
  </textual><emphasis class="po-inline e277 e277" role="ital"><textual class="po-textual">meets</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e278 e278" role="ital"><textual class="po-textual">overlaps</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e279 e279" role="ital"><textual class="po-textual">starts</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e280 e280" role="ital"><textual class="po-textual">during</textual></emphasis><textual class="po-textual">, 
  </textual><emphasis class="po-inline e281 e281" role="ital"><textual class="po-textual">finishes</textual></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e282 e282" role="ital"><textual class="po-textual">equal</textual></emphasis><textual class="po-textual"> and symetrics). 	
	</textual></para><para class="po-block e283 e283"><textual class="po-textual">
	We have extended XQuery by adding functions that implement Allen's relations within the OTIM XML representation. By inheritance, every object description contains the following structure that enables 
	temporal anchoring:
	</textual><programlisting class="po-block e284 e284" xml:space="preserve"><textual class="po-textual">&lt;xs:complexType name="timeInterval"&gt;
  &lt;xs:sequence&gt;
    &lt;xs:element name="start" type="timePoint" minOccurs="0"/&gt;
    &lt;xs:element name="end" type="timePoint" minOccurs="0"/&gt;
  &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;

&lt;xs:complexType name="timePoint"&gt;
  &lt;xs:sequence/&gt;
    &lt;xs:attribute name="time" type="xs:double" use="required"/&gt;
&lt;/xs:complexType&gt;
	
&lt;xs:complexType name="Object"&gt;
  &lt;xs:sequence&gt;
    &lt;xs:element name="index" type="xs:integer"/&gt;
    &lt;xs:choice minOccurs="0"&gt;
      &lt;xs:element ref="TimeInterval"/&gt;
      &lt;xs:element ref="TimePoint"/&gt;
    &lt;/xs:choice&gt;
  &lt;/xs:sequence&gt;
&lt;/xs:complexType&gt;</textual></programlisting><textual class="po-textual">
	</textual></para><para class="po-block e285 e285"><textual class="po-textual">
	Allen's function are binaries boolean functions that take in parameter a </textual><emphasis class="po-inline e286 e286" role="ital"><textual class="po-textual">TimeInterval</textual></emphasis><textual class="po-textual"> or a 
  </textual><emphasis class="po-inline e287 e287" role="ital"><textual class="po-textual">TimePoint</textual></emphasis><textual class="po-textual"> XML fragment and that return </textual><emphasis class="po-inline e288 e288" role="ital"><textual class="po-textual">true</textual></emphasis><textual class="po-textual"> if the given relation is verified or </textual><emphasis class="po-inline e289 e289" role="ital"><textual class="po-textual">false</textual></emphasis><textual class="po-textual"> otherwise. 
	</textual></para><para class="po-block e290 e290"><textual class="po-textual">Extending XQuery with specific time functions for OTIM XML representation is a solution that satisfies linguists need for expressiveness. However, due to TFS initial representation, OTIM XML 
	representation is not optimized for processing queries that are significantly based on time. Their use cannot be made ​​on an entire corpus. Among the possible solutions 
	to solve this problem, an explicit representation of time relationships in separate XML documents or an ontological approach (OWL) can be considered.</textual></para></section></section><section class="po-hcontainer e291 e291"><title class="po-block e292 e292"><textual class="po-textual">Implementation</textual></title><para class="po-block e293 e293"><textual class="po-textual">The OTIM framework is implemented within a Java / XML framework. The JAXB technology provides a strong and consistent link between XML Schema and Java representations. The XML management and querying is 
	hosted within one eXist (</textual><link class="po-inline e294 e294" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://exist.sourceforge.net/</textual></link><textual class="po-textual">) server for web application or within an embedded eXist module for a standalone utilization. At this time, 15 minutes of the corpus 
	have been annotated for 4 domains (phonetics, prosody, syntax, disfluency). The size of an XML document representing the 15 minutes can vary from 150 up to 500 Mo.</textual></para></section><section class="po-hcontainer e295 e295"><title class="po-block e296 e296"><textual class="po-textual">Conclusion</textual></title><para class="po-block e297 e297"><textual class="po-textual">
	  In this paper, our intention was to describe an XML engine dedicated to the representation and the concurrent querying of multimodal linguistic 
	  annotations implying to analyze and to find correlations between annotated linguistic domains.
	</textual></para><para class="po-block e298 e298"><textual class="po-textual">
	  From the signal and the signal transcription of a conversational speech between two persons, experts annotate data according to different linguistics domains 
	  like prosody, phonetics, morpho-syntax, discourse or gesture/posture. From the TFS provided by linguists that describe the knowledge of the studied domains, 
	  from legacy data and annotations, we automatically build an XML corpus which can be queried by means of an extension of XQuery, in a concurrent way. A java framework has been provided
	  and enables to interface with both linguistic tools and OTIM XML information system. With this framework, the problem of the interoperability 
	  is solved for all the involved tools (PRAAT, ANVIL, ELAN) and domains within the OTIM project. Moreover, our proposal is based on XML standards.
	</textual></para><para class="po-block e299 e299"><textual class="po-textual">
	  Nevertheless, we can notice that our XML solution cannot capture the semantics of linguistic knowledge. Moreover, TFS expressivity is limited, for example for temporal relations.  Object anchoring 
	  is absolute: interval boundaries are represented by the features </textual><emphasis class="po-inline e300 e300" role="ital"><textual class="po-textual">start</textual></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e301 e301" role="ital"><textual class="po-textual">end</textual></emphasis><textual class="po-textual">, with temporal value (an object can also be situated 
	  by means of a point). It would be useful to have a relative anchoring. Another limit is due to the underlying model of TFS which is a Directed Acyclic Graph (DAG). When linguists need to annotate 
	  co-references or disfluencies  which are organized around objects, it would be useful to have an object anchoring which is conflicting with the acyclic graph.      
	</textual></para><para class="po-block e302 e302"><textual class="po-textual">
	We currently work to propose a knowledge representation formalism which be an alternative to TFS: an ontological approach based on Description Logics [</textual><xref class="po-milestone e303 e303" linkend="DLHANDBOOK2003"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] (DL) 
	and on semantic web technologies for the development of a linguistic Knowledge-based Information System. We have already defined a linguistic ontology from the TFS provided 
	by linguists for prosody, phonetics, lexical and disfluency domains. An applicative framework is under development, it is based on semantic web proposals such as OWL DL 
	(Ontology Web Language5) for the representation of this ontology and SPARQL [</textual><xref class="po-milestone e304 e304" linkend="SPARQL2007"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] the querying language of semantic web for its manipulation. 
	</textual></para></section><appendix class="po-hcontainer e305 e305" xml:id="app-prosody-xschema"><title class="po-block e306 e306"><textual class="po-textual">XSchema of the Prosodic domain</textual></title><para class="po-block e307 e307"><textual class="po-textual">
	</textual><programlisting class="po-block e308 e308" xml:space="preserve"><textual class="po-textual">
&lt;xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;

  &lt;xs:element name="Syllable" type="syllable"/&gt;

  &lt;xs:element name="TimeCompound" type="timeCompound"/&gt;

  &lt;xs:element name="TimeInterval" type="timeInterval"/&gt;

  &lt;xs:element name="TimePoint" type="timePoint"/&gt;

  &lt;xs:element name="TurnConversationalUnit" type="turnConversationalUnit"/&gt;

  &lt;xs:complexType name="turnConversationalUnit"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="Object"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="phrases" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
                  &lt;xs:element name="ip" type="IntonationalPhrase"/&gt;
                  &lt;xs:element name="ap" type="AccentualPhrase"/&gt;
                  &lt;xs:element name="pp" type="ProsodicPhrase"/&gt;
                &lt;/xs:choice&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
        &lt;/xs:sequence&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="Object"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="index" type="xs:int"/&gt;
      &lt;xs:choice minOccurs="0"&gt;
        &lt;xs:element ref="TimeInterval"/&gt;
        &lt;xs:element ref="TimePoint"/&gt;
        &lt;xs:element ref="TimeCompound"/&gt;
      &lt;/xs:choice&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="IntonationalPhrase"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="ProsodicPhrase"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="constituents" minOccurs="0"&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name="accentual_phrase" type="AccentualPhrase" minOccurs="0" maxOccurs="unbounded"/&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
          &lt;xs:element name="contour" type="Contour" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="ProsodicPhrase" abstract="true"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="Object"&gt;
        &lt;xs:sequence/&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="AccentualPhrase"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="ProsodicPhrase"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="label" type="xs:string" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="timeInterval"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="end" type="timePoint" minOccurs="0"/&gt;
      &lt;xs:element name="start" type="timePoint" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="timePoint"&gt;
    &lt;xs:sequence/&gt;
    &lt;xs:attribute name="time" type="xs:double" use="required"/&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="timeCompound"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="TimeLocations" minOccurs="0"&gt;
        &lt;xs:complexType&gt;
          &lt;xs:sequence&gt;
            &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
              &lt;xs:element name="Interval" type="timeInterval"/&gt;
              &lt;xs:element name="Point" type="timePoint"/&gt;
            &lt;/xs:choice&gt;
          &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
      &lt;/xs:element&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="Contour"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="direction" type="ContourDirection" minOccurs="0"/&gt;
      &lt;xs:element name="function" type="ContourFunction" minOccurs="0"/&gt;
      &lt;xs:element name="position" type="ContourPosition" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="syllable"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="Object"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="accentuable" type="xs:boolean"/&gt;
          &lt;xs:element name="constituents" type="SyllableConstituent" nillable="true" minOccurs="0" maxOccurs="unbounded"/&gt;
          &lt;xs:element name="position" type="SyllablePosition" minOccurs="0"/&gt;
          &lt;xs:element name="prominence" type="xs:boolean"/&gt;
          &lt;xs:element name="struct" type="SyllableStruct" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="SyllableConstituent"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="label" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="phon" type="Phoneme" nillable="true" minOccurs="0" maxOccurs="unbounded"/&gt;
      &lt;xs:element name="type" type="SyllableConstituentType" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="Phoneme"&gt;
    &lt;xs:complexContent&gt;
      &lt;xs:extension base="Object"&gt;
        &lt;xs:sequence&gt;
          &lt;xs:element name="articulationGestures" type="ArticulationGestures" minOccurs="0"/&gt;
          &lt;xs:element name="category" type="PhonemeCategory" minOccurs="0"/&gt;
          &lt;xs:element name="label" type="xs:string" minOccurs="0"/&gt;
          &lt;xs:element name="phonemeType" type="phoneme_type" minOccurs="0"/&gt;
          &lt;xs:element name="role" type="Role" minOccurs="0"/&gt;
          &lt;xs:element name="sonority" type="PhonemeSonority" minOccurs="0"/&gt;
        &lt;/xs:sequence&gt;
      &lt;/xs:extension&gt;
    &lt;/xs:complexContent&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="ArticulationGestures"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="glottis" type="Aperture" minOccurs="0"/&gt;
      &lt;xs:element name="lip" type="Lip" minOccurs="0"/&gt;
      &lt;xs:element name="tongue" type="Tongue" minOccurs="0"/&gt;
      &lt;xs:element name="velum" type="Aperture" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="Lip"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="aperture" type="Aperture" minOccurs="0"/&gt;
      &lt;xs:element name="protusion" type="xs:string" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="Tongue"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="bodyConstriction" type="BodyConstriction" minOccurs="0"/&gt;
      &lt;xs:element name="tipConstriction" type="TipConstriction" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="BodyConstriction"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="degree" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="location" type="BodyConstrictionLocation" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="TipConstriction"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="degree" type="xs:string" minOccurs="0"/&gt;
      &lt;xs:element name="location" type="TipConstrictionLocation" minOccurs="0"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="Role"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="epenthetic" type="xs:boolean"/&gt;
      &lt;xs:element name="liaison" type="xs:boolean"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:complexType name="SyllablePosition"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element name="rank" type="xs:int"/&gt;
      &lt;xs:element name="syl_number" type="xs:int"/&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;

  &lt;xs:simpleType name="ContourDirection"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Raising"/&gt;
      &lt;xs:enumeration value="Falling"/&gt;
      &lt;xs:enumeration value="Falling_raising"/&gt;
      &lt;xs:enumeration value="Raising_falling"/&gt;
      &lt;xs:enumeration value="Unspecified"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="ContourFunction"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Conclusive"/&gt;
      &lt;xs:enumeration value="NonConclusive"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="ContourPosition"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Final"/&gt;
      &lt;xs:enumeration value="Penultimate"/&gt;
      &lt;xs:enumeration value="Unspecified"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="Aperture"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="wide"/&gt;
      &lt;xs:enumeration value="narrow"/&gt;
      &lt;xs:enumeration value="closed"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="BodyConstrictionLocation"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="wide"/&gt;
      &lt;xs:enumeration value="narrow"/&gt;
      &lt;xs:enumeration value="closed"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="TipConstrictionLocation"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="alveolar"/&gt;
      &lt;xs:enumeration value="dental"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="PhonemeCategory"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="vowel"/&gt;
      &lt;xs:enumeration value="consonant"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="phoneme_type"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="occlusive"/&gt;
      &lt;xs:enumeration value="fricative"/&gt;
      &lt;xs:enumeration value="nasal"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="PhonemeSonority"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="voiced"/&gt;
      &lt;xs:enumeration value="voiceless"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="SyllableConstituentType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="Onset"/&gt;
      &lt;xs:enumeration value="Nucleus"/&gt;
      &lt;xs:enumeration value="Coda"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;

  &lt;xs:simpleType name="SyllableStruct"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="V"/&gt;
      &lt;xs:enumeration value="CV"/&gt;
      &lt;xs:enumeration value="CCV"/&gt;
      &lt;xs:enumeration value="CVC"/&gt;
      &lt;xs:enumeration value="CCVC"/&gt;
      &lt;xs:enumeration value="CVCC"/&gt;
      &lt;xs:enumeration value="VC"/&gt;
      &lt;xs:enumeration value="CCCV"/&gt;
      &lt;xs:enumeration value="CCVCC"/&gt;
      &lt;xs:enumeration value="CCCVC"/&gt;
      &lt;xs:enumeration value="VCC"/&gt;
      &lt;xs:enumeration value="OTHER"/&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
&lt;/xs:schema&gt;

	</textual></programlisting><textual class="po-textual">
	</textual></para></appendix><bibliography class="po-hcontainer e309 e309"><title class="po-block e310 e310"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e311 e311" xml:id="BRUNO2007B" xreflabel="Bruno 2007b"><textual class="po-textual">
	Bruno E., Calabretto S., Murisasco E.
	</textual><emphasis class="po-inline e312 e312" role="ital"><textual class="po-textual">Documents textuels multistructurés : un état de l’art, Revue en Sciences du Traitement de l'Information</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e313 e313"><textual class="po-textual">I3 (Information - Interaction – Intelligence) , Vol. 7 (1).</textual></quote><textual class="po-textual"> 
	2007
	</textual></bibliomixed><bibliomixed class="po-block e314 e314" xml:id="BRUNO2007" xreflabel="Bruno 2007"><textual class="po-textual">
	Bruno, E. and Murisasco, E.
	</textual><emphasis class="po-inline e315 e315" role="ital"><textual class="po-textual">An xml environment for multistructured textual documents.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e316 e316"><textual class="po-textual">Proceedings of the Second International Conference on Digital Information Management (ICDIM’07), pages 230–235.</textual></quote><textual class="po-textual"> 
	 Lyon, France, October 2007.	
	</textual></bibliomixed><bibliomixed class="po-block e317 e317" xml:id="BRUNO2006" xreflabel="Bruno 2006"><textual class="po-textual">
	Bruno, E. and Murisasco, E.
	</textual><emphasis class="po-inline e318 e318" role="ital"><textual class="po-textual">Describing and querying hierarchical structures defined over the same textual data</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e319 e319"><textual class="po-textual">Proceedings of the ACM Symposium on Document Engineering (DocEng 2006), pages 147–154.</textual></quote><textual class="po-textual"> 
	Amsterdam, The Netherlands, October 2006	
	</textual></bibliomixed><bibliomixed class="po-block e320 e320" xml:id="JLM2006" xreflabel="Le Maitre 2006"><textual class="po-textual">
	Le Maitre, J. 
	</textual><emphasis class="po-inline e321 e321" role="ital"><textual class="po-textual">Describing multistructured xml documents by means of delay nodes.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e322 e322"><textual class="po-textual">Proceedings of the 2006 ACM symposium on Document engineering (DocEng ’06), pp 155–164.</textual></quote><textual class="po-textual"> 
	Amsterdam, The Netherlands, oct 2006.
	</textual></bibliomixed><bibliomixed class="po-block e323 e323" xml:id="ALLEN1991" xreflabel="Allen 1991"><textual class="po-textual">Allen, J.</textual><emphasis class="po-inline e324 e324" role="ital"><textual class="po-textual">Time and time again : The many ways represent time</textual></emphasis><textual class="po-textual"> 
		in </textual><quote class="po-inline e325 e325"><textual class="po-textual">International Journal of Intelligent Systems</textual></quote><textual class="po-textual"> 
		6(4):341–355, july 1991
	</textual></bibliomixed><bibliomixed class="po-block e326 e326" xml:id="DLHANDBOOK2003" xreflabel="Baader et al. 2003"><textual class="po-textual">
	Baader F., Calvanese D., McGuinness D.L., Nardi D., P. F., Patel-Schneider P.F.
	</textual><emphasis class="po-inline e327 e327" role="ital"><textual class="po-textual">The Description Logic Handbook: Theory, Implementation, Applications.</textual></emphasis><textual class="po-textual"> 
    Cambridge University Press, Cambridge, UK, 2003. ISBN 0-521-78176-0
		
	</textual></bibliomixed><bibliomixed class="po-block e328 e328" xml:id="PORTIER2010" xreflabel="Portier 2010"><textual class="po-textual">
	Portier, P.-E. and Calabretto S.
	</textual><emphasis class="po-inline e329 e329" role="ital"><textual class="po-textual">Multi-structured documents and the emergence of annotations vocabularies.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e330 e330"><textual class="po-textual">Proceedings of Balisage: The Markup Conference 2010. Balisage Series on Markup Technologies, vol. 5.</textual></quote><textual class="po-textual"> 
	Montréal, Canada, August 3 - 6, 2010.
	</textual></bibliomixed><bibliomixed class="po-block e331 e331" xml:id="BIRD2001" xreflabel="Bird 2001"><textual class="po-textual">
	Bird S. and Liberman M.
	</textual><emphasis class="po-inline e332 e332" role="ital"><textual class="po-textual">A formal framework for linguistic annotation.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e333 e333"><textual class="po-textual">Speech Communication 33(1,2), pages 23–60.</textual></quote><textual class="po-textual"> 
    september 2001.
	</textual></bibliomixed><bibliomixed class="po-block e334 e334" xml:id="BIRD2000" xreflabel="Bird et al. 2000"><textual class="po-textual">
	Bird, S., Day, D., Garofolo, J., Henderson, J., Laprun, C., and Liberman, M.
	</textual><emphasis class="po-inline e335 e335" role="ital"><textual class="po-textual">ATLAS: A flexible and extensible architecture for linguistic annotation</textual></emphasis><textual class="po-textual"> 
    2000
	</textual></bibliomixed><bibliomixed class="po-block e336 e336" xml:id="IDE2007" xreflabel="Ide 2007"><textual class="po-textual">
	Ide, N., Suderman, K. 
	</textual><emphasis class="po-inline e337 e337" role="ital"><textual class="po-textual">GrAF: A Graph-based Format for Linguistic Annotations</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e338 e338"><textual class="po-textual">Proceedings of the Linguistic Annotation Workshop LAW'07.</textual></quote><textual class="po-textual"> 
	2007
	</textual></bibliomixed><bibliomixed class="po-block e339 e339" xml:id="DEKHTYAR2005" xreflabel="Dekhtyar 2005"><textual class="po-textual">
	Dekhtyar A. and Iacob I.E.
	</textual><emphasis class="po-inline e340 e340" role="ital"><textual class="po-textual">A framework for management of concurrent xml markup.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e341 e341"><textual class="po-textual">Data and Knowledge Engineering, 52(2):185–208,</textual></quote><textual class="po-textual"> 
	2005
	</textual></bibliomixed><bibliomixed class="po-block e342 e342" xml:id="CHATTI2007" xreflabel="Chatti 2007"><textual class="po-textual">
	Chatti, N., Kaouk, S., Calabretto, S. and Pinon J.M..
	</textual><emphasis class="po-inline e343 e343" role="ital"><textual class="po-textual">Multix: an xml based formalism to encode multi-structured documents.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e344 e344"><textual class="po-textual">Proceedings of Extreme Markup Languages Conference.</textual></quote><textual class="po-textual"> 
	August 6-10 2007.  
	</textual></bibliomixed><bibliomixed class="po-block e345 e345" xml:id="DJEMAL2008" xreflabel="Djemal 2008"><textual class="po-textual">
	Djemal K., Soule-Dupuy and Valles-Parlangeau, C.
	</textual><emphasis class="po-inline e346 e346" role="ital"><textual class="po-textual">Modeling and exploitation of multistructured documents.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e347 e347"><textual class="po-textual">Proceedings of the IEEE 3rd International Conference on Information and Communication Technologies: From Theory to Applications (ICTTA’ 08).</textual></quote><textual class="po-textual"> 
    Damascus, Syria, April 2008.
	</textual></bibliomixed><bibliomixed class="po-block e348 e348" xml:id="SGML" xreflabel="Goldfarb 1990"><textual class="po-textual">
	Goldfarb, C.-F. and Rubinsky Y.
	</textual><emphasis class="po-inline e349 e349" role="ital"><textual class="po-textual">The SGML handbook.</textual></emphasis><textual class="po-textual"> 
    </textual><quote class="po-inline e350 e350"><textual class="po-textual">Clarendon Press,</textual></quote><textual class="po-textual"> 
	Oxford, 1990.
	</textual></bibliomixed><bibliomixed class="po-block e351 e351" xml:id="HILBERT2005" xreflabel="Hilbert 2005"><textual class="po-textual">
	Hilbert M., Schonefeld O. and Witt A.
	</textual><emphasis class="po-inline e352 e352" role="ital"><textual class="po-textual">Making concur work.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e353 e353"><textual class="po-textual">Proceedings of The Extreme Markup Languages Conference.</textual></quote><textual class="po-textual"> 
	August 2005.
	</textual></bibliomixed><bibliomixed class="po-block e354 e354" xml:id="DEROSE2004" xreflabel="DeRose 2004"><textual class="po-textual">
	DeRose, S.
	</textual><emphasis class="po-inline e355 e355" role="ital"><textual class="po-textual">Markup overlap : a review and a horse.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e356 e356"><textual class="po-textual">In Proceedings of The Extreme markup language Conference.</textual></quote><textual class="po-textual"> 
	2004
	</textual></bibliomixed><bibliomixed class="po-block e357 e357" xml:id="JAGADISH2004" xreflabel="Jagadish et al. 2004"><textual class="po-textual">
	Jagadish, H.-V., Lakshmanan, L.-V.-S., Scannapieco, M., Srivastava, D. and Wiwatwattana N.
	</textual><emphasis class="po-inline e358 e358" role="ital"><textual class="po-textual">Colorful XML: One Hierarchy Isn’t Enough.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e359 e359"><textual class="po-textual">Proceedings of The International Conference on Management of Data (SIGMOD’04), pages 251–262.</textual></quote><textual class="po-textual"> 
	2004	
	</textual></bibliomixed><bibliomixed class="po-block e360 e360" xml:id="TEIP4" xreflabel="TEI P4"><textual class="po-textual">
	Sperberg-McQueen, C.-M. and Burnard, L.
	</textual><emphasis class="po-inline e361 e361" role="ital"><textual class="po-textual">Tei p4 guidelines for electronic text encoding and interchange.</textual></emphasis><textual class="po-textual"> 
	2001
	</textual></bibliomixed><bibliomixed class="po-block e362 e362" xml:id="SPERBERG2000" xreflabel="Sperberg-McQueen 2000"><textual class="po-textual">
	Sperberg-McQueen, C-M and Huitfeldt, C.
	</textual><emphasis class="po-inline e363 e363" role="ital"><textual class="po-textual">Goddag: A data structure for overlapping hierarchies.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e364 e364"><textual class="po-textual">Proceedings of The Principles of Digital Document and electronic publishing (DDEP/PODDP’00), pages 139–160.</textual></quote><textual class="po-textual"> 
	2000
	</textual></bibliomixed><bibliomixed class="po-block e365 e365" xml:id="TENNINSON2002" xreflabel="Tennison 2002"><textual class="po-textual">
	Tennison, J. and Wendell, P.
	</textual><emphasis class="po-inline e366 e366" role="ital"><textual class="po-textual">Layered markup and annotation language (lmnl)</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e367 e367"><textual class="po-textual">Proceedongs of The Extreme Markup Languages Conference.</textual></quote><textual class="po-textual"> 
	2002
	</textual></bibliomixed><bibliomixed class="po-block e368 e368" xml:id="WITT2004" xreflabel="Witt 2004"><textual class="po-textual">
	Witt, A.
	</textual><emphasis class="po-inline e369 e369" role="ital"><textual class="po-textual">Multiple hierarchies : news aspects of an old solution.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e370 e370"><textual class="po-textual">Proceedings of The Extreme markup language Conference.</textual></quote><textual class="po-textual"> 
	2004
	</textual></bibliomixed><bibliomixed class="po-block e371 e371" xml:id="LAW2010" xreflabel="Blache 2010b"><textual class="po-textual">
	Blache, P., Bertrand, R., Bigi, B., Bruno, E., Cela, E., Esperrer, R., Ferre, G., Guardiola, M., Hirst, D., Magro, E., JC, M., C, M., Ma, M., Murisasco, E., I, N., P, N., B, P., Laurent, P., J, P.-V., Seinturier, J., N, T., Marion, T., and Stephane, R.
	</textual><emphasis class="po-inline e372 e372" role="ital"><textual class="po-textual">Multimodal annotation of conversational data.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e373 e373"><textual class="po-textual">In Proceedings of the fourth linguistic annotation workwhop (LAW), pages 186–191.</textual></quote><textual class="po-textual"> 
    Assocation for computational Lunguistics (ACL). 2010
	</textual></bibliomixed><bibliomixed class="po-block e374 e374" xml:id="COPESTAKE2003" xreflabel="Copestake 2003"><textual class="po-textual">
	Copestake, A.
	</textual><emphasis class="po-inline e375 e375" role="ital"><textual class="po-textual">Definitions of Typed Feature Structures.</textual></emphasis><textual class="po-textual"> 
    in </textual><quote class="po-inline e376 e376"><textual class="po-textual">Collaborative Language Engineering: A Case Study in Efficient Grammar-based Processing</textual></quote><textual class="po-textual"> 
    CSLI Publications, Ventura Hall, Stanford University, Stanford, CA 94305-4115, 2003.
	</textual></bibliomixed><bibliomixed class="po-block e377 e377" xml:id="SPARQL2007" xreflabel="Prud’hommeaux 2007"><textual class="po-textual">
	Prud’hommeaux, E. and Seaborne, A.
	</textual><emphasis class="po-inline e378 e378" role="ital"><textual class="po-textual">Sparql query language for rdf (working draft)</textual></emphasis><textual class="po-textual"> 
	</textual><quote class="po-inline e379 e379"><textual class="po-textual">Technical report</textual></quote><textual class="po-textual"> 
	W3C.
	</textual><link class="po-inline e380 e380" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/2009/sparql/wiki/Main_Page</textual></link><textual class="po-textual">
	</textual></bibliomixed><bibliomixed class="po-block e381 e381" xml:id="SCHMIDT2009" xreflabel="Schmidt et al. 2009"><textual class="po-textual">Schmidt, T., Duncan, S., Ehmer, O., Hoyt, J., Kipp, M., Loehr, D., Magnusson, M., Rose, T., and Sloetjes, H.
	  </textual><emphasis class="po-inline e382 e382" role="ital"><textual class="po-textual">chapter An exchange format for multimodal annotations</textual></emphasis><textual class="po-textual"> 
		in </textual><quote class="po-inline e383 e383"><textual class="po-textual">Multimodal corpora.</textual></quote><textual class="po-textual"> 
		pages 207–221. Springer-Verlag, Berlin, Heidelberg, 2009
	</textual></bibliomixed><bibliomixed class="po-block e384 e384" xml:id="STHRENBERG2009" xreflabel="Sthrenberg 2009"><textual class="po-textual">Sthrenberg, M. and Jettka, D.</textual><emphasis class="po-inline e385 e385" role="ital"><textual class="po-textual">A toolkit for multidimensional markup - the development of sgf to xstandoff</textual></emphasis><textual class="po-textual"> 
		in </textual><quote class="po-inline e386 e386"><textual class="po-textual">Proceedings of Balisage: The Markup Conference 2009</textual></quote><textual class="po-textual"> 
		Assocation for computational Lunguistics(ACL), Balisage Series on Markup Technologies, vol. 3.
		</textual><link class="po-inline e387 e387" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.xstandoff.net/</textual></link><textual class="po-textual">
	</textual></bibliomixed><bibliomixed class="po-block e388 e388" xml:id="ICGL2010" xreflabel="Blache 2010"><textual class="po-textual">Blache, Philippe and Bigi, Brigitte and Prévot, Laurent and Rauzy, Stéphane and Seinturier, Julien</textual><emphasis class="po-inline e389 e389" role="ital"><textual class="po-textual">Annotation schemes, annotation tools and the question of interoperability: from Typed Feature Structures to XML Schemas</textual></emphasis><textual class="po-textual"> 
		in </textual><quote class="po-inline e390 e390"><textual class="po-textual">Proceedings of the 2nd International Conférence on Global Interoperability for Language Resources</textual></quote><textual class="po-textual"> 
		(compiled under Act of Congress of 18-20 January, 2010). City University of Hong Kong
		</textual><link class="po-inline e391 e391" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.yale.edu/lawweb/avalon/raleigh.htm</textual></link><textual class="po-textual">.
	</textual></bibliomixed><bibliomixed class="po-block e392 e392" xml:id="CARPENTER1992" xreflabel="Carpenter 1992"><textual class="po-textual">
	  Carpenter, R. L.
	  </textual><emphasis class="po-inline e393 e393" role="ital"><textual class="po-textual">The Logic of Typed Feature Structures.</textual></emphasis><textual class="po-textual"> 
		in </textual><quote class="po-inline e394 e394"><textual class="po-textual">volume 32 of Cambridge Tracts in Theoretical Computer Science</textual></quote><textual class="po-textual"> 
		Cambridge University Press, The Edinburgh Building, Shaftesbury Road, Cambridge CB2 8RU, United Kingdom. 1992
	</textual></bibliomixed></bibliography></article></classedDocument>