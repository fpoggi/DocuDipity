<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.2"><title class="po-block e1 e1"><textual class="po-textual">Managing XML references through the XRM vocabulary</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2009</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 11 - 14, 2009</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">This paper presents a general purpose method (called </textual><emphasis class="po-inline e8 e8"><textual class="po-textual">XRM</textual></emphasis><textual class="po-textual"> for
                XML References Management) to express knowledge about links common to a family of
                XML documents (a.k.a. a document type) and to exploit this knowledge in order to
                operate verifications, transformations or derivations of the corresponding XML
                instances. </textual></para></abstract><author class="po-record e9 e9"><personname class="po-record e10 e10"><firstname class="po-field e11 e11"><textual class="po-textual">Jean-Yves</textual></firstname><surname class="po-field e12 e12"><textual class="po-textual">Vion-Dury</textual></surname></personname><personblurb class="po-container e13 e13"><para class="po-block e14 e14"><textual class="po-textual">Jean-Yves Vion-Dury holds an CS engineering degree from the “Conservatoire National des Arts et Metiers, France”  (1993) and graduated with a PhD in CS from Universite Joseph Fourier, Grenoble in 1999. He has been working at  Xerox Research Centre Europe (in Grenoble, France) since 1995, as a research scientist; he has also been on a two year sabbatical with Vincent Quint’s team at INRIA in 2002-2004. His research interests relate to various aspect of XML including models, the impact of standards, validation/transformation languages and architectures, with theoretical background in programming languages, compilation, type systems and formal logics.</textual></para><para class="po-block e15 e15"><textual class="po-textual">Jean-Yves was Program Chair of DocEng (ACM Document Engineering Symposium) in 2004, has been a member of its Program Committee since 2003,  and a member of its Steering Committee since 2005.</textual></para></personblurb><affiliation class="po-record e16 e16"><jobtitle class="po-field e17 e17"><textual class="po-textual">Senior Scientist</textual></jobtitle><orgname class="po-block e18 e18"><textual class="po-textual">Xerox Research Centre Europe</textual></orgname></affiliation><email class="po-field e19 e19"><textual class="po-textual">jean-yves.vion-dury@xeroxlabs.com</textual></email></author><legalnotice class="po-container e20 e20"><para class="po-block e21 e21"><textual class="po-textual">Copyright © 2009 Mulberry Technologies, Inc.  Used with
                permission.</textual></para></legalnotice></info><section class="po-hcontainer e22 e22"><title class="po-block e23 e23"><textual class="po-textual">Introduction</textual></title><para class="po-block e24 e24"><textual class="po-textual"> So far no specific method nor well suited technology exist to address XML link
            management related applications, although those are numerous and may require quite
            complex processing when using standard XML tools or programming languages. </textual></para><para class="po-block e25 e25"><textual class="po-textual">We call link or reference any URL, URN, URI, IRI, XLink (see [</textual><xref class="po-milestone e26 e26" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]
            and [</textual><xref class="po-milestone e27 e27" linkend="XLink"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) be it relative or absolute that can be found in a given
            XML document instance, either under the form of an attribute or as a text node (once
            parsed, an XML document is composed of element nodes, attribute nodes or text nodes: see
                [</textual><xref class="po-milestone e28 e28" linkend="XML"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] for a general description of XML standard). </textual></para><para class="po-block e29 e29"><textual class="po-textual"> The method and conceptual models we propose hereby allow concise and efficient XML
            descriptions of links that can be heavily reused, and enable adequate descriptions of
            main link-based operations required in XML processing environments, especially link
            relocation for packaging clusters of documents and associated resources, verification of
            link properties with respect to security, conformance to a predefined selection of HTTP
            servers, simplification and normalization of link representation inside a given XML
            instance, smooth redirection of database requests hidden inside the structure of links,
            to cite a few among the huge variety of relevant cases. </textual></para><para class="po-block e30 e30"><textual class="po-textual"> The knowledge about links is formalized into a specification language that </textual><orderedlist class="po-table e31 e31"><listitem class="po-container e32 e32"><para class="po-block e33 e33"><textual class="po-textual">describes links location and typology inside a family of XML documents
                    </textual></para></listitem><listitem class="po-container e34 e34"><para class="po-block e35 e35"><textual class="po-textual"> tags these link descriptions in such a way that they can be further
                        designated and reused either individually or collectively. </textual></para></listitem></orderedlist><textual class="po-textual"> The operations on XML instances use the link descriptions above in order
            to </textual><itemizedlist class="po-table e36 e36"><listitem class="po-container e37 e37"><para class="po-block e38 e38"><textual class="po-textual">verify the compliance of links according to the standards describing
                        properties that these links must satisfy (e.g. lexical and syntactic
                        structure),</textual></para></listitem><listitem class="po-container e39 e39"><para class="po-block e40 e40"><textual class="po-textual">check the conformance to specific or general properties (e.g. URI must be
                        relative, or must match a given pattern),</textual></para></listitem><listitem class="po-container e41 e41"><para class="po-block e42 e42"><textual class="po-textual">generate a list of all links contained in the instance (dependencies),
                        with related useful meta-information such as the path expression that
                        uniquely locate them inside the hierarchical structure and the type of link
                        (URI, IRI, XLink,…)</textual></para></listitem><listitem class="po-container e43 e43"><para class="po-block e44 e44"><textual class="po-textual">rewrite some links into other links (reference relocation), depending on
                        matching patterns, side conditions of source document as well as side
                        conditions of referenced objects (links targets).</textual></para></listitem></itemizedlist></para></section><section class="po-hcontainer e45 e45"><title class="po-block e46 e46"><textual class="po-textual">Problem overview</textual></title><para class="po-block e47 e47"><textual class="po-textual"> There are currently two different ways (inside XML standard) for identifying and
            designating items inside or outside a document. The first one is based on ID/IDREF
            mechanisms which only apply to intra-document references. The second one, more general,
            is based on URL (Uniform Resource Locator) that has been historically derived into
            several variants (e.g. URI, uniform resource identifiers; IRI, internationalized
            resource identifier; URN Uniform resource name), each having different intended use and
            slight lexical variations (see [</textual><xref class="po-milestone e48 e48" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">,</textual><xref class="po-milestone e49 e49" linkend="IRI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]). </textual></para><para class="po-block e50 e50"><textual class="po-textual"> This research work, whose results are described hereby, focused on the second kind of
            references. According to the related standards, references have a syntactic structure
            that enables describing the protocol used for accessing resources over networks, the
            address of the server providing the resource, the path which uniquely designates the
            object to be accessed, and in some cases the fragment inside the document (i.e. a unique
            element identifier) and/or parameters. For instance the URL
                </textual><emphasis class="po-inline e51 e51"><textual class="po-textual">http://ds-1/example/dog.jpeg</textual></emphasis><textual class="po-textual"> designates an object located on
            the “ds-1” server and accessible through the “http” protocol. This object is called
            “dog.jpeg” and the server is supposed to find it through the path “/example” before
            delivering it back to the caller that invoked the protocol. </textual></para><para class="po-block e52 e52"><textual class="po-textual"> Although the referential objects are precisely defined through their syntactic and
            semantic structure, we have poor information about the context in which they are used
            and where they are located inside a given document. In the best case, an XML instance is
            compliant with an XML schema, e.g. XHTML, and thus we hopefully know where one can find
            such a reference, e.g. inside any </textual><emphasis class="po-inline e53 e53"><textual class="po-textual">img</textual></emphasis><textual class="po-textual"> element, and more precisely,
            inside the value of its </textual><emphasis class="po-inline e54 e54"><textual class="po-textual">href</textual></emphasis><textual class="po-textual"> attribute. Note that the semantics of
            the reference is implicitly defined by the informal description of the HTML standard (it
            points to an image; it must be fetched through the URL and incorporated into the visual
            representation of the containing document). </textual></para><para class="po-block e55 e55"><textual class="po-textual"> However, many specific transformation operations can be envisioned which are quite
            focused on these referential objects, and no methods or tools are proposed today to
            simplify these operations and to make them more reliable and easier to specify. Among
            others, one can mention : </textual><itemizedlist class="po-table e56 e56"><listitem class="po-container e57 e57"><para class="po-block e58 e58"><emphasis class="po-inline e59 e59"><textual class="po-textual">link relocation</textual></emphasis><textual class="po-textual">, which consists in changing the
                        external environment of a given instance (for instance, changing absolute
                        reference to an external server into a pointer on a local cache where the
                        target resources are stored )</textual></para></listitem><listitem class="po-container e60 e60"><para class="po-block e61 e61"><emphasis class="po-inline e62 e62"><textual class="po-textual">document and resource packaging</textual></emphasis><textual class="po-textual">, which consists for
                        instance in building an archive containing all dependent resources under a
                        suitable directory structure</textual></para></listitem><listitem class="po-container e63 e63"><para class="po-block e64 e64"><emphasis class="po-inline e65 e65"><textual class="po-textual">selective link stabilization </textual></emphasis><textual class="po-textual">; this operation allows
                        one to substitute some references by others pointing to the same resources,
                        but via a storage system that guaranties the long term stability of the
                        access</textual></para></listitem><listitem class="po-container e66 e66"><para class="po-block e67 e67"><emphasis class="po-inline e68 e68"><textual class="po-textual">static xml:base attribute processing</textual></emphasis><textual class="po-textual"> ; this operation
                        aims at interpreting the xml:base attribute according to the W3C standard
                            [</textual><xref class="po-milestone e69 e69" linkend="XBase"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], but as a standalone operation (usually, this
                        process is done – or just ignored…- inside the applications)</textual></para></listitem><listitem class="po-container e70 e70"><para class="po-block e71 e71"><emphasis class="po-inline e72 e72"><textual class="po-textual">static XInclude resolution</textual></emphasis><textual class="po-textual"> ; similar remark than
                        above</textual></para></listitem></itemizedlist></para><para class="po-block e73 e73"><textual class="po-textual">Our contribution can be understood as a way to express link specific schemas,
            validations and transformations. It is orthogonal (and complementary) to general purpose
            schemas.</textual></para></section><section class="po-hcontainer e74 e74"><title class="po-block e75 e75"><textual class="po-textual">State of the Art</textual></title><section class="po-hcontainer e76 e76"><title class="po-block e77 e77"><textual class="po-textual">XCatalog</textual></title><para class="po-block e78 e78"><textual class="po-textual">XCatalog [</textual><xref class="po-milestone e79 e79" linkend="XCalatog"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">,</textual><xref class="po-milestone e80 e80" linkend="XCataEx"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] is an XML standard
                which allows describing link resolving mechanisms. More precisely, the links are
                categorized into references to XML entities, DTD and XML schema resolution (W3C
                schemas only) on the one hand, and general URI that are defined as strings that must
                match a given prefix on the other hand. </textual></para><para class="po-block e81 e81"><textual class="po-textual"> The first category is focused on link resolution, an operational concept that
                concerns only programmatic toolkits and software libraries that are in charge of
                retrieving the content of pointed objects (so called
                </textual><emphasis class="po-inline e82 e82"><textual class="po-textual">resolvers</textual></emphasis><textual class="po-textual">). It means that the only underlying semantics is
                predefined as “fetch the pointed resource when needed, the way I specify”, and this
                behavior must be implemented by the XCatalog aware processor (typically, XML
                parsers). A strange point is that the XML catalog specification defines "what" and
                "how", but not "when". In other words, the semantics of links is presupposed, and
                indeed strongly related to the XML validation that is accomplished after parsing. </textual></para><para class="po-block e83 e83"><textual class="po-textual"> The other link category is quite general, but only defined through the concept of
                “exact prefix matching”. Nothing is said about the location of links and a fortiori
                about their context. </textual></para><para class="po-block e84 e84"><textual class="po-textual"> Thus there is a deep conceptual difference between our proposal and XCatalog: the
                latter is focused on resolving links, where links are recognized through their
                content, whereas our proposal is based upon a methodology which makes explicit the
                description of links through their localization in the document structure. These
                descriptions can be used for specifying various link oriented validation and
                transformation operations. </textual></para></section><section class="po-hcontainer e85 e85"><title class="po-block e86 e86"><textual class="po-textual">XLink</textual></title><para class="po-block e87 e87"><textual class="po-textual"> XLink [</textual><xref class="po-milestone e88 e88" linkend="XLink"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] is a standard that describes a vocabulary and
                syntax for specifying generic links inside XML documents. This standard relies in a
                rich model allowing among others the specification of hyper-graphs, that is, graphs
                based on a generalized notion of arcs possibly binding several sources to several
                targets. XLink is based upon URI mechanism and namespace modularity. </textual></para><para class="po-block e89 e89"><textual class="po-textual"> It is not comparable with our approach, as it is a way to express links whereas
                our method is a way to express properties of links and the related validation or
                transformation operations that can be derived from these properties. As a
                consequence, XLink objects are specific targets of the description mechanisms we
                propose, so as with XInclude, XPointer and other generic linking objects (URI,
                IRI,...) (see </textual><xref class="po-milestone e90 e90" linkend="link-descriptors"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) </textual></para></section></section><section class="po-hcontainer e91 e91"><title class="po-block e92 e92"><textual class="po-textual">Approach Principle</textual></title><para class="po-block e93 e93"><textual class="po-textual">In order to express high level properties over links and their localization inside
            instances, one needs a specialized language and dedicated abstractions. Moreover, in
            order to consider the link normalization phenomenon, we also need an execution model.
            Once captured in an adapted format, the link descriptions we propose in this paper might
            be reusable for specifying almost any XML link-related operations. </textual></para><para class="po-block e94 e94"><textual class="po-textual">Our method relies on a specification method, a specialized matching language and an
            execution model.</textual></para><section class="po-hcontainer e95 e95"><title class="po-block e96 e96"><textual class="po-textual">Specification</textual></title><para class="po-block e97 e97"><textual class="po-textual"> From the specification point of view, our vocabulary allows one to </textual><orderedlist class="po-table e98 e98"><listitem class="po-container e99 e99" xml:id="it1"><para class="po-block e100 e100"><textual class="po-textual">express link features by means of three separate sections:</textual></para><orderedlist class="po-table e101 e101"><listitem class="po-container e102 e102"><para class="po-block e103 e103"><textual class="po-textual">the link typology and localization (links description), thanks
                                    to an appropriate sublanguage, typically but not exclusively,
                                    XPath [</textual><xref class="po-milestone e104 e104" linkend="XPath"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]</textual></para></listitem><listitem class="po-container e105 e105"><para class="po-block e106 e106"><textual class="po-textual">the link’s expected properties (validation description)</textual></para><para class="po-block e107 e107"><textual class="po-textual">This part expresses properties that (groups of) links have to
                                    satisfy inside a given XML instance in order to be considered as
                                    valid,</textual></para></listitem><listitem class="po-container e108 e108"><para class="po-block e109 e109"><textual class="po-textual">the link transformation rules (link translation description) :</textual></para><orderedlist class="po-table e110 e110"><listitem class="po-container e111 e111"><para class="po-block e112 e112"><textual class="po-textual">transposition (selected links are eventually
                                            normalized, matched against some pattern and
                                        rewritten)</textual></para></listitem><listitem class="po-container e113 e113"><para class="po-block e114 e114"><textual class="po-textual">dependency extraction rules (dependency
                                        description)</textual></para></listitem></orderedlist></listitem></orderedlist></listitem><listitem class="po-container e115 e115" xml:id="it2"><para class="po-block e116 e116"><textual class="po-textual">identify, group and designate link descriptions</textual></para><para class="po-block e117 e117"><textual class="po-textual">This one allows the user to attach one or several tags to link
                            descriptors, and offers a mechanism for factorizing the tag assignation.
                            Tags are simple labels intended to abstract over the semantics of links
                            and to memorize them easily.</textual></para></listitem></orderedlist></para><para class="po-block e118 e118"><textual class="po-textual"> The idea of points </textual><xref class="po-milestone e119 e119" linkend="it1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e120 e120" linkend="it2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> above is to
                express bindings between the descriptive section and the other sections through a
                convenient designation mechanism. Hence there is little overhead, and the method
                enables reusing link descriptions in various applicative contexts. </textual></para></section><section class="po-hcontainer e121 e121"><title class="po-block e122 e122"><textual class="po-textual">Matching language</textual></title><para class="po-block e123 e123"><textual class="po-textual">The specialized matching language is designed in order to optimize the ratio
                expressive power versus complexity; in other words, it simplifies the task of
                expressing the structural properties of links, the (pre/post) processing and
                transformation of links; by offering the right abstractions, and by relying on the
                inherent lexical/syntactical structure of links, it avoids the burden of mastering
                general regular expression languages, tricky and error prone for a non-specialist.
                Details on this aspect of our contribution can be found in </textual><xref class="po-milestone e124 e124" linkend="app-match"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref></para></section><section class="po-hcontainer e125 e125"><title class="po-block e126 e126"><textual class="po-textual">Execution model</textual></title><para class="po-block e127 e127"><textual class="po-textual">From the execution model point of view, our approach allows one to </textual></para><orderedlist class="po-table e128 e128"><listitem class="po-container e129 e129"><para class="po-block e130 e130"><textual class="po-textual">use the link validation description either via an interpreter or via a
                        compiler to operate the verification on any instance expected to comply with
                        the description; the verification may output an error report including the
                        faulty links, their location in the document and an indicative error message
                        or any other relevant information ;</textual></para></listitem><listitem class="po-container e131 e131"><para class="po-block e132 e132"><textual class="po-textual">use the link translation descriptions either via a direct interpretation
                        or via a compilation/execution scheme to operate the modification of links
                        and possibly generate a new document instance in which relevant links have
                        been modified according to the transcription rules (but without any other
                        structural changes); this operation may output a log report indicating which
                        links have been processed and any other relevant information ;</textual></para></listitem><listitem class="po-container e133 e133"><para class="po-block e134 e134"><textual class="po-textual">use the dependency extraction rules either via an interpreter or via a
                        compiler to produce a list of all dependencies, i.e. all resources the given
                        instance is sensitive to, as estimated by the designer who specified the
                        dependency rules (Order may be significant, if specified so).</textual></para></listitem></orderedlist><para class="po-block e135 e135"><textual class="po-textual">Details of significant steps behind applying XRM to some target XML instances can
                be found in appendix </textual><xref class="po-milestone e136 e136" linkend="app-verif"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref></para></section></section><section class="po-hcontainer e137 e137"><title class="po-block e138 e138"><textual class="po-textual">The approach in more detail</textual></title><section class="po-hcontainer e139 e139"><title class="po-block e140 e140"><textual class="po-textual">Link Description</textual></title><section class="po-hcontainer e141 e141"><title class="po-block e142 e142"><textual class="po-textual">Overview</textual></title><para class="po-block e143 e143"><textual class="po-textual">Links are described in a dedicated XRM element called “links” associated with information</textual><itemizedlist class="po-table e144 e144"><listitem class="po-container e145 e145"><para class="po-block e146 e146"><textual class="po-textual"> indicating a unique logical name for this section, which will be
                                used for designing it without ambiguity </textual></para></listitem><listitem class="po-container e147 e147"><para class="po-block e148 e148"><textual class="po-textual"> specifying the namespace of the target document, if any (see
                                    [</textual><xref class="po-milestone e149 e149" linkend="wikipedia-NS"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] for a description of
                                namespaces) </textual></para></listitem><listitem class="po-container e150 e150"><para class="po-block e151 e151"><textual class="po-textual"> providing the URL of one or several schemas to which the target
                                document is expected to comply with (optional) </textual></para></listitem><listitem class="po-container e152 e152"><para class="po-block e153 e153"><textual class="po-textual"> listing all tags used to annotate the link descriptions; this
                                list is optional, but if provided, it defines exactly and
                                exhaustively the authorized tags. Tags are names with any relevant
                                lexical structure, as commonly found in the art. </textual></para></listitem></itemizedlist></para><para class="po-block e154 e154"><textual class="po-textual">Inside the section, the designer of the description can input as many
                    descriptors, possibly embedded in grouping subsections. These subsections are
                    decorated with a tag list; the meaning of this grouping subsection is that all
                    embedded descriptions will be automatically assigned the associated tags. It is
                    thus a way to simplify the specification of descriptors (see example </textual><xref class="po-milestone e155 e155" linkend="link-description"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). </textual></para></section><section class="po-hcontainer e156 e156" xml:id="link-descriptors"><title class="po-block e157 e157"><textual class="po-textual">The link descriptors</textual></title><para class="po-block e158 e158"><textual class="po-textual">The descriptors themselves are specified through one of the following keywords
                    :</textual></para><orderedlist class="po-table e159 e159"><listitem class="po-container e160 e160"><para class="po-block e161 e161"><emphasis class="po-inline e162 e162"><textual class="po-textual">URL</textual></emphasis><textual class="po-textual"> stands for Uniform Resource Locator (see
                                [</textual><xref class="po-milestone e163 e163" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) and is commonly used to give information on
                            where a resource is located, understanding that the implicit action is
                            to fetch this resource in order to incorporate it inside the document
                            (e.g. an image, a sub-part) or to interpret it with respect to the
                            current document (e.g. a script)</textual></para></listitem><listitem class="po-container e164 e164"><para class="po-block e165 e165"><emphasis class="po-inline e166 e166"><textual class="po-textual">URN</textual></emphasis><textual class="po-textual"> stands for Uniform Resource Name and aims at
                            naming resources in a worldwide unique and temporally stable way. Thus
                            no specific action or usage is associated with them, they are just used
                            to designate things (e.g. in PUBLIC field of DTDs); however, they often
                            have a specific lexical structure, mainly a “urn” scheme and ‘:’
                            separated sequence of characters (e.g. urn:example:animal:ferret:nose
                        )</textual></para></listitem><listitem class="po-container e167 e167"><para class="po-block e168 e168"><emphasis class="po-inline e169 e169"><textual class="po-textual">URI</textual></emphasis><textual class="po-textual"> stands for Uniform Resource Identifier
                                ([</textual><xref class="po-milestone e170 e170" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) and commonly used to identify a resource
                            in a broader way. The RFC 3986 from IETF explicitly says: </textual><blockquote class="po-container e171 e171"><para class="po-block e172 e172"><textual class="po-textual">
                                    </textual><quote class="po-inline e173 e173"><textual class="po-textual"> […] A Uniform Resource Identifier (URI) is a compact
                                        sequence of characters that identifies an abstract or
                                        physical resource. […] </textual></quote><textual class="po-textual">
                                </textual></para><attribution class="po-block e174 e174"><citation class="po-atom e175 e175"><textual class="po-textual">RFC 3986 from IETF</textual></citation></attribution></blockquote><textual class="po-textual"> This excerpt insists on the potential abstract nature of
                            the pointed resource. In the sequel, the abstraction hierarchy and
                            relationship between URL, URN and URI is clearly described: </textual><blockquote class="po-container e176 e176"><para class="po-block e177 e177"><textual class="po-textual">
                                    </textual><quote class="po-inline e178 e178"><textual class="po-textual"> […] URI can be further classified as a locator, a name,
                                        or both. The term "Uniform Resource Locator" (URL) refers to
                                        the subset of URIs that, in addition to identifying a
                                        resource, provide a means of locating the resource by
                                        describing its primary access mechanism (e.g., its network
                                        "location"). The term "Uniform Resource Name" (URN) has been
                                        used historically to refer to both URIs under the "urn"
                                        scheme [RFC2141], which are required to remain globally
                                        unique and persistent even when the resource ceases to exist
                                        or becomes unavailable, and to any other URI with the
                                        properties of a name. […] </textual></quote><textual class="po-textual">
                                </textual></para><attribution class="po-block e179 e179"><citation class="po-atom e180 e180"><textual class="po-textual">idem</textual></citation></attribution></blockquote></para><para class="po-block e181 e181"><textual class="po-textual"> From the lexical point of view, a URI must only use UCS (Universal
                            Character Set) code points; these code points must be converted to bytes
                            through the UTF-8 encoding, but when the character doesn’t belong to the
                            unreserved subset, it must be escaped using a “%HH” pattern before
                            encoding (full details in [</textual><xref class="po-milestone e182 e182" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]). </textual></para></listitem><listitem class="po-container e183 e183"><para class="po-block e184 e184"><emphasis class="po-inline e185 e185"><textual class="po-textual">IRI</textual></emphasis><textual class="po-textual"> stands for Internationalized Resource
                            Identifier (see [</textual><xref class="po-milestone e186 e186" linkend="IRI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) and has the same meaning and
                            syntactic structure than URI, but a more abstract lexical structure. An
                            IRI uses hence an extended character set supporting foreign languages
                            (foreign should be understood here as non-English), including
                            right-to-left writing languages such as Arabic. The specification
                            describes the translation algorithm that transforms an IRI into an URI
                            (thus allowing physical access if required) through a character
                            normalization phase followed by an escaping mechanism based on %HH
                            patterns (H stands for any hexadecimal letter taken from the 0-9A-F
                            alphabet).</textual></para></listitem><listitem class="po-container e187 e187"><para class="po-block e188 e188"><emphasis class="po-inline e189 e189"><textual class="po-textual">HREF</textual></emphasis><textual class="po-textual"> refers to “Hyper-references” defined in the
                            HTML vocabulary among others. Those links have a specific encoding
                            policy, using a similar escaping mechanism than URI, but with stricter
                            character set (namely, ASCII)</textual></para></listitem><listitem class="po-container e190 e190"><para class="po-block e191 e191"><emphasis class="po-inline e192 e192"><textual class="po-textual">XInclude</textual></emphasis><textual class="po-textual"> refers not only to the link associated
                            with it, but to the whole node. This element is meant to express
                            document inclusion, a not so simple mechanism whose semantics is
                            precisely specified in [</textual><xref class="po-milestone e193 e193" linkend="XInclude"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] and makes use of a
                            predefined attribute “href” containing a specifically encoded URI
                            according to section 4.2.2 of the XML 1.1 specification [</textual><xref class="po-milestone e194 e194" linkend="xml-1.1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]: </textual><blockquote class="po-container e195 e195"><para class="po-block e196 e196"><textual class="po-textual">
                                    </textual><quote class="po-inline e197 e197"><textual class="po-textual"> […] System identifiers (and other XML strings meant to
                                        be used as URI references) MAY contain characters that,
                                        according to [IETF RFC 2396] and [IETF RFC 2732], must be
                                        escaped before a URI can be used to retrieve the referenced
                                        resource. The characters to be escaped are the control
                                        characters #x0 to #x1F and #x7F (most of which cannot appear
                                        in XML), space #x20, the delimiters '&lt;' #x3C,
                                        '&gt;' #x3E and '"' #x22, the unwise characters '{'
                                        #x7B, '}' #x7D, '|' #x7C, '\' #x5C, '^' #x5E and '`' #x60,
                                        as well as all characters above #x7F. Since escaping is not
                                        always a fully reversible process, it MUST be performed only
                                        when absolutely necessary and as late as possible in a
                                        processing chain. In particular, neither the process of
                                        converting a relative URI to an absolute one nor the process
                                        of passing a URI reference to a process or software
                                        component responsible for dereferencing it SHOULD trigger
                                        escaping. When escaping does occur, it MUST be performed as
                                        follows: 1. Each character to be escaped is represented in
                                        UTF-8 [Unicode] as one or more bytes. 2. The resulting bytes
                                        are escaped with the URI escaping mechanism (that is,
                                        converted to %HH, where HH is the hexadecimal notation of
                                        the byte value). 3. The original character is replaced by
                                        the resulting character sequence. […] </textual></quote><textual class="po-textual">
                                </textual></para><attribution class="po-block e198 e198"><citation class="po-atom e199 e199"><textual class="po-textual">World Wide Web Consortium</textual></citation></attribution></blockquote></para></listitem><listitem class="po-container e200 e200"><para class="po-block e201 e201"><emphasis class="po-inline e202 e202"><textual class="po-textual">XLink</textual></emphasis><textual class="po-textual"> as for XInclude, refers to a node supposed
                            to contain XLink related attributes (see [</textual><xref class="po-milestone e203 e203" linkend="XLink"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]); the
                            specific href attribute from the XLink namespace is an URI. The general
                            semantics constraints of XLink are captured by this descriptor.</textual></para></listitem><listitem class="po-container e204 e204"><para class="po-block e205 e205"><emphasis class="po-inline e206 e206"><textual class="po-textual">XPointer</textual></emphasis><textual class="po-textual"> describes a very rich mechanism (see
                                [</textual><xref class="po-milestone e207 e207" linkend="XPtr-scheme"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e208 e208" linkend="XPtr-frame"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]),
                            based on URI and possibly using various selection languages (so-called
                                </textual><emphasis class="po-inline e209 e209"><textual class="po-textual">schemes</textual></emphasis><textual class="po-textual">), one of them, most notably, extending
                            XPath in order to designate one or several fragments of an XML document
                            tree including segments in text nodes.</textual></para></listitem></orderedlist><para class="po-block e210 e210"><textual class="po-textual"> Each such descriptor is associated with a locator, that is, an expression of
                    a node selection language that defines where the link should be located in the
                    document instances under consideration. Note that these XPath may use various
                    namespaces, provided they are consistently declared thanks to a special element
                    called </textual><emphasis class="po-inline e211 e211"><textual class="po-textual">ns</textual></emphasis><textual class="po-textual"> (the same mechanism is used inside Schematron
                    specifications [</textual><xref class="po-milestone e212 e212" linkend="Schematron"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">])</textual></para><para class="po-block e213 e213"><textual class="po-textual"> The Figure below illustrates how our method can be used to describe links in
                    any XHTML compliant document </textual><footnote class="po-popup e214 e214"><para class="po-block e215 e215"><textual class="po-textual">All XPath expressions are here interpreted inside the default
                            namespace specified in top-level element "links" through the "ns"
                            attribute.</textual></para></footnote><textual class="po-textual">. </textual></para><figure class="po-container e216 e216" xml:id="link-description"><title class="po-block e217 e217"><textual class="po-textual">a link description for XHTML</textual></title><programlisting class="po-block e218 e218" xml:space="preserve"><textual class="po-textual">
                        
&lt;links id="xhtml-1.0"  ns="http://www.w3.org/1999/xhtml"&gt;
&lt;!-- XHTML 1.0 --&gt;

&lt;tags&gt;image-locator source-locator code-locator
            header links descriptor citation doc-base&lt;/tags&gt;

&lt;group tag="header" locator="/html/head"&gt;
        &lt;iri locator="/@profile"/&gt;
    &lt;iri tag="doc-base" locator="/base/@href" /&gt;
    &lt;iri tag="links" locator="/link/@href"/&gt;
    &lt;uri tag="source-locator code-locator" locator="/script/@src"/&gt;
&lt;/group&gt;

&lt;iri tag="descriptor" locator="//iframe/@longdesc"/&gt;
&lt;iri tag="source-locator" locator="//iframe/@src"/&gt;
&lt;iri tag="image-locator" locator="/body/@background"/&gt;

&lt;group tag="citation"&gt;
    &lt;iri locator="//blockquote/@cite"/&gt;
    &lt;iri locator="//ins/@cite"/&gt;
    &lt;iri locator="//del/@cite"/&gt;
    &lt;iri locator="//q/@cite"/&gt;
&lt;/group&gt;

&lt;group tag="references"&gt;
    &lt;iri locator="//a/@href"/&gt;
    &lt;group locator="//object"&gt;
        &lt;iri locator="/@classid"/&gt;
        &lt;iri  tag="code-locator" locator="/@codebase"/&gt;
        &lt;iri locator="/@data"/&gt;
        &lt;iri locator="/@archive" list="yes"/&gt;
        &lt;iri locator="/@usemap"/&gt;
    &lt;/group&gt;
    &lt;iri tag="code-locator" locator="//applet/@codebase"/&gt;
&lt;/group&gt;

&lt;group  locator="//img"&gt;
    &lt;iri tag="image-locator" locator="/@src"/&gt;
    &lt;iri tag="descriptor" locator="/@longdesc"/&gt;
    &lt;iri locator="/@usemap"/&gt;
&lt;/group&gt;

&lt;iri locator="//area/@href"/&gt;
&lt;iri locator="//form/@action"/&gt;
&lt;iri locator="//input/@src"/&gt;
&lt;iri locator="//input/@usemap"/&gt;

&lt;/links&gt;

                    </textual></programlisting><caption class="po-container e219 e219"><para class="po-block e220 e220"><textual class="po-textual">An example of a generic link description for XHTML. The descriptors
                            can be further reused for other operations through a tag based
                            designation mechanism</textual></para></caption></figure></section></section><section class="po-hcontainer e221 e221"><title class="po-block e222 e222"><textual class="po-textual">Link Validation</textual></title><para class="po-block e223 e223"><textual class="po-textual">The link verification is specified in a dedicated section called
                    </textual><emphasis class="po-inline e224 e224"><textual class="po-textual">validate</textual></emphasis><textual class="po-textual"> which contains at least the reference on a link
                description section, as detailed above (this reference is an URL), which can be
                located inside or outside the document containing the </textual><emphasis class="po-inline e225 e225"><textual class="po-textual">validate</textual></emphasis><textual class="po-textual">
                section. If no other information is specified, all links should be checked with
                respect to the specified semantics. This means that when the verification is
                executed on a given target XML instance, the links are extracted thanks to the
                localization information and are examined in accordance with their type as detailed
                in the previous section. </textual></para><para class="po-block e226 e226"><textual class="po-textual"> Additional constraints can be provided through one or many “properties”
                subsections. </textual></para><para class="po-block e227 e227"><textual class="po-textual"> Each properties subsection applies to one or several link subsets designated
                through a list of one or several tags. Each tag may designate one or several links,
                depending on the link description section, as explained above. Each properties
                subsection is optionally identified through a unique identifier. </textual></para><para class="po-block e228 e228"><textual class="po-textual">The properties are specified through one or several descriptors as listed
                hereafter:</textual></para><orderedlist class="po-table e229 e229" numeration="arabic"><listitem class="po-container e230 e230"><para class="po-block e231 e231"><textual class="po-textual">
                        </textual><emphasis class="po-inline e232 e232"><textual class="po-textual">scheme</textual></emphasis><textual class="po-textual"> defines the expected scheme, e.g. “http”, “ftp”
                        or “mailto”</textual></para></listitem><listitem class="po-container e233 e233"><para class="po-block e234 e234"><textual class="po-textual">
                        </textual><emphasis class="po-inline e235 e235"><textual class="po-textual">absolute</textual></emphasis><textual class="po-textual"> expresses that an absolute link is expected
                        (the scheme and server location are provided)</textual></para></listitem><listitem class="po-container e236 e236"><para class="po-block e237 e237"><emphasis class="po-inline e238 e238"><textual class="po-textual">relative</textual></emphasis><textual class="po-textual"> expresses that a relative link is expected
                        (the path, resource name and optionally the fragments are provided; the
                        scheme and server location are those of the base URI of the target instance,
                        as specified in [</textual><xref class="po-milestone e239 e239" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">])</textual></para></listitem><listitem class="po-container e240 e240"><para class="po-block e241 e241"><textual class="po-textual">
                        </textual><emphasis class="po-inline e242 e242"><textual class="po-textual">matches(p)</textual></emphasis><textual class="po-textual"> expresses that the link content must match
                        the provided pattern p. This pattern is expressed according to the method
                        described later. </textual></para></listitem><listitem class="po-container e243 e243"><para class="po-block e244 e244"><textual class="po-textual">
                        </textual><emphasis class="po-inline e245 e245"><textual class="po-textual">path(p)</textual></emphasis><textual class="po-textual"> expresses that the “path” part of the link (see
                        URI syntactic structure in [</textual><xref class="po-milestone e246 e246" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) must match the given
                        pattern p. </textual></para></listitem><listitem class="po-container e247 e247"><para class="po-block e248 e248"><textual class="po-textual">
                        </textual><emphasis class="po-inline e249 e249"><textual class="po-textual">fragment(p)</textual></emphasis><textual class="po-textual"> expresses that the “fragment” part of the
                        link (see [</textual><xref class="po-milestone e250 e250" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) must match the given pattern p. </textual></para></listitem><listitem class="po-container e251 e251"><para class="po-block e252 e252"><emphasis class="po-inline e253 e253"><textual class="po-textual">query(p) </textual></emphasis><textual class="po-textual">expresses that the “query” part of the link
                        (see [</textual><xref class="po-milestone e254 e254" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) must match the given pattern p. </textual></para></listitem><listitem class="po-container e255 e255"><para class="po-block e256 e256"><textual class="po-textual">
                        </textual><emphasis class="po-inline e257 e257"><textual class="po-textual">target()</textual></emphasis><textual class="po-textual"> expresses that the target reference is
                        available at the time of the verification; one of several sub-descriptor can
                        be specified, in order to make-it more precise: </textual></para><orderedlist class="po-table e258 e258"><listitem class="po-container e259 e259" xml:id="ra"><para class="po-block e260 e260"><textual class="po-textual">
                                </textual><emphasis class="po-inline e261 e261"><textual class="po-textual">mime-type </textual></emphasis><textual class="po-textual">This is a standardized notation for
                                indicating the type of internet resources (see [15]) </textual></para></listitem><listitem class="po-container e262 e262" xml:id="rb"><para class="po-block e263 e263"><textual class="po-textual">
                                </textual><emphasis class="po-inline e264 e264"><textual class="po-textual">namespace(ns)</textual></emphasis><textual class="po-textual"> (makes sense only if the
                                mime-type is text/xml or derived). </textual></para></listitem><listitem class="po-container e265 e265" xml:id="rc"><para class="po-block e266 e266"><textual class="po-textual">
                                </textual><emphasis class="po-inline e267 e267"><textual class="po-textual">condition(p)</textual></emphasis><textual class="po-textual"> ; as for previous item, this
                                condition needs a parsable XML content ; requires checking if
                                conditions p holds (p is a XPath qualifier expression) </textual></para></listitem></orderedlist><para class="po-block e268 e268"><textual class="po-textual"> Note that points </textual><xref class="po-milestone e269 e269" linkend="rb"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e270 e270" linkend="rc"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> above
                        require solving the reference at verification time, and also possibly XML
                        decoding and/or parsing. </textual></para></listitem></orderedlist><para class="po-block e271 e271"><textual class="po-textual">If no descriptor is specified, only standard verifications related to the nature
                of links are conducted. </textual></para><para class="po-block e272 e272"><textual class="po-textual"> An additional error message can be specified within each property descriptor,
                that will be used to report any property violation (e.g.
                matches(http://{*}:{*}/{*},”an explicit port number is expected”) will display the
                error message for non-matching link such as
                </textual><emphasis class="po-inline e273 e273"><textual class="po-textual">http://barnum/circus.jpg</textual></emphasis><textual class="po-textual">) </textual></para><para class="po-block e274 e274"><textual class="po-textual">The following example illustrates the method when applied to an XHTML document </textual></para><figure class="po-container e275 e275"><title class="po-block e276 e276"><textual class="po-textual">A link validation specification</textual></title><programlisting class="po-block e277 e277" xml:space="preserve"><textual class="po-textual">
                    
&lt;validate link-description="../schemas/html.xrm.xml#xhtml-1.0"&gt;

  &lt;property of="code-locator" xml:id="code1"&gt;
    &lt;relative&gt;references to code-related objects
               are expected to be relative&lt;/relative&gt;
    &lt;fragment&gt; references on code location
    cannot point to document fragments &lt;/fragment&gt;

    &lt;matches normalize="yes"
                     pattern="http://bonobo:{*}/code/{*}"/&gt;
  &lt;/property&gt;

  &lt;property of="image-locator"&gt;
   &lt;relative/&gt;
     &lt;query&gt;
     references to images cannot contain query
     &lt;/query&gt;
    &lt;matches pattern="http://bonobo:{*}/image/{*}"/&gt;
 &lt;/property&gt;

&lt;/validate&gt;

                </textual></programlisting><caption class="po-container e278 e278"><para class="po-block e279 e279"><textual class="po-textual">This specification reuses the generic description of XHTML links as shown
                            </textual><xref class="po-milestone e280 e280" linkend="link-description"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">
                    </textual></para></caption></figure></section><section class="po-hcontainer e281 e281"><title class="po-block e282 e282"><textual class="po-textual">Link Transformation</textual></title><para class="po-block e283 e283"><textual class="po-textual"> Link transformations are specified in a dedicated section called “rewrite” which
                comprises a header having the following attributes: </textual><orderedlist class="po-table e284 e284"><listitem class="po-container e285 e285"><para class="po-block e286 e286"><emphasis class="po-inline e287 e287"><textual class="po-textual">link-description</textual></emphasis><textual class="po-textual">: the name of a link description
                            section, against which link tags will be interpreted (mandatory)</textual></para></listitem><listitem class="po-container e288 e288"><para class="po-block e289 e289"><emphasis class="po-inline e290 e290"><textual class="po-textual">normalize</textual></emphasis><textual class="po-textual">: take the value yes or no (defaults to
                            yes if omitted); if set to yes, the relevant normalization process will
                            be performed on all links before applying matching operation (the exact
                            nature of normalization operation depends upon the nature of link); if
                            set to no, the pattern matching operation will be applied on the
                            original link </textual><footnote class="po-popup e291 e291" xml:id="norma"><para class="po-block e292 e292"><textual class="po-textual">Some normalization operation may nevertheless occur due to standard XML
                        processing, such as interpretation of escaping sequences and expansion of
                        reference entities.</textual></para></footnote><textual class="po-textual">; </textual></para></listitem><listitem class="po-container e293 e293"><para class="po-block e294 e294"><emphasis class="po-inline e295 e295"><textual class="po-textual">resolving-base</textual></emphasis><textual class="po-textual">: optionally specifies an URI that
                            will be considered as the reference URI for solving relative link. It
                            supersedes the xml:base information, if present, or the static-base-uri
                            of the original document.</textual></para></listitem></orderedlist><textual class="po-textual">

            </textual></para><para class="po-block e296 e296"><textual class="po-textual">Beside header attributes, this section is composed of zero or many rewriting
                descriptors possibly embedded inside a base descriptor. Each base descriptor has
                    </textual><orderedlist class="po-table e297 e297" continuation="continues"><listitem class="po-container e298 e298"><para class="po-block e299 e299"><textual class="po-textual">an optional “location” attribute which expresses where an xml:base
                            attribute must be inserted inside the transformed document. When
                            omitted, the xml:base attribute is inserted into the root node (of
                            course, in any case, it is an inconsistency error if several base
                            descriptors are allocated to the same node).</textual></para></listitem><listitem class="po-container e300 e300"><para class="po-block e301 e301"><textual class="po-textual">a “value” attribute which defines the content of the xml:base
                            attribute. This must be an absolute URL in accordance with the standard
                                [</textual><xref class="po-milestone e302 e302" linkend="XBase"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]; if omitted, the static-base-uri is used.
                        </textual></para></listitem></orderedlist></para><para class="po-block e303 e303"><textual class="po-textual"> Each rewriting descriptor may have </textual><itemizedlist class="po-table e304 e304"><listitem class="po-container e305 e305"><para class="po-block e306 e306"><textual class="po-textual">a </textual><emphasis class="po-inline e307 e307"><textual class="po-textual">tags</textual></emphasis><textual class="po-textual"> attribute, which is a list of tag name
                            corresponding to the links to be selected as candidates (all link
                            descriptors are considered if the tags attribute is omitted) </textual></para></listitem><listitem class="po-container e308 e308"><para class="po-block e309 e309"><textual class="po-textual">a </textual><emphasis class="po-inline e310 e310"><textual class="po-textual">condition</textual></emphasis><textual class="po-textual"> attribute, which optionally specifies
                            an additional condition to be checked before trying to apply the
                            rewriting (typically, an XPath expression)</textual></para></listitem><listitem class="po-container e311 e311"><para class="po-block e312 e312"><textual class="po-textual">a </textual><emphasis class="po-inline e313 e313"><textual class="po-textual">from</textual></emphasis><textual class="po-textual"> attribute, which optionally specifies a
                            pattern matching expression that must be successfully applied in order
                            to rewrite the link ; such pattern may define matching variables (see
                            the subsection 3.4 “Specification of Patterns” for the whole description
                            of the link pattern language).</textual></para></listitem><listitem class="po-container e314 e314"><para class="po-block e315 e315"><textual class="po-textual">an </textual><emphasis class="po-inline e316 e316"><textual class="po-textual">into</textual></emphasis><textual class="po-textual"> attribute, which optionally specifies a
                            new value for the link. This value may partially or totally reuse the
                            pattern variables defined inside the from pattern (see the subsection
                            3.4 “Specification of Patterns”) if any. </textual></para></listitem></itemizedlist></para><para class="po-block e317 e317"><textual class="po-textual">In the case where a rewriting descriptor has no “from” and no “into” attribute, it
                may have one or more rewrite sub-descriptor, each of it having a pair of “from/into”
                attribute. The meaning of this list is that each rewriting is tried in order, until
                a matching “from” is found.</textual></para><para class="po-block e318 e318"><textual class="po-textual">Below is an example of link rewriting based on a two-rule sequence to be applied
                on any link tagged as "images" or "scripts"</textual></para><programlisting class="po-block e319 e319" xml:space="preserve"><textual class="po-textual">
                    
&lt;rewrite
        link-description=”../schemas/html.xrm.xml#xhtml-1.0”
        tags=”images scripts” &gt;
  &lt;rewriting from=”{{*}}/{name}.jpg” into=”./images/JPEG/{name}.jpg”/&gt;
  &lt;rewriting from=”{{*}}/{name}.js” into=”./javascripts/{name}.js”/&gt;
&lt;/rewrite&gt;

                </textual></programlisting><para class="po-block e320 e320"><textual class="po-textual"> Note that after computing the rewritten link, and if the rewriting descriptor is
                embedded inside a base descriptor, the result is checked against the value of the
                base descriptor, and made relative if required. </textual></para><programlisting class="po-block e321 e321" xml:space="preserve"><textual class="po-textual">
                    
&lt;base location=”/html/body”&gt;
  &lt;rewrite
          link-description=”../schemas/html.xrm.xml#xhtml-1.0”
          tags=”images scripts” &gt;
    &lt;rewriting from=”{{A}}/{name}.jpg” into=”{{A}}/JPEG/{name}.jpg”/&gt;
    &lt;rewriting from=”{{A}}/{name}.js” into=”{{A}}/javascripts/{name}.js”/&gt;
  &lt;/rewrite&gt;
&lt;/base&gt;

                </textual></programlisting><para class="po-block e322 e322"><textual class="po-textual">The example above will, for instance, change the document below </textual></para><programlisting class="po-block e323 e323" xml:space="preserve"><textual class="po-textual">
                    
&lt;html &gt;
  &lt;body&gt;
    &lt;img href=”http://catworld:8080/friends/garfield.jpg” /&gt;
  &lt;/body&gt;
&lt;/html&gt;

                </textual></programlisting><para class="po-block e324 e324"><textual class="po-textual">into</textual></para><programlisting class="po-block e325 e325" xml:space="preserve"><textual class="po-textual">
                    
&lt;html &gt;
  &lt;body xml:base=”http://catworld:8080” &gt;
    &lt;img href=”JPEG/garfield.jpg” /&gt;
  &lt;/body&gt;
&lt;/html&gt;

            </textual></programlisting><para class="po-block e326 e326"><textual class="po-textual">where the </textual><emphasis class="po-inline e327 e327"><textual class="po-textual">xml:base</textual></emphasis><textual class="po-textual"> attribute attached to the body element has
                been extrapolated from the static-base-uri of the input document (because no more
                precise information was provided)</textual></para></section><section class="po-hcontainer e328 e328"><title class="po-block e329 e329"><textual class="po-textual">Link Dependencies</textual></title><para class="po-block e330 e330"><textual class="po-textual">They are described using a similar mechanism than for link transformation, through
                a dedicated section “dependencies” having the following attributes:</textual></para><orderedlist class="po-table e331 e331"><listitem class="po-container e332 e332"><para class="po-block e333 e333"><emphasis class="po-inline e334 e334"><textual class="po-textual">link-description</textual></emphasis><textual class="po-textual">: the name of a link description
                        section, against which link tags will be interpreted (mandatory)</textual></para></listitem><listitem class="po-container e335 e335"><para class="po-block e336 e336"><emphasis class="po-inline e337 e337"><textual class="po-textual">normalize-input</textual></emphasis><textual class="po-textual">: take the value yes or no (defaults
                        to yes if omitted); if set to yes, the relevant normalization process will
                        be performed on all links before testing operation (the exact nature of
                        normalization operation depends upon the nature of link); if set to no, all
                        tests will be applied on the original link</textual><xref class="po-milestone e338 e338" linkend="norma"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">;</textual></para></listitem><listitem class="po-container e339 e339"><para class="po-block e340 e340"><emphasis class="po-inline e341 e341"><textual class="po-textual">normalize-output</textual></emphasis><textual class="po-textual">: take the value yes or no (defaults
                        to yes if omitted); if set to yes, the relevant normalization process will
                        be performed on all links before dumping the dependency (the exact nature of
                        normalization operation depends upon the nature of link); when set to no,
                        minimal transformation may nevertheless occur</textual><xref class="po-milestone e342 e342" linkend="norma"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. </textual></para></listitem><listitem class="po-container e343 e343"><para class="po-block e344 e344"><emphasis class="po-inline e345 e345"><textual class="po-textual">resolving-base</textual></emphasis><textual class="po-textual">: optionally specifies an URI that will
                        be considered as the reference URI for solving relative link. It supersedes
                        the xml:base information, if present, or the static-base-uri of the original
                        document otherwise.</textual></para></listitem><listitem class="po-container e346 e346"><para class="po-block e347 e347"><emphasis class="po-inline e348 e348"><textual class="po-textual">sorting</textual></emphasis><textual class="po-textual">: takes one of the following values
                        {“document-order”, “content-order”, “tag-order”}, and expresses the method
                        used to order the link dependencies dumped into the dependency report. With
                        document-order, links are organized in the same order than found inside the
                        original input document. Using content-order, links are alphabetically
                        classified according to the lexical structure of the URL. The flag mode use
                        an alphabetical classification based on the tag name of the link, as defined
                        by the link description section. If omitted, the sorting attribute defaults
                        to “document-order”.</textual></para></listitem></orderedlist><para class="po-block e349 e349"><textual class="po-textual">Note that if no </textual><emphasis class="po-inline e350 e350"><textual class="po-textual">extract</textual></emphasis><textual class="po-textual"> sub-descriptor is provided, all links
                found in the input document are dumped into the dependency report.</textual></para></section></section><section class="po-hcontainer e351 e351"><title class="po-block e352 e352"><textual class="po-textual">Conclusion</textual></title><para class="po-block e353 e353"><textual class="po-textual"> We have implemented most of the features described in this proposal through an XML
            syntax from which the examples above are extracted, which comes with a RelaxNG schema.
            An XSLT 2.0 stylesheet (interpreter/compiler front-end) analyzes the specifications and
            generates another XSLT 2.0 stylesheet for each of the three operations (link
            verification, link transformation and link dependencies) ; the link description section
            is only interpreted during the compilation phase in order to produce the adequate code.
            A dedicated, home-made XSLT 2.0 library defines common operations (such as pattern
            matching functions), and is reused by all stylesheets including the front-end analyzer.
            The compiled stylesheet can be dumped for later use, or directly executed through the
            on-the-fly invocation mechanism offered by the Open Source Saxonica Engine [</textual><xref class="po-milestone e354 e354" linkend="Saxonica"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. </textual></para><para class="po-block e355 e355"><textual class="po-textual"> Our experimental results demonstrate that the approach is realistic, useful and leads
            to realistic performance levels (no particular implementation issue raised). </textual></para><para class="po-block e356 e356"><textual class="po-textual">Evaluation of the qualitative aspect of such a proposal is always a difficult issue,
            because strongly related to usability and far from being objective matter.</textual></para><para class="po-block e357 e357"><textual class="po-textual">From this point of view, we were happy to observe that the verbosity of specifications
            turned out to be nicely under control, mainly thanks to the clear conceptual separation
            between link descriptors and operations, and also because we designed well-targeted
            default parameters and behaviors. An other fruitful principle we tried to follow was
            trying to capture as much as possible common and simple operations into simple
            abstractions, and to scale up most complex operations toward adding attributes or
            embedding additional information inside the element content (e.g. a simple rewrite
            operation can use the "from" and "into" attributes whereas a more complex rewrite
            operation can be decomposed into a sublist of ordered rewriting rules to try
            sequentially)</textual></para><para class="po-block e358 e358"><textual class="po-textual">Regarding the expressive power, it turned out to be adequate for the cases we had to
            analyze. Of course, the difficult point is to extrapolate to cases we did not forecast.
            What we can say is that the methodology we have adopted allowed us to abstract over
            applications and to focus as much as possible on the functions associated with
            referential objects</textual></para><para class="po-block e359 e359"><textual class="po-textual">We now consider opening the technology and related tools to a larger technical
            community as a service accessible through a corporate web portal, and thus to understand
            if it triggers interest, and hopefully to understand in a deeper way the potential
            enhancements and evolutions we could envision.</textual></para></section><appendix class="po-hcontainer e360 e360" xml:id="app-match"><title class="po-block e361 e361"><textual class="po-textual">The pattern matching language</textual></title><para class="po-block e362 e362"><textual class="po-textual">The pattern matching language we propose hereafter is based on the “{” and “}”
            characters to serve as delimiters of pattern variables. Those characters have no precise
            meaning (see the URI specification [</textual><xref class="po-milestone e363 e363" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]) and do not belong to the
            standard alphabet or separator sets. Variables are named through using any identifier
            built from any alphabet excluding the braces and the star “*”. A label can only be used
            once in a given pattern. If a star is used instead of a name (e.g. “{*}”), it just means
            that the matching substring is not stored. Double braces mean that the longest matching
            substring is expected, whereas the shortest match is returned for single braces. </textual></para><para class="po-block e364 e364"><textual class="po-textual"> The table below illustrates the various pattern matching mechanisms:</textual></para><table border="1" class="po-container e365 e365"><thead class="po-container e366 e366"><tr class="po-table e367 e367"><th class="po-field e368 e368"><textual class="po-textual">Pattern</textual></th><th class="po-field e369 e369"><textual class="po-textual">Value</textual></th><th class="po-field e370 e370"><textual class="po-textual">Result</textual></th></tr></thead><tbody class="po-table e371 e371"><tr class="po-table e372 e372"><td class="po-block e373 e373" rowspan="3"><textual class="po-textual">http://{server}:{*}/{*}.jpg</textual></td><td class="po-block e374 e374"><textual class="po-textual">http://barnum:80/circus/jumper.jpg</textual></td><td class="po-block e375 e375"><textual class="po-textual">Matches=yes ; server=”barnum” </textual></td></tr><tr class="po-table e376 e376"><td class="po-block e377 e377"><textual class="po-textual">http://barnum:80/circus/acrobats/juggler.jpg</textual></td><td class="po-block e378 e378"><textual class="po-textual">Matches=yes ; server=”barnum” </textual></td></tr><tr class="po-table e379 e379"><td class="po-block e380 e380"><textual class="po-textual">https://barnum:80/circus/jumper.jpg</textual></td><td class="po-block e381 e381"><textual class="po-textual">Matches=no </textual></td></tr><tr class="po-table e382 e382"><td class="po-block e383 e383" rowspan="2"><textual class="po-textual">http://{server}/{{path}}/{object}</textual></td><td class="po-block e384 e384"><textual class="po-textual">http://barnum:80/circus/jumper.gif</textual></td><td class="po-block e385 e385"><textual class="po-textual">Matches=yes server=”barnum:80” path=”circus” object=”jumper.gif” </textual></td></tr><tr class="po-table e386 e386"><td class="po-block e387 e387"><textual class="po-textual">http://barnum:80/circus/acrobats/juggler.jpg</textual></td><td class="po-block e388 e388"><textual class="po-textual">Matches=yes server=”barnum:80” path=”circus/acrobat” object=”juggler.gif”
                    </textual></td></tr><tr class="po-table e389 e389"><td class="po-block e390 e390" rowspan="2"><textual class="po-textual">http://{server}/{path}/{object}</textual></td><td class="po-block e391 e391"><textual class="po-textual">http://barnum:80/circus/jumper.gif</textual></td><td class="po-block e392 e392"><textual class="po-textual">Matches=yes server=”barnum:80” path=”circus” object =”jumper.gif” </textual></td></tr><tr class="po-table e393 e393"><td class="po-block e394 e394"><textual class="po-textual">http://barnum:80/circus/acrobats/juggler.jpg</textual></td><td class="po-block e395 e395"><textual class="po-textual">Matches=yes server=”barnum:80” path=”circus” object =”acrobats/juggler.jpg”
                    </textual></td></tr></tbody></table></appendix><appendix class="po-hcontainer e396 e396" xml:id="app-verif"><title class="po-block e397 e397"><textual class="po-textual">Verification and execution of XRM specifications (principles)</textual></title><para class="po-block e398 e398"><textual class="po-textual">Our descriptions can be expressed through XML or any appropriate language. If the
            language is not based on XML, a bidirectional, lossless, translation to XML could be
            provided (this technique is used by the RelaxNG [</textual><xref class="po-milestone e399 e399" linkend="wikipedia-RelaxNG"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]
            schema language, which provides both an XML based syntax and a so-called “compact
            syntax”, strictly equivalent). </textual></para><para class="po-block e400 e400"><textual class="po-textual">In order to be consistent and usable, our link descriptions must comply with specific
            properties that can be checked in order to assess the correctness of the specifications: </textual></para><orderedlist class="po-table e401 e401"><listitem class="po-container e402 e402"><para class="po-block e403 e403"><textual class="po-textual">Wellformedness of the logical structure (correct occurrence of sections,
                    subsections and attributes)</textual></para></listitem><listitem class="po-container e404 e404"><para class="po-block e405 e405"><textual class="po-textual">Correct use of tags (no dangling tag references, coherence of tag declarations
                    if any)</textual></para></listitem><listitem class="po-container e406 e406"><para class="po-block e407 e407"><textual class="po-textual">Correct structure of URI (reference on link descriptions)</textual></para></listitem></orderedlist><para class="po-block e408 e408"><textual class="po-textual">The execution model of any processing component functionally encompasses 3 stages
            (points </textual><xref class="po-milestone e409 e409" linkend="vr1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e410 e410" linkend="vr2"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e411 e411" linkend="vr3"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> below all
            cover the third stage, depending on the active operation): </textual></para><orderedlist class="po-table e412 e412" continuation="continues"><listitem class="po-container e413 e413" xml:id="vr1"><para class="po-block e414 e414"><textual class="po-textual">Performs the XML parsing</textual></para></listitem><listitem class="po-container e415 e415" xml:id="vr2"><para class="po-block e416 e416"><textual class="po-textual">Extracts of the so-called </textual><emphasis class="po-inline e417 e417"><textual class="po-textual">base-uri</textual></emphasis><textual class="po-textual"> (the URL that describes
                    the localization of the instance to be processed) </textual></para></listitem><listitem class="po-container e418 e418" xml:id="vr3"><para class="po-block e419 e419"><textual class="po-textual">For each link specified into the link validation description,</textual></para><orderedlist class="po-table e420 e420"><listitem class="po-container e421 e421"><para class="po-block e422 e422"><textual class="po-textual">Extracts the link value, using the localization information described
                            in point 1.a above, and accessed through the tag designation
                        mechanism</textual></para></listitem><listitem class="po-container e423 e423"><para class="po-block e424 e424"><textual class="po-textual">Perform a partial normalization of the link, according to information
                            provided (deals only with escaping issues, depending on the kind of
                            reference, as specified)</textual></para></listitem><listitem class="po-container e425 e425"><para class="po-block e426 e426"><textual class="po-textual">Verifies if the lexical structure of link meets the validation
                            requirement, depending on those:</textual></para><orderedlist class="po-table e427 e427"><listitem class="po-container e428 e428"><para class="po-block e429 e429"><textual class="po-textual">The link structure is compliant with the declared link
                                type</textual></para></listitem><listitem class="po-container e430 e430"><para class="po-block e431 e431"><textual class="po-textual">The link is verifying the condition (if provided)</textual></para></listitem><listitem class="po-container e432 e432"><para class="po-block e433 e433"><textual class="po-textual">The link is matching the pattern (if provided)</textual></para></listitem><listitem class="po-container e434 e434"><para class="po-block e435 e435"><textual class="po-textual">The link target is available (if this constraint is
                                specified)</textual></para></listitem><listitem class="po-container e436 e436"><para class="po-block e437 e437"><textual class="po-textual">The link target verifies the expected properties, if any such
                                    is specified (namespace, node selection condition)</textual></para></listitem></orderedlist></listitem></orderedlist></listitem><listitem class="po-container e438 e438"><para class="po-block e439 e439"><textual class="po-textual">For each link specified into the link transformation description,</textual></para><orderedlist class="po-table e440 e440"><listitem class="po-container e441 e441"><para class="po-block e442 e442"><textual class="po-textual">Extracts the link value, using the localization information described
                            in point 1.a above, and accessed through the tag designation
                        mechanism</textual></para></listitem><listitem class="po-container e443 e443"><para class="po-block e444 e444"><textual class="po-textual">Normalizes the link, according to the information provided by the
                                </textual><emphasis class="po-inline e445 e445"><textual class="po-textual">normalize</textual></emphasis><textual class="po-textual"> attribute of the link transformation
                            section (if normalize is set to true, solves the relative references
                            into absolute references, in accordance with the XML Base standard
                                [</textual><xref class="po-milestone e446 e446" linkend="XBase"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] ; deal with escaping issues, depending on
                            the kind of reference, as specified)</textual></para></listitem><listitem class="po-container e447 e447"><para class="po-block e448 e448"><textual class="po-textual">Applies the rule logic as described above for rewriting
                        descriptors</textual></para></listitem><listitem class="po-container e449 e449"><para class="po-block e450 e450"><textual class="po-textual">Normalizes the resulting link, with respect to xml:base mechanism, if
                            required</textual></para></listitem><listitem class="po-container e451 e451"><para class="po-block e452 e452"><textual class="po-textual">Handle forbidden characters inside link content, as required by its
                            type (use escaping mechanisms defined in [</textual><xref class="po-milestone e453 e453" linkend="URI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], e.g. a
                            space “ “ is escaped into “%20”)</textual></para></listitem><listitem class="po-container e454 e454"><para class="po-block e455 e455"><textual class="po-textual">Inserts the resulting link into the output document in replacement of
                            the original link</textual></para></listitem></orderedlist></listitem><listitem class="po-container e456 e456"><para class="po-block e457 e457"><textual class="po-textual">For each link specified in the dependencies section,</textual></para><orderedlist class="po-table e458 e458"><listitem class="po-container e459 e459"><para class="po-block e460 e460"><textual class="po-textual">extracts all relevant link values satisfying the filtering conditions
                            (prior normalization if required)</textual></para></listitem><listitem class="po-container e461 e461"><para class="po-block e462 e462"><textual class="po-textual">normalize the link (if required by the extract sub-descriptor) and
                            orders the links according to the specified ordering policy</textual></para></listitem><listitem class="po-container e463 e463"><para class="po-block e464 e464"><textual class="po-textual">creates an output report with the relevant meta-information: for
                            instance the date and time of the dependency extraction operation ; the
                            URL of the input document, the URL of the link dependencies
                            specification interpreted by the operation</textual></para></listitem><listitem class="po-container e465 e465"><para class="po-block e466 e466"><textual class="po-textual">dumps the links in the right order inside the report with the relevant
                            meta-information as specified by show-tag and show-location
                        attributes</textual></para></listitem></orderedlist></listitem></orderedlist></appendix><bibliography class="po-hcontainer e467 e467"><title class="po-block e468 e468"><textual class="po-textual">References</textual></title><bibliomixed class="po-block e469 e469" xml:id="URI" xreflabel="1"><textual class="po-textual">
            </textual><emphasis class="po-inline e470 e470"><textual class="po-textual">Uniform Resource Identifier: Generic syntax (URI)</textual></emphasis><textual class="po-textual">, IETF - RFC 3986
            T. Berners-Lee, R. Fielding, L. Masinter, January 2005 </textual><link class="po-inline e471 e471" xlink:actuate="onRequest" xlink:href="http://www.ietf.org/rfc/rfc3986.txt" xlink:show="new" xlink:type="simple"><textual class="po-textual">rfc content</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e472 e472" xml:id="XCalatog" xreflabel="2"><textual class="po-textual">
            </textual><emphasis class="po-inline e473 e473"><textual class="po-textual">XML Catalogs</textual></emphasis><textual class="po-textual">, OASIS Committee specification, August 2001 </textual><link class="po-inline e474 e474" xlink:actuate="onRequest" xlink:href="http://www.oasis-open.org/committees/entity/spec-2001-08-06.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">specification</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e475 e475" xml:id="XLink" xreflabel="3"><textual class="po-textual">
            </textual><emphasis class="po-inline e476 e476"><textual class="po-textual">XML Linking Language</textual></emphasis><textual class="po-textual"> W3C Recommendation, June 2003, </textual><link class="po-inline e477 e477" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xlink/" xlink:show="new" xlink:type="simple"><textual class="po-textual">recommendation</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e478 e478" xml:id="XML" xreflabel="4"><textual class="po-textual">
            </textual><emphasis class="po-inline e479 e479"><textual class="po-textual">Extensible Markup Language (XML) 1.0 (Second Edition)</textual></emphasis><textual class="po-textual"> World Wide
            Web Consortium, 2000, </textual><link class="po-inline e480 e480" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2000/REC-xml-20001006" xlink:show="new" xlink:type="simple"><textual class="po-textual">specification</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e481 e481" xml:id="XBase" xreflabel="5"><textual class="po-textual">
            </textual><emphasis class="po-inline e482 e482"><textual class="po-textual">XML Base</textual></emphasis><textual class="po-textual"> W3C Recommendation, June 2001, </textual><link class="po-inline e483 e483" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xmlbase/" xlink:show="new" xlink:type="simple"><textual class="po-textual">recommendation</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e484 e484" xml:id="XCataEx" xreflabel="6"><textual class="po-textual">
            </textual><emphasis class="po-inline e485 e485"><textual class="po-textual">How to Write an XML Catalog File</textual></emphasis><textual class="po-textual"> Bob Stayton, In “DocBook XSL: The
            Complete Guide”, Part 1, Chapter 5 </textual><link class="po-inline e486 e486" xlink:actuate="onRequest" xlink:href="http://www.sagehill.net/docbookxsl/WriteCatalog.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">article</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e487 e487" xml:id="XPath" xreflabel="7"><textual class="po-textual">
            </textual><emphasis class="po-inline e488 e488"><textual class="po-textual">XML Path Language (XPath), version 1.0</textual></emphasis><textual class="po-textual"> W3C recommendation, 16
            November 1999, </textual><link class="po-inline e489 e489" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xpath" xlink:show="new" xlink:type="simple"><textual class="po-textual">recommendation</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e490 e490" xml:id="IRI" xreflabel="8"><textual class="po-textual">
            </textual><emphasis class="po-inline e491 e491"><textual class="po-textual">Internationalized Resource Identifiers (IRIs)</textual></emphasis><textual class="po-textual"> IETF – RFC 3987,
            Duerest and Suignard, January 2005, </textual><link class="po-inline e492 e492" xlink:actuate="onRequest" xlink:href="http://www.ietf.org/rfc/rfc3987.txt" xlink:show="new" xlink:type="simple"><textual class="po-textual">rfc content</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e493 e493" xml:id="XInclude" xreflabel="9"><textual class="po-textual">
            </textual><emphasis class="po-inline e494 e494"><textual class="po-textual">XML Inclusion 1.0 (XInclude - Second Edition)</textual></emphasis><textual class="po-textual"> W3C recommendation,
            15 November 2006, </textual><link class="po-inline e495 e495" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xinclude/" xlink:show="new" xlink:type="simple"><textual class="po-textual">recommendation</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e496 e496" xml:id="xml-1.1" xreflabel="10"><textual class="po-textual">
            </textual><emphasis class="po-inline e497 e497"><textual class="po-textual">Extensible Markup Language (XML) 1.1</textual></emphasis><textual class="po-textual"> W3C recommendation, 4 February
            2004 </textual><link class="po-inline e498 e498" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/2004/REC-xml11-20040204/#sec-external-ent" xlink:show="new" xlink:type="simple"><textual class="po-textual">recommendation (ext. entity)</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e499 e499" xml:id="XPtr-scheme" xreflabel="11"><textual class="po-textual">
            </textual><emphasis class="po-inline e500 e500"><textual class="po-textual">XPointer xpointer() Scheme</textual></emphasis><textual class="po-textual"> W3C Working Draft 19 December 2002 </textual><link class="po-inline e501 e501" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xptr-xpointer/" xlink:show="new" xlink:type="simple"><textual class="po-textual">working draft</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e502 e502" xml:id="XPtr-frame" xreflabel="12"><textual class="po-textual">
            </textual><emphasis class="po-inline e503 e503"><textual class="po-textual">XPointer Framework</textual></emphasis><textual class="po-textual"> W3C Recommendation, 25 March 2005 </textual><link class="po-inline e504 e504" xlink:actuate="onRequest" xlink:href="http://www.w3.org/TR/xptr-framework/" xlink:show="new" xlink:type="simple"><textual class="po-textual">recommendation</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e505 e505" xml:id="wikipedia-NS" xreflabel="13"><textual class="po-textual">
            </textual><emphasis class="po-inline e506 e506"><textual class="po-textual">XML Namespaces</textual></emphasis><textual class="po-textual"> Wikipedia, the free Encyclopedia </textual><link class="po-inline e507 e507" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/XML_namespace" xlink:show="new" xlink:type="simple"><textual class="po-textual">article</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e508 e508" xml:id="wikipedia-RelaxNG" xreflabel="14"><textual class="po-textual">
            </textual><emphasis class="po-inline e509 e509"><textual class="po-textual">RelaxNG</textual></emphasis><textual class="po-textual"> Wikipedia, the free Encyclopedia </textual><link class="po-inline e510 e510" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/RELAX_NG" xlink:show="new" xlink:type="simple"><textual class="po-textual">article</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e511 e511" xml:id="Mime" xreflabel="15"><textual class="po-textual">
            </textual><emphasis class="po-inline e512 e512"><textual class="po-textual">Mime Media Types</textual></emphasis><textual class="po-textual"> IANA (Internet Assigned Numbers Authority) </textual><link class="po-inline e513 e513" xlink:actuate="onRequest" xlink:href="http://www.iana.org/assignments/media-types/" xlink:show="new" xlink:type="simple"><textual class="po-textual">specification</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e514 e514" xml:id="Mime-files" xreflabel="16"><textual class="po-textual">
            </textual><emphasis class="po-inline e515 e515"><textual class="po-textual">Mime Types File References</textual></emphasis><textual class="po-textual"> non normative list of mime media types
            and usual associated file name extensions </textual><link class="po-inline e516 e516" xlink:actuate="onRequest" xlink:href="http://www.mimetype.org/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.mimetype.org/</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e517 e517" xml:id="Saxonica" xreflabel="17"><textual class="po-textual">
            </textual><emphasis class="po-inline e518 e518"><textual class="po-textual">Saxonica, XSLT and XQuery processing</textual></emphasis><textual class="po-textual"> Michael Kay, </textual><link class="po-inline e519 e519" xlink:actuate="onRequest" xlink:href="http://www.saxonica.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.saxonica.com/</textual></link><textual class="po-textual">
        </textual></bibliomixed><bibliomixed class="po-block e520 e520" xml:id="Schematron" xreflabel="18"><textual class="po-textual">
            </textual><emphasis class="po-inline e521 e521"><textual class="po-textual">ISO Schematron, a language for making assertions about patterns found in XML
                documents</textual></emphasis><textual class="po-textual">, Topologi , </textual><link class="po-inline e522 e522" xlink:actuate="onRequest" xlink:href="http://www.schematron.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">web site</textual></link><textual class="po-textual">
        </textual></bibliomixed></bibliography></article></classedDocument>