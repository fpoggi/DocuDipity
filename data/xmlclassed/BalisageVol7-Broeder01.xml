<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3"><title class="po-block e1 e1"><textual class="po-textual">A pragmatic approach to XML interoperability – the Component Metadata Infrastructure
    (CMDI)</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2011</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 2 - 5, 2011</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">XML has been designed for creating structured documents, but the information that is
        encoded in these structures are, by definition, out of scope for XML.
        Additional sources, normally not easily interpretable by computers,
        such as documentation are needed to determine the intention of specific tags in a tag-set. The Component
        Metadata Infrastructure (CMDI) takes a rather pragmatic approach to foster interoperability between XML instances
        in the domain of metadata descriptions for language resources. This paper gives an overview of this approach.</textual></para></abstract><author class="po-record e8 e8"><personname class="po-record e9 e9"><firstname class="po-field e10 e10"><textual class="po-textual">Daan</textual></firstname><surname class="po-field e11 e11"><textual class="po-textual">Broeder</textual></surname></personname><personblurb class="po-container e12 e12"><para class="po-block e13 e13"><textual class="po-textual"> Daan Broeder works at the Max-Planck Institute for Psycholinguistics in Nijmegen
          (NL). In the institute's TLA unit he is head for the group developing the core LTA
          archiving software that is also used by several other organizations and institutes. He is
          currently involved several EU infrastructure projects and collaborations on Language
          Resource management as the European </textual><link class="po-inline e14 e14" xlink:actuate="onRequest" xlink:href="http://www.clarin.eu/" xlink:show="new" xlink:type="simple"><textual class="po-textual">CLARIN
            project</textual></link><textual class="po-textual"> and its Dutch national pendant CLARIN NL. In both projects the CMDI
          metadatda infrastructure, for which he is the coordinator, plays an essential role. He is
          part of national and international standardization groups on language resources. </textual></para><para class="po-block e15 e15"><textual class="po-textual">After first working on the development of signal analysis software packages for
          phonetic research, he switched to developing support for Language Resource data
          management. He played a major role in the development of the IMDI metadata infrastructure
          within a number of EU and national projects that is one of the first domain specific
          metadata sets for the linguistic domain</textual></para><para class="po-block e16 e16"><textual class="po-textual"> Currently his major research interests are developing sustainable e-infrastructures
          and tools that will effectively eliminate the institutional and organizational boundaries
          for linguistic research. </textual></para></personblurb><affiliation class="po-record e17 e17"><orgname class="po-block e18 e18"><textual class="po-textual">Max Planck Institute for Psycholinguistics, Nijmegen</textual></orgname></affiliation><email class="po-field e19 e19"><textual class="po-textual">daan.broeder@mpi.nl</textual></email></author><author class="po-record e20 e20"><personname class="po-record e21 e21"><firstname class="po-field e22 e22"><textual class="po-textual">Oliver</textual></firstname><surname class="po-field e23 e23"><textual class="po-textual">Schonefeld</textual></surname></personname><personblurb class="po-container e24 e24"><para class="po-block e25 e25"><textual class="po-textual"> Oliver Schonefeld works at the Institut für Deutsche Sprache (Institute for the
          German Language) in Mannheim and is involved in the projects </textual><link class="po-inline e26 e26" xlink:actuate="onRequest" xlink:href="http://www.clarin.eu" xlink:show="new" xlink:type="simple"><textual class="po-textual">CLARIN</textual></link><textual class="po-textual"> and </textual><link class="po-inline e27 e27" xlink:actuate="onRequest" xlink:href="http://www.textgrid.de/en/" xlink:show="new" xlink:type="simple"><textual class="po-textual">TextGrid</textual></link><textual class="po-textual">.</textual></para><para class="po-block e28 e28"><textual class="po-textual"> He studied computer science with specialization in text technology at Bielefeld
          University until 2005. After graduating he worked as a researcher at Bielefeld University
          and later at Tübingen University's collaborative research center Linguistic Data
          Structures.</textual></para><para class="po-block e29 e29"><textual class="po-textual"> His major research interests are the limitations of markup languages (especially
          overlapping markup) and the use of markup languages in linguistic description of language
          data.</textual></para></personblurb><affiliation class="po-record e30 e30"><orgname class="po-block e31 e31"><textual class="po-textual">Institute for the German Language (IDS), Mannheim</textual></orgname></affiliation><email class="po-field e32 e32"><textual class="po-textual">schonefeld@ids-mannheim.de</textual></email></author><author class="po-record e33 e33"><personname class="po-record e34 e34"><firstname class="po-field e35 e35"><textual class="po-textual">Thorsten</textual></firstname><surname class="po-field e36 e36"><textual class="po-textual">Trippel</textual></surname></personname><personblurb class="po-container e37 e37"><para class="po-block e38 e38"><textual class="po-textual"> Thorsten Trippel works at Tübingen University in a project on sustainability of
          language resources called
          </textual><link class="po-inline e39 e39" xlink:actuate="onRequest" xlink:href="http://www.sfs.uni-tuebingen.de/nalida" xlink:show="new" xlink:type="simple"><textual class="po-textual">NaLiDa</textual></link><textual class="po-textual">.
          This national project aims at providing a platform for linguists to
          locate resources they need and to enable them to produce long time usable data by
          introducing them to relevant metadata descriptions and standards. He is part of national
          and international standardization groups on language resources. </textual></para><para class="po-block e40 e40"><textual class="po-textual"> His major research interests are directed towards language resources in general and
          specifically in terminology and lexicography/lexicon theory (PhD Thesis: The Lexicon Graph
          Model: A generic Model for multi-modal lexicon development) including other types of
          resources such as speech corpora and involving other modalities. He has conducted research
          in speech technology and textual corpus linguistics, has been working with (XML-)databases
          for information retrieval over highly structured data and run research projects on
          interface design for such data. </textual></para><para class="po-block e41 e41"><textual class="po-textual"> Work at his previous affiliation Bielefeld University involved research projects in
          Brazil, transforming archives of handwritten texts into web-usable multi purpose sources
          for computational linguists and historians. Additionally he taught at Bielefeld
          University, and various institutions and summer schools, for example in introducing text
          technological and computational linguistic backgrounds to field linguists and language
          documentarists in West-Africa. </textual></para></personblurb><affiliation class="po-record e42 e42"><orgname class="po-block e43 e43"><textual class="po-textual">Tübingen University</textual></orgname></affiliation><email class="po-field e44 e44"><textual class="po-textual">thorsten.trippel@uni-tuebingen.de</textual></email><link class="po-inline e45 e45" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.sfs.uni-tuebingen.de/nalida/ttrippel.html</textual></link></author><author class="po-record e46 e46"><personname class="po-record e47 e47"><firstname class="po-field e48 e48"><textual class="po-textual">Dieter</textual></firstname><surname class="po-field e49 e49"><textual class="po-textual">Van Uytvanck</textual></surname></personname><personblurb class="po-container e50 e50"><para class="po-block e51 e51"><textual class="po-textual">Dieter Van Uytvanck studied computer science and linguistics,
          and has been involved since 2008 in the technical part of the CLARIN
          research infrastructure. He mainly focuses on XSD, XSLT and
          flexible metadata schemas. </textual></para></personblurb><affiliation class="po-record e52 e52"><orgname class="po-block e53 e53"><textual class="po-textual">Max Planck Institute for Psycholinguistics, Nijmegen</textual></orgname></affiliation><email class="po-field e54 e54"><textual class="po-textual">dieter.vanuytvanck@mpi.nl</textual></email></author><author class="po-record e55 e55"><personname class="po-record e56 e56"><firstname class="po-field e57 e57"><textual class="po-textual">Andreas</textual></firstname><surname class="po-field e58 e58"><textual class="po-textual">Witt</textual></surname></personname><personblurb class="po-container e59 e59"><para class="po-block e60 e60"><textual class="po-textual"> Witt received his Ph.D. in Computational Linguistics and Text Technology from the
          Bielefeld University in 2002 (dissertation title: “Multiple Informationsstrukturierung mit
          Auszeichnungssprachen. XML-basierte Methoden und deren Nutzen für die Sprachtechnologie”). </textual></para><para class="po-block e61 e61"><textual class="po-textual"> After graduating in 1996, he started as a researcher and instructor in Computational
          Linguistics and Text Technology. He was heavily involved in the establishment of the minor
          subject Text Technology in Bielefeld University's Magister and B.A. program in 1999 and
          2002 respectively. After his Ph.D. in 2002 he became an assistant lecturer, still at the
          Text Technology group in Bielefeld. In 2006 he moved to Tübingen University, where he was
          involved in a project on “Sustainability of Linguistic Resources” and in projects on the
          interoperability of language data. Since 2009 he is senior researcher at Institut für
          Deutsche Sprache (Institute for the German Language) in Mannheim. </textual></para><para class="po-block e62 e62"><textual class="po-textual"> Witt is and was a member of several research organizations, amongst them the TEI
          Special Interest Group on overlapping markup, for which he was involved in the writing of
          the latest version of the chapter “Multiple Hierarchies”, which is included in
          TEI-Guidelines P5. </textual></para><para class="po-block e63 e63"><textual class="po-textual"> Witt's major research interests deal with questions on the use and limitations of
          markup languages for the linguistic description of language data. </textual></para></personblurb><affiliation class="po-record e64 e64"><orgname class="po-block e65 e65"><textual class="po-textual">Institute for the German Language (IDS), Mannheim</textual></orgname></affiliation><email class="po-field e66 e66"><textual class="po-textual">witt@ids-mannheim.de</textual></email><link class="po-inline e67 e67" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.ids-mannheim.de/direktion/personal/witt.html</textual></link></author><legalnotice class="po-container e68 e68"><para class="po-block e69 e69"><textual class="po-textual">Copyright © 2011 by the authors. Used with permission.</textual></para></legalnotice></info><section class="po-hcontainer e70 e70"><title class="po-block e71 e71"><textual class="po-textual">Introduction</textual></title><para class="po-block e72 e72"><textual class="po-textual"> XML documents are commonly used to exchange data. The strict definition of the
      Markup-Language resulted in a variety of tools and every XML instance (given it is
      well-formed) can be processed by of-the-shelf tools. XML has been designed for
      creating structured documents, but the information that is encoded in these structures
      are, by definition, out of scope for XML.
      Therefore, generic identifier like </textual><code class="po-atom e73 e73"><textual class="po-textual">p</textual></code><textual class="po-textual"> can have different meanings, depending
      on which concrete markup language (or here: XML tag-set) is used. For example, in the case of
      HTML it denotes a paragraph while it may denote something completely different in another
      tag-set. An XML schema language, e.g. like DTD, XML Schema or RelaxNG, define a
      grammar for a given markup language and thus valid XML instances can be told apart from
      invalid ones, but they do not provide any inherent semantics to “understand” the XML
      instances. The necessary knowledge to interpret a markup language usually exists in the form
      of human-readable documentation and is “out of reach” for the computer. However, when trying
      to exchange (more or less) arbitrary XML instance some form of knowledge is needed to
      interpret these documents. The topic of the semantics of markup has been mostly discussed from
      an academic point of view, see e.g. </textual><xref class="po-milestone e74 e74" linkend="sperberg-mcqueen2011"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. </textual></para><para class="po-block e75 e75"><textual class="po-textual"> The Component Metadata Infrastructure (CMDI) takes a rather pragmatic approach towards
      adding some semantics to XML to allow exchange of metadata descriptions encoded in various
      metadata formats in a (slightly adapted) XML encoding. This is done by linking generic
      identifiers to semantic concepts in a data category registry and thus allow more profound
      interpretation of the markup. The CMDI approach is set in the domain of metadata descriptions,
      but may be generalized to be used within other domains.</textual><footnote class="po-popup e76 e76"><para class="po-block e77 e77"><textual class="po-textual">The authors are well aware, that providing a sound semantic foundation, e.g. an
          ontology or alike, for less closed domain will be, at least, a challenging task.</textual></para></footnote><textual class="po-textual">
    </textual></para></section><section class="po-hcontainer e78 e78"><title class="po-block e79 e79"><textual class="po-textual">Component Metadata Infrastructure</textual></title><para class="po-block e80 e80"><textual class="po-textual"> The Component Metadata Infrastructure is developed in the context of the CLARIN project
        (</textual><xref class="po-milestone e81 e81" linkend="varadi2008"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). CLARIN aims at building an integrated and interoperable
      research infrastructure for language resources. The goal is to provide a stable, persistent
      and accessible infrastructure for the eHumanities. One important aspect of CLARIN is to enable
      easy sharing of language resources. This will allow researchers to use existing resources as a
      basis for their work, e.g. by optimizing their existing or new tools, by building derivative
      resources or expose their resources to a broader audience. Therefore, to make this
      infrastructure more usable, resources need to be easily accessible, in particular easily
      findable. The most common approach towards achieving this is to provide descriptive metadata
      about these resources and use these information to find resources of interest for a particular
      researcher. </textual></para><para class="po-block e82 e82"><textual class="po-textual">Part of this context is also an already large installed base of metadata descriptions
      available using fixed metadata schemas as </textual><xref class="po-milestone e83 e83" linkend="IMDI3013"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e84 e84" linkend="OLAC"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.
      Although the quality of the metadata is sometimes questionable, it would be unacceptable to put
      a new framework into place that would lock out these existing metadata resources</textual></para><para class="po-block e85 e85"><textual class="po-textual"> Since CLARIN is a rather large, diverse project, different project members have different
      opinions on how to adequately model the metadata for their types of resources. For a lot of
      existing resources extensive amounts of metadata descriptions are already available. It seems
      naïve to assume that agreement on a common metadata schema for a large-scale project like
      CLARIN can be achieved and will most likely result in the least common denominator, e.g. Dublin
      Core (</textual><xref class="po-milestone e86 e86" linkend="DC"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e87 e87" linkend="baker1998"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), losing a lot of the express power that is used in
      existing metadata, as would using a “pivot” schema, both would result in information loss.
      </textual><textual class="po-textual">
      CLARIN tries to solve the problem by the Component Metadata Infrastructure (CMDI), which is
      basically a framework to accommodate for different XML-based metadata formats. CMDI provides,
      supported by various tools, a framework and work flows for creating metadata formats and
      metadata descriptions as well as semantic foundation for processing metadata descriptions. </textual></para><section class="po-hcontainer e88 e88"><title class="po-block e89 e89"><textual class="po-textual">Framework overview</textual></title><para class="po-block e90 e90"><textual class="po-textual"> CMDI is a framework (see </textual><xref class="po-milestone e91 e91" linkend="fig-cmdi-framework"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) to build component based
        metadata descriptions. A metadata component is basically a collection of atomic metadata
        fields or data categories (DatCats) and describes a specific aspect or dimension of a
        resource, e.g. the title of a document, the creator or the native language of a subject in a
        video recording. Components can have a recursive structure, i.e. in addition to atomic
        fields, the components can also contain other components. Thus, components serve as small
        building blocks or reusable templates for a specific aspect of a resource. Together with a
        header, these components are combined into metadata profiles, each of which can be used as a
        schema for metadata instances. Both, components and profiles can (and should) be stored in a
        component registry, which is a directory of components to be reused in different contexts.
        Users can either reuse existing profiles for their metadata descriptions or create new
        profiles by reusing or creating new components, either manually or with a specialized
        component editor. Various profiles already exists in the component registry, e.g. for IMDI,
        OLAC, Dublin Core or the TEI header.</textual><footnote class="po-popup e92 e92"><para class="po-block e93 e93"><textual class="po-textual">The metadata schemas of these sets have been decomposed into components and then recomposed into
            profiles, while as many components were reused.</textual></para></footnote><textual class="po-textual">
      </textual></para><para class="po-block e94 e94"><textual class="po-textual">
        The storage of the schemas in a centralized infrastructure is common practice for metadata schemas, 
        though of course this adds the problem of sustainability to the process, inasmuch as the repository 
        of schemas needs to be constantly available. 
        Though this could be seen as problematic in principle for pragmatic reasons it seems more appropriate 
        than to use local copies with modifications, because it makes sure that tools can operate on the centrally 
        stored files. For a metadata archive, a local store of schema copies could be instantiated, but this would 
        result in the requirement to adjust the schema reference, for interoperability this could cause an additional 
        problem. Hence the use of a central infrastructure is probably the safest solution and in the context of an 
        infrastructure of data and services most likely to be sustainable. This is also consistent with the approaches
        described by </textual><xref class="po-milestone e95 e95" linkend="Rehmetal2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.
      </textual></para><para class="po-block e96 e96"><textual class="po-textual">
        </textual><textual class="po-textual">
        Each metadata field is linked to exactly one data category in a data category registry (DCR)
        using a persistent identifier. The DCR indicates how the content of the field in a metadata
        description should be interpreted. If the same data category is used in various metadata
        schemas, the reference to the DCR will still be the same. This is also independent of the
        concrete naming of the XML element, including names, cases and orthographic variants.
        </textual><textual class="po-textual">
        For example, the field </textual><code class="po-atom e97 e97"><textual class="po-textual">title</textual></code><textual class="po-textual"> in </textual><code class="po-atom e98 e98"><textual class="po-textual">titleStmt</textual></code><textual class="po-textual"> in the TEI header is linked
        to the same category as the </textual><code class="po-atom e99 e99"><textual class="po-textual">title</textual></code><textual class="po-textual"> in Dublin Core. </textual></para><para class="po-block e100 e100"><textual class="po-textual"> In the CLARIN project the preferred concept registry is the ISO data category registry
          </textual><link class="po-inline e101 e101" xlink:actuate="onRequest" xlink:href="http://www.isocat.org" xlink:show="new" xlink:type="simple"><textual class="po-textual">ISO-DCR</textual></link><textual class="po-textual">. This registry is an
        implementation of the ISO 12620 standard model for data categories and offers ample
        functionality for the needs of the CMDI framework. For the CMDI framework it makes no
        essential difference if another registry such as for instance the
        </textual><xref class="po-milestone e102 e102" linkend="DCMI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> is used. However the ISO-DCR does have a tight integration with other CMDI software
        components such as the component editor, for efficient searching for suitable data categories
        or even combining metadata modelling with defining new data categories. </textual></para><para class="po-block e103 e103"><textual class="po-textual"> The component registry contains CMDI components and profiles. If a metadata creator
        needs to describe a (for him) new type of resource, he can browse through the available
        profiles and see if there is one that suits his needs. If there is no suitable profile
        available he can create a new one, based on existing components or he can create new
        components and work these with existing ones into a new profile. </textual></para><para class="po-block e104 e104"><textual class="po-textual"> When creating metadata elements in new metadata components users can browse and search
        for entries in the ISO-DCR to find a concept that matches the semantics of the metadata
        element. The identifier of the concept is then automatically inserted in the metadata
        component specification. </textual></para><para class="po-block e105 e105"><textual class="po-textual"> To create metadata descriptions users load profiles into the metadata editor, which then
        can automatically generate forms based on the metadata profile. The user then fills out these forms
        to enter the data. Of course users may also use an XML editor to create metadata descriptions
        directly and use the provided XML schemas (see below) to validate the XML documents. </textual></para><para class="po-block e106 e106"><textual class="po-textual"> The resulting metadata records are offered for harvesting by
        </textual><link class="po-inline e107 e107" xlink:actuate="onRequest" xlink:href="http://www.openarchives.org/OAI/openarchivesprotocol.html" xlink:show="new" xlink:type="simple"><textual class="po-textual">OAI-PMH</textual></link><textual class="po-textual">
        and gathered in one or more central repositories. </textual></para><para class="po-block e108 e108"><textual class="po-textual"> Multiple ways to exploit the collected metadata are foreseen ranging from systems doing
        simple keyword search to those using faceted browsing or structured search. In all of these
        semantic mapping using the ISO-DCR plays a crucial role. When a user specifies a metadata
        query, the ISO-DCR then allows to expand this query into set of equivalent ones that will be
        able to retrieve metadata records where a different terminology than specified in the
        original query. The identifiers of the terms in the query are used to find equivalent terms
        and these are then used to generate an additional query. E.g. when a user queries for
        </textual><code class="po-atom e109 e109"><textual class="po-textual">titleStmt</textual></code><textual class="po-textual"> an additional query is generated for </textual><code class="po-atom e110 e110"><textual class="po-textual">title</textual></code><textual class="po-textual">,
        since </textual><code class="po-atom e111 e111"><textual class="po-textual">titleStmt</textual></code><textual class="po-textual"> is linked to </textual><code class="po-atom e112 e112"><textual class="po-textual">title</textual></code><textual class="po-textual"> via the ISO-DCR. </textual></para><figure class="po-container e113 e113" xml:id="fig-cmdi-framework"><title class="po-block e114 e114"><textual class="po-textual">Overview of the CMDI framework.</textual></title><mediaobject class="po-container e115 e115"><imageobject class="po-container e116 e116"><imagedata class="po-meta e117 e117" fileref="../../../vol7/graphics/Broeder01/Broeder01-001.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e118 e118"><textual class="po-textual">
        As mentioned before, a metadata component describes various aspects or dimensions of a resource.
        </textual><xref class="po-milestone e119 e119" linkend="fig-example-schematic"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows a schematic representation of a very simple example
        metadata component “Actor”.
        It contains two atomic fields “firstName” and “lastName” and refers to another component “ActorLanguage”,
        which contains a repeatable</textual><footnote class="po-popup e120 e120"><para class="po-block e121 e121"><textual class="po-textual">This is not yet marked clearly in the figure, we'll
        find a better graphical notation for the final paper.</textual></para></footnote><textual class="po-textual"> atomic field “actorLanguageName”.
        An entity “Actor” therefore consists of a first name, a last name and a list of languages. 
      </textual></para><para class="po-block e122 e122"><textual class="po-textual">
        In CMDI components are expressed in XML files. </textual><xref class="po-milestone e123 e123" linkend="fig-example-xml-component"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> displays the “Actor”
        component in the CMDI component XML specification tag-set. </textual><code class="po-atom e124 e124"><textual class="po-textual">CMD_Component</textual></code><textual class="po-textual"> elements define new components,
        </textual><code class="po-atom e125 e125"><textual class="po-textual">CMD_Element</textual></code><textual class="po-textual"> elements new atomic fields. The </textual><code class="po-atom e126 e126"><textual class="po-textual">ConceptLink</textual></code><textual class="po-textual"> attribute is the most important aspect
        in terms of interoperability, because it stores the link to a DCR, or more specific the PID of a data category.
        Software interpreting the component definitions can use this concept link to draw further conclusions from information,
        like establishing an equality relation be between different field in different metadata schemes and use this,
        e.g. for smart searching. The component descriptions are normally transformed to XML Schema using an XSLT transformation.
        These XML Schemas are available from the component registry and can e.g. be used in special metadata editors or plain XML
        editors to aid the user in creating metadata records. </textual><xref class="po-milestone e127 e127" linkend="fig-example-xml-component"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows an example instance
        of an “Actor” component. In a complete CMDI metadata record the component together with and one or more links to the
        described resource are wrapped with a header.
      </textual></para><para class="po-block e128 e128"><textual class="po-textual">Especially in connection with the standardization efforts mentioned in </textual><xref class="po-milestone e129 e129" linkend="sec-conclusion"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, TEI ODD
        will be evaluated as an alternative apparatus for defining metadata components.            
      </textual></para><para class="po-block e130 e130"><textual class="po-textual">
  Other representation formats such as RDF, OWL and Topic Maps do not seem appropriate for the description of the metadata in comparison to CMDI. It is obvious, 
  that CMDI due the recursive structure of defining components can become rather complex, but the structures are at least assumed to be human readable and structured 
  according to a human prose text on a resource. 
  In contrast to this, the RDF-family is not requiring the linear order, presenting the RDF-triples in arbitrary order. 
  Though CMDI documents can be rendered in RDF (and probably in OWL and Topic Maps), the struture of CMDI is more transparent and usable to human users. CMDI is also 
  not a form of knowledge representation, in which the concepts of a resource are described, but it is intended to provide structured information about a resource for 
  human users. 
</textual></para><figure class="po-container e131 e131" xml:id="fig-example-schematic"><title class="po-block e132 e132"><textual class="po-textual">Schematic representation of the metadata component for “Actor”</textual></title><mediaobject class="po-container e133 e133"><imageobject class="po-container e134 e134"><imagedata class="po-meta e135 e135" fileref="../../../vol7/graphics/Broeder01/Broeder01-002.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><figure class="po-container e136 e136" xml:id="fig-example-xml-component"><title class="po-block e137 e137"><textual class="po-textual">XML representation of a metadata component for “Actor”</textual></title><programlisting class="po-block e138 e138" xml:space="preserve"><textual class="po-textual">&lt;CMD_Component name="Actor"&gt;
  &lt;CMD_Element name="firstName" ValueScheme="string"
               ConceptLink="http://www.isocat.org/datcat/CMD-123"&gt;
  &lt;CMD_Element name="lastName" ValueScheme="string"
               ConceptLink="http://www.isocat.org/datcat/CMD-124"/&gt;
  &lt;CMD_Component name="ActorLanguage" id="ActorLanguage"
                 CardinalityMin="0" CardinalityMax="unbounded"&gt;
    &lt;CMD_Element name="ActorLanguageName" ValueScheme="string"
                 ConceptLink="http://www.isocat.org/datcat/DC-1766"/&gt;
  &lt;/CMD_Component&gt;
&lt;/CMD_Component&gt;</textual></programlisting></figure><figure class="po-container e139 e139" xml:id="fig-example-xml-instance"><title class="po-block e140 e140"><textual class="po-textual">XML instance of a metadata description record for “Actor”</textual></title><programlisting class="po-block e141 e141" xml:space="preserve"><textual class="po-textual">&lt;Actor&gt;
  &lt;firstName&gt;Foo&lt;/firstName&gt;
  &lt;lastName&gt;Bar&lt;/lastName&gt;
  &lt;ActorLanguage&gt;
    &lt;ActorLanguageName&gt;Kilivila&lt;/ActorLanguageName&gt;
    &lt;ActorLanguageName&gt;French&lt;/ActorLanguageName&gt;
  &lt;/ActorLanguage&gt;
&lt;/Actor&gt;</textual></programlisting></figure></section><section class="po-hcontainer e142 e142"><title class="po-block e143 e143"><textual class="po-textual">Tools</textual></title><para class="po-block e144 e144"><textual class="po-textual">For the use of the Component Metadata Infrastructure, various tools exist, some being
        reused from other contexts, others were explicitly developed in this context. Among them are
        editors, registries and search applications, which will be described briefly.</textual></para><section class="po-hcontainer e145 e145"><title class="po-block e146 e146"><textual class="po-textual">ISOcat: the Data category registry for ISO TC 37</textual></title><para class="po-block e147 e147"><textual class="po-textual">The data category ISOcat </textual><xref class="po-milestone e148 e148" linkend="iso12620"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> stores data categories and
          implements ISO 12620:2009. It is a specialized concept registry, historically developed
          for data categories used in terminology exchange. However, the concept was so flexible and
          useful that it was extended to further areas, including linguistic resource management
          with all required metadata categories.</textual></para><para class="po-block e149 e149"><textual class="po-textual">As a web-based registry for data categories and concepts, ISOcat can be extended by
          additional data categories as required by users to cater for the individual project
          needs. Data categories can be defined privately or publicly, submitted for
          ISO-standardization or not.</textual></para><para class="po-block e150 e150"><textual class="po-textual">Each data category in ISOcat receives a Persistent Identifier (PID) which is used to
          reference to it, especially suited to be included in metadata and schemata of linguistic
          resources to foster semantic interoperability. Some schema languages, e.g., TBX XCS and
          TEI ODD, have built-in support to embed these PIDs into the schema. However, more generic
          schema languages such as Relax NG and W3C XML Schema do not, but with the definition of
          attributes schemas in these languages can easily be extended to include them.</textual></para></section><section class="po-hcontainer e151 e151"><title class="po-block e152 e152"><textual class="po-textual">The CMDI Component Registry</textual></title><para class="po-block e153 e153"><textual class="po-textual">The Component Registry is also a web-based service, but currently not part of an ISO
          standard. Within the Component Registry, users of CMDI can store their metadata components
          and profiles. But it not only allows storage, but also contains editing functionalities. </textual></para><para class="po-block e154 e154"><textual class="po-textual">In the CMDI Component Registry each component is also assigned an identifier that is unique 
          in the context of the component registry, in order for other components to integrate it.
          Additionally this component identifier can be used as a reference for the profiles, that is,
          </textual><textual class="po-textual">
          the instances document type declaration and namespaces can point to the component registry
          for their XML Schema.</textual></para></section><section class="po-hcontainer e155 e155"><title class="po-block e156 e156"><textual class="po-textual">Arbil: The CMDI supporting metadata editor</textual></title><para class="po-block e157 e157"><textual class="po-textual">A special challenge for any metadata framework is the creation of instances, which needs to be easy
          and user friendly. As CMDI is highly adjustable and flexible, this poses additional
          complications. With the metadata editor Arbil, there is an XML-Editor that is aware of
          CMDI-structures and connects to the component registry downloading the available (schematized)
          CMDI profiles. Since there can be very many, the user can limit the number of CMDI profiles that
          are actually shown in the user interface</textual></para></section><section class="po-hcontainer e158 e158"><title class="po-block e159 e159"><textual class="po-textual">Relation Registry</textual></title><para class="po-block e160 e160"><textual class="po-textual">
          The CMDI Relation Registry (RR) is designed to augment a limitation in ISO-DCR and allow
          the metadata search user to create (temporary) simple relations between different data categories in the ISO-DCR. 
          The ISO-DCR can overcome “accidental” semantic overlap between different terms, i.e. two metdata
          developers used different terms but agree on the same definitions. The RR can be used by users searching
          the metadata to overcome intentional semantic overlap, i.e. the metadata modelers decided that two terms
          actually mean different things, but where the user decides that this difference is irrelevant for
          him. He would specify the relation “Term1” == “Term2” and the semantic mapping machinery
          of the metadata search would expand every query with “Term1” with one that also uses “Term2”.
        </textual></para></section><section class="po-hcontainer e161 e161"><title class="po-block e162 e162"><textual class="po-textual">Joint Metadata Repository</textual></title><para class="po-block e163 e163"><textual class="po-textual"> The joint metadata repository (JMDR) is the place where all the harvested CMDI metadata records are stored.
          The harvesting method is the well-known OAI-PMH, currently there is not yet a registry where the
          CMDI metadata providers are registered, but such a registry is under consideration.</textual></para><para class="po-block e164 e164"><textual class="po-textual">
          There may be several of such joint metadata repositories, each specializing in one type of metadata search service. 
          Considering the (expected) great variety of metadata schemas, it was thought advantageous to use native XML
          database to allow searching through the collected CMDI records.
        </textual></para><para class="po-block e165 e165"><textual class="po-textual">
          Currently no semantic normalization is done when the records are stored in the JMDR, this is to allow a query
          to retrieve only those records that actually use a profile specific terminology.
        </textual></para></section><section class="po-hcontainer e166 e166"><title class="po-block e167 e167"><textual class="po-textual">Searching over structured CMDI data</textual></title><para class="po-block e168 e168"><textual class="po-textual">Added value of highly structured and rich metadata descriptions can be achieved if the
          search process is more elaborated, leading to more precise and fast results than a
          full-text search, without lowering the recall. Two examples of such search interfaces are
          the Virtual Language Observatory and the NaLiDa Faceted Search. Both harvest the CMDI
          metadata from data providers, but they have a different functionality. </textual></para><para class="po-block e169 e169"><textual class="po-textual"> The Virtual Language Observatory started of with earlier metadata versions. It
          presents a number of different facets, from which a user selects the interesting data
          categories.</textual></para><para class="po-block e170 e170"><textual class="po-textual">The NaLiDa faceted browser is slightly more elaborated as it implements conditional
          facets, i.e. additional facets appear based on earlier selections. For example the facet
          “corpus type” is irrelevant for non-corpora, hence is only shown if the resource type
          “corpus” is selected. However, the NaLiDa faceted browser focuses on resources in a
          national context.</textual></para></section></section></section><section class="po-hcontainer e171 e171" xml:id="sec-conclusion"><title class="po-block e172 e172"><textual class="po-textual">Conclusion</textual></title><para class="po-block e173 e173"><textual class="po-textual"> XML encoding is a solid foundation to encode metadata descriptions. In the past, various
      different metadata schemas emerged based on XML technology, like </textual><xref class="po-milestone e174 e174" linkend="IMDI3013"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">,
      </textual><xref class="po-milestone e175 e175" linkend="OLAC"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e176 e176" linkend="DCMI"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.
      Several technologies, like OAI-PMH have been created for the easy dissemination of XML encoded
      metadata descriptions. However, XML is not sufficient to exchange data. One either has to
      agree on a common schema or transform their data into pivot formats. Especially with rich and
      elaborated metadata schemas these approaches are cumbersome and most often lead to loss of
      information. A level beyond XML is needed to convey semantic information about the markup,
      which allows to draw further conclusions on the information encoded in XML documents. The
      CLARIN project takes a rather pragmatic approach towards this problem by adding registries for
      metadata components and data categories. The information of both registries combined allow to
      perform, at least to some extend, reasoning about the information encoded in metadata
      descriptions. For example, more sophisticated searches are possible. To some extend, this
      approach can be generalized and applied to other scenarios to foster XML document interchange
      without nervelessly requiring to agree on a common XML markup schema. At the time of this
      writing, CMDI has been proposed as a work item in ISO/TC 37/SC 4. </textual></para></section><bibliography class="po-hcontainer e177 e177"><title class="po-block e178 e178"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e179 e179" xml:id="baker1998" xreflabel="Baker 1998"><textual class="po-textual"> Baker, T.
      </textual><emphasis class="po-inline e180 e180" role="ital"><textual class="po-textual">“Languages for Dublin Core”</textual></emphasis><textual class="po-textual">. D-Lib Magazine, 4:12. 1998.
    </textual></bibliomixed><bibliomixed class="po-block e181 e181" xml:id="DCMI" xreflabel="DCMI"><textual class="po-textual">Dublin Core Metadata Initiative 
      </textual><emphasis class="po-inline e182 e182" role="ital"><textual class="po-textual">“DCMI Metadata Terms”</textual></emphasis><textual class="po-textual">, this Version of 2010-10-11, </textual><link class="po-inline e183 e183" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://dublincore.org/documents/2010/10/11/dcmi-terms/</textual></link><textual class="po-textual">, latest version
      </textual><link class="po-inline e184 e184" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://dublincore.org/documents/dcmi-terms/</textual></link></bibliomixed><bibliomixed class="po-block e185 e185" xml:id="DC" xreflabel="Dublin Core"><textual class="po-textual">Dublin Core Metadate Initiative
      </textual><emphasis class="po-inline e186 e186" role="ital"><textual class="po-textual">“Metadata Basics”</textual></emphasis><textual class="po-textual">. 1995–2011,
      see </textual><link class="po-inline e187 e187" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://dublincore.org/metadata-basics/</textual></link><textual class="po-textual">
    </textual></bibliomixed><bibliomixed class="po-block e188 e188" xml:id="IMDI3013" xreflabel="IMDI"><textual class="po-textual"> ISLE Metadata Initiative (IMDI)
      </textual><emphasis class="po-inline e189 e189" role="ital"><textual class="po-textual">“Metadata Elements for Catalogue Descriptions”</textual></emphasis><textual class="po-textual">. 
      Part 1 B, Version 3.0.13, August 2009 
      </textual><link class="po-inline e190 e190" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.mpi.nl/IMDI/documents/Proposals/IMDI_Catalogue_3.0.0.pdf</textual></link><textual class="po-textual">
    </textual></bibliomixed><bibliomixed class="po-block e191 e191" xml:id="iso12620" xreflabel="ISO 12620"><textual class="po-textual">ISO 12620.
      </textual><emphasis class="po-inline e192 e192" role="ital"><textual class="po-textual">“Computer Applications in Terminology – Data Categories – Specification of Data
      Categories and Management of a Data Category Registry for Language Resources”</textual></emphasis><textual class="po-textual">.
      ISO, Geneva, Switzerland, 2009. </textual></bibliomixed><bibliomixed class="po-block e193 e193" xml:id="OLAC" xreflabel="Simons et al. 2008"><textual class="po-textual">Simons, G. and Bird, S. 
      </textual><emphasis class="po-inline e194 e194"><textual class="po-textual">“OLAC Metadata”</textual></emphasis><textual class="po-textual">. 2008,
      cited version </textual><link class="po-inline e195 e195" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.language-archives.org/OLAC/metadata-20080531.html</textual></link><textual class="po-textual">, 
      latest version </textual><link class="po-inline e196 e196" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.language-archives.org/OLAC/metadata.html</textual></link><textual class="po-textual">
    </textual></bibliomixed><bibliomixed class="po-block e197 e197" xml:id="Rehmetal2010" xreflabel="Rehm et al. 2011"><textual class="po-textual">
      Rehm, G., Schonefeld, O., Trippel, T., Witt, A.
      </textual><emphasis class="po-inline e198 e198" role="ital"><textual class="po-textual">“Sustainability of Linguistic Resources Revisited”</textual></emphasis><textual class="po-textual">.
      In: Proceedings of the International Symposium on XML for the Long Haul: Issues in the
      Long-term Preservation of XML. Balisage Series on Markup Technologies, Vol. 6, 2010.
      doi:10.4242/BalisageVol6.Witt01
    </textual></bibliomixed><bibliomixed class="po-block e199 e199" xml:id="sperberg-mcqueen2011" xreflabel="Sperberg-McQueen &amp; Huitfeldt 2011"><textual class="po-textual">
      Sperberg-McQueen, C. M. and Huitfeldt, C. </textual><emphasis class="po-inline e200 e200" role="ital"><textual class="po-textual">“Ten
        Problems in the Interpretation of XML Documents”</textual></emphasis><textual class="po-textual">. In: </textual><textual class="po-textual">Proceegings of the Conference of Processing Text-Technological Resources 2008, Bielefeld (to appear).</textual></bibliomixed><bibliomixed class="po-block e201 e201" xml:id="varadi2008" xreflabel="Váradi et al. 2008"><textual class="po-textual"> Váradi, T.,
      Krauwer, S., Wittenburg, P., Wynne, M. and Koskenniemi, M. </textual><emphasis class="po-inline e202 e202" role="ital"><textual class="po-textual">“CLARIN: Common language resources and technology infrastructure”</textual></emphasis><textual class="po-textual">.
      In: Proceedings of LREC 2008, Marrakech, Morocco, 2008. pp. 1244–1248.
      </textual><link class="po-inline e203 e203" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.lrec-conf.org/proceedings/lrec2008/pdf/317_paper.pdf</textual></link><textual class="po-textual">
    </textual></bibliomixed></bibliography></article></classedDocument>