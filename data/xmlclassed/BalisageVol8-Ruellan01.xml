<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3"><title class="po-block e1 e1"><textual class="po-textual">XML Entropy Study</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2012</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 7 - 10, 2012</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">Reducing the impact of XML documents both in term of size
				and in term of processing speed has been the goal of many
				studies and research efforts, but never in a very formal or
				comprehensive manner. To strengthen the foundations of those
				works, we present here a comprehensive formal study of the
				quantity of information contained in XML documents. We then
				compare those theoretical results to the effective compactness
				obtained by some existing binary XML formats.
			</textual></para></abstract><author class="po-record e8 e8"><personname class="po-record e9 e9"><firstname class="po-field e10 e10"><textual class="po-textual">Hervé</textual></firstname><surname class="po-field e11 e11"><textual class="po-textual">Ruellan</textual></surname></personname><personblurb class="po-container e12 e12"><para class="po-block e13 e13"><textual class="po-textual">Hervé Ruellan holds an engineering degree from the École
					Centrale des Arts et Manufactures (1993) and a Ph.D. in
					computer science from Université Paris XI (1998). Since
					2000, he has been working at Canon Research Centre France
					first in the domain of Web Services, then in the domain of
					XML technologies.
				</textual></para></personblurb><affiliation class="po-record e14 e14"><jobtitle class="po-field e15 e15"><textual class="po-textual">Research Engineer</textual></jobtitle><orgname class="po-block e16 e16"><textual class="po-textual">Canon Research Centre France S.A.S.</textual></orgname></affiliation><email class="po-field e17 e17"><textual class="po-textual">herve.ruellan@crf.canon.fr</textual></email></author><legalnotice class="po-container e18 e18"><para class="po-block e19 e19"><textual class="po-textual">Copyright © 2012 Canon Research Centre France S.A.S.</textual></para></legalnotice><keywordset class="po-table e20 e20" role="author"><keyword class="po-field e21 e21"><textual class="po-textual">XML</textual></keyword><keyword class="po-field e22 e22"><textual class="po-textual">Entropy</textual></keyword><keyword class="po-field e23 e23"><textual class="po-textual">Compression</textual></keyword></keywordset></info><section class="po-hcontainer e24 e24" xml:id="intro"><title class="po-block e25 e25"><textual class="po-textual">Introduction</textual></title><para class="po-block e26 e26"><textual class="po-textual">
			</textual><xref class="po-milestone e27 e27" linkend="xml"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (Extensible Markup Language) is now used in
			many applications on many devices for storing a large variety of
			data in a common format. XML being a verbose format, several
			solutions have been developed to reduce the size of XML documents.
			First, XML documents can be compressed using general-purpose
			compressors (</textual><emphasis class="po-inline e28 e28" role="ital"><textual class="po-textual">e.g.</textual></emphasis><textual class="po-textual">, gzip).
			However, taking advantage of the XML structure, it is possible to
			achieve better compression ratio. For this reason, many binary
			formats for XML documents have been developed and a few have even
			been standardized, such as </textual><xref class="po-milestone e29 e29" linkend="fastinfoset"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> which is
			an ISO/IEC and ITU-T standard and </textual><xref class="po-milestone e30 e30" linkend="exi"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (Efficient
			XML Interchange) which is a W3C Recommendation.
		</textual></para><para class="po-block e31 e31"><textual class="po-textual">
			Binary XML formats have been studied experimentally to compare
			both their compression ratio and their processing speeds. Augeri
			et al. have compared general-purpose compressors, binary XML
			formats, and schema-aware XML compressors (see </textual><xref class="po-milestone e32 e32" linkend="augeri07"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Their efficiency measure, combining the
			compression ratio and the compression speed, showed that the best
			binary XML format they tested (XMill, see </textual><xref class="po-milestone e33 e33" linkend="liefke00"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) was equivalent to the best
			general-purpose compressors (gzip,
			WinZip</textual><superscript class="po-atom e34 e34"><textual class="po-textual">®</textual></superscript><textual class="po-textual">, and bzip2). In another study,
			Sakr used several efficiency measures, combining the compression
			ratio with both the compression and decompression speed, and
			obtained similar results (see </textual><xref class="po-milestone e35 e35" linkend="sakr09"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). Last, Ng,
			Lam and Cheng compared several binary XML formats, taking into
			account whether they supported queries (see </textual><xref class="po-milestone e36 e36" linkend="ng06"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">). They showed that the advantage of
			supporting queries over the XML content was achieved at the cost
			of decreasing the compression ratio.
		</textual></para><para class="po-block e37 e37"><textual class="po-textual">
			In addition to these experimental comparisons, it would be
			interesting to evaluate the theoretical efficiency of binary XML
			formats at the compression ratio level. We therefore propose to
			study the entropy of XML documents, first roughly as textual
			documents, then more precisely by taking into account the
			different aspects of their structure. Using this entropy study, we
			will evaluate the theoretical efficiency of Fast Infoset and EXI.
			To the best of our knowledge, this is the first and only such
			study available.
		</textual></para><para class="po-block e38 e38"><textual class="po-textual">In </textual><xref class="po-milestone e39 e39" linkend="testingcorpus"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, we describe the set of XML
			documents used as a testing corpus. In </textual><xref class="po-milestone e40 e40" linkend="entropymeasurement"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, we describe several methods
			for measuring the quantity of information contained in an XML
			document, using different representations of this XML document.
			Last, in </textual><xref class="po-milestone e41 e41" linkend="fileformat"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, we use those results to
			evaluate the theoretical capacities of several formats: textual
			XML, Fast Infoset, and EXI.  </textual></para></section><section class="po-hcontainer e42 e42" xml:id="testingcorpus"><title class="po-block e43 e43"><textual class="po-textual">Testing Corpus</textual></title><section class="po-hcontainer e44 e44"><title class="po-block e45 e45"><textual class="po-textual">XML document sources</textual></title><para class="po-block e46 e46"><textual class="po-textual">To provide reliable results, the testing corpus used in this
				study needed to cover a wide spectrum of XML documents. In
				order to achieve this goal, the selected set of documents is
				the testing corpus from the W3C EXI working group [</textual><xref class="po-milestone e47 e47" linkend="exiwg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], which is large and representative.
			</textual></para><para class="po-block e48 e48"><textual class="po-textual">Indeed, one of the tasks of the EXI working group was to
				evaluate several technologies for encoding XML documents
				[</textual><xref class="po-milestone e49 e49" linkend="eximeas"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. This evaluation had to be
				relevant for most of the usages of XML.  Therefore, they had
				to build a representative set of XML documents.
			</textual></para><para class="po-block e50 e50"><textual class="po-textual">Our testing corpus contains 870 XML documents.  This testing
				corpus covers many usage of XML documents, including
				scientific information, financial information, electronic
				documents, web services, military information, broadcast
				metadata, data storage and sensor information.
			</textual></para></section><section class="po-hcontainer e51 e51"><title class="po-block e52 e52"><textual class="po-textual">XML document classification</textual></title><para class="po-block e53 e53"><textual class="po-textual">XML has many usages and therefore there is a wide variety of
				XML documents. To engage in a deeper analysis of the different
				XML documents, it is interesting to define some criteria for
				classifying them.
			</textual></para><para class="po-block e54 e54"><textual class="po-textual">Qureshi and Samadzadeh, in </textual><emphasis class="po-inline e55 e55" role="ital"><textual class="po-textual">Determining
					the Complexity of XML Documents</textual></emphasis><textual class="po-textual"> [</textual><xref class="po-milestone e56 e56" linkend="qureshi05"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], have described several ways for
				determining the complexity of XML documents using different
				syntactic and structural aspects of those documents. They
				start by observing that several measures can be extracted from
				an XML document, such as the number of elements, the number of
				distinct element, the size of the document, and the depth of
				the document.
			</textual></para><para class="po-block e57 e57"><textual class="po-textual">As these measures only reflect a part of an XML document
				complexity, they propose several metrics for addressing this
				problem. A first metric measures the complexity of XML
				documents by analyzing their DTD (Document Type Definition).
				However, this metric only takes into account the definition of
				the document and not the document itself. Therefore, they
				define a second metric, based on a weighted counting of the
				elements contained in the documents: the weight associated to
				an element is its depth inside the XML tree.  This second
				metric is found to be more representative of the complexity of
				the XML documents.
			</textual></para><para class="po-block e58 e58"><textual class="po-textual">Basci and Misra, in </textual><emphasis class="po-inline e59 e59" role="ital"><textual class="po-textual">Entropy Metric for
					XML DTD Documents</textual></emphasis><textual class="po-textual"> [</textual><xref class="po-milestone e60 e60" linkend="basci08"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">],
				have proposed a new metric for measuring the complexity of DTD
				based on an entropy-like computation. Compared to other
				metrics for DTD or XML Schemas, this metric takes into account
				the similarities in the different structures defined by a DTD.
			</textual></para><para class="po-block e61 e61"><textual class="po-textual">Of the several measures above, we retained the following
				three: the document size, its information density and its
				structure regularity. These measures were selected for
				representing several aspects of an XML document. No XML
				Schema-based metric was selected as some documents of the
				testing corpus did not have any associated XML Schema.
			</textual></para><section class="po-hcontainer e62 e62"><title class="po-block e63 e63"><textual class="po-textual">Size</textual></title><para class="po-block e64 e64"><textual class="po-textual">The size of the XML document is the size in bytes of its
					serialization (textual or binary). However, to have a
					coherent measurement for all XML documents in the testing
					corpus, we computed the size by serializing the parsed XML
					document. This enabled to remove some variations such as
					the presence or absence of the XML declaration, the
					presence or absence of DTD, the presence of superfluous
					white-spaces, and the use of DTD to include external
					content in the document. In the rest of this document, we
					will call this process ‘normalization’.
				</textual></para><para class="po-block e65 e65"><textual class="po-textual">The size of the XML documents in our testing corpus
					varies from 133 bytes to 62,750,078 bytes, with an average
					of 364,620 bytes and a standard deviation of 2,790,290
					bytes.
				</textual></para><para class="po-block e66 e66"><textual class="po-textual">To use the size as a criterion, three classes of
					document were considered. Small documents have a size
					smaller than or equal to 1,000 bytes. Medium documents
					have a size between 1,000 bytes and 10,000 bytes. Large
					documents have a size greater than 10,000 bytes.
				</textual></para></section><section class="po-hcontainer e67 e67"><title class="po-block e68 e68"><textual class="po-textual">Information density</textual></title><para class="po-block e69 e69"><textual class="po-textual">The second measurement used is information density:
					information density represents the part of content in the
					XML document relative to the part of structure in the XML
					document. The content size of an XML document is computed
					by summing the size of all character data (the “value” of
					elements) and attribute values present in the XML
					document, in bytes. The information density is computed as
					the ratio between the content size and the size, in bytes,
					of the XML document.
				</textual></para><para class="po-block e70 e70"><textual class="po-textual">A low information density means that the document
					contains mainly structural information, while a high value
					means that the document contains mainly actual contents
					(non-element and non-value definition contents).
				</textual></para><para class="po-block e71 e71"><textual class="po-textual">The information density of the XML documents in the
					testing corpus varies from 0 to 1, with an average of 0.39
					and a standard deviation of 0.23.
				</textual></para><para class="po-block e72 e72"><textual class="po-textual">While there is a variety of XML documents with low
					information density values in our corpus, XML documents
					with large information density values are mainly SVG
					(Scalable Vector Graphics), with some X3D (Extensible 3D)
					documents and scientific information documents.
				</textual></para><para class="po-block e73 e73"><textual class="po-textual">The limit between structure-rich XML documents and
					information-rich XML documents was chosen to be the value
					of 0.33 for the information density parameter. This means
					that a document is considered as structure-rich when the
					part of content in it is less than one third of the total
					document.
				</textual></para></section><section class="po-hcontainer e74 e74"><title class="po-block e75 e75"><textual class="po-textual">Structure regularity</textual></title><para class="po-block e76 e76"><textual class="po-textual">The third measurement represents the regularity of the
					structure of the XML document. We chose the following
					simple definition: the structure regularity is computed as
					one minus the ratio of the total number of distinct
					elements over the total number of elements in the XML
					document.
				</textual></para><para class="po-block e77 e77"><textual class="po-textual">High structure regularity means that the document is
					very regular, using only a few number of distinct
					elements, while low structure regularity means that the
					document is irregular, using many different elements.
				</textual></para><para class="po-block e78 e78"><textual class="po-textual">The structure regularity of the XML documents in our
					testing corpus varies from 0 to 1, with an average of 0.56
					and a standard deviation of 0.36.
				</textual></para><para class="po-block e79 e79"><textual class="po-textual">We chose 0.9 as the limit to separate regular from
					irregular XML documents. XML documents with a higher
					regularity are considered as regulars, while XML documents
					with a lower regularity are considered as irregulars.
				</textual></para><para class="po-block e80 e80"><textual class="po-textual">This limit means that for a regular XML document, each
					element, in average, is repeated at least 10 times. Ten
					times may be considered large, but is indeed small
					compared to typical large regular documents, which can
					contain hundreds or thousands of repetitions (</textual><emphasis class="po-inline e81 e81" role="ital"><textual class="po-textual">e.g.</textual></emphasis><textual class="po-textual">, an address book).
				</textual></para></section></section></section><section class="po-hcontainer e82 e82" xml:id="entropymeasurement"><title class="po-block e83 e83"><textual class="po-textual">Entropy measurement</textual></title><section class="po-hcontainer e84 e84"><title class="po-block e85 e85"><textual class="po-textual">Introduction</textual></title><para class="po-block e86 e86"><textual class="po-textual">The purpose of this study is to measure the quantity of
				information contained in XML documents in order to gain a
				better understanding of the possibilities of compacting them.
				Since the paper from Claude Shannon, </textual><emphasis class="po-inline e87 e87" role="ital"><textual class="po-textual">A
					Mathematical Theory of Communication</textual></emphasis><textual class="po-textual"> [</textual><xref class="po-milestone e88 e88" linkend="shannon48"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], the quantity of information
				contained in a document is evaluated with the </textual><emphasis class="po-inline e89 e89" role="ital"><textual class="po-textual">entropy</textual></emphasis><textual class="po-textual"> measure he defined. The
				entropy of a document represents the smallest encoded size
				that can be obtained by a lossless compression of the
				document. The document can be compressed to a size close to
				its entropy, but never smaller than its entropy.
			</textual></para><para class="po-block e90 e90"><textual class="po-textual">For a random variable </textual><emphasis class="po-inline e91 e91" role="ital"><textual class="po-textual">X</textual></emphasis><textual class="po-textual"> with </textual><emphasis class="po-inline e92 e92" role="ital"><textual class="po-textual">n</textual></emphasis><textual class="po-textual"> possible outcomes </textual><emphasis class="po-inline e93 e93" role="ital"><textual class="po-textual">x</textual><subscript class="po-atom e94 e94"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual">,
				</textual><emphasis class="po-inline e95 e95" role="ital"><textual class="po-textual">1 ≤ i ≤ n</textual></emphasis><textual class="po-textual">, Shannon
				defined the </textual><emphasis class="po-inline e96 e96" role="ital"><textual class="po-textual">entropy</textual></emphasis><textual class="po-textual"> measure
				as:
			</textual></para><para class="po-block e97 e97"><textual class="po-textual">
			    </textual><equation class="po-container e98 e98"><mathphrase class="po-block e99 e99"><textual class="po-textual">
						</textual><inlinemediaobject class="po-null e100 e100"><imageobject class="po-container e101 e101"><imagedata class="po-meta e102 e102" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-001.png" format="png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></inlinemediaobject><textual class="po-textual">
					</textual></mathphrase></equation><textual class="po-textual">
			</textual></para><para class="po-block e103 e103"><textual class="po-textual">In this definition, </textual><emphasis class="po-inline e104 e104" role="ital"><textual class="po-textual">p</textual></emphasis><textual class="po-textual"> is
				the probability mass function of </textual><emphasis class="po-inline e105 e105" role="ital"><textual class="po-textual">X</textual></emphasis><textual class="po-textual">. This means that </textual><emphasis class="po-inline e106 e106" role="ital"><textual class="po-textual">p(x</textual><subscript class="po-atom e107 e107"><textual class="po-textual">i</textual></subscript><textual class="po-textual">)</textual></emphasis><textual class="po-textual"> is the
				probability that the random variable </textual><emphasis class="po-inline e108 e108" role="ital"><textual class="po-textual">X</textual></emphasis><textual class="po-textual"> takes the value  </textual><emphasis class="po-inline e109 e109" role="ital"><textual class="po-textual">x</textual><subscript class="po-atom e110 e110"><textual class="po-textual">i</textual></subscript></emphasis><textual class="po-textual">.
			</textual></para><para class="po-block e111 e111"><textual class="po-textual">Shannon proved in his </textual><emphasis class="po-inline e112 e112" role="ital"><textual class="po-textual">source coding theorem</textual></emphasis><textual class="po-textual"> that this
				</textual><emphasis class="po-inline e113 e113" role="ital"><textual class="po-textual">entropy</textual></emphasis><textual class="po-textual"> measure is
				the minimum number of bits necessary to represent an
				outcome of the random variable.
			</textual></para><para class="po-block e114 e114"><textual class="po-textual">Taking for example a random variable with
				only one possible outcome, the entropy measure is </textual><emphasis class="po-inline e115 e115" role="ital"><textual class="po-textual">0</textual></emphasis><textual class="po-textual">. This means that there is no
				information conveyed by the value of this variable. Indeed,
				its outcome is always known in advance.
			</textual></para><para class="po-block e116 e116"><textual class="po-textual">As another example, when tossing a coin,
				there are two possible outcomes, heads and tails, with equal
				probabilities of </textual><emphasis class="po-inline e117 e117" role="ital"><textual class="po-textual">1/2</textual></emphasis><textual class="po-textual">. In this
				case, the entropy measure is </textual><emphasis class="po-inline e118 e118" role="ital"><textual class="po-textual">1</textual></emphasis><textual class="po-textual">. This means that the minimum
				number of bits necessary to represent the result of tossing a
				coin is 1 bit, which is achieved by a naïve coding using a
				Boolean value.
			</textual></para><para class="po-block e119 e119"><textual class="po-textual">To compute the entropy of a whole document,
				Shannon considered that a document is a sequence of
				statistically independent symbols corresponding to identically
				distributed random variables. The entropy of the document is
				computed as the sum of the entropies of the variables
				constituting it. This entropy is called the </textual><emphasis class="po-inline e120 e120" role="ital"><textual class="po-textual">first-order entropy</textual></emphasis><textual class="po-textual">.
			</textual></para><para class="po-block e121 e121"><textual class="po-textual">For a given document, the first-order entropy
				can be computed by extracting all the different symbols
				composing it, and then computing the probability of occurrence
				for each symbol. This enables to compute the entropy for the
				random variable corresponding to these symbols, using
				Shannon's definition, and from this the entropy of the whole
				document.
			</textual></para><para class="po-block e122 e122"><textual class="po-textual">
				However, in many documents, a symbol is not independent of the
				other symbols. To represent this, </textual><emphasis class="po-inline e123 e123" role="ital"><textual class="po-textual">n</textual><superscript class="po-atom e124 e124"><textual class="po-textual">th</textual></superscript><textual class="po-textual">-order</textual></emphasis><textual class="po-textual">
				entropy values can be computed. For the entropy of order
				</textual><emphasis class="po-inline e125 e125" role="ital"><textual class="po-textual">n</textual></emphasis><textual class="po-textual">, the random variable
				associated to a symbol is dependent on the </textual><emphasis class="po-inline e126 e126" role="ital"><textual class="po-textual">n-1</textual></emphasis><textual class="po-textual"> symbols preceding it.
			</textual></para><section class="po-hcontainer e127 e127"><title class="po-block e128 e128"><textual class="po-textual">Naïve evaluation</textual></title><para class="po-block e129 e129"><textual class="po-textual">A naïve evaluation of the quantity of information
					contained in an XML document is to use the </textual><emphasis class="po-inline e130 e130" role="ital"><textual class="po-textual">first-order</textual></emphasis><textual class="po-textual"> entropy of this
					document considered as a set of characters.
				</textual></para><para class="po-block e131 e131"><xref class="po-milestone e132 e132" linkend="fig01"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> displays this first-order
					entropy value, in the form of the cost in bytes of the
					whole document, and compares it to several values. The
					first comparison value is the size of the XML document.
					The two other comparison values are the size of the XML
					document compressed with gzip or bzip2.
				</textual></para><figure class="po-container e133 e133" xml:id="fig01"><title class="po-block e134 e134"><textual class="po-textual">XML Document Sizes</textual></title><mediaobject class="po-container e135 e135"><imageobject class="po-container e136 e136"><imagedata class="po-meta e137 e137" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-002.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e138 e138"><para class="po-block e139 e139"><textual class="po-textual">Comparison of four size-related measures for the
							documents from the testing corpus: the base
							document size, the compressed size using gzip, the
							compressed size using bzip2, and the first-order
							entropy cost.
						</textual></para></caption></figure><para class="po-block e140 e140"><textual class="po-textual">In addition, the results are sorted by increasing
					document size to enable a more meaningful comparison.
				</textual></para><para class="po-block e141 e141"><textual class="po-textual">The results show that for all documents, the first-order
					entropy, as expected, is lower than the document’s size.
					However, in most cases, the compressed size (both with
					gzip and bzip2) is lower than this first-order entropy.
					These apparently surprising results are due to the fact
					that the hypothesis of independence between the symbols
					used to compute the first-order entropy does not hold.
					This entropy value does not represent accurately the
					quantity of information contained in an XML document.
				</textual></para><para class="po-block e142 e142"><textual class="po-textual">For example, for someone quite knowledgeable of the XML
					specification, the name of an element contained in a
					closing-tag carries no informative value.
				</textual></para><para class="po-block e143 e143"><textual class="po-textual">For it to become be useful, the quantity of information
					contained in an XML document must be evaluated by also
					taking into account the structure of this document. This
					evaluation is presented in the remaining of this section.
					It was realized by splitting the different sources of
					information comprised in an XML document, and evaluating
					the quantity of information for each source using its
					first-order entropy measure. 
				</textual></para></section><section class="po-hcontainer e144 e144"><title class="po-block e145 e145"><textual class="po-textual">XML structure</textual></title><para class="po-block e146 e146"><textual class="po-textual">An XML document is a tree-like structure mostly composed
					of elements, attributes (definition and values) and
					textual data. For the purpose of this study, it is useful
					to represent an XML document as a sequence of events, in a
					manner similar to </textual><xref class="po-milestone e147 e147" linkend="sax"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (Simple API for
					XML) or </textual><xref class="po-milestone e148 e148" linkend="stax"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> (Streaming API for XML).
				</textual></para><para class="po-block e149 e149"><textual class="po-textual">In such a representation, an XML document is represented
					by a list of events, each event being described by its
					type and content.  For example, the start-tag of an
					element is described by an event of type start-element,
					whose value is the name of the element.  </textual><xref class="po-milestone e150 e150" linkend="tab01"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> lists all the types of events used
					to represent an XML document, and succinctly describes
					each of them.
				</textual></para><table class="po-container e151 e151" xml:id="tab01"><caption class="po-container e152 e152"><para class="po-block e153 e153"><textual class="po-textual">Description of the different events used to
							represent an XML document. Each event is descried
							by its event type and its content.
						</textual></para></caption><col align="right" class="po-meta e154 e154" span="1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></col><col align="right" class="po-meta e155 e155" span="1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></col><col align="right" class="po-meta e156 e156" span="1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></col><thead class="po-container e157 e157"><tr class="po-table e158 e158"><th class="po-field e159 e159"><textual class="po-textual">Event</textual></th><th class="po-field e160 e160"><textual class="po-textual">Event type</textual></th><th class="po-field e161 e161"><textual class="po-textual">Content</textual></th></tr></thead><tbody class="po-table e162 e162"><tr class="po-table e163 e163"><td class="po-block e164 e164"><textual class="po-textual">Start-tag</textual></td><td class="po-block e165 e165"><textual class="po-textual">SE</textual></td><td class="po-block e166 e166"><textual class="po-textual">name</textual></td></tr><tr class="po-table e167 e167"><td class="po-block e168 e168"><textual class="po-textual">End-tag</textual></td><td class="po-block e169 e169"><textual class="po-textual">EE</textual></td><td class="po-block e170 e170"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></td></tr><tr class="po-table e171 e171"><td class="po-block e172 e172"><textual class="po-textual">Namespace definition</textual></td><td class="po-block e173 e173"><textual class="po-textual">NS</textual></td><td class="po-block e174 e174"><textual class="po-textual">URI, prefix</textual></td></tr><tr class="po-table e175 e175"><td class="po-block e176 e176"><textual class="po-textual">Attribute</textual></td><td class="po-block e177 e177"><textual class="po-textual">AT</textual></td><td class="po-block e178 e178"><textual class="po-textual">name, value</textual></td></tr><tr class="po-table e179 e179"><td class="po-block e180 e180"><textual class="po-textual">Character data</textual></td><td class="po-block e181 e181"><textual class="po-textual">CH</textual></td><td class="po-block e182 e182"><textual class="po-textual">value</textual></td></tr><tr class="po-table e183 e183"><td class="po-block e184 e184"><textual class="po-textual">Comment</textual></td><td class="po-block e185 e185"><textual class="po-textual">CO</textual></td><td class="po-block e186 e186"><textual class="po-textual">value</textual></td></tr><tr class="po-table e187 e187"><td class="po-block e188 e188"><textual class="po-textual">Processing instruction</textual></td><td class="po-block e189 e189"><textual class="po-textual">PI</textual></td><td class="po-block e190 e190"><textual class="po-textual">target, data</textual></td></tr></tbody></table></section><section class="po-hcontainer e191 e191"><title class="po-block e192 e192"><textual class="po-textual">Structure-based evaluation</textual></title><para class="po-block e193 e193"><textual class="po-textual">Using the event representation of an XML document, a
					fine-grained evaluation of the entropy of XML documents
					can be computed. It is a general principle to split a
					piece of data to be compressed, such as a picture, a
					movie, or a textual document, into several independent
					sources of information. Each source of information can
					then be compressed more efficiently. Similarly, an XML
					document is split into several sources of information.
					First, a list of event types describes the type of each
					event contained in the representation of the XML document.
					Then several other sources of information are used to
					describe the content of these events: the list of element
					names, the list of attributes, the list of character
					contents, the list of comments and the list of processing
					instructions. The list of attributes is further divided
					into a list of attribute names and a list of attribute
					values, or considered as a whole.
				</textual></para><para class="po-block e194 e194"><textual class="po-textual">The rest of this section contains the evaluation of each
					of these sources of information using several
					representations. Indeed, each source of information can be
					structured or further divided with several methods. For
					each source of information, the main methods used by
					binary XML encodings and variations thereof have been
					studied.
				</textual></para><para class="po-block e195 e195"><textual class="po-textual">The documents of the testing corpus contain only few
					occurrences of comments or processing instructions.
					Therefore, the results obtained for those pieces of
					information were not deemed significant and are not
					presented here.
				</textual></para></section><section class="po-hcontainer e196 e196"><title class="po-block e197 e197"><textual class="po-textual">Example XML Document</textual></title><para class="po-block e198 e198"><textual class="po-textual">
					For a better understanding of the different types of
					representations described afterwards, the following XML
					document will be used as an example.
					</textual><programlisting class="po-block e199 e199" xml:space="preserve"><textual class="po-textual">&lt;article xmlns="http://docbook.org/ns/docbook"&gt;
	&lt;section&gt;
		&lt;title&gt;Introduction&lt;/title&gt;
		&lt;para&gt;XML...&lt;/para&gt;
	&lt;/section&gt;
	&lt;section&gt;
		&lt;title&gt;Testing Corpus&lt;/title&gt;
		&lt;section&gt;
			&lt;title&gt;XML document sources&lt;/title&gt;
			&lt;para&gt;To provide...&lt;/para&gt;
		&lt;/section&gt;
	&lt;/section&gt;
&lt;/article&gt;</textual></programlisting><textual class="po-textual">
				</textual></para></section></section><section class="po-hcontainer e200 e200"><title class="po-block e201 e201"><textual class="po-textual">Event type</textual></title><section class="po-hcontainer e202 e202"><title class="po-block e203 e203"><textual class="po-textual">Introduction</textual></title><para class="po-block e204 e204"><textual class="po-textual">Event types form the backbone of the XML document
					representation: by describing the type of each event, they
					describe the base structure of the XML document, and point
					at the source of information to use for completing this
					structure for each event.
				</textual></para><para class="po-block e205 e205"><textual class="po-textual">The set of events used here is close to those used in
					</textual><xref class="po-milestone e206 e206" linkend="sax"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> or </textual><xref class="po-milestone e207 e207" linkend="stax"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">. Compared
					to those APIs, we kept only the main events, removed
					events related to the document’s start and end (which, in
					themselves, provide no meaningful information), and events
					related to DTD and entities. In addition, we chose to be
					closer to the StAX model by separating attributes from
					their owning element.
				</textual></para></section><section class="po-hcontainer e208 e208"><title class="po-block e209 e209"><textual class="po-textual">Representations</textual></title><para class="po-block e210 e210"><textual class="po-textual">Two different methods for representing the list of event
					types have been studied from the entropy point of view. It
					should be noted that the set of all possible event types
					is defined by the XML specification. Therefore, event
					types can be represented by tokens defined beforehand and
					no indexing mechanism is needed for them.
				</textual></para><para class="po-block e211 e211"><textual class="po-textual">First, the list of event types can be considered as a
					sequential list (</textual><emphasis class="po-inline e212 e212" role="ital"><textual class="po-textual">list</textual></emphasis><textual class="po-textual">
					representation). This is a representation used by most
					binary XML technologies.
				</textual></para><para class="po-block e213 e213"><textual class="po-textual">
					Using this representation, for the example document, the
					event types to be encoded are represented by the following
					list. In this list, </textual><code class="po-atom e214 e214"><textual class="po-textual">//</textual></code><textual class="po-textual"> is used for delimiting
					comments.
					</textual><programlisting class="po-block e215 e215" xml:space="preserve"><textual class="po-textual">SE // article
SE // section
SE // title
CH
EE // title
SE // para
CH
EE // para
EE // section
SE // section
SE // title
CH
EE // title
SE // section
SE // title
CH
EE // title
SE // para
CH
EE // para
EE // section
EE // section
EE // article</textual></programlisting><textual class="po-textual">
				</textual></para><para class="po-block e216 e216"><textual class="po-textual">Second, the list of event types can be partitioned
					according to the name of their containing element
					(</textual><emphasis class="po-inline e217 e217" role="ital"><textual class="po-textual">part</textual></emphasis><textual class="po-textual"> representation).
					That means that the list of event types is split into
					sub-lists corresponding to the content of each element.
					Then, those sub-lists are grouped according to their
					element names. Such a representation further splits the
					list of event types into several sources of information.
					There is no cost associated to this separation, as for
					each event type its containing element can be
					reconstructed from the list of event types and of element
					names: it is the latest element for which a “Start-tag”
					event was encountered without a matching “End-tag” event.
					Such a representation is used by the EXI format.
				</textual></para><para class="po-block e218 e218"><textual class="po-textual">
					In this representation, the same event types are to be
					coded, but they are spread over five different partitions,
					depending on their enclosing element:
					</textual><code class="po-atom e219 e219"><textual class="po-textual">document</textual></code><textual class="po-textual">, </textual><code class="po-atom e220 e220"><textual class="po-textual">article</textual></code><textual class="po-textual">,
					</textual><code class="po-atom e221 e221"><textual class="po-textual">section</textual></code><textual class="po-textual">, </textual><code class="po-atom e222 e222"><textual class="po-textual">title</textual></code><textual class="po-textual">, and
					</textual><code class="po-atom e223 e223"><textual class="po-textual">para</textual></code><textual class="po-textual">. The </textual><code class="po-atom e224 e224"><textual class="po-textual">document</textual></code><textual class="po-textual"> partition is
					used for the root element. In the following description,
					the partition for each event is given in curly brackets.
					There is no need to encode this partition, as the current
					element can be retrieved from what was previously parsed.
					</textual><programlisting class="po-block e225 e225" xml:space="preserve"><textual class="po-textual">{document} SE // article
{article}  SE // section
{section}  SE // title
{title}    CH
{title}    EE // title
{section}  SE // para
{para}     CH
{para}     EE // para
{section}  EE // section
{article}  SE // section
{section}  SE // title
{title}    CH
{title}    EE // title
{section}  SE // section
{section}  SE // title
{title}    CH
{title}    EE // title
{section}  SE // para
{para}     CH
{para}     EE // para
{section}  EE // section
{section}  EE // section
{article}  EE // article</textual></programlisting><textual class="po-textual">
				</textual></para></section><section class="po-hcontainer e226 e226"><title class="po-block e227 e227"><textual class="po-textual">Results</textual></title><para class="po-block e228 e228"><textual class="po-textual">For each document, the entropy associated to encoding
					event types was computed using as unit the number of bytes
					to represent an event type.
				</textual></para><para class="po-block e229 e229"><textual class="po-textual">As there are 7 different types of events (see </textual><xref class="po-milestone e230 e230" linkend="tab01"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">), the entropy for representing them
					as a list corresponding to a uniform distribution can be
					computed by the formula:
				</textual></para><para class="po-block e231 e231"><textual class="po-textual">
					</textual><equation class="po-container e232 e232"><mathphrase class="po-block e233 e233"><textual class="po-textual">
							log</textual><subscript class="po-atom e234 e234"><textual class="po-textual">2</textual></subscript><textual class="po-textual">(7) / 8 = 0.35
						</textual></mathphrase></equation><textual class="po-textual">
				</textual></para><para class="po-block e235 e235"><xref class="po-milestone e236 e236" linkend="fig02"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> represents the repartition of
					the entropy values for both the list representation and
					the partitioned representation.
				</textual></para><figure class="po-container e237 e237" xml:id="fig02"><title class="po-block e238 e238"><textual class="po-textual">Event Type Histogram</textual></title><mediaobject class="po-container e239 e239"><imageobject class="po-container e240 e240"><imagedata class="po-meta e241 e241" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-003.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e242 e242"><para class="po-block e243 e243"><textual class="po-textual">Distribution of the entropy for event types,
							computed in byte per event type, for the list
							representation and the partitioned representation.
						</textual></para></caption></figure><para class="po-block e244 e244"><textual class="po-textual">For the list representation, the average entropy is 0.23
					byte per event, with a standard deviation of 0.03. For the
					partitioned representation, the average entropy is 0.12
					byte per event, with a standard deviation of 0.03.
				</textual></para><para class="po-block e245 e245"><textual class="po-textual">It can be noted that the partitioned representation has
					lower entropy values than the list representation, which
					is what we expected.
				</textual></para><para class="po-block e246 e246"><xref class="po-milestone e247 e247" linkend="fig03"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the ratio between the
					entropy for the partitioned representation and for the
					list representation for the different categories of XML
					documents. On average, this ratio is 0.50, with a standard
					deviation of 0.10. The differences amongst the categories
					of documents remain small. The only exception is for the
					small document category for which the ratio is greater
					than for the other representations. This comes from the
					fact that small documents contain only a limited number of
					elements and therefore provide fewer opportunities for
					partitioning to be efficient.
				</textual></para><figure class="po-container e248 e248" xml:id="fig03"><title class="po-block e249 e249"><textual class="po-textual">Event Type Entropy Ratio</textual></title><mediaobject class="po-container e250 e250"><imageobject class="po-container e251 e251"><imagedata class="po-meta e252 e252" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-004.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e253 e253"><para class="po-block e254 e254"><textual class="po-textual">Ratio of the event type entropy between the
							partitioned representation and the list
							representation for the different categories of
							documents.
						</textual></para></caption></figure><para class="po-block e255 e255"><textual class="po-textual">As a conclusion, the partitioned representation has
					much lower entropy than the basic list representation,
					with an average entropy cost of half the average entropy
					cost of the list representation.
				</textual></para></section></section><section class="po-hcontainer e256 e256"><title class="po-block e257 e257"><textual class="po-textual">Element names</textual></title><section class="po-hcontainer e258 e258"><title class="po-block e259 e259"><textual class="po-textual">Introduction</textual></title><para class="po-block e260 e260"><textual class="po-textual">Start element events are described by their type and the
					name of the element. There is no name associated to the
					description of end element events, as this name can be
					determined by finding the corresponding start element
					event. Therefore, the name contained in the end-tag
					construct of the XML markup is redundant information.
				</textual></para><para class="po-block e261 e261"><textual class="po-textual">The useful information about an element’s name is the
					URI of its namespace and its local name. However, this
					information can be represented in several ways. Indeed, it
					was foreseen during the writing of the </textual><emphasis class="po-inline e262 e262" role="ital"><textual class="po-textual">Namespaces in XML 1.0</textual></emphasis><textual class="po-textual"> [</textual><xref class="po-milestone e263 e263" linkend="xmlns"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] specification that using the URI in
					each element’s name would be too verbose for XML
					documents. Therefore, a shortcut mechanism was designed
					from the start to represent an element’s name using a
					prefix associated to its namespace.
				</textual></para><para class="po-block e264 e264"><textual class="po-textual">While in XML the usage of the prefix is important for
					reducing the size of the XML document (and also for
					syntactic reasons), in many cases the prefix in itself has
					no other usage and can be discarded by binary XML formats.
					Therefore, this study ignores in most cases the cost
					associated to encoding prefixes. In any event, this cost
					is often very low compared to the rest of the XML
					document.
				</textual></para></section><section class="po-hcontainer e265 e265"><title class="po-block e266 e266"><textual class="po-textual">Representations</textual></title><para class="po-block e267 e267"><textual class="po-textual">Several representations can be used to encode element
					names.
				</textual></para><para class="po-block e268 e268"><textual class="po-textual">First, element names can be encoded as null-terminated
					strings. There are two options for specifying the
					namespace of the element: either using the URI of the
					namespace (</textual><emphasis class="po-inline e269 e269" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual">
					representation), or using a prefix (</textual><emphasis class="po-inline e270 e270" role="ital"><textual class="po-textual">lst-pr</textual></emphasis><textual class="po-textual"> representation)
					associated to this URI.
				</textual></para><para class="po-block e271 e271"><textual class="po-textual">Using the </textual><emphasis class="po-inline e272 e272" role="ital"><textual class="po-textual">lst-pr</textual></emphasis><textual class="po-textual"> representation, the
					element names of the example document would be represented
					as follows.
					</textual><programlisting class="po-block e273 e273" xml:space="preserve"><textual class="po-textual">// Prefix binding
=http://docbook.org/ns/docbook // Binds the default prefix
// Element names
:article
:section
:title
:para
:section
:title
:section
:title
:para</textual></programlisting><textual class="po-textual">
				</textual></para><para class="po-block e274 e274"><textual class="po-textual">A second possibility is to use indexes for the namespace
					and the local name. For evaluating the entropy cost, the
					cost of the definition of those indexes must be taken into
					account. An index definition can be represented by an
					ordered list of its values. For local names, the index can
					be either global (</textual><emphasis class="po-inline e275 e275" role="ital"><textual class="po-textual">idx</textual></emphasis><textual class="po-textual">
					representation), or it can be partitioned by namespace
					(</textual><emphasis class="po-inline e276 e276" role="ital"><textual class="po-textual">idx-part</textual></emphasis><textual class="po-textual">
					representation).
				</textual></para><para class="po-block e277 e277"><textual class="po-textual">
					For the example document, the </textual><emphasis class="po-inline e278 e278" role="ital"><textual class="po-textual">idx</textual></emphasis><textual class="po-textual"> representation would be the
					following.
					</textual><programlisting class="po-block e279 e279" xml:space="preserve"><textual class="po-textual">// Namespace list
http://docbook.org/ns/docbook
// Local name list
article
section
title
para
// Element names
1,1 // article
1,2 // section
1,3 // title
1,4 // para
1,2 // section
1,3 // title
1,2 // section
1,3 // title
1,4 // para</textual></programlisting><textual class="po-textual">
				</textual></para><para class="po-block e280 e280"><textual class="po-textual">
					The </textual><emphasis class="po-inline e281 e281" role="ital"><textual class="po-textual">idx-part</textual></emphasis><textual class="po-textual">
					representation would be very similar for the example
					document, as it uses only one namespace. In the general
					case, there is one </textual><code class="po-atom e282 e282"><textual class="po-textual">Local name list</textual></code><textual class="po-textual"> for each
					namespace. Here, there would be only one </textual><code class="po-atom e283 e283"><textual class="po-textual">Local name
						list</textual></code><textual class="po-textual"> for the
					</textual><code class="po-atom e284 e284"><textual class="po-textual">http://docbook.org/ns/docbook</textual></code><textual class="po-textual"> namespace.
				</textual></para><para class="po-block e285 e285"><textual class="po-textual">A third possibility is to use surrogates to represent
					the element names. A surrogate is an index representing a
					whole element name, that is both its namespace and its
					local name. A surrogate can be defined in several ways.
					The namespace corresponding to a surrogate is best
					specified using an index. The local name corresponding to
					a surrogate can be specified as a string (</textual><emphasis class="po-inline e286 e286" role="ital"><textual class="po-textual">sur-lst</textual></emphasis><textual class="po-textual"> representation), as an
					index (</textual><emphasis class="po-inline e287 e287" role="ital"><textual class="po-textual">sur-idx</textual></emphasis><textual class="po-textual">
					representation), or as an index partitioned by URI
					(</textual><emphasis class="po-inline e288 e288" role="ital"><textual class="po-textual">sur-idx-part</textual></emphasis><textual class="po-textual">
					representation).
				</textual></para><para class="po-block e289 e289"><textual class="po-textual">
					For example document, the </textual><emphasis class="po-inline e290 e290" role="ital"><textual class="po-textual">sur-idx</textual></emphasis><textual class="po-textual"> surrogate
					representation would be the following.
					</textual><programlisting class="po-block e291 e291" xml:space="preserve"><textual class="po-textual">// Namespace list
http://docbook.org/ns/docbook
// Surrogate list
1,article
1,section
1,title
1,para
// Element names
1 // article
2 // section
3 // title
4 // para
2 // section
3 // title
2 // section
3 // title
4 // para</textual></programlisting><textual class="po-textual">
				</textual></para><para class="po-block e292 e292"><textual class="po-textual">A last possibility is to partition the representation of
					element names according to their enclosing element. Inside
					a partition, an element name can be represented as a set
					of strings, using either a URI or a prefix for the
					namespace (</textual><emphasis class="po-inline e293 e293" role="ital"><textual class="po-textual">part-lst-URI</textual></emphasis><textual class="po-textual">
					and </textual><emphasis class="po-inline e294 e294" role="ital"><textual class="po-textual">part-lst-pr</textual></emphasis><textual class="po-textual">
					representations), as a set of indexes (</textual><emphasis class="po-inline e295 e295" role="ital"><textual class="po-textual">part-idx</textual></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e296 e296" role="ital"><textual class="po-textual">part-idx-part</textual></emphasis><textual class="po-textual"> representations),
					or as a surrogate, the surrogate being either defined
					locally for each partition (</textual><emphasis class="po-inline e297 e297" role="ital"><textual class="po-textual">part-sur-lst</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e298 e298" role="ital"><textual class="po-textual">part-sur-idx</textual></emphasis><textual class="po-textual">, and </textual><emphasis class="po-inline e299 e299" role="ital"><textual class="po-textual">part-sur-idx-part</textual></emphasis><textual class="po-textual">
					representations) or globally for all the partitions
					(</textual><emphasis class="po-inline e300 e300" role="ital"><textual class="po-textual">part-sur-glob-lst</textual></emphasis><textual class="po-textual">,
					</textual><emphasis class="po-inline e301 e301" role="ital"><textual class="po-textual">part-sur-glob-idx</textual></emphasis><textual class="po-textual">, and
					</textual><emphasis class="po-inline e302 e302" role="ital"><textual class="po-textual">part-sur-glob-idx-part</textual></emphasis><textual class="po-textual">
					representations).
				</textual></para><para class="po-block e303 e303"><textual class="po-textual">
					For the </textual><emphasis class="po-inline e304 e304" role="ital"><textual class="po-textual">part-idx</textual></emphasis><textual class="po-textual">
					representation, the element names of the example document
					would be encoded as follows. The partitions are given in
					curly brackets for clarity, but don't need to be encoded.
					</textual><programlisting class="po-block e305 e305" xml:space="preserve"><textual class="po-textual">// Namespace list
http://docbook.org/ns/docbook
// Element name lists
// Document partition
article
// article element partition
section
// section element partition
title
para
section
// Element names
{document} 1 // article
{article}  1 // section
{section}  1 // title
{section}  2 // para
{article}  1 // section
{section}  1 // title
{section}  3 // section
{section}  1 // title
{section}  2 // para</textual></programlisting><textual class="po-textual">
				</textual></para></section><section class="po-hcontainer e306 e306"><title class="po-block e307 e307"><textual class="po-textual">Results</textual></title><para class="po-block e308 e308"><textual class="po-textual">For each document, the entropy associated to encoding
					element names was computed using as unit the number of
					bytes needed to represent an element name.
				</textual></para><para class="po-block e309 e309"><xref class="po-milestone e310 e310" linkend="fig04"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows a summary of those results
					by displaying, for each representation, the average
					entropy associated to element names, and the standard
					deviation.
				</textual></para><figure class="po-container e311 e311" xml:id="fig04"><title class="po-block e312 e312"><textual class="po-textual">Element Name Summary</textual></title><mediaobject class="po-container e313 e313"><imageobject class="po-container e314 e314"><imagedata class="po-meta e315 e315" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-005.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e316 e316"><para class="po-block e317 e317"><textual class="po-textual">Average entropies, computed in bytes per name,
							of the different representations for element
							names. The </textual><emphasis class="po-inline e318 e318" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual"> and the
							</textual><emphasis class="po-inline e319 e319" role="ital"><textual class="po-textual">part-lst-URI</textual></emphasis><textual class="po-textual">
							columns have been willingly cut as their values
							are far above the other values.
						</textual></para></caption></figure><para class="po-block e320 e320"><textual class="po-textual">The first result is that representations using strings
					for representing the namespace’s URI have entropies much
					higher than all the other representations (the vertical
					scale of </textual><xref class="po-milestone e321 e321" linkend="fig04"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> was willingly chosen to
					cut those numbers in order to better show the differences
					between the other values). The </textual><emphasis class="po-inline e322 e322" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual"> representation has an
					average of 18.64 bytes per element name, with a standard
					deviation of 6.76, and the </textual><emphasis class="po-inline e323 e323" role="ital"><textual class="po-textual">part-lst-URI</textual></emphasis><textual class="po-textual"> representation has
					an average of 17.41 bytes per element name, with a
					standard deviation of 7.02.
				</textual></para><para class="po-block e324 e324"><xref class="po-milestone e325 e325" linkend="fig05"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e326 e326" linkend="fig06"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> show
					the distribution of entropy values for a selection of
					representations. Some features of these distributions can
					be linked to documents with specific characteristics.
				</textual></para><figure class="po-container e327 e327" xml:id="fig05"><title class="po-block e328 e328"><textual class="po-textual">Element Name Histogram - Lists</textual></title><mediaobject class="po-container e329 e329"><imageobject class="po-container e330 e330"><imagedata class="po-meta e331 e331" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-006.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e332 e332"><para class="po-block e333 e333"><textual class="po-textual">Distribution of entropies for selected
							representations of element names based on list of
							strings or on indexes. The </textual><emphasis class="po-inline e334 e334" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual"> histogram has
							been willingly cut.
						</textual></para></caption></figure><figure class="po-container e335 e335" xml:id="fig06"><title class="po-block e336 e336"><textual class="po-textual">Element Name Histogram - Surrogates</textual></title><mediaobject class="po-container e337 e337"><imageobject class="po-container e338 e338"><imagedata class="po-meta e339 e339" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-007.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e340 e340"><para class="po-block e341 e341"><textual class="po-textual">Distribution of entropies for selected
							representations of element names based on
							surrogates.
						</textual></para></caption></figure><para class="po-block e342 e342"><textual class="po-textual">The documents with high entropy (around 45 bytes per
					element name, not displayed on the histogram) for the
					URI-based representations correspond to medium-sized
					documents containing several different URIs (from 5 to 7).
				</textual></para><para class="po-block e343 e343"><textual class="po-textual">The few documents with high entropy (greater than 20
					bytes per element name) for the prefix-based
					representations correspond to documents with very long
					element names (40 or 50 characters).
				</textual></para><para class="po-block e344 e344"><textual class="po-textual">For all index-based representations, the documents with
					a high entropy value (around 25 bytes per element name)
					are documents containing only one element.
				</textual></para><para class="po-block e345 e345"><textual class="po-textual">On a more global level, </textual><xref class="po-milestone e346 e346" linkend="fig04"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> showed
					that prefix-based representations are much closer to
					index-based representations than to URI-based
					representations in terms of entropy values. However, </textual><xref class="po-milestone e347 e347" linkend="fig05"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows that the distributions of
					those entropy values are very different for prefix-based
					and index-based representations.  Whereas for prefix-based
					representations, the entropy values roughly follow a
					normal distribution, for index-based representations, the
					entropy values roughly follow a geometric distribution.
					Those differences are directly linked to the kind of
					representation used.
				</textual></para><para class="po-block e348 e348"><textual class="po-textual">Several conclusions can be drawn from the results
					obtained.  First, using local-name indexes partitioned
					according to the namespace decrease the entropy.
				</textual></para><para class="po-block e349 e349"><textual class="po-textual">Second, partitioning the representation according to the
					parent element also decrease the entropy.
				</textual></para><para class="po-block e350 e350"><textual class="po-textual">Third, while using surrogates, the best representation
					for a surrogate definition is to use an index for the URI,
					but a string for the local name. Indexing the URI is
					efficient, as a URI is reused for several surrogate
					definitions. But indexing a local name is usually not
					efficient, as a local name is often only used for one
					surrogate definition.
				</textual></para><para class="po-block e351 e351"><textual class="po-textual">In addition, the best surrogate-based representation
					usually has a slightly lower entropy value than the
					corresponding index-based representation. This is the case
					for </textual><emphasis class="po-inline e352 e352" role="ital"><textual class="po-textual">sur-lst</textual></emphasis><textual class="po-textual"> compared to
					</textual><emphasis class="po-inline e353 e353" role="ital"><textual class="po-textual">idx</textual></emphasis><textual class="po-textual"> and for </textual><emphasis class="po-inline e354 e354" role="ital"><textual class="po-textual">part-sur-lst</textual></emphasis><textual class="po-textual"> compared to
					</textual><emphasis class="po-inline e355 e355" role="ital"><textual class="po-textual">part-idx</textual></emphasis><textual class="po-textual">. This is however
					not the case for </textual><emphasis class="po-inline e356 e356" role="ital"><textual class="po-textual">part-sur-g-lst</textual></emphasis><textual class="po-textual"> compared to
					</textual><emphasis class="po-inline e357 e357" role="ital"><textual class="po-textual">part-idx</textual></emphasis><textual class="po-textual">.
				</textual></para><para class="po-block e358 e358"><textual class="po-textual">Lastly, for representations using surrogates partitioned
					according to the parent element, those using a global
					surrogate definition have higher entropy than those using
					a local surrogate definition.
				</textual></para><para class="po-block e359 e359"><xref class="po-milestone e360 e360" linkend="fig07"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> compares the entropies for some
					selected representations for the different categories of
					documents. The main result is that while the </textual><emphasis class="po-inline e361 e361" role="ital"><textual class="po-textual">lst-pr</textual></emphasis><textual class="po-textual"> representation has only
					small entropy variations across the different categories,
					the four other representations, all index-based
					representations, have much more important variations. But
					the relations between those four representations stay
					similar across all categories.
				</textual></para><figure class="po-container e362 e362" xml:id="fig07"><title class="po-block e363 e363"><textual class="po-textual">Element Name Categories</textual></title><mediaobject class="po-container e364 e364"><imageobject class="po-container e365 e365"><imagedata class="po-meta e366 e366" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-008.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e367 e367"><para class="po-block e368 e368"><textual class="po-textual">Comparison of average entropies depending on the
							category of documents for some selected
							representations of element names.
						</textual></para></caption></figure><para class="po-block e369 e369"><textual class="po-textual">This figure shows expected results: for index-based
					representation, the entropy is lower for larger documents.
					It is also lower for regular documents.
				</textual></para><para class="po-block e370 e370"><textual class="po-textual">The conclusion for element names is that the lowest
					entropy results are obtained by the combination of
					indexing, partitioning and surrogate usage. On average,
					the best combination is to use partitioned surrogates,
					where surrogate definitions use indexes for the URIs and
					strings for the local names. However, for some document
					categories, a simple listing of the prefix and local name
					has lower entropy values.
				</textual></para></section></section><section class="po-hcontainer e371 e371"><title class="po-block e372 e372"><textual class="po-textual">Attribute names</textual></title><section class="po-hcontainer e373 e373"><title class="po-block e374 e374"><textual class="po-textual">Introduction</textual></title><para class="po-block e375 e375"><textual class="po-textual">Attributes can be considered either as a whole, or by
					separating names and values. However, in most cases when
					an attribute is used several times in a document, it will
					have different values. Therefore, a join representation of
					element names and values is not an attractive option and
					we selected to study only independent representations. In
					this section, we consider the representations of attribute
					names. The representations of attribute values are studied
					in a later section.
				</textual></para></section><section class="po-hcontainer e376 e376"><title class="po-block e377 e377"><textual class="po-textual">Representations</textual></title><para class="po-block e378 e378"><textual class="po-textual">As attribute names and element names are very similar,
					the same representations were used for attribute names as
					for element names.
				</textual></para></section><section class="po-hcontainer e379 e379"><title class="po-block e380 e380"><textual class="po-textual">Results</textual></title><para class="po-block e381 e381"><textual class="po-textual">Similarly to element names, for each document, the
					entropy associated to attribute names was computed using
					as unit the number of bytes needed to represent an
					attribute name.
				</textual></para><para class="po-block e382 e382"><xref class="po-milestone e383 e383" linkend="fig08"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows a summary of those results
					by displaying, for each representation, the average
					entropy associated to attribute names and the standard
					deviation.
				</textual></para><figure class="po-container e384 e384" xml:id="fig08"><title class="po-block e385 e385"><textual class="po-textual">Attribute Name Summary</textual></title><mediaobject class="po-container e386 e386"><imageobject class="po-container e387 e387"><imagedata class="po-meta e388 e388" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-009.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e389 e389"><para class="po-block e390 e390"><textual class="po-textual">Average entropies, computed in bytes per name,
							of the different representations for attribute
							names.
						</textual></para></caption></figure><para class="po-block e391 e391"><textual class="po-textual">A first result is that the representations for attribute
					names have lower entropies than the corresponding
					representations for element names. This is due to the fact
					that in many cases, attribute names have no namespace.
					This is especially true for URI-based representations.
				</textual></para><para class="po-block e392 e392"><textual class="po-textual">However, for most representations, the standard
					deviation is higher than for element names. This comes
					from the fact that in a few cases the attribute names have
					a namespace, and therefore higher entropy cost.
				</textual></para><para class="po-block e393 e393"><xref class="po-milestone e394 e394" linkend="fig09"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e395 e395" linkend="fig10"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> show
					the distributions of entropy values for a selection of
					representations.
				</textual></para><figure class="po-container e396 e396" xml:id="fig09"><title class="po-block e397 e397"><textual class="po-textual">Attribute Name Histogram - Lists</textual></title><mediaobject class="po-container e398 e398"><imageobject class="po-container e399 e399"><imagedata class="po-meta e400 e400" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-010.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e401 e401"><para class="po-block e402 e402"><textual class="po-textual">Distribution of entropies for selected
							representations of attribute names based on list
							of strings or on indexes. The </textual><emphasis class="po-inline e403 e403" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual"> histogram has
							been willingly cut.
						</textual></para></caption></figure><figure class="po-container e404 e404" xml:id="fig10"><title class="po-block e405 e405"><textual class="po-textual">Attribute Name Histogram - Surrogates</textual></title><mediaobject class="po-container e406 e406"><imageobject class="po-container e407 e407"><imagedata class="po-meta e408 e408" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-011.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e409 e409"><para class="po-block e410 e410"><textual class="po-textual">Distribution of entropies for selected
							representations of attribute names based on
							surrogates.
						</textual></para></caption></figure><para class="po-block e411 e411"><textual class="po-textual">For most representations, the distribution of entropy
					values contains a group of documents with entropy values
					higher than the main group of documents. This group
					contains the documents containing attributes with a
					defined namespace.
				</textual></para><para class="po-block e412 e412"><textual class="po-textual">Apart from this point, the results are quite similar to
					those obtained for the representations of element names.
					The last difference is that using a surrogate increases
					the entropy. This is also due to the fact that many
					attributes have no specific namespace.
				</textual></para><para class="po-block e413 e413"><xref class="po-milestone e414 e414" linkend="fig11"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> compares the entropies for some
					selected representations for the different categories of
					documents. The results are similar to those obtained for
					element names apart for the differences already noted.
				</textual></para><figure class="po-container e415 e415" xml:id="fig11"><title class="po-block e416 e416"><textual class="po-textual">Attribute Name Categories</textual></title><mediaobject class="po-container e417 e417"><imageobject class="po-container e418 e418"><imagedata class="po-meta e419 e419" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-012.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e420 e420"><para class="po-block e421 e421"><textual class="po-textual">Comparison of average entropies depending on the
							category of documents for some selected
							representations of attribute names.
						</textual></para></caption></figure><para class="po-block e422 e422"><textual class="po-textual">As a conclusion, for attribute names, the lowest entropy
					values are obtained by combining indexing and
					partitioning. Here, surrogate usage does not decrease the
					entropy values. On average, the best combination is to use
					partitioned indexing, with local names indexes being
					partitioned according to their URI. However, as for
					element names, for some document categories, a simple
					listing of the prefix and local name has a lower entropy
					value.
				</textual></para></section></section><section class="po-hcontainer e423 e423"><title class="po-block e424 e424"><textual class="po-textual">Element and attribute names</textual></title><section class="po-hcontainer e425 e425"><title class="po-block e426 e426"><textual class="po-textual">Introduction</textual></title><para class="po-block e427 e427"><textual class="po-textual">While the two previous sections considered element and
					attribute names separately, they can also be considered
					jointly.  In particular, element and attribute names may
					share the same namespace, even if many attributes have no
					namespace value.
				</textual></para></section><section class="po-hcontainer e428 e428"><title class="po-block e429 e429"><textual class="po-textual">Representations</textual></title><para class="po-block e430 e430"><textual class="po-textual">Several representations can be used to encode jointly
					element and attribute names. Those representations are
					similar to those used for element names or attribute
					names, but can vary in the degree of separation used
					between element names and attribute names.
				</textual></para><para class="po-block e431 e431"><textual class="po-textual">First, the names can be encoded as null-terminated
					strings, specifying the namespace either through its URI
					(</textual><emphasis class="po-inline e432 e432" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual"> representation)
					or through its prefix (</textual><emphasis class="po-inline e433 e433" role="ital"><textual class="po-textual">lst-pr</textual></emphasis><textual class="po-textual"> representation).
				</textual></para><para class="po-block e434 e434"><textual class="po-textual">A second possibility is to use indexes for the
					namespaces and the local names. When using an index, two
					components can be shared: the definition of the indexes
					from the string values, and the list of items, expressed
					as index values. Element names and attribute names can be
					indexed jointly, sharing both the index definitions and
					the listing of indexed values (</textual><emphasis class="po-inline e435 e435" role="ital"><textual class="po-textual">idx-j</textual></emphasis><textual class="po-textual"> representation). They can
					share a common index for namespaces and local names, but
					with separated lists of indexes (</textual><emphasis class="po-inline e436 e436" role="ital"><textual class="po-textual">idx-cc</textual></emphasis><textual class="po-textual"> representation). Last,
					they can have a common index for namespaces with separated
					lists of indexes, and separated indexes and lists for
					local-names (</textual><emphasis class="po-inline e437 e437" role="ital"><textual class="po-textual">idx-cs</textual></emphasis><textual class="po-textual">
					representation). As an option, the indexing of local names
					can be partitioned according to their namespace (</textual><emphasis class="po-inline e438 e438" role="ital"><textual class="po-textual">idx-j-part</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e439 e439" role="ital"><textual class="po-textual">idx-cc-part</textual></emphasis><textual class="po-textual">, and </textual><emphasis class="po-inline e440 e440" role="ital"><textual class="po-textual">idx-cs-part</textual></emphasis><textual class="po-textual"> representations).
				</textual></para><para class="po-block e441 e441"><textual class="po-textual">
					For the </textual><emphasis class="po-inline e442 e442" role="ital"><textual class="po-textual">idx-j</textual></emphasis><textual class="po-textual">
					representation, the structure of the representation would
					be the following.
					</textual><programlisting class="po-block e443 e443" xml:space="preserve"><textual class="po-textual">// Namespace list
...
// Local name list
...
// Element and attribute names
...</textual></programlisting><textual class="po-textual">
					For the </textual><emphasis class="po-inline e444 e444" role="ital"><textual class="po-textual">idx-cc</textual></emphasis><textual class="po-textual">
					representation, the structure would be as follows.
					</textual><programlisting class="po-block e445 e445" xml:space="preserve"><textual class="po-textual">// Namespace list
...
// Local name list
...
// Element names
...
// Attribute names
...</textual></programlisting><textual class="po-textual">
					For the </textual><emphasis class="po-inline e446 e446" role="ital"><textual class="po-textual">idx-cs</textual></emphasis><textual class="po-textual">
					representation, it would be the following.
					</textual><programlisting class="po-block e447 e447" xml:space="preserve"><textual class="po-textual">// Namespace list
...
// Element local name list
...
// Attribute local name list
...
// Element names
...
// Attribute names
...</textual></programlisting><textual class="po-textual">
				</textual></para><para class="po-block e448 e448"><textual class="po-textual">A third possibility is to use a partitioned
					representation according to the enclosing element. All the
					possibilities of the previous index-based representations
					were reused with partitioned representations (</textual><emphasis class="po-inline e449 e449" role="ital"><textual class="po-textual">part-idx-j</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e450 e450" role="ital"><textual class="po-textual">part-idx-cc</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e451 e451" role="ital"><textual class="po-textual">part-idx-cs</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e452 e452" role="ital"><textual class="po-textual">part-idx-j-part</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e453 e453" role="ital"><textual class="po-textual">part-idx-cc-part</textual></emphasis><textual class="po-textual">, and </textual><emphasis class="po-inline e454 e454" role="ital"><textual class="po-textual">part-idx-cs-part</textual></emphasis><textual class="po-textual">
					representations).
				</textual></para><para class="po-block e455 e455"><textual class="po-textual">The possibility of using surrogates was not studied
					here, as the previous results showed that they were very
					close to the simple index-based representations.
				</textual></para></section><section class="po-hcontainer e456 e456"><title class="po-block e457 e457"><textual class="po-textual">Results</textual></title><para class="po-block e458 e458"><textual class="po-textual">As for the analysis of separate representations of
					element and attribute names, the entropy associated to
					combined representations of element and attribute names
					was computed using as unit the number of bytes needed to
					represent one of those names.
				</textual></para><para class="po-block e459 e459"><textual class="po-textual">In addition to all the representations combining element
					and attribute names, some representations separating
					element and attribute names were included for comparison
					purpose. Those references are using string representations
					(</textual><emphasis class="po-inline e460 e460" role="ital"><textual class="po-textual">lst-URI-ref</textual></emphasis><textual class="po-textual"> and
					</textual><emphasis class="po-inline e461 e461" role="ital"><textual class="po-textual">lst-pr-ref</textual></emphasis><textual class="po-textual">
					representation), index-based representations (</textual><emphasis class="po-inline e462 e462" role="ital"><textual class="po-textual">idx-ref</textual></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e463 e463" role="ital"><textual class="po-textual">idx-ref-part</textual></emphasis><textual class="po-textual"> representations),
					and partitioned representations (</textual><emphasis class="po-inline e464 e464" role="ital"><textual class="po-textual">part-idx-ref</textual></emphasis><textual class="po-textual"> and </textual><emphasis class="po-inline e465 e465" role="ital"><textual class="po-textual">part-idx-ref-part</textual></emphasis><textual class="po-textual">
					representations). The entropy values for those reference
					representations were computed by combining the values of
					the corresponding independent representations.
				</textual></para><para class="po-block e466 e466"><xref class="po-milestone e467 e467" linkend="fig12"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows a summary of those
					results, displaying the average entropy and the standard
					deviation for each representation.  As for element names,
					the chosen scale has been willingly selected to cut the
					values of the string-based representations using URIs as
					they were far greater than the other values. For </textual><emphasis class="po-inline e468 e468" role="ital"><textual class="po-textual">lst-URI-ref</textual></emphasis><textual class="po-textual"> representation, the
					average entropy is of 15.00 bytes per name, with a
					standard deviation of 7.41, while for the </textual><emphasis class="po-inline e469 e469" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual"> representation, the
					average entropy is of 15.40 bytes per name, with a
					standard deviation of 7.41.
				</textual></para><figure class="po-container e470 e470" xml:id="fig12"><title class="po-block e471 e471"><textual class="po-textual">Name Summary</textual></title><mediaobject class="po-container e472 e472"><imageobject class="po-container e473 e473"><imagedata class="po-meta e474 e474" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-013.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e475 e475"><para class="po-block e476 e476"><textual class="po-textual">Average entropies, computed in bytes per name,
							of the different representations for element and
							attribute names. The </textual><emphasis class="po-inline e477 e477" role="ital"><textual class="po-textual">lst-URI-ref</textual></emphasis><textual class="po-textual"> and the
							</textual><emphasis class="po-inline e478 e478" role="ital"><textual class="po-textual">lst-URI</textual></emphasis><textual class="po-textual"> columns
							have been willingly cut as their values are far
							above the other values.
						</textual></para></caption></figure><para class="po-block e479 e479"><textual class="po-textual">The main result is that while a join representation
					increases the entropy for string-based representations, it
					decreases the entropy for index-based representations.
				</textual></para><para class="po-block e480 e480"><xref class="po-milestone e481 e481" linkend="fig13"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e482 e482" linkend="fig14"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> show
					the distributions of entropy values for selected
					string-based and simple index-based representations.
				</textual></para><figure class="po-container e483 e483" xml:id="fig13"><title class="po-block e484 e484"><textual class="po-textual">Name Histogram - List</textual></title><mediaobject class="po-container e485 e485"><imageobject class="po-container e486 e486"><imagedata class="po-meta e487 e487" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-014.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e488 e488"><para class="po-block e489 e489"><textual class="po-textual">Distribution of entropies for selected
							representations of element and attribute names
							based on list of strings.
						</textual></para></caption></figure><figure class="po-container e490 e490" xml:id="fig14"><title class="po-block e491 e491"><textual class="po-textual">Name Histogram - Index</textual></title><mediaobject class="po-container e492 e492"><imageobject class="po-container e493 e493"><imagedata class="po-meta e494 e494" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-015.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e495 e495"><para class="po-block e496 e496"><textual class="po-textual">Distribution of entropies for selected
							representations of element and attribute names
							based on indexes.
						</textual></para></caption></figure><para class="po-block e497 e497"><textual class="po-textual">The main result is that for simple index-based
					representations, the lowest entropy values are obtained
					for the </textual><emphasis class="po-inline e498 e498" role="ital"><textual class="po-textual">idx-cs</textual></emphasis><textual class="po-textual">
					representation. This corresponds to the fact that element
					and attribute names generally share the same set of URIs,
					but with different usages, while they have different sets
					of local names.
				</textual></para><para class="po-block e499 e499"><textual class="po-textual">This result mostly holds for more complex index-based
					representation. The exception is for representations
					partitioned according to the containing element and with
					local name indexes partitioned by namespace. For these
					representations, the lowest entropy values are obtained
					for the </textual><emphasis class="po-inline e500 e500" role="ital"><textual class="po-textual">part-idx-j-part</textual></emphasis><textual class="po-textual">
					representation.
				</textual></para><para class="po-block e501 e501"><xref class="po-milestone e502 e502" linkend="fig15"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> compares the entropies for some
					selected representations for the different categories of
					documents. The main results from this figure is that the
					relationships found between the index-based
					representations are maintained for all categories, and
					that the relationships found previously between
					string-based and index-based representations depending on
					the category of documents are also maintained.
				</textual></para><figure class="po-container e503 e503" xml:id="fig15"><title class="po-block e504 e504"><textual class="po-textual">Name Categories</textual></title><mediaobject class="po-container e505 e505"><imageobject class="po-container e506 e506"><imagedata class="po-meta e507 e507" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-016.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e508 e508"><para class="po-block e509 e509"><textual class="po-textual">Comparison of average entropies depending on the
							categories of documents for some selected
							representations of element and attribute names.
						</textual></para></caption></figure><para class="po-block e510 e510"><textual class="po-textual">The conclusion that can be drawn from these results is
					that for index-based representations, the lowest entropy
					is obtained by a partial joining of the representations of
					element names and attribute names.
				</textual></para></section></section><section class="po-hcontainer e511 e511"><title class="po-block e512 e512"><textual class="po-textual">Namespace declarations</textual></title><section class="po-hcontainer e513 e513"><title class="po-block e514 e514"><textual class="po-textual">Introduction</textual></title><para class="po-block e515 e515"><textual class="po-textual">Namespace declarations are used to associate a prefix to
					a URI representing a namespace. As previously stated in
					the section for element names, in many cases the prefixes
					can be discarded by binary XML formats. However, in some
					cases, prefixes are used in attribute values for
					specifying a qualified name (for example, in XML Schema to
					associate a type to an element or to an attribute).  In
					such cases, the namespace declarations must be preserved.
				</textual></para><para class="po-block e516 e516"><textual class="po-textual">A namespace declaration is constituted of two
					components: the URI of the namespace and the prefix
					associated to it.
				</textual></para></section><section class="po-hcontainer e517 e517"><title class="po-block e518 e518"><textual class="po-textual">Representations</textual></title><para class="po-block e519 e519"><textual class="po-textual">Several representations can be used to encode a
					namespace declaration.
				</textual></para><para class="po-block e520 e520"><textual class="po-textual">First, both the URI and the prefix can be encoded as
					null-terminated strings (</textual><emphasis class="po-inline e521 e521" role="ital"><textual class="po-textual">lst</textual></emphasis><textual class="po-textual"> representation).
				</textual></para><para class="po-block e522 e522"><textual class="po-textual">A second possibility is to use indexes. As URI are long
					and can be used in several declarations, while prefix tend
					to be short and not reused, a first option is to index the
					URIs and simply list the prefixes (</textual><emphasis class="po-inline e523 e523" role="ital"><textual class="po-textual">idx-lst</textual></emphasis><textual class="po-textual"> representation). A
					second option is to index both the URIs and the prefixes
					(</textual><emphasis class="po-inline e524 e524" role="ital"><textual class="po-textual">idx</textual></emphasis><textual class="po-textual"> representation).
				</textual></para><para class="po-block e525 e525"><textual class="po-textual">A third possibility is to partition the prefix
					definition according to their URIs. The URIs are indexed,
					and in each partition, the prefixes can either be
					represented with a string (</textual><emphasis class="po-inline e526 e526" role="ital"><textual class="po-textual">part-lst</textual></emphasis><textual class="po-textual"> representation) or as
					an indexed value (</textual><emphasis class="po-inline e527 e527" role="ital"><textual class="po-textual">part-idx</textual></emphasis><textual class="po-textual"> representation).
				</textual></para></section><section class="po-hcontainer e528 e528"><title class="po-block e529 e529"><textual class="po-textual">Results</textual></title><para class="po-block e530 e530"><textual class="po-textual">For the documents of the testing corpus, the entropy
					associated to namespace declaration is computed using as
					unit the number of bytes needed to represent a namespace
					declaration.
				</textual></para><para class="po-block e531 e531"><xref class="po-milestone e532 e532" linkend="fig16"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> displays the distribution of the
					entropy values for the different representations.
				</textual></para><figure class="po-container e533 e533" xml:id="fig16"><title class="po-block e534 e534"><textual class="po-textual">Namespace Histogram</textual></title><mediaobject class="po-container e535 e535"><imageobject class="po-container e536 e536"><imagedata class="po-meta e537 e537" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-017.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e538 e538"><para class="po-block e539 e539"><textual class="po-textual">Distribution of entropies for the representation
							of namespace declarations.
						</textual></para></caption></figure><para class="po-block e540 e540"><textual class="po-textual">These results show that using indexing reduces the
					entropy.  However, indexing only the URI is slightly
					better than indexing both the URI and the prefix. This is
					explained by the fact that prefixes are usually short and
					not repeated.
				</textual></para><para class="po-block e541 e541"><textual class="po-textual">Partitioning has a somewhat stronger effect than
					indexing.  For the prefix definition in partitioned
					representations, both direct string and indexed
					representation have the same entropy values.
				</textual></para><para class="po-block e542 e542"><textual class="po-textual">It should be noted that in most cases, a document
					contains only a few or no namespace declarations. However,
					a few sample documents from the testing corpus contained a
					lot of namespace declarations (from 150 to 3000). Those
					documents are automatically generated documents with
					repetition of namespace declarations for each separately
					generated element. For such documents, indexing reduces
					significantly the entropy value.
				</textual></para><para class="po-block e543 e543"><textual class="po-textual">As a conclusion, in most cases, where only a few
					namespace declarations are used and no redundancies are
					present in those declarations, all the representations
					have almost the same entropy.  However, when taking into
					account all the cases, using a partitioned representation
					gives the best results.
				</textual></para></section></section><section class="po-hcontainer e544 e544"><title class="po-block e545 e545"><textual class="po-textual">Attribute values</textual></title><section class="po-hcontainer e546 e546"><title class="po-block e547 e547"><textual class="po-textual">Introduction</textual></title><para class="po-block e548 e548"><textual class="po-textual">In addition to their name, attributes are also defined
					by their value. In this section, we consider the
					representation of attribute values independently of their
					names.
				</textual></para></section><section class="po-hcontainer e549 e549"><title class="po-block e550 e550"><textual class="po-textual">Representations</textual></title><para class="po-block e551 e551"><textual class="po-textual">A few different representations can be used for
					attribute values.
				</textual></para><para class="po-block e552 e552"><textual class="po-textual">First, the attribute values can be represented as
					null-terminated strings (</textual><emphasis class="po-inline e553 e553" role="ital"><textual class="po-textual">lst</textual></emphasis><textual class="po-textual"> representation).
				</textual></para><para class="po-block e554 e554"><textual class="po-textual">Second, the attribute values can be indexed (</textual><emphasis class="po-inline e555 e555" role="ital"><textual class="po-textual">idx</textual></emphasis><textual class="po-textual"> representation). As for the
					element names, the cost of the index definition must be
					taken into account.
				</textual></para><para class="po-block e556 e556"><textual class="po-textual">Third, the attribute value representation can be
					partitioned according to the attribute name. This can be
					done either for a string-based representation (</textual><emphasis class="po-inline e557 e557" role="ital"><textual class="po-textual">part-lst</textual></emphasis><textual class="po-textual"> representation) or for
					an index-based representation (</textual><emphasis class="po-inline e558 e558" role="ital"><textual class="po-textual">part-idx</textual></emphasis><textual class="po-textual"> representation).
				</textual></para><para class="po-block e559 e559"><textual class="po-textual">Last, in a partitioned representation, the attribute
					values can be represented by using a global index instead
					of local ones (</textual><emphasis class="po-inline e560 e560" role="ital"><textual class="po-textual">part-idx-glob</textual></emphasis><textual class="po-textual"> representation).
				</textual></para></section><section class="po-hcontainer e561 e561"><title class="po-block e562 e562"><textual class="po-textual">Results</textual></title><para class="po-block e563 e563"><textual class="po-textual">The results for attribute values were obtained by
					measuring the entropy associated to them, using as unit
					the number of bytes needed to represent an attribute
					value.
				</textual></para><para class="po-block e564 e564"><textual class="po-textual">The first thing of note is that there is a huge
					variation in the results obtained depending on the
					document. While most documents have entropies ranging from
					0 to 100 bytes per attribute value, there are a few
					documents with much greater entropies (up to about 12,000
					bytes per attribute value).
				</textual></para><para class="po-block e565 e565"><textual class="po-textual">Those documents with very high entropies for attribute
					values are either SVG or X3D documents containing large
					graphical information in one (or more) attribute values.
				</textual></para><para class="po-block e566 e566"><textual class="po-textual">Taking into account those documents skew the results and
					do not provide many insights on the different
					representations. In particular, the average entropy value
					is almost the same for all the representations.
				</textual></para><para class="po-block e567 e567"><textual class="po-textual">Therefore, to enable a better analysis of the attribute
					value representations, those documents were removed from
					the testing corpus. Specifically, all documents for which
					the average attribute value entropy was greater than 100
					bytes per attribute value for the </textual><emphasis class="po-inline e568 e568" role="ital"><textual class="po-textual">lst</textual></emphasis><textual class="po-textual"> representation were
					discarded. There were 33 such documents.
				</textual></para><para class="po-block e569 e569"><xref class="po-milestone e570 e570" linkend="fig17"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the distributions of
					entropies for the reduced testing corpus. These
					distributions show that indexing and partitioning reduce
					the entropy. Indexing has a somewhat stronger effect. In
					addition, indexing and partitioning can be combined,
					enabling their respective entropy reductions to partly
					combine.  Using a global index and a partitioned list of
					value is slightly less efficient than using a partitioned
					index.
				</textual></para><figure class="po-container e571 e571" xml:id="fig17"><title class="po-block e572 e572"><textual class="po-textual">Attribute Value Histogram</textual></title><mediaobject class="po-container e573 e573"><imageobject class="po-container e574 e574"><imagedata class="po-meta e575 e575" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-018.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e576 e576"><para class="po-block e577 e577"><textual class="po-textual">Distribution of entropies for the
							representations of attribute values, on the
							reduced testing corpus (</textual><emphasis class="po-inline e578 e578" role="ital"><textual class="po-textual">i.e.</textual></emphasis><textual class="po-textual">, without documents
							with entropy values greater than 100 bytes).
						</textual></para></caption></figure><para class="po-block e579 e579"><textual class="po-textual">A more detailed analysis was conducted by analyzing the
					results for each category of documents on this reduced
					testing corpus. It should be noted that the removed
					documents mostly belong to the large, information-rich,
					and irregular categories.
				</textual></para><para class="po-block e580 e580"><textual class="po-textual">The main result obtained is that partitioning is more
					effective than indexing for small documents. On the other
					hand, indexing is more effective than partitioning, for
					large documents, for information-rich documents, and for
					regular documents.
				</textual></para><para class="po-block e581 e581"><textual class="po-textual">In all case the combination of indexing and partitioning
					leads to lower entropy results than using only one of
					those mechanisms.  Joining the two mechanisms has a
					greater impact for the medium, structure-rich and
					irregular documents.
				</textual></para><para class="po-block e582 e582"><textual class="po-textual">In addition, in most cases, using a global index gives
					slightly higher entropy values than using partitioned
					indexes.  The main exceptions are the information-rich and
					irregular documents.
				</textual></para><para class="po-block e583 e583"><textual class="po-textual">As a conclusion, the representation with the lowest
					entropy for attribute values is the one using partitioning
					according to the attribute name and locally indexed
					values.
				</textual></para></section></section><section class="po-hcontainer e584 e584"><title class="po-block e585 e585"><textual class="po-textual">Character contents</textual></title><section class="po-hcontainer e586 e586"><title class="po-block e587 e587"><textual class="po-textual">Introduction</textual></title><para class="po-block e588 e588"><textual class="po-textual">Character contents representation is very similar to
					attribute values representation. Both represent textual
					information contained in an XML document. Where an
					attribute value is related to an attribute, a character
					content item is related to an element.
				</textual></para><para class="po-block e589 e589"><textual class="po-textual">However, character contents and attribute values have
					different natures and therefore, it is expected that some
					differences will appear in the results.
				</textual></para></section><section class="po-hcontainer e590 e590"><title class="po-block e591 e591"><textual class="po-textual">Representations</textual></title><para class="po-block e592 e592"><textual class="po-textual">For character contents, the same representations were
					used as for attribute values (</textual><emphasis class="po-inline e593 e593" role="ital"><textual class="po-textual">lst</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e594 e594" role="ital"><textual class="po-textual">idx</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e595 e595" role="ital"><textual class="po-textual">part-lst</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e596 e596" role="ital"><textual class="po-textual">part-idx</textual></emphasis><textual class="po-textual">, and </textual><emphasis class="po-inline e597 e597" role="ital"><textual class="po-textual">part-idx-glob</textual></emphasis><textual class="po-textual"> representations)
				</textual></para></section><section class="po-hcontainer e598 e598"><title class="po-block e599 e599"><textual class="po-textual">Results</textual></title><para class="po-block e600 e600"><textual class="po-textual">The results for character contents were obtained from
					the testing corpus and are expressed using for unit the
					number of bytes needed to represent a character content
					item.
				</textual></para><para class="po-block e601 e601"><textual class="po-textual">It should be noted that the documents from the testing
					corpus were pruned of any whitespace character content,
					and that all contiguous character contents were joined
					together (</textual><emphasis class="po-inline e602 e602" role="ital"><textual class="po-textual">i.e.</textual></emphasis><textual class="po-textual">, removing
					newlines).
				</textual></para><para class="po-block e603 e603"><textual class="po-textual">A second thing to note is that, as for attribute values,
					there are a few documents with much larger entropy values
					than the others (up to about 500,000 bytes per character
					content).  These documents with very high entropy values
					are either SVG documents containing application specific
					additions, or some scientific data files.
				</textual></para><para class="po-block e604 e604"><textual class="po-textual">To enable a better analysis of the character content
					representations, documents with average character content
					entropy greater than 100 bytes per character content item
					for the </textual><emphasis class="po-inline e605 e605" role="ital"><textual class="po-textual">lst</textual></emphasis><textual class="po-textual">
					representation were pruned from the testing corpus. There
					were 25 such documents.
				</textual></para><para class="po-block e606 e606"><xref class="po-milestone e607 e607" linkend="fig18"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the distribution of the
					entropy values for the reduced testing corpus. Those
					results show that both indexing and partitioning reduce
					the entropy. On average, indexing enables a somewhat more
					important reduction than partitioning. Combining indexing
					with partitioning enables combining part of their
					respective reductions of entropy. Last, using a global
					index with partitioned list of values representation leads
					to greater entropy values than a fully partitioned indexed
					representation.
				</textual></para><figure class="po-container e608 e608" xml:id="fig18"><title class="po-block e609 e609"><textual class="po-textual">Character Histogram</textual></title><mediaobject class="po-container e610 e610"><imageobject class="po-container e611 e611"><imagedata class="po-meta e612 e612" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-019.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e613 e613"><para class="po-block e614 e614"><textual class="po-textual">Distribution of entropies for the
							representations of character contents on the
							reduced testing corpus (</textual><emphasis class="po-inline e615 e615" role="ital"><textual class="po-textual">i.e.</textual></emphasis><textual class="po-textual">, without documents
							with entropy values larger than 100 bytes).
						</textual></para></caption></figure><para class="po-block e616 e616"><textual class="po-textual">A more detailed analysis was conducted on the different
					categories of documents. The removed documents mostly
					belong to the large, information-rich and irregular
					categories.
				</textual></para><para class="po-block e617 e617"><textual class="po-textual">The first result is that indexing is more effective than
					partitioning for large documents, for information-rich
					documents, and for regular documents. On the contrary,
					partitioning is more effective than indexing for small
					documents, for medium documents, for structure-rich
					documents, and for irregular documents.
				</textual></para><para class="po-block e618 e618"><textual class="po-textual">Secondly, the combination of indexing and partitioning
					has lower entropy values than using only one of those
					mechanisms.
				</textual></para><para class="po-block e619 e619"><textual class="po-textual">Last, using a global index leads in all cases to higher
					entropy values than using partitioned indexes.
				</textual></para><para class="po-block e620 e620"><textual class="po-textual">As a conclusion, the general observations found for the
					attribute values are also relevant for the character
					contents.  However, the difference of usage between
					attribute values and character contents is reflected in
					the details of the results.
				</textual></para></section></section></section><section class="po-hcontainer e621 e621" xml:id="fileformat"><title class="po-block e622 e622"><textual class="po-textual">File format evaluation</textual></title><section class="po-hcontainer e623 e623"><title class="po-block e624 e624"><textual class="po-textual">Introduction</textual></title><para class="po-block e625 e625"><textual class="po-textual">In the previous section, we obtained results related to the
				evaluation of several representations for the different parts
				of an XML document using entropy measurements. In this
				section, we reuse those results to study several encoding
				formats for XML documents.
			</textual></para><para class="po-block e626 e626"><textual class="po-textual">Three formats have been studied here: textual XML </textual><xref class="po-milestone e627 e627" linkend="xml"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, the Fast Infoset format </textual><xref class="po-milestone e628 e628" linkend="fastinfoset"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, and the EXI format </textual><xref class="po-milestone e629 e629" linkend="exi"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.
			</textual></para></section><section class="po-hcontainer e630 e630"><title class="po-block e631 e631"><textual class="po-textual">File format description</textual></title><section class="po-hcontainer e632 e632"><title class="po-block e633 e633"><textual class="po-textual">XML</textual></title><para class="po-block e634 e634"><textual class="po-textual">Textual XML is the default format for XML document. We
					considered here XML documents as defined by the </textual><emphasis class="po-inline e635 e635" role="ital"><textual class="po-textual">XML 1.0</textual></emphasis><textual class="po-textual"> [</textual><xref class="po-milestone e636 e636" linkend="xml"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]
					and the </textual><emphasis class="po-inline e637 e637" role="ital"><textual class="po-textual">Namespaces in XML
						1.0</textual></emphasis><textual class="po-textual"> [</textual><xref class="po-milestone e638 e638" linkend="xmlns"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]
					specifications (XML 1.1 introduces only marginal changes
					and the results of our study mostly apply).
				</textual></para><para class="po-block e639 e639"><textual class="po-textual">We have shown previously some entropy results obtained
					when considering an XML document as a textual document.
					However, more precise results can be obtained by splitting
					the XML document into its different components and
					considering each of them individually.
				</textual></para><para class="po-block e640 e640"><textual class="po-textual">In XML, event types are not specified explicitly, but
					rather implicitly through the XML syntax. However, those
					event types can be considered as being represented as a
					list.
				</textual></para><para class="po-block e641 e641"><textual class="po-textual">Element names are represented as strings, using prefixes
					to specify their namespaces.
				</textual></para><para class="po-block e642 e642"><textual class="po-textual">Attribute names are also represented as strings, as well
					as the attribute values.
				</textual></para><para class="po-block e643 e643"><textual class="po-textual">Namespace declarations are represented as strings,
					associating a prefix to a URI.
				</textual></para><para class="po-block e644 e644"><textual class="po-textual">Character contents are also represented as strings, as
					well as comments and processing instructions.
				</textual></para><para class="po-block e645 e645"><textual class="po-textual">Globally, textual XML uses a basic string representation
					for all the components. The only optimization is to use
					prefixes as shortcuts for namespace’s URIs.
				</textual></para></section><section class="po-hcontainer e646 e646"><title class="po-block e647 e647"><textual class="po-textual">Fast Infoset</textual></title><para class="po-block e648 e648"><textual class="po-textual">Fast Infoset is a binary XML format, specified by the
					</textual><emphasis class="po-inline e649 e649" role="ital"><textual class="po-textual">ITU-T rec. X.891 | ISO/IEC
						24824-1</textual></emphasis><textual class="po-textual"> standard [</textual><xref class="po-milestone e650 e650" linkend="fastinfoset"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. This format drops the textual
					representation of XML documents to replace it by a binary
					representation, enabling a more compact encoding of XML
					documents.
				</textual></para><para class="po-block e651 e651"><textual class="po-textual">In Fast Infoset, event types are explicitly coded in a
					binary form, and their representation corresponds to a
					list.
				</textual></para><para class="po-block e652 e652"><textual class="po-textual">Element names and attribute names are represented as
					surrogates, a surrogate being defined from the index of
					the namespace’s URI and the index of the local name.
				</textual></para><para class="po-block e653 e653"><textual class="po-textual">Namespace declarations are represented using indexed
					values for both the URI and the prefix. As prefix
					preservation has been ignored in this study, namespace
					declarations have not been taken into account here.
				</textual></para><para class="po-block e654 e654"><textual class="po-textual">Attribute values, character contents, comments, and
					processing instructions are represented as indexed
					strings.
				</textual></para><para class="po-block e655 e655"><textual class="po-textual">It should be noted that for Fast Infoset, the indexes
					for attribute values, character contents, comments, and
					processing instructions are all separated.
				</textual></para><para class="po-block e656 e656"><textual class="po-textual">The representation used for Fast Infoset was slightly
					simplified for the purpose of this study. However, these
					simplifications should have only a minimal impact on the
					results.
				</textual></para><para class="po-block e657 e657"><textual class="po-textual">Fast Infoset is a rather straightforward binary XML
					format, taking advantage of replacing the textual
					description of the XML structure by a binary description
					of it, and providing indexes for most items. In addition,
					Fast Infoset uses various encoding techniques for reducing
					the size of the encoded documents.
				</textual></para></section><section class="po-hcontainer e658 e658"><title class="po-block e659 e659"><textual class="po-textual">EXI</textual></title><para class="po-block e660 e660"><emphasis class="po-inline e661 e661" role="ital"><textual class="po-textual">Efficient XML Interchange
						(EXI)</textual></emphasis><textual class="po-textual"> [</textual><xref class="po-milestone e662 e662" linkend="exi"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">] is a binary
					XML format standardized by the W3C.  This format was
					selected amongst several propositions (one of them was
					Fast Infoset) and therefore contains some somewhat complex
					mechanisms for obtaining a compact encoding of XML
					documents.
				</textual></para><para class="po-block e663 e663"><textual class="po-textual">In EXI, event types are explicitly coded in a binary
					form, and are in addition partitioned according to their
					enclosing element. Therefore their representation is a
					partitioned list.
				</textual></para><para class="po-block e664 e664"><textual class="po-textual">Element and attribute names are represented as
					surrogates, a surrogate being defined from the index of
					the namespace’s URI and the index of the local name
					partitioned according to its URI. In addition, surrogates
					are partitioned according to the parent element. The
					element and attribute name representations corresponds
					therefore to partitioned surrogates, with surrogate
					definition based on URI indexes and local name partitioned
					indexes.
				</textual></para><para class="po-block e665 e665"><textual class="po-textual">Namespace declarations are represented as indexed
					strings for URIs and indexed strings, partitioned
					according to the URI, for prefixes. As for Fast Infoset,
					prefix preservation has been ignored here.
				</textual></para><para class="po-block e666 e666"><textual class="po-textual">Attribute values are represented as indexed strings
					partitioned according to the attribute name.
				</textual></para><para class="po-block e667 e667"><textual class="po-textual">In a similar manner, character contents are represented
					as indexed strings partitioned according to the element
					name.
				</textual></para><para class="po-block e668 e668"><textual class="po-textual">Comments and processing instructions are represented as
					strings.
				</textual></para><para class="po-block e669 e669"><textual class="po-textual">As for Fast Infoset, the representation used for EXI was
					slightly simplified for the purpose of this study.
				</textual></para><para class="po-block e670 e670"><textual class="po-textual">EXI is a binary XML format more complex than Fast
					Infoset, using partitioning in many places to improve the
					compactness of the encoding.
				</textual></para></section><section class="po-hcontainer e671 e671"><title class="po-block e672 e672"><textual class="po-textual">Summary</textual></title><para class="po-block e673 e673"><xref class="po-milestone e674 e674" linkend="tab02"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows a summary of the
					representations used by each of the three studied formats.
					This table is representative of the differences between
					the formats. XML is mostly list-based, Fast Infoset is
					mostly index-based, and EXI is mostly
					partitioned-index-based.
				</textual></para><table class="po-container e675 e675" xml:id="tab02"><caption class="po-container e676 e676"><para class="po-block e677 e677"><textual class="po-textual">Summary of the representations used by the three
							formats for XML documents analyzed here.
						</textual></para></caption><col align="right" class="po-meta e678 e678" span="1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></col><col align="right" class="po-meta e679 e679" span="1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></col><col align="right" class="po-meta e680 e680" span="1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></col><col align="right" class="po-meta e681 e681" span="1"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></col><thead class="po-container e682 e682"><tr class="po-table e683 e683"><th class="po-field e684 e684"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></th><th class="po-field e685 e685"><textual class="po-textual">XML</textual></th><th class="po-field e686 e686"><textual class="po-textual">Fast Infoset</textual></th><th class="po-field e687 e687"><textual class="po-textual">EXI</textual></th></tr></thead><tbody class="po-table e688 e688"><tr class="po-table e689 e689"><td class="po-block e690 e690"><textual class="po-textual">Event type</textual></td><td class="po-block e691 e691"><textual class="po-textual">List</textual></td><td class="po-block e692 e692"><textual class="po-textual">List</textual></td><td class="po-block e693 e693"><textual class="po-textual">Partitioned list</textual></td></tr><tr class="po-table e694 e694"><td class="po-block e695 e695"><textual class="po-textual">Element name</textual></td><td class="po-block e696 e696"><textual class="po-textual">List</textual></td><td class="po-block e697 e697"><textual class="po-textual">Surrogate</textual></td><td class="po-block e698 e698"><textual class="po-textual">Partitioned surrogate</textual></td></tr><tr class="po-table e699 e699"><td class="po-block e700 e700"><textual class="po-textual">Attribute name</textual></td><td class="po-block e701 e701"><textual class="po-textual">List</textual></td><td class="po-block e702 e702"><textual class="po-textual">Surrogate</textual></td><td class="po-block e703 e703"><textual class="po-textual">Partitioned surrogate</textual></td></tr><tr class="po-table e704 e704"><td class="po-block e705 e705"><textual class="po-textual">Attribute value</textual></td><td class="po-block e706 e706"><textual class="po-textual">List</textual></td><td class="po-block e707 e707"><textual class="po-textual">Index</textual></td><td class="po-block e708 e708"><textual class="po-textual">Partitioned index</textual></td></tr><tr class="po-table e709 e709"><td class="po-block e710 e710"><textual class="po-textual">Namespace declaration</textual></td><td class="po-block e711 e711"><textual class="po-textual">List</textual></td><td class="po-block e712 e712"><textual class="po-textual">Index</textual></td><td class="po-block e713 e713"><textual class="po-textual">Index</textual></td></tr><tr class="po-table e714 e714"><td class="po-block e715 e715"><textual class="po-textual">Character content</textual></td><td class="po-block e716 e716"><textual class="po-textual">List</textual></td><td class="po-block e717 e717"><textual class="po-textual">Index</textual></td><td class="po-block e718 e718"><textual class="po-textual">Partitioned index</textual></td></tr><tr class="po-table e719 e719"><td class="po-block e720 e720"><textual class="po-textual">Comment</textual></td><td class="po-block e721 e721"><textual class="po-textual">List</textual></td><td class="po-block e722 e722"><textual class="po-textual">Index</textual></td><td class="po-block e723 e723"><textual class="po-textual">List</textual></td></tr><tr class="po-table e724 e724"><td class="po-block e725 e725"><textual class="po-textual">Processing instruction</textual></td><td class="po-block e726 e726"><textual class="po-textual">List</textual></td><td class="po-block e727 e727"><textual class="po-textual">Index</textual></td><td class="po-block e728 e728"><textual class="po-textual">List</textual></td></tr></tbody></table></section></section><section class="po-hcontainer e729 e729"><title class="po-block e730 e730"><textual class="po-textual">Results</textual></title><section class="po-hcontainer e731 e731"><title class="po-block e732 e732"><textual class="po-textual">Formats overview</textual></title><para class="po-block e733 e733"><textual class="po-textual">The different formats for XML documents can be first
					compared using their encoding size. </textual><xref class="po-milestone e734 e734" linkend="fig19"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the distribution of encoded
					file size for the three formats considered, and also for
					textual XML compressed with gzip.
				</textual></para><figure class="po-container e735 e735" xml:id="fig19"><title class="po-block e736 e736"><textual class="po-textual">Size Summary</textual></title><mediaobject class="po-container e737 e737"><imageobject class="po-container e738 e738"><imagedata class="po-meta e739 e739" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-020.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e740 e740"><para class="po-block e741 e741"><textual class="po-textual">Distribution of file sizes for the different
							formats.
						</textual></para></caption></figure><para class="po-block e742 e742"><textual class="po-textual">This figure shows that on average, Fast Infoset encoded
					document size is 39% of the original XML document size,
					while EXI encoded document size is 34% of the original XML
					document size. However, gzip achieves much better results,
					as compressed XML document size is 12% of the original
					size.
				</textual></para><para class="po-block e743 e743"><textual class="po-textual">While Fast Infoset and EXI provide better encoding for
					the XML structure and for repeated content, they leave
					other aspects of the XML documents uncompressed. On the
					other hand, gzip compresses the full XML document, both
					structure and content and is therefore able to achieve
					better results.
				</textual></para><para class="po-block e744 e744"><textual class="po-textual">However, gzip has no information on the structure of XML
					and therefore compressed Fast Infoset or EXI documents are
					more compact that compressed XML documents.
				</textual></para><para class="po-block e745 e745"><textual class="po-textual">Entropy values were computed for those three formats and
					their distributions are shown by </textual><xref class="po-milestone e746 e746" linkend="fig20"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">,
					alongside with the basic entropy of textual XML documents
					(that is the entropy of the text constituting the XML
					documents).
				</textual></para><figure class="po-container e747 e747" xml:id="fig20"><title class="po-block e748 e748"><textual class="po-textual">Entropy Summary</textual></title><mediaobject class="po-container e749 e749"><imageobject class="po-container e750 e750"><imagedata class="po-meta e751 e751" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-021.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e752 e752"><para class="po-block e753 e753"><textual class="po-textual">Distribution of total entropy values for the
							different formats.
						</textual></para></caption></figure><para class="po-block e754 e754"><textual class="po-textual">The relations observed for the encoding sizes still hold
					for the entropies, meaning that the effective encoding
					chosen for Fast Infoset and EXI are correct. The average
					entropy of Fast Infoset documents is 51% of the average
					entropy of XML documents, and the average entropy of EXI
					documents is 46% of the average entropy of XML documents.
					In addition, the average textual entropy of XML documents
					is 151% of the average XML entropy of XML documents.
				</textual></para><para class="po-block e755 e755"><textual class="po-textual">The first observation is that the better results
					obtained by EXI compared to Fast Infoset (as measured by
					the document sizes) are due to the choice of more
					efficient representations (as measured by the entropy
					values).
				</textual></para><para class="po-block e756 e756"><textual class="po-textual">Second, those results show that the average entropy
					values for the three formats are closer than the average
					document sizes for these same formats. This means that the
					EXI encoding is closer to its theoretical minimum than the
					Fast Infoset encoding, and that the Fast Infoset encoding
					is closer to its theoretical minimum than textual XML.
				</textual></para></section><section class="po-hcontainer e757 e757"><title class="po-block e758 e758"><textual class="po-textual">XML</textual></title><para class="po-block e759 e759"><xref class="po-milestone e760 e760" linkend="fig21"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the distribution of the
					ratio of document size over entropy value for textual XML,
					using either no compression, gzip compression or bzip2
					compression.
				</textual></para><figure class="po-container e761 e761" xml:id="fig21"><title class="po-block e762 e762"><textual class="po-textual">XML Results</textual></title><mediaobject class="po-container e763 e763"><imageobject class="po-container e764 e764"><imagedata class="po-meta e765 e765" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-022.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e766 e766"><para class="po-block e767 e767"><textual class="po-textual">Distribution of ratio between document size and
							XML entropy value for textual XML under different
							compression options.
						</textual></para></caption></figure><para class="po-block e768 e768"><textual class="po-textual">This figure shows that on average, an XML document size
					is 2.34 times its entropy value. However, compressed
					document sizes are lower than the entropy values, being on
					average 0.73 times the entropy value for gzip, and 0.80
					times the entropy value for bzip2.
				</textual></para><para class="po-block e769 e769"><textual class="po-textual">These results mean that the entropy value we computed is
					more representative of the quantity of information
					contained in an XML document than the text-based entropy
					we computed initially. However, this entropy value is
					still overestimated.  In particular, it should better take
					into account the possible repetition of element or
					attribute names.
				</textual></para><para class="po-block e770 e770"><xref class="po-milestone e771 e771" linkend="fig22"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the detailed distribution
					of entropy costs for XML documents among the different
					sources of information.  This distribution is given for
					the whole testing corpus and also for the different
					categories of documents.
				</textual></para><figure class="po-container e772 e772" xml:id="fig22"><title class="po-block e773 e773"><textual class="po-textual">XML Cost Repartition</textual></title><mediaobject class="po-container e774 e774"><imageobject class="po-container e775 e775"><imagedata class="po-meta e776 e776" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-023.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e777 e777"><para class="po-block e778 e778"><textual class="po-textual">Distribution of entropy costs for XML documents
							for the different categories of documents.
						</textual></para></caption></figure><para class="po-block e779 e779"><textual class="po-textual">The entropy cost for each source of information was
					computed as an average of the entropy cost for this source
					of information for all documents in the category, and
					then, for comparison purpose, those entropy costs were
					normalized so as their total value is one.
				</textual></para><para class="po-block e780 e780"><textual class="po-textual">First, it should be noted that the cost of the structure
					(represented by the event list, the element names and the
					attribute names) is independent of the file size, staying
					around 40% for the small, medium and large document
					categories.</textual></para><para class="po-block e781 e781"><textual class="po-textual">However structural cost is higher for structure-rich
					documents than for information-rich documents. Last, while
					it is somewhat above the average for regular documents, it
					is almost negligible for irregular documents (around
					2%).</textual></para></section><section class="po-hcontainer e782 e782"><title class="po-block e783 e783"><textual class="po-textual">Fast Infoset</textual></title><para class="po-block e784 e784"><xref class="po-milestone e785 e785" linkend="fig23"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the distribution of the
					ratio of document size over entropy value for Fast Infoset
					documents. A first set of results uses the base Fast
					Infoset document, while a second set of results uses the
					Fast Infoset document compressed with gzip.
				</textual></para><figure class="po-container e786 e786" xml:id="fig23"><title class="po-block e787 e787"><textual class="po-textual">Fast Infoset Results</textual></title><mediaobject class="po-container e788 e788"><imageobject class="po-container e789 e789"><imagedata class="po-meta e790 e790" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-024.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e791 e791"><para class="po-block e792 e792"><textual class="po-textual">Distribution of ratio between document size and
							Fast Infoset entropy value for Fast Infoset
							documents with different compression options.
						</textual></para></caption></figure><para class="po-block e793 e793"><textual class="po-textual">On average, the size of a Fast Infoset document is 1.83
					times its entropy, and the size of a compressed Fast
					Infoset document is 0.94 times its entropy.
				</textual></para><para class="po-block e794 e794"><textual class="po-textual">Those results first corroborate that on average Fast
					Infoset documents have a size closer to their entropy
					values than textual XML documents.
				</textual></para><para class="po-block e795 e795"><textual class="po-textual">However, as compressed Fast Infoset documents still have
					on average a size lower than the entropy value, the
					entropy value computed for Fast Infoset still overestimate
					the quantity of information contained in an XML document.
					Nevertheless, the difference is lower for Fast Infoset
					than for textual XML.
				</textual></para><para class="po-block e796 e796"><xref class="po-milestone e797 e797" linkend="fig24"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the detailed distribution
					of entropy costs for Fast Infoset documents among the
					different event types.
				</textual></para><figure class="po-container e798 e798" xml:id="fig24"><title class="po-block e799 e799"><textual class="po-textual">Fast Infoset Cost Repartition</textual></title><mediaobject class="po-container e800 e800"><imageobject class="po-container e801 e801"><imagedata class="po-meta e802 e802" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-025.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e803 e803"><para class="po-block e804 e804"><textual class="po-textual">Distribution of entropy costs for Fast Infoset
							documents for the different categories of
							documents.
						</textual></para></caption></figure><para class="po-block e805 e805"><textual class="po-textual">These distributions show that the behavior of Fast
					Infoset is clearly different from the behavior of textual
					XML.
				</textual></para><para class="po-block e806 e806"><textual class="po-textual">A first observation is that, globally, the entropy cost
					of the structure represents a smaller part of the total
					entropy cost for Fast Infoset documents than for textual
					XML documents.  This means that the representations used
					by Fast Infoset are more efficient for reducing the
					entropy of the structure than for reducing the entropy of
					the content.
				</textual></para><para class="po-block e807 e807"><textual class="po-textual">Moreover, the part of entropy cost related to the
					structure decreases as the size of the document increase.
				</textual></para></section><section class="po-hcontainer e808 e808"><title class="po-block e809 e809"><textual class="po-textual">EXI</textual></title><para class="po-block e810 e810"><xref class="po-milestone e811 e811" linkend="fig25"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> displays the distribution of the
					ratio of document size over entropy value for EXI
					documents.
				</textual></para><figure class="po-container e812 e812" xml:id="fig25"><title class="po-block e813 e813"><textual class="po-textual">EXI Results</textual></title><mediaobject class="po-container e814 e814"><imageobject class="po-container e815 e815"><imagedata class="po-meta e816 e816" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-026.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e817 e817"><para class="po-block e818 e818"><textual class="po-textual">Distribution of ratio between document size and
							EXI entropy value for EXI documents with different
							compression options.
						</textual></para></caption></figure><para class="po-block e819 e819"><textual class="po-textual">Three types of documents are shown there. First, EXI
					documents encoded with the options close to the default
					ones (bit-packed, no schema, no compression, preservation
					options only for comments and processing instructions),
					second, EXI documents using the compression mechanism
					built-in in EXI, third, EXI documents further compressed
					with gzip (these documents use the pre-compress option as
					this gives more compact documents than compressing
					documents encoded with the default options).
				</textual></para><para class="po-block e820 e820"><textual class="po-textual">On average, the size of an EXI document is 1.66 times
					its entropy, the size of an EXI document using the
					compression option is 0.92 times its entropy, and the size
					of an EXI document compressed with gzip is 0.93 times its
					entropy.
				</textual></para><para class="po-block e821 e821"><textual class="po-textual">A first observation is that the built-in compression
					mechanism of EXI is on par with a generic compression
					mechanism (with a slight advantage for the built-in
					mechanism).
				</textual></para><para class="po-block e822 e822"><textual class="po-textual">These results also corroborate that on average EXI
					document sizes are closer to their entropy values than
					Fast Infoset document sizes from their entropy values.
				</textual></para><para class="po-block e823 e823"><textual class="po-textual">However, compressed EXI document sizes are still smaller
					than the EXI entropy values, showing that this entropy
					value is also an overestimation of the quantity of
					information contained in XML documents.
				</textual></para><para class="po-block e824 e824"><xref class="po-milestone e825 e825" linkend="fig26"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> shows the detailed distribution
					of entropy costs for EXI documents among the different
					types of events.
				</textual></para><figure class="po-container e826 e826" xml:id="fig26"><title class="po-block e827 e827"><textual class="po-textual">EXI Cost Repartition</textual></title><mediaobject class="po-container e828 e828"><imageobject class="po-container e829 e829"><imagedata class="po-meta e830 e830" fileref="../../../vol8/graphics/Ruellan01/Ruellan01-027.png" format="png" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject><caption class="po-container e831 e831"><para class="po-block e832 e832"><textual class="po-textual">Distribution of entropy costs for EXI documents
							for the different categories of documents.
						</textual></para></caption></figure><para class="po-block e833 e833"><textual class="po-textual">These distributions are very similar to the ones
					obtained by Fast Infoset.
				</textual></para><para class="po-block e834 e834"><textual class="po-textual">In most cases, the entropy cost of the structure is a
					smaller part of the total cost for EXI than for Fast
					Infoset.  The only exception is for the small document
					category.
				</textual></para></section><section class="po-hcontainer e835 e835"><title class="po-block e836 e836"><textual class="po-textual">Summary</textual></title><para class="po-block e837 e837"><textual class="po-textual">The results obtained here show that binary XML formats
					reduce the size of XML documents both theoretically and in
					practice. Moreover, while indexing mechanisms, as used by
					Fast Infoset, are efficient for the compactness of the
					representation, including in addition partitioning
					mechanisms, as done by EXI, further improves this
					compactness.
				</textual></para><para class="po-block e838 e838"><textual class="po-textual">It should also be noted that as EXI is closer to its
					theoretical minimum than Fast Infoset. This suggests that
					the practical techniques used by EXI are more efficient
					than those used by Fast Infoset.
				</textual></para><para class="po-block e839 e839"><textual class="po-textual">Last, the distribution of the entropy costs among event
					types show that binary XML formats globally reduce the
					entropy cost of structure relatively to the entropy cost
					of content.  This means that XML language designers should
					reflect as much as possible the structure of their data
					into the XML structure to take a full advantage of these
					encodings.
				</textual></para></section></section></section><section class="po-hcontainer e840 e840"><title class="po-block e841 e841"><textual class="po-textual">Conclusion</textual></title><para class="po-block e842 e842"><textual class="po-textual">In this study, we analyzed the theoretical performances of
			several representations for XML documents. First, our theoretical
			results are in line with the experimental results obtained for the
			different formats. This was an expected result, but is
			nevertheless welcome news.
		</textual></para><para class="po-block e843 e843"><textual class="po-textual">We showed that the compaction advantage of EXI over Fast
			Infoset is due to the usage of partitioning mechanisms. In
			addition, the practical implementation of EXI seems somewhat
			better than the one of Fast Infoset, enabling compaction
			performances for EXI closer to their theoretical minimum than for
			Fast Infoset.
		</textual></para><para class="po-block e844 e844"><textual class="po-textual">Further investigations could be undertaken to complete this
			study. First, the usage of generic compression showed that the
			first-order entropy results computed were overestimating the
			quantity of information contained in the documents. For XML
			documents, the hypothesis of independence between the symbols does
			not hold, and therefore the entropy results obtained are not
			correct. This hypothesis does not hold either for attribute values
			and character contents. These items are often English text, for
			which consecutive letters are not independent. A detailed analysis
			of these items could be undertaken to find a better entropy
			measure for them.
		</textual></para><para class="po-block e845 e845"><textual class="po-textual">Second, both Fast Infoset and EXI provide mechanisms for a
			partial indexing of content-related values. Some quick experiments
			showed that the minimum entropy value is usually obtained
			somewhere between a full indexing of those values and no indexing
			of those values. More investigations could be realized on this
			topic. Such investigations should be backed-up by experimental
			measurements to check that theoretical results are in line with
			practical implementations.
		</textual></para><para class="po-block e846 e846"><textual class="po-textual">Last, EXI is able to take advantage of an XML Schema to
			better encode an XML document. More specifically, EXI can extract
			both the structure of the XML document and the type of the
			content. It would be of interest to compute entropy values for XML
			documents while considering their XML Schema as well. A reduced
			experiment could focus on the type of the content, by computing
			the entropy values while taking into account the type of each
			content item.
		</textual></para></section><bibliography class="po-hcontainer e847 e847"><title class="po-block e848 e848"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e849 e849" xml:id="augeri07" xreflabel="Augeri 2007"><textual class="po-textual">
			Christopher J. Augeri, Dursun A. Bulutoglu, Barry E. Mullins, Rusty
			O. Baldwin, Leemon C. Baird, III, </textual><quote class="po-inline e850 e850"><textual class="po-textual">An Analysis of XML
				Compression Efficiency</textual></quote><textual class="po-textual">, ExpCS'07.
		</textual></bibliomixed><bibliomixed class="po-block e851 e851" xml:id="basci08" xreflabel="Basci 2008"><textual class="po-textual"> Dilek Basci,
			Sanjay Misra, </textual><quote class="po-inline e852 e852"><textual class="po-textual">Entropy Metric for XML DTD Documents</textual></quote><textual class="po-textual">,
			in </textual><emphasis class="po-inline e853 e853" role="ital"><textual class="po-textual">ACM SIGSOFT Software Engineering
				Notes</textual></emphasis><textual class="po-textual">, vol. 33, Issue 4, July 2008.
		</textual></bibliomixed><bibliomixed class="po-block e854 e854" xml:id="xml" xreflabel="XML"><textual class="po-textual">Tim Bray, Jean Paoli, C. M.
			Sperberg-McQueen, Eve Maler, and François Yergeau,
			</textual><quote class="po-inline e855 e855"><textual class="po-textual">Extensible Markup Language (XML) 1.0 (Fifth
				Edition)</textual></quote><textual class="po-textual">. W3C Recommendation,
			26</textual><emphasis class="po-inline e856 e856"><superscript class="po-atom e857 e857"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> November
			2008.  Retrieved
			27</textual><emphasis class="po-inline e858 e858"><superscript class="po-atom e859 e859"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> September
			2010 from </textual><link class="po-inline e860 e860" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/xml/</textual></link><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e861 e861" xml:id="xmlns" xreflabel="XML Namespaces"><textual class="po-textual">Tim Bray, Dave
			Hollander, Andrew Layman, Richard Tobin, Henry S.  Thompson,
			</textual><quote class="po-inline e862 e862"><textual class="po-textual">Namespaces in XML 1.0 (Third Edition)</textual></quote><textual class="po-textual">. W3C
			Recommendation,
			8</textual><emphasis class="po-inline e863 e863"><superscript class="po-atom e864 e864"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> December 2009.
			Retrieved 27</textual><emphasis class="po-inline e865 e865"><superscript class="po-atom e866 e866"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual">
			September 2010 from </textual><link class="po-inline e867 e867" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/xml-names/</textual></link><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e868 e868" xml:id="exiwg" xreflabel="EXI WG"><textual class="po-textual">Michael Cokus, Takuki
			Kamiya, Carine Bournez, </textual><quote class="po-inline e869 e869"><textual class="po-textual">Efficient XML Interchange Working
				Group</textual></quote><textual class="po-textual">. 5</textual><emphasis class="po-inline e870 e870"><superscript class="po-atom e871 e871"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> May 2010. Retrieved
			4</textual><emphasis class="po-inline e872 e872"><superscript class="po-atom e873 e873"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> August 2010
			from </textual><link class="po-inline e874 e874" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/XML/EXI/</textual></link><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e875 e875" xml:id="liefke00" xreflabel="Liefke 2000"><textual class="po-textual">H. Liefke and
			D. Suciu, </textual><quote class="po-inline e876 e876"><textual class="po-textual">XMill: an efficient compressor for XML
				data</textual></quote><textual class="po-textual">, in </textual><emphasis class="po-inline e877 e877" role="ital"><textual class="po-textual">Proceedings of the
				International Conference on Management of Data
				(SIGMOD)</textual></emphasis><textual class="po-textual">, pages 153-164, 2000.
		</textual></bibliomixed><bibliomixed class="po-block e878 e878" xml:id="ng06" xreflabel="Ng 2006"><textual class="po-textual">
			Wilfred Ng, Lam Wai Yeung, James Cheng, </textual><quote class="po-inline e879 e879"><textual class="po-textual">Comparative
				Analysis of XML Compression Technologies</textual></quote><textual class="po-textual">, </textual><emphasis class="po-inline e880 e880" role="ital"><textual class="po-textual">World Wide Web</textual></emphasis><textual class="po-textual">, pp. 5-33, 2006. doi:</textual><biblioid class="po-atom e881 doi e881"><textual class="po-textual">10.1007/s11280-005-1435-2</textual></biblioid><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e882 e882" xml:id="qureshi05" xreflabel="Qureshi 2005"><textual class="po-textual">Mustafa H.
			Qureshi, M. H. Samadzadeh,  </textual><quote class="po-inline e883 e883"><textual class="po-textual">Determining the Complexity of
				XML Documents</textual></quote><textual class="po-textual">,  ITCC’05.
		</textual></bibliomixed><bibliomixed class="po-block e884 e884" xml:id="sakr09" xreflabel="Sakr 2009"><textual class="po-textual">S. Sakr, </textual><quote class="po-inline e885 e885"><textual class="po-textual">XML
				Compression Techniques: A Survey and Comparison</textual></quote><textual class="po-textual">,
			</textual><emphasis class="po-inline e886 e886" role="ital"><textual class="po-textual">Journal of Computer and System Sciences
			  (JCSS)</textual></emphasis><textual class="po-textual">, 75(5), pp. 303-322, 2009. doi:</textual><biblioid class="po-atom e887 doi e887"><textual class="po-textual">10.1016/j.jcss.2009.01.004</textual></biblioid><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e888 e888" xml:id="exi" xreflabel="EXI"><textual class="po-textual">John Schneider, Takuki
			Kamiya, </textual><quote class="po-inline e889 e889"><textual class="po-textual">Efficient XML Interchange (EXI) Format 1.0</textual></quote><textual class="po-textual">.
			W3C Recommendation, 10 March 2011. Retrieved
			2</textual><emphasis class="po-inline e890 e890"><superscript class="po-atom e891 e891"><textual class="po-textual">nd</textual></superscript></emphasis><textual class="po-textual"> April 2012
			from </textual><link class="po-inline e892 e892" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/exi/</textual></link><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e893 e893" xml:id="shannon48" xreflabel="Shannon 1948"><textual class="po-textual">Claude E.
			Shannon, </textual><quote class="po-inline e894 e894"><textual class="po-textual">A Mathematical Theory of Communication</textual></quote><textual class="po-textual">,
			</textual><emphasis class="po-inline e895 e895" role="ital"><textual class="po-textual">Bell System Technical Journal</textual></emphasis><textual class="po-textual">,
			vol. 27, pp. 379-423 and 623-656, July and October, 1948.
		</textual></bibliomixed><bibliomixed class="po-block e896 e896" xml:id="eximeas" xreflabel="EXI Measurements"><textual class="po-textual">Greg White,
			Don Brutzman, Stephen Williams, Jaakko Kangasharju,
			</textual><quote class="po-inline e897 e897"><textual class="po-textual">Efficient XML Interchange Measurements Note</textual></quote><textual class="po-textual">.
			30</textual><emphasis class="po-inline e898 e898"><superscript class="po-atom e899 e899"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> June 2007.
			Retrieved 2</textual><emphasis class="po-inline e900 e900"><superscript class="po-atom e901 e901"><textual class="po-textual">nd</textual></superscript></emphasis><textual class="po-textual">
			April 2012 from
			</textual><link class="po-inline e902 e902" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.w3.org/TR/exi-measurements/</textual></link><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e903 e903" xml:id="fastinfoset" xreflabel="Fast    Infoset"><quote class="po-inline e904 e904"><textual class="po-textual">ITU-T Rec. X.891 | ISO/IEC 24824-1 (Fast
				Infoset)</textual></quote><textual class="po-textual">.  International Telecommunication Union
			(ITU), May 2005. Retrieved
			27</textual><emphasis class="po-inline e905 e905"><superscript class="po-atom e906 e906"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> September
			2010 from </textual><link class="po-inline e907 e907" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.itu.int/rec/T-REC-X.891/</textual></link><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e908 e908" xml:id="sax" xreflabel="SAX"><quote class="po-inline e909 e909"><textual class="po-textual">SAX: Simple API for
				XML</textual></quote><textual class="po-textual">. Retrieved
			24</textual><emphasis class="po-inline e910 e910"><superscript class="po-atom e911 e911"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> September
			2010 from </textual><link class="po-inline e912 e912" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.saxproject.org/</textual></link><textual class="po-textual">.
		</textual></bibliomixed><bibliomixed class="po-block e913 e913" xml:id="stax" xreflabel="StAX"><quote class="po-inline e914 e914"><textual class="po-textual">StAX: The Streaming
				API for XML</textual></quote><textual class="po-textual">. Retrieved
			27</textual><emphasis class="po-inline e915 e915"><superscript class="po-atom e916 e916"><textual class="po-textual">th</textual></superscript></emphasis><textual class="po-textual"> September
			2010 from </textual><link class="po-inline e917 e917" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://stax.codehaus.org/Home</textual></link><textual class="po-textual">.
		</textual></bibliomixed></bibliography></article></classedDocument>