<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3"><title class="po-block e1 e1"><textual class="po-textual">XML instances to validate XML schemas</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">International Symposium on Quality Assurance and Quality Control in XML</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 6, 2012</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">Ever modified an XML schema? Ever broken something while fixing a bug or adding a new feature? As with
                any piece of engineering, the more complex a schema is, the harder it is to maintain. In other domains,
                unit tests dramatically reduce the number of regressions and thus provide a kind of safety net for
                maintainers. Can we learn from these techniques and adapt them to XML schema languages? In this workshop
                session, we develop a schema using unit test techniques, to illustrate their benefits in this
                domain.</textual></para></abstract><author class="po-record e8 e8"><personname class="po-record e9 e9"><firstname class="po-field e10 e10"><textual class="po-textual">Eric</textual></firstname><surname class="po-field e11 e11"><textual class="po-textual">van der Vlist</textual></surname></personname><personblurb class="po-container e12 e12"><para class="po-block e13 e13"><textual class="po-textual">Eric is an independent consultant and trainer. His domain of expertise include Web development and
                    XML technologies.</textual></para><para class="po-block e14 e14"><textual class="po-textual">He is the creator and main editor of </textual><link class="po-inline e15 e15" xlink:actuate="onRequest" xlink:href="http://xmlfr.org" xlink:show="new" xlink:type="simple"><textual class="po-textual">XMLfr.org</textual></link><textual class="po-textual">, the
                    main site dedicated to XML technologies in French, the author of the O'Reilly animal books XML
                    Schema and RELAX NG and a member or the ISO DSDL (</textual><link class="po-inline e16 e16" xlink:actuate="onRequest" xlink:href="http://dsdl.org" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://dsdl.org</textual></link><textual class="po-textual">) working group focused on XML schema languages.</textual></para><para class="po-block e17 e17"><textual class="po-textual">He is based in Paris and you can reach him by mail (</textual><link class="po-inline e18 e18" xlink:actuate="onRequest" xlink:href="mailto:vdv@dyomedea.com" xlink:show="new" xlink:type="simple"><textual class="po-textual">vdv@dyomedea.com</textual></link><textual class="po-textual">) or meet him in one of the many conferences where he presents his
                    projects.</textual></para></personblurb><affiliation class="po-record e19 e19"><orgname class="po-block e20 e20"><textual class="po-textual">Dyomedea</textual></orgname></affiliation></author><legalnotice class="po-container e21 e21"><para class="po-block e22 e22"><textual class="po-textual">Published under the Creative Commons "cc by" license</textual></para></legalnotice></info><para class="po-block e23 e23"><textual class="po-textual">The workshop is run as an exchange between a customer (played by Tommie Usdin) and a schema expert (played by
        Eric van der Vlist).</textual></para><para class="po-block e24 e24"><textual class="po-textual">The customer, who needed a schema for her to-do list XML application, is puzzled by the "test first programming"
        technique imposed by the schema expert.</textual></para><para class="po-block e25 e25"><textual class="po-textual">At the end of the day (or workshop), will she be converted to this well-known agile or extreme programming
        technique adapted to the development of XML schemas?</textual></para><section class="po-hcontainer e26 e26"><title class="po-block e27 e27"><textual class="po-textual">Step 1: Getting started</textual></title><para class="po-block e28 e28"><textual class="po-textual">
            </textual><blockquote class="po-container e29 e29"><para class="po-block e30 e30"><textual class="po-textual"> Hi Eric, can you help me to write a schema?</textual></para><attribution class="po-block e31 e31"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e32 e32"><para class="po-block e33 e33"><textual class="po-textual"> Hi Tommie, yes, sure, what will the schema be about?</textual></para><attribution class="po-block e34 e34"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e35 e35"><para class="po-block e36 e36"><textual class="po-textual"> I need a vocabulary for my to-do lists, with to-do item... </textual></para><attribution class="po-block e37 e37"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e38 e38"><para class="po-block e39 e39"><textual class="po-textual"> OK, you've told me enough, let's get started.</textual></para><attribution class="po-block e40 e40"><textual class="po-textual">Expert (interrupting his customer)</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e41 e41"><para class="po-block e42 e42"><textual class="po-textual"> Get started? but I haven't told you anything about it!</textual></para><attribution class="po-block e43 e43"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e44 e44"><para class="po-block e45 e45"><textual class="po-textual"> Right, but it's never too soon to write tests when you do test first programming!</textual></para><attribution class="po-block e46 e46"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><note class="po-container e47 e47"><para class="po-block e48 e48"><textual class="po-textual">In test first programming (also called </textual><link class="po-inline e49 e49" xlink:actuate="onRequest" xlink:href="http://en.wikipedia.org/wiki/Test-driven_development" xlink:show="new" xlink:type="simple"><textual class="po-textual">test driven development</textual></link><textual class="po-textual">), 
                developers create test case (usually unit test cases) before implementing a function. The test suite is
                run, code is written based on the result of these tests and the test suite and code are updated until
                all the tests pass.</textual></para></note><para class="po-block e50 e50"><textual class="po-textual">Test suite
            (suite.xml):</textual><programlisting class="po-block e51 e51" xml:space="preserve"><textual class="po-textual">&lt;tf:suite xmlns:tf="http://xmlschemata.org/test-first/" xmlns:todo="http://balisage.net/todo#" title="Basic tests"&gt;
    &lt;tf:case title="Root element" expected="valid" id="root"&gt;
        &lt;todo:list/&gt;
    &lt;/tf:case&gt;
&lt;/tf:suite&gt;</textual></programlisting></para><note class="po-container e52 e52"><para class="po-block e53 e53"><textual class="po-textual">The vocabulary used to define these test cases has been inspired by the </textual><link class="po-inline e54 e54" xlink:actuate="onRequest" xlink:href="http://sut.sourceforge.net/" xlink:show="new" xlink:type="simple"><textual class="po-textual">SUT</textual></link><textual class="po-textual"> (XML Schema Unit Test) project. It's a simple
                vocabulary (composed of only three different elements) allowing to pack several XML instances together
                with the outcome validation result. It uses conventions that you'll discover during the course of this
                workshop. </textual></para></note><figure class="po-container e55 e55" xml:id="gourds"><title class="po-block e56 e56"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e57 e57"><imageobject class="po-container e58 e58"><imagedata class="po-meta e59 e59" fileref="../../../vol9/graphics/Vlist02/Vlist02-001.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><note class="po-container e60 e60"><para class="po-block e61 e61"><textual class="po-textual">The test suite is run using a simple </textual><link class="po-inline e62 e62" xlink:actuate="onRequest" xlink:href="http://www.orbeon.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Orbeon Forms</textual></link><textual class="po-textual">
                application. The rendering relies on Orbeon Forms </textual><link class="po-inline e63 e63" xlink:actuate="onRequest" xlink:href="http://wiki.orbeon.com/forms/doc/developer-guide/orbeon-forms-xforms-compliance-matrix" xlink:show="new" xlink:type="simple"><textual class="po-textual">XForms' implementation</textual></link><textual class="po-textual"> while the test suite is run using an </textual><link class="po-inline e64 e64" xlink:actuate="onRequest" xlink:href="http://wiki.orbeon.com/forms/doc/developer-guide/xml-pipeline-language-xpl" xlink:show="new" xlink:type="simple"><textual class="po-textual">Orbeon
                    Forms' XPL</textual></link><textual class="po-textual"> pipeline. </textual></para></note></section><section class="po-hcontainer e65 e65"><title class="po-block e66 e66"><textual class="po-textual">Step 2: Adding a schema</textual></title><para class="po-block e67 e67"><textual class="po-textual">
            </textual><blockquote class="po-container e68 e68"><para class="po-block e69 e69"><textual class="po-textual">You see, you can already write to-do lists!</textual></para><attribution class="po-block e70 e70"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e71 e71"><para class="po-block e72 e72"><textual class="po-textual">Hold on, we don't have any schema!</textual></para><attribution class="po-block e73 e73"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e74 e74"><para class="po-block e75 e75"><textual class="po-textual">That's true, but you don't have to write a schema to write XML documents.</textual></para><attribution class="po-block e76 e76"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e77 e77"><para class="po-block e78 e78"><textual class="po-textual">I know, but you're here to write a schema! Furthermore, right now we accept anything. I don't want
                    to have XML documents with anything as a root element!</textual></para><attribution class="po-block e79 e79"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e80 e80"><para class="po-block e81 e81"><textual class="po-textual">That's a good reason to write a schema, but before that we need to add a test in our suite
                    first.</textual></para><attribution class="po-block e82 e82"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e83 e83"><textual class="po-textual">Test suite
            (suite.xml):</textual><programlisting class="po-block e84 e84" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;tf:suite xmlns:tf="http://xmlschemata.org/test-first/" xmlns:todo="http://balisage.net/todo#" title="Basic tests"&gt;
    &lt;tf:case title="TODO list toot element" expected="valid" id="root"&gt;
        &lt;todo:list/&gt;
    &lt;/tf:case&gt;
    &lt;tf:case title="Other root element" expected="error" id="other-root"&gt;
        &lt;todo:title&gt;A title&lt;/todo:title&gt;
    &lt;/tf:case&gt;
&lt;/tf:suite&gt;</textual></programlisting></para><para class="po-block e85 e85"><textual class="po-textual">
            </textual><blockquote class="po-container e86 e86"><para class="po-block e87 e87"><textual class="po-textual">Now that we've updated the test suite, we run it again.</textual></para><attribution class="po-block e88 e88"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e89 e89"><title class="po-block e90 e90"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e91 e91"><imageobject class="po-container e92 e92"><imagedata class="po-meta e93 e93" fileref="../../../vol9/graphics/Vlist02/Vlist02-002.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e94 e94"><textual class="po-textual">
            </textual><blockquote class="po-container e95 e95"><para class="po-block e96 e96"><textual class="po-textual">This result was expected, and we can now proceed to create a schema and attach it to the test
                    suite.</textual></para><attribution class="po-block e97 e97"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e98 e98"><programlisting class="po-block e99 e99" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified"
    targetNamespace="http://balisage.net/todo#"
    xmlns="http://balisage.net/todo#"&gt;
    
    &lt;xs:element
        name="list"/&gt;
&lt;/xs:schema&gt;</textual></programlisting><textual class="po-textual">todo.xsd</textual></para><para class="po-block e100 e100"><programlisting class="po-block e101 e101" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;tf:suite
    xmlns:tf="http://xmlschemata.org/test-first/"
    xmlns:todo="http://balisage.net/todo#"
    title="Basic tests"&gt;
    &lt;tf:validation
        href="todo.xsd"
        type="xsd"/&gt;
    &lt;tf:case
        title="TODO list toot element"
        expected="valid"
        id="root"&gt;
        &lt;todo:list/&gt;
    &lt;/tf:case&gt;
    &lt;tf:case
        title="Other root element"
        expected="error"
        id="other-root"&gt;
        &lt;todo:title&gt;A title&lt;/todo:title&gt;
    &lt;/tf:case&gt;
&lt;/tf:suite&gt;</textual></programlisting><textual class="po-textual">suite.xml</textual></para><para class="po-block e102 e102"><textual class="po-textual">
            </textual><blockquote class="po-container e103 e103"><para class="po-block e104 e104"><textual class="po-textual">It's time to test again what we've done.</textual></para><attribution class="po-block e105 e105"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e106 e106"><title class="po-block e107 e107"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e108 e108"><imageobject class="po-container e109 e109"><imagedata class="po-meta e110 e110" fileref="../../../vol9/graphics/Vlist02/Vlist02-003.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure></section><section class="po-hcontainer e111 e111"><title class="po-block e112 e112"><textual class="po-textual">Step 3: Adding list title elements</textual></title><para class="po-block e113 e113"><textual class="po-textual">
            </textual><blockquote class="po-container e114 e114"><para class="po-block e115 e115"><textual class="po-textual">I am happy to see some progress, at last, but I don't want to accept any content in the to-do list
                    element. Can you add list title elements?</textual></para><attribution class="po-block e116 e116"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e117 e117"><para class="po-block e118 e118"><textual class="po-textual">Sure, back to the test suite... </textual></para><attribution class="po-block e119 e119"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e120 e120"><textual class="po-textual">Test suite
            (suite.xml):</textual><programlisting class="po-block e121 e121" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;tf:suite
    xmlns:tf="http://xmlschemata.org/test-first/"
    xmlns:todo="http://balisage.net/todo#"
    title="Basic tests"&gt;
    &lt;tf:validation
        href="todo.xsd"
        type="xsd"/&gt;
    &lt;tf:case
        title="TODO list root element"
        expected="valid"
        id="root"&gt;
        &lt;todo:list/&gt;
    &lt;/tf:case&gt;
    &lt;tf:case
        title="TODO list with a title"
        expected="valid"
        id="list-title"&gt;
        &lt;todo:list&gt;
            &lt;todo:title/&gt;
        &lt;/todo:list&gt;
    &lt;/tf:case&gt;
    &lt;tf:case
        title="Other root element"
        expected="error"
        id="other-root"&gt;
        &lt;todo:title&gt;A title&lt;/todo:title&gt;
    &lt;/tf:case&gt;
&lt;/tf:suite&gt;</textual></programlisting></para><para class="po-block e122 e122"><textual class="po-textual">
            </textual><blockquote class="po-container e123 e123"><para class="po-block e124 e124"><textual class="po-textual">Now that we've updated the test suite, we run it again.</textual></para><attribution class="po-block e125 e125"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e126 e126"><title class="po-block e127 e127"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e128 e128"><imageobject class="po-container e129 e129"><imagedata class="po-meta e130 e130" fileref="../../../vol9/graphics/Vlist02/Vlist02-004.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e131 e131"><textual class="po-textual">
            </textual><blockquote class="po-container e132 e132"><para class="po-block e133 e133"><textual class="po-textual">You see? We do already support list title elements!</textual></para><attribution class="po-block e134 e134"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e135 e135"><para class="po-block e136 e136"><textual class="po-textual">Sure, but I don't want to accept any content in my to-do list. And the title element should be
                    mandatory. And it should not be empty but have at least one character!</textual></para><attribution class="po-block e137 e137"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e138 e138"><para class="po-block e139 e139"><textual class="po-textual">Back to the test suite, then...</textual></para><attribution class="po-block e140 e140"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e141 e141"><textual class="po-textual">Test suite
            (suite.xml):</textual><programlisting class="po-block e142 e142" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;tf:suite
    xmlns:tf="http://xmlschemata.org/test-first/"
    xmlns:todo="http://balisage.net/todo#"
    title="Basic tests"&gt;
    &lt;tf:validation
        href="todo.xsd"
        type="xsd"/&gt;
    &lt;todo:list&gt;
        &lt;tf:case
            title="Empty list element"
            expected="error"
            id="root-empty"/&gt; 
        &lt;todo:title&gt;
            &lt;tf:case title="empty title" expected="error" id="empty-title"/&gt;
            &lt;tf:case title="non empty title" expected="valid" id="non-empty-title"&gt;A title&lt;/tf:case&gt;
        &lt;/todo:title&gt;
        &lt;tf:case
            title="Un expected element"
            expected="error"
            id="unexpected"&gt;
            &lt;todo:foo/&gt;
        &lt;/tf:case&gt;
    &lt;/todo:list&gt;
    &lt;tf:case
        title="Other root element"
        expected="error"
        id="other-root"&gt;
        &lt;todo:title&gt;A title&lt;/todo:title&gt;
    &lt;/tf:case&gt;
&lt;/tf:suite&gt;</textual></programlisting></para><note class="po-container e143 e143"><para class="po-block e144 e144"><textual class="po-textual">This is the first example with non-top-level </textual><code class="po-atom e145 e145"><textual class="po-textual">tf:case</textual></code><textual class="po-textual"> elements. To understand how this
                works, we must look in more detail to the algorithm used by the framework to split a test suite into
                instances. The algorithm consists in two steps:</textual><itemizedlist class="po-table e146 e146"><listitem class="po-container e147 e147"><para class="po-block e148 e148"><textual class="po-textual">Loop over each </textual><code class="po-atom e149 e149"><textual class="po-textual">tf:case</textual></code><textual class="po-textual"> element</textual></para></listitem><listitem class="po-container e150 e150"><para class="po-block e151 e151"><textual class="po-textual">Suppression of the </textual><code class="po-atom e152 e152"><textual class="po-textual">tf:case</textual></code><textual class="po-textual"> elements and of the top level elements which are
                            not ancestors of the current </textual><code class="po-atom e153 e153"><textual class="po-textual">tf:case</textual></code><textual class="po-textual"> element.</textual></para></listitem></itemizedlist><textual class="po-textual">This description may look complex, but the result is a rather intuitive way to define
                sub-trees that are common to several test cases. </textual></para></note><para class="po-block e154 e154"><textual class="po-textual">
            </textual><blockquote class="po-container e155 e155"><para class="po-block e156 e156"><textual class="po-textual">Now that we've updated the test suite, we run it again.</textual></para><attribution class="po-block e157 e157"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e158 e158"><title class="po-block e159 e159"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e160 e160"><imageobject class="po-container e161 e161"><imagedata class="po-meta e162 e162" fileref="../../../vol9/graphics/Vlist02/Vlist02-005.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e163 e163"><textual class="po-textual">
            </textual><blockquote class="po-container e164 e164"><para class="po-block e165 e165"><textual class="po-textual">Looks good, now we can update the schema.</textual></para><attribution class="po-block e166 e166"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e167 e167"><programlisting class="po-block e168 e168" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified"
    targetNamespace="http://balisage.net/todo#"
    xmlns="http://balisage.net/todo#"&gt;
    
    &lt;xs:element
        name="list"&gt;
        &lt;xs:complexType&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element
                    name="title"&gt;
                    &lt;xs:simpleType&gt;
                        &lt;xs:restriction
                            base="xs:token"&gt;
                            &lt;xs:minLength
                                value="1"/&gt;
                        &lt;/xs:restriction&gt;
                    &lt;/xs:simpleType&gt;
                &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
&lt;/xs:schema&gt;</textual></programlisting><textual class="po-textual">todo.xsd</textual></para><para class="po-block e169 e169"><textual class="po-textual">
            </textual><blockquote class="po-container e170 e170"><para class="po-block e171 e171"><textual class="po-textual">And run the test suite again.</textual></para><attribution class="po-block e172 e172"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e173 e173"><title class="po-block e174 e174"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e175 e175"><imageobject class="po-container e176 e176"><imagedata class="po-meta e177 e177" fileref="../../../vol9/graphics/Vlist02/Vlist02-006.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure></section><section class="po-hcontainer e178 e178"><title class="po-block e179 e179"><textual class="po-textual">Step 4: Adding to-do item elements</textual></title><para class="po-block e180 e180"><textual class="po-textual">
            </textual><blockquote class="po-container e181 e181"><para class="po-block e182 e182"><textual class="po-textual">Good. Now I want to add to-do items. And lists should have at least one of them, by the way.</textual></para><attribution class="po-block e183 e183"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e184 e184"><para class="po-block e185 e185"><textual class="po-textual">Sure, back to the test suite...</textual></para><attribution class="po-block e186 e186"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e187 e187"><textual class="po-textual">Test suite
            (suite.xml):</textual><programlisting class="po-block e188 e188" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;tf:suite
    xmlns:tf="http://xmlschemata.org/test-first/"
    xmlns:todo="http://balisage.net/todo#"
    title="Basic tests"&gt;
    &lt;tf:validation
        href="todo.xsd"
        type="xsd"/&gt;
    &lt;tf:case
        title="Empty list element"
        expected="error"
        id="root-empty"&gt;
        &lt;todo:list/&gt;
    &lt;/tf:case&gt;
    &lt;todo:list&gt;
        &lt;!-- Testing title elements --&gt;
        &lt;todo:title&gt;
            &lt;tf:case
                title="empty title"
                expected="error"
                id="empty-title"/&gt;
            &lt;tf:case
                title="non empty title"
                expected="valid"
                id="non-empty-title"&gt;A title&lt;/tf:case&gt;
        &lt;/todo:title&gt;
        &lt;todo:item&gt;
            &lt;todo:title&gt;A title&lt;/todo:title&gt;
        &lt;/todo:item&gt;
        &lt;tf:case
            title="Un expected element"
            expected="error"
            id="unexpected"&gt;
            &lt;todo:foo/&gt;
        &lt;/tf:case&gt;
    &lt;/todo:list&gt;
    &lt;todo:list&gt;
        &lt;!-- Testing todo items --&gt;
        &lt;todo:title&gt;Testing todo items&lt;/todo:title&gt;
        &lt;tf:case
            title="No todo items"
            expected="error"
            id="no-items"/&gt;
        &lt;todo:item&gt;
            &lt;tf:case
                title="empty item"
                expected="error"
                id="empty-item"/&gt;
            &lt;tf:case
                title="item with a title"
                expected="valid"
                id="item-title"&gt;
                &lt;todo:title&gt;A title&lt;/todo:title&gt;
            &lt;/tf:case&gt;
        &lt;/todo:item&gt;
    &lt;/todo:list&gt;
    &lt;tf:case
        title="Other root element"
        expected="error"
        id="other-root"&gt;
        &lt;todo:title&gt;A title&lt;/todo:title&gt;
    &lt;/tf:case&gt;
&lt;/tf:suite&gt;</textual></programlisting></para><para class="po-block e189 e189"><textual class="po-textual">
            </textual><blockquote class="po-container e190 e190"><para class="po-block e191 e191"><textual class="po-textual">Let's see what we get before any update to the schema.</textual></para><attribution class="po-block e192 e192"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e193 e193"><title class="po-block e194 e194"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e195 e195"><imageobject class="po-container e196 e196"><imagedata class="po-meta e197 e197" fileref="../../../vol9/graphics/Vlist02/Vlist02-007.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e198 e198"><textual class="po-textual">
            </textual><blockquote class="po-container e199 e199"><para class="po-block e200 e200"><textual class="po-textual">It's time to update the schema and fix what needs to be fixed.</textual></para><attribution class="po-block e201 e201"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e202 e202"><programlisting class="po-block e203 e203" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified"
    targetNamespace="http://balisage.net/todo#"
    xmlns="http://balisage.net/todo#"&gt;
    
    &lt;xs:element
        name="list"&gt;
        &lt;xs:complexType&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element
                    name="title"&gt;
                    &lt;xs:simpleType&gt;
                        &lt;xs:restriction
                            base="xs:token"&gt;
                            &lt;xs:minLength
                                value="1"/&gt;
                        &lt;/xs:restriction&gt;
                    &lt;/xs:simpleType&gt;
                &lt;/xs:element&gt;
                &lt;xs:element
                    maxOccurs="unbounded"
                    name="item"&gt;
                    &lt;xs:complexType&gt;
                        &lt;xs:sequence&gt;
                            &lt;xs:element
                                name="title"&gt;
                                &lt;xs:simpleType&gt;
                                    &lt;xs:restriction
                                        base="xs:token"&gt;
                                        &lt;xs:minLength
                                            value="1"/&gt;
                                    &lt;/xs:restriction&gt;
                                &lt;/xs:simpleType&gt;
                            &lt;/xs:element&gt;
                        &lt;/xs:sequence&gt;
                    &lt;/xs:complexType&gt;
                &lt;/xs:element&gt;
            &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
&lt;/xs:schema&gt;</textual></programlisting><textual class="po-textual">todo.xsd</textual></para><para class="po-block e204 e204"><textual class="po-textual">
            </textual><blockquote class="po-container e205 e205"><para class="po-block e206 e206"><textual class="po-textual">And now we can check if we get it right.</textual></para><attribution class="po-block e207 e207"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e208 e208"><title class="po-block e209 e209"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e210 e210"><imageobject class="po-container e211 e211"><imagedata class="po-meta e212 e212" fileref="../../../vol9/graphics/Vlist02/Vlist02-008.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure></section><section class="po-hcontainer e213 e213"><title class="po-block e214 e214"><textual class="po-textual">Step 5: Modularizing the schema</textual></title><para class="po-block e215 e215"><textual class="po-textual">
            </textual><blockquote class="po-container e216 e216"><para class="po-block e217 e217"><textual class="po-textual">Eric, you should be ashamed, it's a pure Russian doll schema, not modular at all! Why not define
                    the title and list elements globally?</textual></para><attribution class="po-block e218 e218"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e219 e219"><para class="po-block e220 e220"><textual class="po-textual">Sure, we can do that! If we just change the structure of the schema, we don't need to update the
                    test suite and can work directly on the schema.</textual></para><attribution class="po-block e221 e221"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e222 e222"><programlisting class="po-block e223 e223" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xs:schema
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    elementFormDefault="qualified"
    targetNamespace="http://balisage.net/todo#"
    xmlns="http://balisage.net/todo#"&gt;
    
    &lt;xs:element
        name="list"&gt;
        &lt;xs:complexType&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element
                    ref="title"/&gt;
                &lt;xs:element
                    maxOccurs="unbounded"
                    ref="item"/&gt;
            &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
    &lt;xs:element
        name="title"&gt;
        &lt;xs:simpleType&gt;
            &lt;xs:restriction
                base="xs:token"&gt;
                &lt;xs:minLength
                    value="1"/&gt;
            &lt;/xs:restriction&gt;
        &lt;/xs:simpleType&gt;
    &lt;/xs:element&gt;
    &lt;xs:element
        name="item"&gt;
        &lt;xs:complexType&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element
                    ref="title"/&gt;
            &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
&lt;/xs:schema&gt;</textual></programlisting><textual class="po-textual">todo.xsd</textual></para><para class="po-block e224 e224"><textual class="po-textual">
            </textual><blockquote class="po-container e225 e225"><para class="po-block e226 e226"><textual class="po-textual">But of course, each time we update the schema we must check if we've not introduced any
                    bug.</textual></para><attribution class="po-block e227 e227"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e228 e228"><title class="po-block e229 e229"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e230 e230"><imageobject class="po-container e231 e231"><imagedata class="po-meta e232 e232" fileref="../../../vol9/graphics/Vlist02/Vlist02-009.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e233 e233"><textual class="po-textual">
            </textual><blockquote class="po-container e234 e234"><para class="po-block e235 e235"><textual class="po-textual">Waoo, what's happening now? </textual></para><attribution class="po-block e236 e236"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e237 e237"><para class="po-block e238 e238"><textual class="po-textual">Now that our elements are global in the schema, we accept a valid title as a root element. Is that
                    what you want?</textual></para><attribution class="po-block e239 e239"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e240 e240"><para class="po-block e241 e241"><textual class="po-textual">No way, a title is not a valid list!</textual></para><attribution class="po-block e242 e242"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e243 e243"><para class="po-block e244 e244"><textual class="po-textual">Then we have a number of options... We can go back to local elements, and we can also add a
                    schematron schema to check this constraint.</textual></para><attribution class="po-block e245 e245"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e246 e246"><para class="po-block e247 e247"><textual class="po-textual">Schematron is fine, we'll probably find many other constraints to check in my to-do lists
                    anyway...</textual></para><attribution class="po-block e248 e248"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
            </textual><blockquote class="po-container e249 e249"><para class="po-block e250 e250"><textual class="po-textual">OK. We still don't have to update the test suite since we've not changed our requirement. Let's
                    write this Schematron schema then.</textual></para><attribution class="po-block e251 e251"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e252 e252"><programlisting class="po-block e253 e253" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2"&gt;
    &lt;ns uri="http://balisage.net/todo#" prefix="todo"/&gt;
    &lt;pattern&gt;
        &lt;rule context="/*"&gt;
            &lt;assert test="self::todo:list"&gt;The root element should be a todo:list&lt;/assert&gt;
        &lt;/rule&gt;
    &lt;/pattern&gt;
&lt;/schema&gt;</textual></programlisting><textual class="po-textual">todo.sch</textual></para><para class="po-block e254 e254"><textual class="po-textual">
            </textual><blockquote class="po-container e255 e255"><para class="po-block e256 e256"><textual class="po-textual">Saying that we don't have to update the test suite wasn't totally accurate because the schemas are
                    referenced in ths test suite.</textual></para><attribution class="po-block e257 e257"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><para class="po-block e258 e258"><textual class="po-textual">Test suite
            (suite.xml):</textual><programlisting class="po-block e259 e259" xml:space="preserve"><textual class="po-textual">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;tf:suite
    xmlns:tf="http://xmlschemata.org/test-first/"
    xmlns:todo="http://balisage.net/todo#"
    title="Basic tests"&gt;
    &lt;tf:validation
        href="todo.sch"
        type="sch"/&gt;
    &lt;tf:validation
        href="todo.xsd"
        type="xsd"/&gt;
    &lt;tf:case
        title="Empty list element"
        expected="error"
        id="root-empty"&gt;
        &lt;todo:list/&gt;
    &lt;/tf:case&gt;
    &lt;todo:list&gt;
        &lt;todo:title&gt;
            &lt;tf:case
                title="empty title"
                expected="error"
                id="empty-title"/&gt;
            &lt;tf:case
                title="non empty title"
                expected="valid"
                id="non-empty-title"&gt;A title&lt;/tf:case&gt;
        &lt;/todo:title&gt;
        &lt;todo:item&gt;
            &lt;todo:title&gt;A title&lt;/todo:title&gt;
        &lt;/todo:item&gt;
        &lt;tf:case
            title="Un expected element"
            expected="error"
            id="unexpected"&gt;
            &lt;todo:foo/&gt;
        &lt;/tf:case&gt;
    &lt;/todo:list&gt;
    &lt;todo:list&gt;
        &lt;todo:title&gt;Testing todo items&lt;/todo:title&gt;
        &lt;tf:case
            title="No todo items"
            expected="error"
            id="no-items"/&gt;
        &lt;todo:item&gt;
            &lt;tf:case
                title="empty item"
                expected="error"
                id="empty-item"/&gt;
            &lt;tf:case
                title="item with a title"
                expected="valid"
                id="item-title"&gt;
                &lt;todo:title&gt;A title&lt;/todo:title&gt;
            &lt;/tf:case&gt;
        &lt;/todo:item&gt;
    &lt;/todo:list&gt;
    &lt;tf:case
        title="Other root element"
        expected="error"
        id="other-root"&gt;
        &lt;todo:title&gt;A title&lt;/todo:title&gt;
    &lt;/tf:case&gt;
&lt;/tf:suite&gt;</textual></programlisting></para><para class="po-block e260 e260"><textual class="po-textual">
            </textual><blockquote class="po-container e261 e261"><para class="po-block e262 e262"><textual class="po-textual">Time to see if we've fixed our issue!</textual></para><attribution class="po-block e263 e263"><textual class="po-textual">Expert</textual></attribution></blockquote><textual class="po-textual">
        </textual></para><figure class="po-container e264 e264"><title class="po-block e265 e265"><textual class="po-textual">Test results</textual></title><mediaobject class="po-container e266 e266"><imageobject class="po-container e267 e267"><imagedata class="po-meta e268 e268" fileref="../../../vol9/graphics/Vlist02/Vlist02-010.png"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e269 e269"><textual class="po-textual">
            </textual><blockquote class="po-container e270 e270"><para class="po-block e271 e271"><textual class="po-textual">Great, we've made it, thanks!</textual></para><attribution class="po-block e272 e272"><textual class="po-textual">Customer</textual></attribution></blockquote><textual class="po-textual">
        </textual></para></section><section class="po-hcontainer e273 e273"><title class="po-block e274 e274"><textual class="po-textual">Want to try it?</textual></title><para class="po-block e275 e275"><textual class="po-textual">The application used to run the test suite and display its result is available at </textual><link class="po-inline e276 e276" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://svn.xmlschemata.org/repository/downloads/tefisc/</textual></link><textual class="po-textual">.</textual></para><para class="po-block e277 e277"><textual class="po-textual">If you just want to understand how the test suite is split into XML instances, you can have a look at
                </textual><link class="po-inline e278 e278" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/apps/tefisc/" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/apps/tefisc/</textual></link><textual class="po-textual"> .</textual></para><para class="po-block e279 e279"><textual class="po-textual">In this directory:</textual><itemizedlist class="po-table e280 e280"><listitem class="po-container e281 e281"><para class="po-block e282 e282"><link class="po-inline e283 e283" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/apps/tefisc/split-tests.xsl" xlink:show="new" xlink:type="simple"><textual class="po-textual">split-tests.xsl</textual></link><textual class="po-textual"> is the XSLT transformation that splits a test suite into top level
                        element test cases. This transformation has no dependence on Orbeon Forms and can be manually
                        run against a test suite.</textual></para></listitem><listitem class="po-container e284 e284"><para class="po-block e285 e285"><textual class="po-textual">
                        </textual><link class="po-inline e286 e286" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/apps/tefisc/run-test.xpl" xlink:show="new" xlink:type="simple"><textual class="po-textual">run-test.xpl</textual></link><textual class="po-textual"> is the XPL pipeline that runs a test case.</textual></para></listitem><listitem class="po-container e287 e287"><para class="po-block e288 e288"><textual class="po-textual">
                        </textual><link class="po-inline e289 e289" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/apps/tefisc/list-suites.xpl" xlink:show="new" xlink:type="simple"><textual class="po-textual">list-suites.xpl</textual></link><textual class="po-textual"> is the XPL pipeline that gives the list available test cases.</textual></para></listitem><listitem class="po-container e290 e290"><para class="po-block e291 e291"><textual class="po-textual">
                        </textual><link class="po-inline e292 e292" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/apps/tefisc/view.xhtml" xlink:show="new" xlink:type="simple"><textual class="po-textual">view.xhtml</textual></link><textual class="po-textual">  is the XForms application that displays the results.</textual></para></listitem></itemizedlist></para><para class="po-block e293 e293"><textual class="po-textual">To install this application:</textual><itemizedlist class="po-table e294 e294"><listitem class="po-container e295 e295"><para class="po-block e296 e296"><link class="po-inline e297 e297" xlink:actuate="onRequest" xlink:href="http://wiki.orbeon.com/forms/doc/developer-guide/admin/installing" xlink:show="new" xlink:type="simple"><textual class="po-textual">Install
                            Orbeon Forms</textual></link></para></listitem><listitem class="po-container e298 e298"><para class="po-block e299 e299"><textual class="po-textual">Copy  the  </textual><link class="po-inline e300 e300" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/" xlink:show="new" xlink:type="simple"><textual class="po-textual">orbeon-resources/</textual></link><textual class="po-textual">  directory under </textual><code class="po-atom e301 e301"><textual class="po-textual">/WEB-INF/resources/apps/</textual></code><textual class="po-textual"> in your
                        orbeon webapp directory</textual></para></listitem><listitem class="po-container e302 e302"><para class="po-block e303 e303"><emphasis class="po-inline e304 e304" role="bold"><textual class="po-textual">Or</textual></emphasis><textual class="po-textual">, alternatively, copy the </textual><link class="po-inline e305 e305" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/apps/tefisc/" xlink:show="new" xlink:type="simple"><textual class="po-textual">tefisc/</textual></link><textual class="po-textual"> directory wherever you want, edit </textual><link class="po-inline e306 e306" xlink:actuate="onRequest" xlink:href="http://svn.xmlschemata.org/repository/downloads/tefisc/orbeon-resources/web.xml.sav" xlink:show="new" xlink:type="simple"><textual class="po-textual">web.xml.sav</textual></link><textual class="po-textual"> to replace
                            </textual><code class="po-atom e307 e307"><textual class="po-textual">&lt;param-value&gt;/home/vdv/projects/tefisc/orbeon-resources&lt;/param-value&gt;</textual></code><textual class="po-textual">
                        by the location of this directory on your filesystem, replace </textual><code class="po-atom e308 e308"><textual class="po-textual">/WEB-INF/web.xml</textual></code><textual class="po-textual"> by
                        this file and restart your application server.</textual></para></listitem></itemizedlist></para></section></article></classedDocument>