<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.2"><title class="po-block e1 e1"><textual class="po-textual">Topic maps in near-real time</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2008</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 12 - 15, 2008</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">A new topic map module for the Drupal open-source content management system now supports the publication of collaboratively written topic maps in near-real time, using a plug-in architecture that can be extended to support specific information sets.</textual></para></abstract><author class="po-record e8 e8"><personname class="po-record e9 e9"><firstname class="po-field e10 e10"><textual class="po-textual">Sam</textual></firstname><surname class="po-field e11 e11"><textual class="po-textual">Hunting</textual></surname></personname><personblurb class="po-container e12 e12"><para class="po-block e13 e13"><link class="po-inline e14 e14" xlink:actuate="onRequest" xlink:href="http://www.universalpantograph.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Sam Hunting</textual></link><textual class="po-textual"> has been toiling in the vineyards of markup and topic mapping for many years, for large companies and small. This time, thanks to the "arbor" of Drupal, the vintage is bottled and ready to ship. </textual></para></personblurb></author><legalnotice class="po-container e15 e15"><para class="po-block e16 e16"><textual class="po-textual">Copyright © 2008 by Sam Hunting</textual></para></legalnotice></info><section class="po-hcontainer e17 e17"><title class="po-block e18 e18"><textual class="po-textual">Introduction</textual></title><para class="po-block e19 e19"><emphasis class="po-inline e20 e20" role="bold"><textual class="po-textual">Why did you adopt a Q&amp;A format?</textual></emphasis></para><para class="po-block e21 e21"><textual class="po-textual">Writer’s block. When I found myself making a process flow diagram figure, I felt there are a lot of people here who can do that better than I can. So why do it? Ditto for topic map theory, where I’m sure I’ve committed at least one major howler. What I do claim to have is an topic map application, complete with a colorable disclosure, that can deliver unique value to users on a widely used platform, whose development has been informed by all the work we’ve done together on topic maps over the years.</textual></para><para class="po-block e22 e22"><emphasis class="po-inline e23 e23" role="bold"><textual class="po-textual">Why did you write a topic map application?</textual></emphasis></para><para class="po-block e24 e24"><textual class="po-textual">I believe that the news, like food, should be good, clean, fair--and local: </textual><emphasis class="po-inline e25 e25" role="ital"><textual class="po-textual">This</textual></emphasis><textual class="po-textual"> toxic waste dump, </textual><emphasis class="po-inline e26 e26" role="bital"><textual class="po-textual">this</textual></emphasis><textual class="po-textual"> voting machine debacle, </textual><emphasis class="po-inline e27 e27" role="ital"><textual class="po-textual">this</textual></emphasis><textual class="po-textual"> housing authority scandal, </textual><emphasis class="po-inline e28 e28" role="ital"><textual class="po-textual">this</textual></emphasis><textual class="po-textual"> corrupt official. Contemporary journalism is neither good, clean, fair, nor local (see </textual><link class="po-inline e29 e29" xlink:actuate="onRequest" xlink:href="http://www.dailyhowler.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Bob Somerby</textual></link><textual class="po-textual">). However, local news gatherers must also be able to connect their narratives to other, similar narratives that contain subject matter of interest to them. (Toxic Waste, Inc., knows all about Localities A and B, but unless Localities A and B know about each other, any narrative they create about Toxic Waste, Inc. will necessarily remain partial, and any local action based on that narrative could well lack critical information.) Hence, there is a requirement for a distributed information system that would enables localities to discover subjects of mutual interest, perhaps serendipitously, intrinsic to content that they themselves have created.</textual></para><para class="po-block e30 e30"><textual class="po-textual">Hence topic maps.</textual></para><para class="po-block e31 e31"><emphasis class="po-inline e32 e32" role="bold"><textual class="po-textual">Why did you write your topic map application in Drupal?</textual></emphasis></para><para class="po-block e33 e33"><textual class="po-textual">Subjects are a function of content:</textual></para><equation class="po-container e34 e34"><mathphrase class="po-block e35 e35"><textual class="po-textual">S = f(c)</textual></mathphrase></equation><para class="po-block e36 e36"><textual class="po-textual">and </textual><link class="po-inline e37 e37" xlink:actuate="onRequest" xlink:href="http://drupal.org/" xlink:show="new" xlink:type="simple"><textual class="po-textual">Drupal</textual></link><textual class="po-textual"> is the content management system </textual><emphasis class="po-inline e38 e38" role="ital"><textual class="po-textual">par excellence</textual></emphasis><textual class="po-textual">. Drupal is open source (GPL 2.0); Drupal has a vibrant community; Drupal is hot, being blessed by Google ("Summer of Code"); Drupal has superior community building and categorization tools; and I am intimately familiar with the platform, having built, administered, and moderated a Technorati 5000 community site for several years. Drupal also adds functionality by adding modules, so I determined to write a topic map module for Drupal.</textual></para></section><section class="po-hcontainer e39 e39"><title class="po-block e40 e40"><textual class="po-textual">Proxy disclosure</textual></title><para class="po-block e41 e41"><emphasis class="po-inline e42 e42" role="bold"><textual class="po-textual">Can you disclose your proxies?</textual></emphasis></para><para class="po-block e43 e43"><textual class="po-textual">Yes.</textual></para><para class="po-block e44 e44"><emphasis class="po-inline e45 e45" role="bold"><textual class="po-textual">What are your proxies?</textual></emphasis></para><para class="po-block e46 e46"><textual class="po-textual">Here is the </textual><link class="po-inline e47 e47" xlink:actuate="onRequest" xlink:href="http://kill.devc.at/node/92" xlink:show="new" xlink:type="simple"><textual class="po-textual">"proxy spider"</textual></link><textual class="po-textual"> diagram for my proxy; it works, at least, like the BigAssert assertion model devised by </textual><link class="po-inline e48 e48" xlink:actuate="onRequest" xlink:href="http://www.idealliance.org/papers/extreme/proceedings/html/2005/Newcomb01/EML2005Newcomb01.html#t2-6" xlink:show="new" xlink:type="simple"><textual class="po-textual">Steve Newcomb</textual></link><textual class="po-textual">. Keys that are not "map," "association caption," or "association type" are roles. Values with role keys are players.</textual></para><figure class="po-container e49 e49"><mediaobject class="po-container e50 e50"><imageobject class="po-container e51 e51"><imagedata class="po-meta e52 e52" fileref="../../../vol1/graphics/Hunting01/Hunting01-001.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e53 e53"><textual class="po-textual">Player properties may be related to a notation processor. The presence of a processor may, or may not, affect the subject identity of the proxy that contains the property.</textual></para><figure class="po-container e54 e54"><mediaobject class="po-container e55 e55"><imageobject class="po-container e56 e56"><imagedata class="po-meta e57 e57" fileref="../../../vol1/graphics/Hunting01/Hunting01-002.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e58 e58"><emphasis class="po-inline e59 e59" role="bold"><textual class="po-textual">When are two proxies the same?</textual></emphasis></para><para class="po-block e60 e60"><textual class="po-textual">Two proxies are the same when they are in the same map, their type properties are the sam, and their role/player combinations are the same, and if a player has a notation that can impact subject identity, both notations are the same.</textual></para><para class="po-block e61 e61"><emphasis class="po-inline e62 e62" role="bold"><textual class="po-textual">Where are the individual topics?</textual></emphasis></para><para class="po-block e63 e63"><textual class="po-textual">There are no individual topics, because no topic can exist in isolation. So, in my disclosure, they’re properties. And I have to admit, that when I looked at </textual><link class="po-inline e64 e64" xlink:actuate="onRequest" xlink:href="http://kill.devc.at/taxonomy/term/40" xlink:show="new" xlink:type="simple"><textual class="po-textual">Barta's handy guide to the TMRM</textual></link><textual class="po-textual">, I couldn’t make my diagram work any other way. And this may be the howler to which my introduction alludes!</textual></para><para class="po-block e65 e65"><emphasis class="po-inline e66 e66" role="bold"><textual class="po-textual">How can users navigate using your proxies?</textual></emphasis></para><para class="po-block e67 e67"><textual class="po-textual">As if properties were holes in a punch card:</textual></para><figure class="po-container e68 e68"><mediaobject class="po-container e69 e69"><imageobject class="po-container e70 e70"><imagedata class="po-meta e71 e71" fileref="../../../vol1/graphics/Hunting01/Hunting01-003.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure></section><section class="po-hcontainer e72 e72"><title class="po-block e73 e73"><textual class="po-textual">Implementation</textual></title><para class="po-block e74 e74"><emphasis class="po-inline e75 e75" role="bold"><textual class="po-textual">What were the main challenges you encountered during development?</textual></emphasis></para><para class="po-block e76 e76"><textual class="po-textual">Different layers of the LAMP stack needed different representations.
    </textual><emphasis class="po-inline e77 e77" role="ital"><textual class="po-textual">User input</textual></emphasis><textual class="po-textual"> required a representation that would work in a text box (since JavaScript editors are not ready, and would be WYSIWYG if they were, and XML editors are not available either). However,
user input is not appropriate for </textual><emphasis class="po-inline e78 e78" role="ital"><textual class="po-textual">processing</textual></emphasis><textual class="po-textual"> proxies than processing anglebrackets instead of the using the DOM would be. Finally, a relational representation is needed for storage.</textual></para><para class="po-block e79 e79"><emphasis class="po-inline e80 e80" role="bold"><textual class="po-textual">What markup did you devise for user input?</textual></emphasis></para><para class="po-block e81 e81"><textual class="po-textual">A  wiki-like markup language:</textual></para><figure class="po-container e82 e82"><mediaobject class="po-container e83 e83"><imageobject class="po-container e84 e84"><imagedata class="po-meta e85 e85" fileref="../../../vol1/graphics/Hunting01/Hunting01-004.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e86 e86"><textual class="po-textual">The wporkflow envisaged is user integrating associations into actual text.
The markup is reasonably easy for the user to enter, and reasonably easy for the application to parse.</textual></para><para class="po-block e87 e87"><textual class="po-textual">As can be seen from the sample, </textual><code class="po-atom e88 e88"><textual class="po-textual">[[</textual></code><textual class="po-textual"> and </textual><code class="po-atom e89 e89"><textual class="po-textual">]]</textual></code><textual class="po-textual"> delimit the proxy. </textual><code class="po-atom e90 e90"><textual class="po-textual">:</textual></code><textual class="po-textual"> delimits the properties of the proxy. Only the value of the player property is visible.
(However, hiding a player is such a ubiquitous use case there's a  special syntax for it: A hat before property delimiter hides the player (</textual><code class="po-atom e91 e91"><textual class="po-textual">^:Bart</textual></code><textual class="po-textual"> hides "Bart"). </textual><code class="po-atom e92 e92"><textual class="po-textual">=</textual></code><textual class="po-textual"> adds a notation to a player property, a la </textual><code class="po-atom e93 e93"><textual class="po-textual"> [[ ... text:Federalist 51=federalist ...]]]</textual></code><textual class="po-textual"> (Later, we will see how the plugin for the federalist notation would process the player.)</textual></para><para class="po-block e94 e94"><textual class="po-textual">Implementation uses Drupal’s nodeapi hook; when content is being processed, any function of the form [drupal_module]_nodeapi is invoked, with the content as input and output for the function. So, topicmap_nodeapi takes content marked up as proxies and transforms it to the data structure used for processing the proxy, to which we now turn.</textual></para><para class="po-block e95 e95"><emphasis class="po-inline e96 e96" role="bold"><textual class="po-textual">What data structure did you use for processing?</textual></emphasis></para><para class="po-block e97 e97"><textual class="po-textual">A tuple-like representation. Here is a sample:</textual></para><figure class="po-container e98 e98"><mediaobject class="po-container e99 e99"><imageobject class="po-container e100 e100"><imagedata class="po-meta e101 e101" fileref="../../../vol1/graphics/Hunting01/Hunting01-005.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e102 e102"><textual class="po-textual">Proxies need to be transformed from user input in are processed in several ways: for TOCs, for legends, for validation, for plugins, etc.
Because the wiki syntax isn’t suitable for PHP processing, we adopt the PHP mindset and represent proxies as arrays, so we get to use PHP’s rich variety of array functions. </textual></para><para class="po-block e103 e103"><textual class="po-textual">After a false start using a keyed array (a proxy can have duplicate keys), I adopted the tuple representation shown. (Jack Park and I did a tuple representation of topic maps long ago, on the theory, which I still believe to be correct, that a Linda-like tuple space implementation would be  great way to federate topic maps, and this idea was inspired by that work.</textual></para><para class="po-block e104 e104"><textual class="po-textual">This representation is efficient since the map value is always at position three, roles are every fourth array element starting at 12, roles are every fourth array element starting at 16, and so on.
It will also map cleanly to XTM and JSON output formats.</textual></para><para class="po-block e105 e105"><textual class="po-textual">Implementation (still in topicmap_nodeapi) takes post content with wiki-like markup embedded, parses it, rips out the properties for each proxy, validates each tuple either generically or by type, and associates the tuple with an offset ("8090","8096") back into the content. The tuple is then transformed into HTML by adding generic span, div, and class markup, and notation processing (for example, the federalist notation processor might transform its player data into an HTML A tag linking to an online version of the Federalist Papers).</textual></para><para class="po-block e106 e106"><emphasis class="po-inline e107 e107" role="bold"><textual class="po-textual">What relational structure did you use for storage?</textual></emphasis></para><para class="po-block e108 e108"><textual class="po-textual">A table that permits result sets like this, which you will shortly see is convenient for generation navigation tables, or TOCs:</textual></para><figure class="po-container e109 e109"><mediaobject class="po-container e110 e110"><imageobject class="po-container e111 e111"><imagedata class="po-meta e112 e112" fileref="../../../vol1/graphics/Hunting01/Hunting01-006.jpg" format="jpg" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e113 e113"><textual class="po-textual">(I apologize for not having a diagram; I couldn’t find a diagrammer that works with Postgres on OS X.) Here is the basic idea.</textual></para><para class="po-block e114 e114"><textual class="po-textual">In the text box, users enter text values ("Bart","Alberto Gonzales"); it wouldn’t be sensible to have users do anything else. However, all processing on the database side takes place through manipulating integers called (adopting Drupal jargon), "nids," or node IDs. Therefore:</textual></para><itemizedlist class="po-table e115 e115"><listitem class="po-container e116 e116"><para class="po-block e117 e117"><textual class="po-textual">There is a table of values</textual></para></listitem><listitem class="po-container e118 e118"><para class="po-block e119 e119"><textual class="po-textual">There is a mapping table of value to nid</textual></para></listitem><listitem class="po-container e120 e120"><para class="po-block e121 e121"><textual class="po-textual">There is a table of nids (All logging data (creator, date created) goes on the nid table)</textual></para></listitem><listitem class="po-container e122 e122"><para class="po-block e123 e123"><textual class="po-textual">There is a "big table" with columns for each property. The columns are: A[ssociation],[t]type,[r]ole,[p]layer,[c]casting,[n]otation, and ac (association caption). Alas, ac ("association caption") and notation are optional, and so these columns can contain ugly NULLs.</textual></para></listitem><listitem class="po-container e124 e124"><para class="po-block e125 e125"><textual class="po-textual">The data in each column is a foreign key into the table of nids.</textual></para></listitem><listitem class="po-container e126 e126"><para class="po-block e127 e127"><textual class="po-textual">There are ancillary mapping tables of association to source (the Drupal post), nid to its autogenerated Drupal page, and so on.</textual></para></listitem></itemizedlist><para class="po-block e128 e128"><textual class="po-textual">The implementation is almost certainly naïve; I never did figure out a way to cram an association into a single row, because the role and player combinations vary in number. In practice, that means that to grab a single association, you need to grab all the rows that have the same values for a, t, r, and p (and are in the same map, and have notations that either do not affect  subject identity, or are the same) and no others. Relational purists also take the view that auto-generating nids as relational keys is pernicious; however, that’s how Drupal does things. However, the implementation is operating fast enough to deliver value to users at the required scale.</textual></para></section><section class="po-hcontainer e129 e129"><title class="po-block e130 e130"><textual class="po-textual">Plugin Architecture</textual></title><para class="po-block e131 e131"><emphasis class="po-inline e132 e132" role="bold"><textual class="po-textual">What are the advantages of notation plugins?</textual></emphasis></para><para class="po-block e133 e133"><textual class="po-textual">Notation plugins allow the administration add data-driven functionality to a Drupal site that uses the topic map module. For example, entering the following proxy:</textual></para><programlisting class="po-block e134 e134" xml:space="preserve"><textual class="po-textual">[[test:test_type_7[role_7_2_1:player_7_2_1] and [role_7_2_2:364 U.S. 507=caselaw]]</textual></programlisting><para class="po-block e135 e135"><textual class="po-textual">Uses the caselaw plugin, and generates a sidebar with metadata about the case:</textual></para><figure class="po-container e136 e136"><mediaobject class="po-container e137 e137"><imageobject class="po-container e138 e138"><imagedata class="po-meta e139 e139" fileref="../../../vol1/graphics/Hunting01/Hunting01-007.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e140 e140"><emphasis class="po-inline e141 e141" role="bold"><textual class="po-textual">What notation plugins did you include?</textual></emphasis></para><para class="po-block e142 e142"><textual class="po-textual">There are notation plugins for aircraft tail numbers, email addresses, citations to the Bible, the U.S. Constitution, and the Federalist Papers, and geocoded maps. </textual></para><para class="po-block e143 e143"><textual class="po-textual">The geocding/mapping plugin takes a physical address as input, geocodes it, and returns a map, which illustrates the distinction between this topic map implementation, and most other approaches to the semantic web: The plugins operate at the data level, not the resource level, and integrate into content at a point of the author’s own choosing. This is quite distinct from the model where resources are vertically organized by site, and then "mashed up" into a new resource that is still not integrated into content.</textual></para><para class="po-block e144 e144"><emphasis class="po-inline e145 e145" role="bold"><textual class="po-textual">What are the advantages of association type plugins?</textual></emphasis></para><para class="po-block e146 e146"><textual class="po-textual">In a word, validation.</textual></para><para class="po-block e147 e147"><textual class="po-textual">Validation parameters can be set by the user:</textual></para><figure class="po-container e148 e148"><mediaobject class="po-container e149 e149"><imageobject class="po-container e150 e150"><imagedata class="po-meta e151 e151" fileref="../../../vol1/graphics/Hunting01/Hunting01-008.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e152 e152"><textual class="po-textual">And enforced by the application:</textual></para><figure class="po-container e153 e153"><mediaobject class="po-container e154 e154"><imageobject class="po-container e155 e155"><imagedata class="po-meta e156 e156" fileref="../../../vol1/graphics/Hunting01/Hunting01-009.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e157 e157"><textual class="po-textual">The interface is crude, being CSS-driven and therefore not dynamic, but usable.</textual></para><para class="po-block e158 e158"><emphasis class="po-inline e159 e159" role="bold"><textual class="po-textual">What type plugins did you include?</textual></emphasis></para><para class="po-block e160 e160"><textual class="po-textual">Plugins for the types required by ISO 13250 (class/instance and supertype subtype), as well as types for asserting that two properties are the same, and an "org" type, for analyzing who reports to whom inside an organization (like, in the sample topic map, the Bush administration).</textual></para><para class="po-block e161 e161"><emphasis class="po-inline e162 e162" role="bold"><textual class="po-textual">What are the advantages of search plugins?</textual></emphasis></para><para class="po-block e163 e163"><emphasis class="po-inline e164 e164" role="bold"><textual class="po-textual">What search plugins did you include?</textual></emphasis></para><para class="po-block e165 e165"><textual class="po-textual">The topic map paradigm is extremely rich, and provides an almost unlimited number of ways to "connect the dots." However, since we can’t know method appropriate to navigating a corpus before actually knowing the corpus, it makes sense to enable developers to create plugins, rather than decide in advance that I know better than they do.</textual></para><para class="po-block e166 e166"><textual class="po-textual">For example, the "degrees" plugin:</textual></para><figure class="po-container e167 e167"><mediaobject class="po-container e168 e168"><imageobject class="po-container e169 e169"><imagedata class="po-meta e170 e170" fileref="../../../vol1/graphics/Hunting01/Hunting01-010.jpg" format="jpg"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e171 e171"><textual class="po-textual">This example shows that indeed the head bone is connected to the neck bone, the neck bone is connected to the back bone, the back bone is connected to the hip bone, the hip bone is connected to the thigh bone, and the thigh bone is connected to the knee bone. Which may seem trivial, unless you want to know how many degrees separate Alberto Gonzales from Monica Lewinsky, say. (Note that the implementation does </textual><emphasis class="po-inline e172 e172" role="ital"><textual class="po-textual">not</textual></emphasis><textual class="po-textual"> depend on the type of association in which the player participates, but solely on building a linked list associations with player overlap. And sometimes, indeed, "you can't get there from here.")</textual></para></section><section class="po-hcontainer e173 e173"><title class="po-block e174 e174"><textual class="po-textual">Interlude: The TOC</textual></title><para class="po-block e175 e175"><emphasis class="po-inline e176 e176" role="bold"><textual class="po-textual">Why is your presentation of the topic map so resolutely un-Flashy?</textual></emphasis></para><para class="po-block e177 e177"><textual class="po-textual">Here is what the questioner means by "resolutely un-Flashy." </textual></para><figure class="po-container e178 e178"><mediaobject class="po-container e179 e179"><imageobject class="po-container e180 e180"><imagedata class="po-meta e181 e181" fileref="../../../vol1/graphics/Hunting01/Hunting01-011.jpg" format="jpg" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></figure><para class="po-block e182 e182"><textual class="po-textual">How the TOC works, from top left: Each numbered "stripe" is a single proxy, and each column is a property of the proxy. The downward pointing blue triangles link down into the occurrence of the proxy in the content. Further, each type plugin annotates its proxies by adding a footnote to a proxy’s property, where appropriate. The footnote shows metadata for the proxy via a "hover," and links to the TOC legend, also generated by the plugin. For example, all instances of "cat" are footnoted with "2," in blue, color-coding the note as applying to a supertype/subtype type of proxy. Clicking on footnote "2" takes the user to note "2" in the legend, where the user may click on the "cat" to go to a (dynamically created) page that shows all the proxies that use the "cat" property, or the user may click on the outline icon in parenthesis, and go to the "cat" node on the type page, which shows the type hierarchy. (Different type plugins, as you see, have different colors, icons, and also organize their pages differently.) Naturally, if a new plugin in were added, it to would add its own notes, legend, and have is own page, assuming it used the plugin API.</textual></para><para class="po-block e183 e183"><textual class="po-textual">This is not sexy; most designers prefer a graph style presentation, with nodes and arcs, but I think that’s "Visualization That Doesn’t Help You Vizualize." Such an approach has a number of disadvantages: The graphs are generally a Flash presentation or equivalent and so are not searchable via search engines, are static, and can’t evolve with the community, and are not integrated into any content. In addition, they take up an awful lot of space on the page, and consume a lot of bandwidth. (There’s no reason to assume that net neutrality will continue, and so low bandwidth applications may assume increasing importance.) The un-Flashy TOC presented here has none of those disadvantages, and all of the functionality listed, none of which the Flash approach offers.</textual></para></section><section class="po-hcontainer e184 e184"><title class="po-block e185 e185"><textual class="po-textual">Example</textual></title><para class="po-block e186 e186"><emphasis class="po-inline e187 e187" role="bold"><textual class="po-textual">Do you have an example of a topic map that uses your application?</textual></emphasis></para><para class="po-block e188 e188"><textual class="po-textual">Yes: </textual><link class="po-inline e189 e189" xlink:actuate="onRequest" xlink:href="http://www.109876543210.net/node/443" xlink:show="new" xlink:type="simple"><textual class="po-textual">The Criminal Bush Regime</textual></link><textual class="po-textual">. Based on stories from the Washington Post and Slate, it contrasts the prose and parallel Flash-y approach to a topic map. Although it is not "local" (except inside the Beltway), I like to think it's good, clean, and fair, and a community could add value to it.</textual></para></section><section class="po-hcontainer e190 e190"><title class="po-block e191 e191"><textual class="po-textual">Conclusion</textual></title><para class="po-block e192 e192"><emphasis class="po-inline e193 e193" role="bold"><textual class="po-textual">What would you say to anyone thinking about using topic maps?</textual></emphasis></para><para class="po-block e194 e194"><textual class="po-textual">Great paradigm, great people, great software.</textual></para><para class="po-block e195 e195"><emphasis class="po-inline e196 e196" role="bold"><textual class="po-textual">Can I download your module?</textual></emphasis></para><para class="po-block e197 e197"><textual class="po-textual">Great paradigm, great people, great software.</textual></para><para class="po-block e198 e198"><emphasis class="po-inline e199 e199" role="bold"><textual class="po-textual">Is the latest version of the topi map module for Drupal available for download?</textual></emphasis></para><para class="po-block e200 e200"><textual class="po-textual">Yes, at </textual><link class="po-inline e201 e201" xlink:actuate="onRequest" xlink:href="http://www.universalpantograph.com/" xlink:show="new" xlink:type="simple"><textual class="po-textual">The Universal Pantograph</textual></link></para><para class="po-block e202 e202"><emphasis class="po-inline e203 e203" role="bold"><textual class="po-textual">Anything else?</textual></emphasis></para><para class="po-block e204 e204"><textual class="po-textual">Humongous thanks to the conference organizers for their patience, and for Balisage, too.</textual></para></section></article></classedDocument>