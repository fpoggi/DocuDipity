<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.3"><title class="po-block e1 e1"><textual class="po-textual">Igel:  Comparing document grammars using XQuery</textual></title><info class="po-record e2 e2"><confgroup class="po-record e3 e3"><conftitle class="po-field e4 e4"><textual class="po-textual">Balisage: The Markup Conference 2013</textual></conftitle><confdates class="po-field e5 e5"><textual class="po-textual">August 6 - 9, 2013</textual></confdates></confgroup><abstract class="po-container e6 e6"><para class="po-block e7 e7"><textual class="po-textual">Igel is a small XQuery-based web application for
        examining a collection of document grammars; in particular,
        for comparing related document grammars to get a better
        overview of their differences and similarities. In its initial
        form, Igel reads only DTDs and provides only simple lists of
        constructs in them (elements, attributes, notations, parameter
        entities). Our continuing work is aimed at making Igel provide
        more sophisticated and useful information about document
        grammars and building the application into a useful tool for
        the analysis (and the maintenance!) of families of related
        document grammars. </textual></para></abstract><author class="po-record e8 e8"><personname class="po-record e9 e9"><firstname class="po-field e10 e10"><textual class="po-textual">C. M.</textual></firstname><surname class="po-field e11 e11"><textual class="po-textual">Sperberg-McQueen</textual></surname></personname><personblurb class="po-container e12 e12"><para class="po-block e13 e13"><textual class="po-textual">
          C. M. Sperberg-McQueen is the founder of Black Mesa Technologies LLC,
          a consultancy specializing in the use of descriptive markup to help
          memory institutions preserve cultural heritage information for the
          long haul. He has served as co-editor of the XML 1.0 specification,
          the Guidelines of the Text Encoding Initiative, and the XML Schema
          Definition Language (XSD) 1.1 specification. He holds a doctorate
          in comparative literature.
        </textual></para></personblurb><affiliation class="po-record e14 e14"><orgname class="po-block e15 e15"><textual class="po-textual">Black Mesa Technologies LLC</textual></orgname></affiliation><email class="po-field e16 e16"><textual class="po-textual">cmsmcq@blackmesatech.com</textual></email></author><author class="po-record e17 e17"><personname class="po-record e18 e18"><firstname class="po-field e19 e19"><textual class="po-textual">Oliver</textual></firstname><surname class="po-field e20 e20"><textual class="po-textual">Schonefeld</textual></surname></personname><personblurb class="po-container e21 e21"><para class="po-block e22 e22"><textual class="po-textual">
          Oliver Schonefeld works at the Institut für Deutsche Sprache
          (Institute for the German Language) in Mannheim and is involved in
          the projects CLARIN and TextGrid. He studied computer science with
          specialization in text technology at Bielefeld University until 2005.
          After graduating he worked as a researcher at Bielefeld University
          and later at Tübingen University's collaborative research center
          Linguistic Data Structures. His major research interests are the
          limitations of markup languages (especially overlapping markup) and
          the use of markup languages in linguistic description of language data.
        </textual></para></personblurb><affiliation class="po-record e23 e23"><orgname class="po-block e24 e24"><textual class="po-textual">Institut für Deutsche Sprache (IDS)</textual></orgname></affiliation><email class="po-field e25 e25"><textual class="po-textual">schonefeld@ids-mannheim.de</textual></email></author><author class="po-record e26 e26"><personname class="po-record e27 e27"><firstname class="po-field e28 e28"><textual class="po-textual">Marc</textual></firstname><surname class="po-field e29 e29"><textual class="po-textual">Kupietz</textual></surname></personname><personblurb class="po-container e30 e30"><para class="po-block e31 e31"><textual class="po-textual">
          </textual><textual class="po-textual">
        </textual></para></personblurb><affiliation class="po-record e32 e32"><orgname class="po-block e33 e33"><textual class="po-textual">Institut für Deutsche Sprache (IDS)</textual></orgname></affiliation><email class="po-field e34 e34"><textual class="po-textual">kupietz@ids-mannheim.de</textual></email></author><author class="po-record e35 e35"><personname class="po-record e36 e36"><firstname class="po-field e37 e37"><textual class="po-textual">Harald</textual></firstname><surname class="po-field e38 e38"><textual class="po-textual">Lüngen</textual></surname></personname><personblurb class="po-container e39 e39"><para class="po-block e40 e40"><textual class="po-textual">
          Harald Lüngen has been a researcher in the area of corpus linguistics
          at the Institut für Deutsche Sprache (Institute for the German
          Language) in Mannheim, Germany, since 2011, specialising in the
          construction and maintenance of the German Reference Corpus DeReKo
          and in methods of corpus analysis. He was a researcher at the Centre
          for Media and Interactivity at Justus-Liebig-Universität Gießen
          (2008–2011), in the Research group Text-technological modelling
          of information (2002–2008) and in the Verbmobil project
          (1995–2000). He also worked as a project manager at
          Lingsoft Oy, Helsinki (2000–2002). He got his Ph.D. in
          linguistics from Bielefeld University in 2002. 
        </textual></para></personblurb><affiliation class="po-record e41 e41"><orgname class="po-block e42 e42"><textual class="po-textual">Institut für Deutsche Sprache (IDS)</textual></orgname></affiliation><email class="po-field e43 e43"><textual class="po-textual">luengen@ids-mannheim.de</textual></email></author><author class="po-record e44 e44"><personname class="po-record e45 e45"><firstname class="po-field e46 e46"><textual class="po-textual">Andreas</textual></firstname><surname class="po-field e47 e47"><textual class="po-textual">Witt</textual></surname></personname><personblurb class="po-container e48 e48"><para class="po-block e49 e49"><textual class="po-textual">
          Andreas Witt received his Ph.D. in Computational Linguistics and Text
          Technology from the Bielefeld University in 2002 (dissertation title:
          “Multiple Informationsstrukturierung mit Auszeichnungssprachen.
          XML-basierte Methoden und deren Nutzen für die Sprachtechnologie”).
          After graduating in 1996, he started as a researcher and instructor
          in Computational Linguistics and Text Technology. He was heavily
          involved in the establishment of the minor subject Text Technology
          in Bielefeld University's Magister and B.A. program in 1999 and
          2002 respectively. After his Ph.D. in 2002 he became an assistant
          lecturer, still at the Text Technology group in Bielefeld. In 2006
          he moved to Tübingen University, where he was involved in a project
          on “Sustainability of Linguistic Resources” and in projects on the
          interoperability of language data. Since 2009 he is senior
          researcher at Institut für Deutsche Sprache (Institute for the German
          Language) in Mannheim. Witt is and was a member of several research
          organizations, amongst them the TEI Special Interest Group on
          overlapping markup, for which he was involved in the writing of the
          latest version of the chapter “Multiple Hierarchies”, which is
          included in TEI-Guidelines P5.
        </textual></para></personblurb><affiliation class="po-record e50 e50"><orgname class="po-block e51 e51"><textual class="po-textual">Institut für Deutsche Sprache (IDS)</textual></orgname></affiliation><email class="po-field e52 e52"><textual class="po-textual">witt@ids-mannheim.de</textual></email></author><legalnotice class="po-container e53 e53"><para class="po-block e54 e54"><textual class="po-textual">Copyright © 2013 by the authors. Used with permission.</textual></para></legalnotice></info><section class="po-hcontainer e55 e55"><title class="po-block e56 e56"><textual class="po-textual">Introduction</textual></title><para class="po-block e57 e57"><textual class="po-textual">
      Igel is a small XQuery-based web application for examining a
      collection of document grammars; in particular, for comparing related
      document grammars to get a better overview of their differences and
      similarities. Igel is a product of collaboration between the Institut
      für Deutsche Sprache (IDS) and Black Mesa Technologies. (The I
      and the G of the name can be thought of as standing for "IDS" and
      "grammar", and the E and L were added to make the German word Igel
      'hedgehog'.)
    </textual></para></section><section class="po-hcontainer e58 e58"><title class="po-block e59 e59"><textual class="po-textual">Requirements</textual></title><para class="po-block e60 e60"><textual class="po-textual">
      IDS creates, maintains, and exploits a number of corpora of modern German,
      including DeReKo (Deutsches Referenzkorpus, </textual><xref class="po-milestone e61 e61" linkend="kupietz2010"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">),
      the German Reference Corpus, about 6.1 billion running words of text</textual><footnote class="po-popup e62 e62"><para class="po-block e63 e63"><textual class="po-textual">As of 2013-03-19; see </textual><link class="po-inline e64 e64" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.ids-mannheim.de/kl/projekte/korpora/</textual></link><textual class="po-textual">
	for an overview.</textual></para></footnote><textual class="po-textual"> from 
      many different publishers and including
      documents from 1964 to the present. Over the years, IDS has developed and
      used a number of formats for representing corpora, including a local
      customization of XCES the XML Corpus Encoding Standard, itself a
      customization for corpus-linguistic work of the Text Encoding Initiative's
      TEI P3 and TEI P4 tag sets) and most recently I5, a reformulation of their
      existing vocabulary on the basis of TEI P5. The migration process to I5 is
      described in </textual><xref class="po-milestone e65 e65" linkend="luengen2012"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.
    </textual></para><para class="po-block e66 e66"><textual class="po-textual">In the context of collaborations with other institutions
      which are also using variants of TEI P5, IDS has a requirement
      to develop a sound understanding of how the different variants
      of TEI P5 relate to each other. Igel is designed to provide
      accessible tools for answering this question, from the simple
      (what elements in vocabulary </textual><emphasis class="po-inline e67 e67"><textual class="po-textual">A</textual></emphasis><textual class="po-textual"> are missing
      from vocabulary </textual><emphasis class="po-inline e68 e68"><textual class="po-textual">B</textual></emphasis><textual class="po-textual">? what elements do they
      have in common?) to the more complex (which parts of content
      model </textual><emphasis class="po-inline e69 e69"><textual class="po-textual">C</textual></emphasis><textual class="po-textual"> are actually needed to cover the
      data in collection </textual><emphasis class="po-inline e70 e70"><textual class="po-textual">D</textual></emphasis><textual class="po-textual">?). </textual></para></section><section class="po-hcontainer e71 e71"><title class="po-block e72 e72"><textual class="po-textual">Design and current status of Igel tools</textual></title><para class="po-block e73 e73"><textual class="po-textual">
      The main work of Igel is done by a collection of XQuery functions
      which operate on an XML representation of the document grammars
      involved. Given a suitable XML representation, it is very easy to
      write XQuery expressions to list all the elements and attributes
      declared in a given document grammar or to display the definition of a
      common element in several grammars.
    </textual></para><section class="po-hcontainer e74 e74"><title class="po-block e75 e75"><textual class="po-textual">Functionality</textual></title><para class="po-block e76 e76"><textual class="po-textual">
        The current version of Igel has only basic functionality:
      </textual></para><itemizedlist class="po-table e77 e77"><listitem class="po-container e78 e78"><para class="po-block e79 e79"><textual class="po-textual">
          From a control panel, an administrator can supply the URI of a document
          grammar and have it added to the collection.
        </textual></para></listitem><listitem class="po-container e80 e80"><para class="po-block e81 e81"><textual class="po-textual">
            From a list of document grammars in the collection,
            the user can select one or more for closer examination and 
            comparison.
          </textual></para></listitem><listitem class="po-container e82 e82"><para class="po-block e83 e83"><textual class="po-textual">
            For any selection of document grammars, the user can get a list of
            declared element types, attributes, notations, entities, parameter
            entities, etc., showing which constructs are shared and which are
            unique to individual grammars.  This makes it easy to see the 
            union, intersection, and set difference between the lists of
            constructs in different grammars.
          </textual></para></listitem><listitem class="po-container e84 e84"><para class="po-block e85 e85"><textual class="po-textual">
            For any given element, attribute, etc., the user can display the
            declarations for that construct from all selected grammars. This
            allows convenient examination of the declarations by a knowledgeable
            human.  Parameter entities are expanded in place with appropriate labels
            at the beginning and end of each entity reference; this allows both
            the form of the declaration and the effective declaration to be
            examined.
          </textual></para></listitem></itemizedlist><para class="po-block e86 e86"><textual class="po-textual">For additional functionality not currently present but which we plan
      to add, see below.</textual></para></section><section class="po-hcontainer e87 e87"><title class="po-block e88 e88"><textual class="po-textual">XML representation of document grammars</textual></title><para class="po-block e89 e89"><textual class="po-textual">
        The basic requirement for studying document grammars using XQuery is
        that we must have an XML representation for the document grammars.
      </textual></para><para class="po-block e90 e90"><textual class="po-textual">
        DTDs, as is well known, do not use XML but use a non-XML notation
        inherited from SGML and ISO 8879. There are a number of XML
        representations for DTDs, like NekoDTD (</textual><xref class="po-milestone e91 e91" linkend="clark_neko"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">),
        SWI-Prolog (</textual><xref class="po-milestone e92 e92" linkend="wielemaker_prolog"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) or
        DTDinst (</textual><xref class="po-milestone e93 e93" linkend="clark_dtdinst"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) , but most interesting
        production DTDs make extensive use of parameter entities
        to simplify understanding and maintenance of the document grammar and
        none of the commonly used XML representations of DTDs provide the
        necessary access both to the parameter-entity structure of the grammar
        and to the expanded declarations. Wayne Wohler's DTD4DTD
        (</textual><xref class="po-milestone e94 e94" linkend="wohler1994"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) does provide access to both physical and
        logical structures, but goes rather far in the opposite direction:
        its element structure is so directly modeled on the form of the grammar
        in ISO 8879 (down to elements to contain the whitespace in the original)
        that it is not particularly convenient to process.  It is also 
        rather difficult to produce for a parser which has restructured
        the grammar in order to eliminate the many reduce/reduce conflicts and ambiguities
        in the grammar.
        </textual><textual class="po-textual">
      </textual></para><para class="po-block e95 e95"><textual class="po-textual">
        Some schema languages commonly used today (e.g. XSD and Relax NG) do
        have standard XML representations, but these representations are also not
        well suited to the kind of grammatical comparisons Igel is designed to
        support. The declaration of an element, for example, may refer to a
        complex type or a pattern declared elsewhere in the schema and may
        thus not be interpretable in isolation. The chains of dependencies can
        be arbitrarily long. The user of Igel, however, has the same
        requirement for these document grammars as for DTDs: both the expanded
        structure of the declaration and the maintenance-oriented short-hands
        need to be accessible.
      </textual></para><para class="po-block e96 e96"><textual class="po-textual">
        So for the moment, at least, Igel uses an idiosyncratic XML
        representation derived from the first author's unpublished work on
        SGML representations of DTDs in the early 1990s. A yacc/lex parser
        named dpp (for </textual><quote class="po-inline e97 e97"><textual class="po-textual">DTD pre-processor</textual></quote><textual class="po-textual">) parses DTDs and produces XML output
        in which parameter-entity boundaries are made visible as milestone
        elements. XSLT stylesheets can be used to transform this
        representation of the DTD into another in which parameter entities are
        represented as nesting elements, but in practice those stylesheets
        have proven to be unnecessary most of the time in practice; many
        operations are slightly simpler when parameter entities are visible as
        milestones and not as normal nesting elements.
      </textual></para><para class="po-block e98 e98"><textual class="po-textual">
        The dpp parser is not an integral part of Igel; instead, dpp is made
        available as a service on an HTTP server, and Igel loads DTDs by
        calling that service with appropriate arguments. The dpp service then
        returns the XML representation of the DTD, which Igel loads into the
        XML database.
      </textual></para><para class="po-block e99 e99"><textual class="po-textual">
        A current limitation of dpp is that it does not allow parameter-entity
        boundaries in every location where they are legal according to ISO
        8879 and the XML specification, because the DTD grammar as written in
        ISO 8879 has a large number of reduce/reduce conflicts. So support for
        explicit entity boundaries in dpp has been developed ad hoc, by
        tweaking the grammar until dpp succeeded in parsing a number of well
        known DTDs with extensive use of parameter entities (specifically the
        SGML DTD of ISO 8879 Annex E, HTML 4.01, XHTML 1.0, the NLM Journal
        Archiving Tag Set, TEI P3, and TEI P4).
      </textual></para><para class="po-block e100 e100"><textual class="po-textual">
        A current limitation of the XML representation of document grammars
        used is that it is not yet documented.  Since the XML representation is
        only used internally and is not exposed to the user, the lack of
        documentation is a burden primarily for those responsible for 
        maintaining and extending Igel and related tools.
      </textual></para></section><section class="po-hcontainer e101 e101"><title class="po-block e102 e102"><textual class="po-textual">Implementation</textual></title><para class="po-block e103 e103"><textual class="po-textual">
        The initial implementation of Igel used Sausalito, an open-source
        XQuery engine adapted from Zorba by the commercial firm 28msec, and
        deployed on 28msec's free public demonstration server my28msec.com,
        at the address </textual><link class="po-inline e104 e104" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://igel.my28msec.com/</textual></link><textual class="po-textual">.
      </textual></para><para class="po-block e105 e105"><textual class="po-textual">
        Sausalito, however, is now being retired as a commercial product by
        28msec, so Igel has been reformulated as a BaseX application using the
        BaseX http interface. A conventional Apache web server handles
        security and communication with the user. PHP modules accept user
        input, translate it into calls on BaseX functions, and direct the
        BaseX output to the user.
      </textual></para><para class="po-block e106 e106"><textual class="po-textual">At the time this document was written, the current version of Igel
        was on the web at </textual><link class="po-inline e107 e107" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://clarin.ids-mannheim.de/igel/</textual></link><textual class="po-textual">.
      </textual></para></section></section><section class="po-hcontainer e108 e108"><title class="po-block e109 e109"><textual class="po-textual">Future work</textual></title><para class="po-block e110 e110"><textual class="po-textual">
      Several important parts of Igel remain to be implemented; some of
      these will, we hope, be completed and available for demonstration in
      Montreal.
    </textual></para><itemizedlist class="po-table e111 e111"><listitem class="po-container e112 e112"><para class="po-block e113 e113"><textual class="po-textual">For a given document grammar, list elements declared but not used
          elsewhere and elements used (referred to) but not declared.
        </textual></para></listitem><listitem class="po-container e114 e114"><para class="po-block e115 e115"><textual class="po-textual">For a given element in a given set of document grammars, list
          ancestors, parents, children, and descendants.</textual></para></listitem><listitem class="po-container e116 e116"><para class="po-block e117 e117"><textual class="po-textual">For a given parameter entity in a given set of document grammars,
          list other parameter entities this one refers to directly or
          indirectly; list other parameters which refer directly or indirectly
          to this one.</textual></para></listitem><listitem class="po-container e118 e118"><para class="po-block e119 e119"><textual class="po-textual"> For a given element or parameter entity in a given
          document grammar, list other elements and/or parameter
          entities which "compete" against this one in the sense of
          XSD 1.1. (For any </textual><emphasis class="po-inline e120 e120"><textual class="po-textual">X</textual></emphasis><textual class="po-textual"> and
            </textual><emphasis class="po-inline e121 e121"><textual class="po-textual">Y</textual></emphasis><textual class="po-textual">, </textual><emphasis class="po-inline e122 e122"><textual class="po-textual">X</textual></emphasis><textual class="po-textual"> and
            </textual><emphasis class="po-inline e123 e123"><textual class="po-textual">Y</textual></emphasis><textual class="po-textual"> compete against each other in
          content-model expressions like </textual><code class="po-atom e124 e124"><textual class="po-textual">(X | Y)</textual></code><textual class="po-textual">,
            </textual><code class="po-atom e125 e125"><textual class="po-textual">(X*, Y)</textual></code><textual class="po-textual">, </textual><code class="po-atom e126 e126"><textual class="po-textual">(Y+, X)</textual></code><textual class="po-textual">, and </textual><code class="po-atom e127 e127"><textual class="po-textual">(X?,
            Z*, Y)</textual></code><textual class="po-textual">. If </textual><emphasis class="po-inline e128 e128"><textual class="po-textual">X</textual></emphasis><textual class="po-textual"> and
            </textual><emphasis class="po-inline e129 e129"><textual class="po-textual">Y</textual></emphasis><textual class="po-textual"> are parameter entities denoting
          classes of elements and compete against each other, adding
          the same element to both </textual><emphasis class="po-inline e130 e130"><textual class="po-textual">X</textual></emphasis><textual class="po-textual"> and
            </textual><emphasis class="po-inline e131 e131"><textual class="po-textual">Y</textual></emphasis><textual class="po-textual"> will result in a determinism error
          in a DTD, or a unique-particle attribution error in XSD.)
        </textual></para></listitem><listitem class="po-container e132 e132"><para class="po-block e133 e133"><textual class="po-textual">
          From a content model, generate a drawing of a finite-state automaton
          that accepts the language defined by the model; display in the user's
          web browser.  
        </textual></para><para class="po-block e134 e134"><textual class="po-textual">
          This task (and the others involving drawing diagrams) is easy with an
          XQuery engine that has an interface to GraphViz </textual><footnote class="po-popup e135 e135"><para class="po-block e136 e136"><link class="po-inline e137 e137" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.graphviz.org/</textual></link></para></footnote><textual class="po-textual">; Sausalito
          has such an interface, which allows an XQuery application to generate
          diagrams by creating an XML representation of the GraphViz input
          format, calling an extension function, and receiving SVG back. BaseX,
          however, does not have a native GraphViz interface, so we must find
          another way to generate our FSA diagrams. Recent developments within
          the BaseX community look promising, but we have not yet investigated
          them for use within Igel.</textual><footnote class="po-popup e138 e138"><para class="po-block e139 e139"><textual class="po-textual">Andy Bunce gave a presentation at the BaseX user group meeting
              at XMLprage 2012 and reported on “Adventures with BaseX and web
              applications”
              (</textual><link class="po-inline e140 e140" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://files.basex.org/xmlprague2013/slides/Andy-Bunce-BaseX-User-Group-Talk.pdf</textual></link><textual class="po-textual">),
              which, among others, featured a GraphVis integration (</textual><link class="po-inline e141 e141" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">https://github.com/apb2006/graphxq</textual></link><textual class="po-textual">). 
            </textual></para></footnote><textual class="po-textual"> 
        </textual></para></listitem><listitem class="po-container e142 e142"><para class="po-block e143 e143"><textual class="po-textual">
          For a given set of elements in a given set of document grammars,
          read a body of XML documents and report on the frequency with which
          different parts of the content models are used. That is, provide
          information on the degree to which the document grammar overgenerates
          by allowing structures not actually present in the sample data.  
        </textual></para><para class="po-block e144 e144"><textual class="po-textual">
          Draw a weighted FSA for the content models in question, color-coding
          frequently used, rarely used, and unused arcs and nodes.    
        </textual></para></listitem><listitem class="po-container e145 e145"><para class="po-block e146 e146"><textual class="po-textual">For any two content models X and Y, test whether X is a subset of
          superset of Y; if not, generate expressions describing the
          intersection of X and Y, the difference of X and Y, and the difference
          of Y and X.
        </textual></para><para class="po-block e147 e147"><textual class="po-textual">
          Draw FSAs for all expressions involved.
        </textual></para></listitem><listitem class="po-container e148 e148"><para class="po-block e149 e149"><textual class="po-textual">
          Support XSD and Relax NG schemas. The document grammars of most
          pressing interest to IDS currently are DTD-based, so that is where the
          effort on Igel has been concentrated. In the long run, however, it
          would be good to make Igel handle XSD and Relax NG schemas.  
        </textual></para></listitem><listitem class="po-container e150 e150"><para class="po-block e151 e151"><textual class="po-textual">
          For a given notation, list the elements or attributes in the
          selected document grammars which use that notation.  
        </textual></para></listitem><listitem class="po-container e152 e152"><para class="po-block e153 e153"><textual class="po-textual">
          For any given attribute name, list the elements it's declared for
          and the type it has for each element.  
        </textual></para></listitem><listitem class="po-container e154 e154"><para class="po-block e155 e155"><textual class="po-textual">
          For any given value, list all attributes or elements which have that
          value as their default.  
        </textual></para></listitem><listitem class="po-container e156 e156"><para class="po-block e157 e157"><textual class="po-textual">
          For a given document grammar, draw a parent/child graph for all
          elements.  
        </textual></para></listitem><listitem class="po-container e158 e158"><para class="po-block e159 e159"><textual class="po-textual">
          For a given document grammar, draw a reference graph for all
          parameter entities.  
        </textual></para></listitem><listitem class="po-container e160 e160"><para class="po-block e161 e161"><textual class="po-textual">
          Provide alternate deployment options for Igel.  
        </textual></para><para class="po-block e162 e162"><textual class="po-textual">
          Some projects are already committed to another XQuery processor;
          provide a deployable Igel package for eXist (and optionally other
          XQuery processors).          
        </textual></para><para class="po-block e163 e163"><textual class="po-textual">
          It's convenient to have a web interface for Igel, but not all projects
          will find it convenient to configure a Web server to handle the user
          interface.  Provide an Oxygen-based interface to Igel.
        </textual></para></listitem></itemizedlist></section><bibliography class="po-hcontainer e164 e164"><title class="po-block e165 e165"><textual class="po-textual">Bibliography</textual></title><bibliomixed class="po-block e166 e166" xml:id="kupietz2010" xreflabel="Kupietz et al., 2010"><textual class="po-textual">
      Kupietz, Marc / Belica, Cyril / Keibel, Holger / Witt, Andreas (2010):
      </textual><emphasis class="po-inline e167 e167" role="ital"><textual class="po-textual">The German Reference Corpus DeReKo: A primordial sample for linguistic
        research</textual></emphasis><textual class="po-textual">. In: Calzolari, Nicoletta et al. (eds.): Proceedings of the 7th
      conference on International Language Resources and Evaluation (LREC 2010).
      Valletta, Malta: European Language Resources Association (ELRA), pp. 1848–1854.  
    </textual></bibliomixed><bibliomixed class="po-block e168 e168" xml:id="luengen2012" xreflabel="Lüngen &amp; Sperberg-McQueen, 2012"><textual class="po-textual">
      Harald Lüngen, and C. M. Sperberg-McQueen (2012):
      </textual><emphasis class="po-inline e169 e169" role="ital"><textual class="po-textual"> A TEI P5 Document Grammar for the IDS Text Model</textual></emphasis><textual class="po-textual">.
      In: Journal of the Text Encoding Initiative (2012), H. 3. </textual><link class="po-inline e170 e170" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://jtei.revues.org/508</textual></link><textual class="po-textual">
    </textual></bibliomixed><bibliomixed class="po-block e171 e171" xml:id="wielemaker_prolog" xreflabel="Wielemaker, n.d."><textual class="po-textual">
      Jan Wielemaker (n.d.):
      </textual><emphasis class="po-inline e172 e172" role="ital"><textual class="po-textual">SWI-Prolog SGML/XML parser</textual></emphasis><textual class="po-textual">.
      SWI-Prolog. </textual><link class="po-inline e173 e173" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.swi-prolog.org/pldoc/package/sgml.html.</textual></link><textual class="po-textual">
    </textual></bibliomixed><bibliomixed class="po-block e174 e174" xml:id="clark_neko" xreflabel="Clark, n.d."><textual class="po-textual">
      Andy Clark (n.d.):
      </textual><emphasis class="po-inline e175 e175" role="ital"><textual class="po-textual">CyberNeko DTD Converter</textual></emphasis><textual class="po-textual">.
      </textual><link class="po-inline e176 e176" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://people.apache.org/~andyc/neko/doc/dtd/index.html</textual></link><textual class="po-textual">
    </textual></bibliomixed><bibliomixed class="po-block e177 e177" xml:id="clark_dtdinst" xreflabel="Clark, 2002"><textual class="po-textual">
      James Clark (2002):
      </textual><emphasis class="po-inline e178 e178" role="ital"><textual class="po-textual">DTDinst</textual></emphasis><textual class="po-textual">. </textual><link class="po-inline e179 e179" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://www.thaiopensource.com/dtdinst/</textual></link><textual class="po-textual">      
    </textual></bibliomixed><bibliomixed class="po-block e180 e180" xml:id="wohler1994" xreflabel="Wohler, 1994"><textual class="po-textual">
      Wayne L. Wohler (1994):
      </textual><emphasis class="po-inline e181 e181" role="ital"><textual class="po-textual">DTDecl Document Type Declaration
      </textual></emphasis><textual class="po-textual">.
      </textual><link class="po-inline e182 e182" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://xml.coverpages.org/wohlerDTDDTD.txt</textual></link><textual class="po-textual">
    </textual></bibliomixed><bibliomixed class="po-block e183 e183" xml:id="murata2005" xreflabel="Murata et al., 2005"><textual class="po-textual">
      Makoto Murata, Dongwon Lee, Murali Mani, and Kohsuke Kawaguchi (2005).
      </textual><emphasis class="po-inline e184 e184" role="ital"><textual class="po-textual">Taxonomy of XML Schema Languages Using Formal Language Theory</textual></emphasis><textual class="po-textual">.
      ACM Transactions on Internet Technology, 5(4):660–704.
      doi:</textual><biblioid class="po-atom e185 doi e185"><textual class="po-textual">10.1145/1111627.1111631</textual></biblioid><textual class="po-textual">.
    </textual></bibliomixed></bibliography></article></classedDocument>