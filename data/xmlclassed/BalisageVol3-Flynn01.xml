<?xml version="1.0" encoding="UTF-8" standalone="no"?><classedDocument><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" class="po-hcontainer e0 e0" version="5.0-subset Balisage-1.2"><title class="po-block e1 e1"><textual class="po-textual">Why writers don't use XML</textual><footnote class="po-popup e2 e2"><para class="po-block e3 e3"><textual class="po-textual">Or, indeed, LaTeX. Or even stylesheets for Word or
	OpenOffice.</textual></para></footnote></title><subtitle class="po-block e4 e4"><textual class="po-textual">The usability of editing software for structured
    documents</textual></subtitle><info class="po-record e5 e5"><confgroup class="po-record e6 e6"><conftitle class="po-field e7 e7"><textual class="po-textual">Balisage: The Markup Conference 2009</textual></conftitle><confdates class="po-field e8 e8"><textual class="po-textual">August 11 - 14, 2009</textual></confdates></confgroup><abstract class="po-container e9 e9"><para class="po-block e10 e10"><textual class="po-textual">XML, LaTeX, and other structured-document systems are used
	daily by those experienced in computing, and by technical
	authors in many fields. Outside these areas, however, there is
	a widespread lack of adoption, or resistance to these systems.
	This forms a barrier to the creation and use of reliable,
	persistent, unencumbered, and reusable documents, which in
	turn adds a hidden burden to the use of corporate,
	institutional, and personal information.</textual></para><para class="po-block e11 e11"><textual class="po-textual">This paper reports on a study of the usability of editing
	software for structured documents. It extends the research
	outlined in earlier work [</textual><xref class="po-milestone e12 e12" linkend="fly06"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], where it
	was found that there was no essential difference in markup
	operations between any of the editing software tested, and
	that any distinction was possibly more attributable to the
	interaction design of the interfaces.</textual></para><para class="po-block e13 e13"><textual class="po-textual">The objective is to see if changes to the interface to
	make it user-centered rather than technology-centered could
	result in greater acceptability to authors and editors both
	inside and outside the IT and markup fields, and thereby lead
	to an improved adoption rate of structure-guided writing and
	editing software.</textual></para><para class="po-block e14 e14"><textual class="po-textual">The earlier analyses of software and features sought by
	users were extended to cover more recent data, and a survey of
	existing users was conducted to determine how the interfaces
	were being used. The results are being applied to construct a
	model of the interface which can be tested for usability
	compared with existing systems.</textual></para></abstract><author class="po-record e15 e15"><personname class="po-record e16 e16"><firstname class="po-field e17 e17"><textual class="po-textual">Peter</textual></firstname><surname class="po-field e18 e18"><textual class="po-textual">Flynn</textual></surname></personname><personblurb class="po-container e19 e19"><para class="po-block e20 e20"><textual class="po-textual">Peter manages the academic advisory and electronic
	  publishing unit at University College Cork, Ireland, and
	  also runs text management consultancy, Silmaril. He was a
	  member of the W3C's XML Special Interest Group and a member
	  of the IETF's Working Group on HTML. He is maintainer of the
	  XML FAQ and author of </textual><citation class="po-atom e21 e21"><textual class="po-textual">The World-Wide Web
	    Handbook</textual></citation><textual class="po-textual"> (ITCP, 1995) and
	  </textual><citation class="po-atom e22 e22"><textual class="po-textual">Understanding SGML and XML Tools</textual></citation><textual class="po-textual">
	  (Kluwer, 1998). He is completing a belated PhD in software
	  usability, and in his copious spare time he surfs, cooks,
	  and listens to early music.</textual></para></personblurb><affiliation class="po-record e23 e23"><jobtitle class="po-field e24 e24"><textual class="po-textual">Department of Applied Psychology</textual></jobtitle><orgname class="po-block e25 e25"><textual class="po-textual">University College Cork</textual></orgname></affiliation><email class="po-field e26 e26"><textual class="po-textual">peter.flynn@mars.ucc.ie</textual></email><link class="po-inline e27 e27" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://silmaril.ie/blogs/peter</textual></link></author><legalnotice class="po-container e28 e28"><para class="po-block e29 e29"><textual class="po-textual">Copyright Â© 2006 University College Cork.</textual></para></legalnotice><keywordset class="po-table e30 e30" role="author"><keyword class="po-field e31 e31"><textual class="po-textual">documents</textual></keyword><keyword class="po-field e32 e32"><textual class="po-textual">editing</textual></keyword><keyword class="po-field e33 e33"><textual class="po-textual">interface</textual></keyword><keyword class="po-field e34 e34"><textual class="po-textual">latex</textual></keyword><keyword class="po-field e35 e35"><textual class="po-textual">software</textual></keyword><keyword class="po-field e36 e36"><textual class="po-textual">structure</textual></keyword><keyword class="po-field e37 e37"><textual class="po-textual">usability</textual></keyword><keyword class="po-field e38 e38"><textual class="po-textual">xml</textual></keyword></keywordset></info><note class="po-container e39 e39"><title class="po-block e40 e40"><textual class="po-textual">Acknowledgments</textual></title><para class="po-block e41 e41"><textual class="po-textual">This paper describes research being submitted as
      part of a PhD in the Department of Applied Psychology, UCC
      (Human Factors Research Group).</textual></para></note><section class="po-hcontainer e42 e42"><title class="po-block e43 e43"><textual class="po-textual">Background</textual></title><para class="po-block e44 e44"><textual class="po-textual">Writers and editors have until recently used a wide range of
      editing software. In the Humanities, document-based
      collaboration is relatively uncommon [</textual><xref class="po-milestone e45 e45" linkend="lar06"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">],
      so authors were less constrained by compatibility issues;
      whereas within the IT and scientific communities, the range has
      been smaller, partly because of the need to use specialist
      notations, and partly because of the need to remain compatible
      with co-authors [</textual><xref class="po-milestone e46 e46" linkend="ang04"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">].  In the wider world
      of writing outside research and academic institutions the
      difference was wider, because writers do not typically form
      homogeneous categories. Not all such software was necessarily
      ideal for the purpose, and much of it has fallen by the wayside
      in the path of technological advance; particularly in the face
      of the predominance of a single operating system and a single
      wordprocessor.</textual></para><para class="po-block e47 e47"><textual class="po-textual">The onus of interpretation, customization, and rendering of
      publishable material has customarily been the responsibility of
      the publisher or other intermediary, who expends large sums on
      specialist labor for this purpose. However, in some fields,
      publishers have been asking authors for camera-ready copy for
      over 20 years to minimize costs</textual><textual class="po-textual">, and the effort involved and the quality
      of these submitted documents has been a cause for complaint on
      both sides [</textual><xref class="po-milestone e48 e48" linkend="lue07"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. Businesses, database publishers,
      libraries, search-engine optimizers, and printers have similar
      concerns: the quality of the documents (in source or
      camera-ready form) is often insufficient for meaningful capture,
      re-use, or formatting [</textual><xref class="po-milestone e49 e49" linkend="wil95"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]. The causes are
      many, and have been well-established for many years, but among
      them is a lack of suitable software and lack of author education
      [</textual><xref class="po-milestone e50 e50" linkend="den86"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">, </textual><xref class="po-milestone e51 e51" linkend="hec93"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">].</textual></para><para class="po-block e52 e52"><textual class="po-textual">As we showed in [</textual><xref class="po-milestone e53 e53" linkend="fly06"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], there is no lack
      of software as such, only a lack of
      </textual><emphasis class="po-inline e54 e54"><textual class="po-textual">suitable</textual></emphasis><textual class="po-textual"> softwareÂ â for some value of
      </textual><quote class="po-inline e55 e55"><textual class="po-textual">suitable</textual></quote><textual class="po-textual"> described by the respondents. In that
      report, we discussed three principal findings:</textual></para><orderedlist class="po-table e56 e56"><listitem class="po-container e57 e57" xml:id="software"><para class="po-block e58 e58"><textual class="po-textual">In a study of editing software, we found that all XML
	  editors are basically the same XML editor: the facilities
	  provided are virtually identical, and the differences are in
	  the interface to these facilities, such as the depth of menu
	  traversal and the naming of actions, rather than in the
	  facilities themselves. The same is nearly as true of editors
	  for LaTeX, but as the markup can be changed arbitrarily by
	  the author, the manipulations required of the editing
	  software are not mandated or implied by the system as they
	  are with XML. Some specific deficiencies were noted which 
	  inform the adaptations made in </textual><xref class="po-milestone e59 e59" linkend="model"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para></listitem><listitem class="po-container e60 e60"><para class="po-block e61 e61"><textual class="po-textual">A survey of expert practitioners in the field of
	  markup-directed authoring and editing (taken to obtain a
	  baseline of recognized problems), we found that the
	  principal criterion for the recommendation of software was
	  familiarity or acceptability to the user, rather than
	  applicability to the tasks, largely because of the
	  difficulties in [re-]training users to an interface seen as
	  less suitable for non-experts.</textual></para></listitem><listitem class="po-container e62 e62" xml:id="requests"><para class="po-block e63 e63"><textual class="po-textual">An analysis of requests to the principal discussion
	  forums on XML and LaTeX asking for recommendations,
	  suggestions, or advice on the selection of editing software
	  was used to estimate the requirements of users. The four
	  most frequently-cited criteria were Cost (free or Open
	  Source software), a </textual><quote class="po-inline e64 e64"><textual class="po-textual">WYSIWYG</textual></quote><textual class="po-textual"> interface, Ease
	  of Use, and SimplicityÂ â over and above any
	  structure-related or markup-related facilities.</textual></para></listitem></orderedlist><para class="po-block e65 e65"><textual class="po-textual">The investigations into software and user requirements
      (items </textual><xref class="po-milestone e66 e66" linkend="software"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual"> and </textual><xref class="po-milestone e67 e67" linkend="requests"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">
      above) were updated to 2008, measuring more recent applications
      and requests, but this showed that the original findings still
      hold. An additional inquiry was then undertaken to resolve the
      software facilities and the user requirements with actual
      current practice (</textual><xref class="po-milestone e68 e68" linkend="stuff"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">) and to build a
      model of a user interface to test the findings (</textual><xref class="po-milestone e69 e69" linkend="model"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para></section><section class="po-hcontainer e70 e70" xml:id="stuff"><title class="po-block e71 e71"><textual class="po-textual">How authors and editors use their software</textual></title><para class="po-block e72 e72"><textual class="po-textual">The survey of users was constructed to find out what
      software the authors and editors used and how they used it. The
      survey was piloted for a week in April 2006 and the revised
      version made available online between February and April 2008.
      It used the phpESP web survey package, and was publicized via
      the online forums to which it was addressed (the comp.text.tex,
      comp.text.xml, and comp.text.sgml Usenet newsgroups, and the
      XML-L, TeXhax, and LaTeX (Google) mailing lists).</textual></para><para class="po-block e73 e73"><textual class="po-textual">There were 62 valid responses. All respondents were
      guaranteed anonymity. An estimate of the population (those who
      might have seen the announcements of the survey) is difficult to
      make: the membership of the mailing lists was approximately 700;
      but the readership of the Usenet newsgroups is not knowable, and
      may extend to many thousands. The responses therefore represent
      a small interested sample, and there will have been many readers
      whose interests in XML were in its use for data representation,
      not structured documents.</textual></para><para class="po-block e74 e74"><textual class="po-textual">Several attempts were made to widen the scope and seek the
      interest of publishers and writers' organisations in
      participating, but all were unsuccessful. The survey does not
      therefore represent the interests of the generality of writers
      but concentrates on identifying how users of structured editing
      software use their interfaces. Further work would be required to
      extend the reach of this enquiry into other fields.</textual></para><para class="po-block e75 e75"><textual class="po-textual">The questions asked the respondents to describe their way of
      performing a set of actions, which were obtained from the
      requirements expressed in the updated analysis of user requests.
      The available responses in each case were presented as a
      multiple-choice list which was constructed from the updated
      survey of editing software to represent the known
      </textual><quote class="po-inline e76 e76"><textual class="po-textual">affordances</textual></quote><textual class="po-textual"> (ways of doing things which are more
      or less obvious to the user: [</textual><xref class="po-milestone e77 e77" linkend="gib79"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]). An
      </textual><quote class="po-inline e78 e78"><textual class="po-textual">Other</textual></quote><textual class="po-textual"> category was also provided, but rarely
      used.</textual></para><figure class="po-container e79 e79" xml:id="background"><title class="po-block e80 e80"><textual class="po-textual">User Survey: background variables</textual></title><mediaobject class="po-container e81 e81"><imageobject class="po-container e82 e82"><imagedata class="po-meta e83 e83" fileref="../../../vol3/graphics/Flynn01/Flynn01-001.jpg" format="jpg" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject><caption class="po-container e84 e84"><para class="po-block e85 e85"><textual class="po-textual">Number of subjects by industry and occupation by years
	    of experience and multiple responses to operating
	    system</textual></para></caption></mediaobject></figure><para class="po-block e86 e86"><textual class="po-textual">A preliminary set of background questions was included to
      see if the responses varied by experience (years), operating
      system, occupation, or document types most commonly used.
      Unfortunately there was insufficient variability among the
      background data for any such effects to be detected, possibly
      due to the nature of an unavoidably self-selected sample (</textual><xref class="po-milestone e87 e87" linkend="background"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><para class="po-block e88 e88"><textual class="po-textual">Most respondents worked principally
      with text documents (77%); other document classes were in the
      single digit percentages. XML and HTML accounted for 44% of
      usage of markup systems; LaTeX, Word, and OpenOffice were
      roughly equal at 13â14% each. Wiki experience was surprisingly
      high at 8% but all others (including SGML) were at 2% or below
      (see </textual><xref class="po-milestone e89 e89" linkend="markup"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><figure class="po-container e90 e90" xml:id="markup"><title class="po-block e91 e91"><textual class="po-textual">User Survey: Markup types used</textual></title><mediaobject class="po-container e92 e92"><imageobject class="po-container e93 e93"><imagedata class="po-meta e94 e94" fileref="../../../vol3/graphics/Flynn01/Flynn01-002.jpg" format="jpg" width="70%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject><caption class="po-container e95 e95"><para class="po-block e96 e96"><textual class="po-textual">Percentages of all multiple responses</textual></para></caption></mediaobject></figure><para class="po-block e97 e97"><textual class="po-textual">The editors most respondents had experience of were oXygen (24%)
      followed by Word (13%), Emacs (11%), and vi (7%) [both used for
      both XML and LaTeX]. Other LaTeX editors accounted for another
      12%. The Arbortext editor rated 6% along with OpenOffice, but
      there was a long tail of other products.</textual></para><section class="po-hcontainer e98 e98"><title class="po-block e99 e99"><textual class="po-textual">Results</textual></title><para class="po-block e100 e100"><textual class="po-textual">The questions used a multiple-choice answer format because
	respondents were expected to use (or have used) many different
	systems. This enabled the survey to reflect a much wider range
	of behavior than would otherwise have been the case. In the
	following list, percentages are therefore of all responses to
	the question, not of the number of individuals.</textual></para><variablelist class="po-table e101 e101"><varlistentry class="po-record e102 e102" xml:id="create"><term class="po-block e103 e103"><textual class="po-textual">Creating a new document</textual></term><listitem class="po-container e104 e104"><para class="po-block e105 e105"><textual class="po-textual">The method of creating a new document was divided
	      approximately equally between creating an empty file
	      (31%), emptying an existing document (29%) and using the
	      New Document menu item (28%). Most of the remainder did
	      not find the menu system useful for creating new
	      documents as it was faster to do it by hand.</textual></para><mediaobject class="po-container e106 e106"><imageobject class="po-container e107 e107"><imagedata class="po-meta e108 e108" fileref="../../../vol3/graphics/Flynn01/Flynn01-003.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e109 e109" xml:id="meta"><term class="po-block e110 e110"><textual class="po-textual">Adding standard metadata</textual></term><listitem class="po-container e111 e111"><para class="po-block e112 e112"><textual class="po-textual">To add metadata, 34% of responses used markup
	      insertion menus; 28% used fill-in-the-blanks
	      customizations; and 14% typed the markup manually. Most
	      of the rest used preset values or the metadata was
	      determined elsewhere.</textual></para><mediaobject class="po-container e113 e113"><imageobject class="po-container e114 e114"><imagedata class="po-meta e115 e115" fileref="../../../vol3/graphics/Flynn01/Flynn01-004.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e116 e116" xml:id="sect"><term class="po-block e117 e117"><textual class="po-textual">Starting a new sectional division</textual></term><listitem class="po-container e118 e118"><para class="po-block e119 e119"><textual class="po-textual">Nearly two-thirds of new sections were started by
	      positioning the cursor manually and typing or otherwise
	      inserting the markup (63%). Style menus were used in 14%
	      of responses and splitting an existing section in 11%.
	      Only 5% of responses used a </textual><quote class="po-inline e120 e120"><textual class="po-textual">New section</textual></quote><textual class="po-textual">
	      menu item.</textual></para><mediaobject class="po-container e121 e121"><imageobject class="po-container e122 e122"><imagedata class="po-meta e123 e123" fileref="../../../vol3/graphics/Flynn01/Flynn01-005.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e124 e124" xml:id="style"><term class="po-block e125 e125"><textual class="po-textual">Styling a document</textual></term><listitem class="po-container e126 e126"><para class="po-block e127 e127"><textual class="po-textual">Nearly half the responses said styling was automated
	      via a stylesheet (47%). The use of a style menu and
	      manual styling were about equal at 15â16%, and for most
	      of the others it was done by a production team. Only 2%
	      of responses mentioned using manual methods like toolbar
	      buttons.</textual></para><mediaobject class="po-container e128 e128"><imageobject class="po-container e129 e129"><imagedata class="po-meta e130 e130" fileref="../../../vol3/graphics/Flynn01/Flynn01-006.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e131 e131" xml:id="edit"><term class="po-block e132 e132"><textual class="po-textual">Moving element content</textual></term><listitem class="po-container e133 e133"><para class="po-block e134 e134"><textual class="po-textual">Moving blocks of text around was overwhelmingly done
	      by cursor highlighting and cut-and-paste. Only 15% used
	      a structure window to select the material. However, 11%
	      said they had to reorganize the markup manually after a
	      move (to promote or demote sectioning).</textual></para><mediaobject class="po-container e135 e135"><imageobject class="po-container e136 e136"><imagedata class="po-meta e137 e137" fileref="../../../vol3/graphics/Flynn01/Flynn01-007.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e138 e138" xml:id="nav"><term class="po-block e139 e139"><textual class="po-textual">Navigating in the document</textual></term><listitem class="po-container e140 e140"><para class="po-block e141 e141"><textual class="po-textual">To navigate around the document, 30% of responses
	      used scrolling and 30% used searching. Only 17% used a
	      structure window, but 13% used keyboard shortcuts rather
	      than mouse controls.</textual></para><mediaobject class="po-container e142 e142"><imageobject class="po-container e143 e143"><imagedata class="po-meta e144 e144" fileref="../../../vol3/graphics/Flynn01/Flynn01-008.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e145 e145" xml:id="struct"><term class="po-block e146 e146"><textual class="po-textual">Adding new elements</textual></term><listitem class="po-container e147 e147"><para class="po-block e148 e148"><textual class="po-textual">To add new block-level material (elements in element
	      content), 35% of responses mentioned manual insertion by
	      keyboard shortcuts or typing; 26% via toolbar buttons;
	      and 21% via the Insert menu. Style-driven addition was
	      listed by 7% and there was another 7% of
	      </textual><quote class="po-inline e149 e149"><textual class="po-textual">Other</textual></quote><textual class="po-textual"> which were
	      application-specific.</textual></para><mediaobject class="po-container e150 e150"><imageobject class="po-container e151 e151"><imagedata class="po-meta e152 e152" fileref="../../../vol3/graphics/Flynn01/Flynn01-009.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e153 e153"><term class="po-block e154 e154"><textual class="po-textual">Linking and cross-referencing</textual></term><listitem class="po-container e155 e155" xml:id="link"><para class="po-block e156 e156"><textual class="po-textual">For linking items (cross-references, footnotes,
	      citations, and hyperlinks; which are largely
	      mixed-content insertions), 35% again specified keyboard
	      shortcuts or typing, and 23% via toolbar buttons. 21%
	      mentioned having to create the ID target before they
	      could add an IDREF link to it, but 16% used a
	      menu-and-dialog mechanism.</textual></para><mediaobject class="po-container e157 e157"><imageobject class="po-container e158 e158"><imagedata class="po-meta e159 e159" fileref="../../../vol3/graphics/Flynn01/Flynn01-010.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e160 e160"><term class="po-block e161 e161"><textual class="po-textual">Viewing the formatted result</textual></term><listitem class="po-container e162 e162" xml:id="view"><para class="po-block e163 e163"><textual class="po-textual">Fully 40% of responses did not preview a document in
	      development, and relied on the structuring of the markup
	      to ensure it would be formatted correctly. 14% felt that
	      the synchronous typographic display was adequate as a
	      check, another 14% used toolbar button to show a typeset
	      preview window, and yet another 14% used a browser
	      preview. 11% ran a continuous synchronous previewer and
	      7% relied on a separate production team.</textual></para><mediaobject class="po-container e164 e164"><imageobject class="po-container e165 e165"><imagedata class="po-meta e166 e166" fileref="../../../vol3/graphics/Flynn01/Flynn01-011.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e167 e167"><term class="po-block e168 e168"><textual class="po-textual">General approach to markup</textual></term><listitem class="po-container e169 e169" xml:id="method"><para class="po-block e170 e170"><textual class="po-textual">On the general question of the respondents' approach
	      to editing, roughly equal numbers (37â38%) were
	      comfortable with a system that allowed them to specify
	      markup without prescription, and with systems than
	      encouraged but did not enforce a specific way of marking
	      up (for example, optional structural-based styling in
	      wordprocessors). However, 20% did prefer a prescriptive
	      system.</textual></para><mediaobject class="po-container e171 e171"><imageobject class="po-container e172 e172"><imagedata class="po-meta e173 e173" fileref="../../../vol3/graphics/Flynn01/Flynn01-012.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry></variablelist><para class="po-block e174 e174"><textual class="po-textual">Respondents were also asked in open-ended questions about
	what features they would recommend to others looking for
	software; what features they found best and worst in their
	software; and for any features they would like to see
	added.</textual></para><variablelist class="po-table e175 e175"><varlistentry class="po-record e176 e176" xml:id="sel"><term class="po-block e177 e177"><textual class="po-textual">Advice to others</textual></term><listitem class="po-container e178 e178"><para class="po-block e179 e179"><textual class="po-textual">The most important feature was seen as robust
	      compliance with standards (15%). 7% recommended
	      customizability, and 6% felt integration with other
	      systems was important. Level at 4% were </textual><quote class="po-inline e180 e180"><textual class="po-textual">Avoid
		WYSIWYG</textual></quote><textual class="po-textual">, </textual><quote class="po-inline e181 e181"><textual class="po-textual">Avoid Wordprocessors</textual></quote><textual class="po-textual">,
	      and </textual><quote class="po-inline e182 e182"><textual class="po-textual">Keep it simple</textual></quote><textual class="po-textual"> (the converse,
	      </textual><quote class="po-inline e183 e183"><textual class="po-textual">Use WYSIWYG</textual></quote><textual class="po-textual"> rated 3%). Again there was a
	      very long tail of other factors, but without significant
	      distinction.</textual></para><mediaobject class="po-container e184 e184"><imageobject class="po-container e185 e185"><imagedata class="po-meta e186 e186" fileref="../../../vol3/graphics/Flynn01/Flynn01-013.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e187 e187" xml:id="useful"><term class="po-block e188 e188"><textual class="po-textual">Most useful features</textual></term><listitem class="po-container e189 e189"><para class="po-block e190 e190"><textual class="po-textual">For usefulness, keyboard shortcuts rated the highest
	      at 14% of mentions. Regular Expression searches followed
	      at 11%, and Integration and Validation features at 8%
	      each. A cluster of editorial functions came next at 5â6%
	      each: context-sensitive or structure-sensitive editing;
	      spell-checking, grammar-checking, and thesaurus;
	      autocompletion; and WYSIWG display. At a lower level
	      (3%) were colored editing, adaptability and
	      customizability, and the quality of formatting,
	      DTD/Schema handling, and cross-referencing. Price and
	      multi-platform availability were not significant at
	      2%.</textual></para><mediaobject class="po-container e191 e191"><imageobject class="po-container e192 e192"><imagedata class="po-meta e193 e193" fileref="../../../vol3/graphics/Flynn01/Flynn01-014.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e194 e194" xml:id="useless"><term class="po-block e195 e195"><textual class="po-textual">Worst features</textual></term><listitem class="po-container e196 e196"><para class="po-block e197 e197"><textual class="po-textual">By contrast, the worst features of editors were led
	      by automated or pre-emptive insertion problems at 20%Â â
	      wrong types, interference with formatting, refusal to
	      mark up as instructed, or insistence on adding incorrect
	      markup. Validation errors (faulty editors, not faulty
	      documents) followed at 11%, and WYSIWYG problems at 9%.
	      Quirkiness or obtuseness of the interface were rated at
	      7% and 5% respectively (failure to follow established
	      patterns), and matters related to styling and formatting
	      also at 5%. Poor documentation, the need for manual
	      intervention, lack of Unicode support, program
	      stability, and support for different file formats all
	      rated 4%, and there were others in a low long
	      tail.</textual></para><mediaobject class="po-container e198 e198"><imageobject class="po-container e199 e199"><imagedata class="po-meta e200 e200" fileref="../../../vol3/graphics/Flynn01/Flynn01-015.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e201 e201" xml:id="failed"><term class="po-block e202 e202"><textual class="po-textual">Failure to fulfil a task</textual></term><listitem class="po-container e203 e203"><para class="po-block e204 e204"><textual class="po-textual">When asked if they had ever failed to find out how
	      to do something that an editor was actually capable of,
	      35% mentioned the difficulty of finding items in
	      documentation, and 26% mentioned problems in getting an
	      editor's special feature (one of its unique selling
	      points) to work. 13% mentioned trying to overcome
	      unnecessary complexity, and 6% felt that such failure
	      was down to lack of awareness of a product's
	      capabilities. The tail included mathematical features,
	      searching, validation, and WYSIWYG problems.</textual></para><mediaobject class="po-container e205 e205"><imageobject class="po-container e206 e206"><imagedata class="po-meta e207 e207" fileref="../../../vol3/graphics/Flynn01/Flynn01-016.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry><varlistentry class="po-record e208 e208" xml:id="wish"><term class="po-block e209 e209"><textual class="po-textual">Wish list</textual></term><listitem class="po-container e210 e210"><para class="po-block e211 e211"><textual class="po-textual">The opportunity to add to a Wish list led the
	      </textual><quote class="po-inline e212 e212"><textual class="po-textual">Other</textual></quote><textual class="po-textual"> category to account for 27% of
	      responses. Heading the remainder were improved
	      documentation (20%), better WYSIWYG (17%), and better
	      interfaces (13%) and menu systems (10%). The addition of
	      Regular Expressions rated 7% and better access to
	      styling also 7%.</textual></para><mediaobject class="po-container e213 e213"><imageobject class="po-container e214 e214"><imagedata class="po-meta e215 e215" fileref="../../../vol3/graphics/Flynn01/Flynn01-017.jpg" format="jpg" width="90%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject></mediaobject></listitem></varlistentry></variablelist></section><section class="po-hcontainer e216 e216"><title class="po-block e217 e217"><textual class="po-textual">Discussion</textual></title><para class="po-block e218 e218"><textual class="po-textual">In the open-ended questions, and in the
	</textual><quote class="po-inline e219 e219"><textual class="po-textual">Other</textual></quote><textual class="po-textual"> areas of each question, users were able
	to elaborate on their responses. In these, there was sometimes
	extensive and persuasive argument both for and against the
	exposure of markup, the limitation of structural control, the
	adaptability of editing systems (including DTDs and Schemas),
	and the conflict between how a writer perceives interaction
	with a document and how the creator of the editing system
	perceives it. These viewsÂ â necessarily one-sided, as they
	come from long-term authors with technical understanding,
	rather than from non-technical writers or newcomers (see
	</textual><xref class="po-milestone e220 e220" linkend="background"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">)Â â illustrate an important point
	about </textual><quote class="po-inline e221 e221"><textual class="po-textual">structure</textual></quote><textual class="po-textual"> which has not been widely
	considered at a technical level.</textual></para><para class="po-block e222 e222"><textual class="po-textual">While it is accepted wisdom that </textual><quote class="po-inline e223 e223"><textual class="po-textual">structure</textual></quote><textual class="po-textual">
	is A Good Thing in all writing (and this has become an article of
	faith in markup theory), there is a difference between what
	markup experts mean by structure and what writers understand
	by it. Both parties accept that there is a framework
	underlying all formal documents, usually in the conventional
	part-chapter-section-subsection hierarchy, with other
	components adduced where needed (principally figures, tables,
	lists, and their derivatives). The differences appear to lie
	in the perception of the relationship of these elements to
	each other.</textual></para><para class="po-block e224 e224"><textual class="po-textual">The classical theory, derived from computer science and
	graph theory, is that the document is a hierarchical tree
	(actually inverted: a root-system) and that all necessary
	actions can be seen in terms of navigation around the tree,
	and of insertion into and withdrawal from the the nodes which
	form the branches and leaves.</textual></para><para class="po-block e225 e225"><textual class="po-textual">The conventional writer, howeverÂ â and we expressly
	</textual><emphasis class="po-inline e226 e226"><textual class="po-textual">exclude</textual></emphasis><textual class="po-textual"> the markup expert, as well as the
	experienced technical authors who responded to the surveyÂ â is
	by repute probably only marginally aware of this tree; but we
	have been unable to measure this at present. In this view, the
	document is seen as a continuous linear narrative, broken into
	successive divisions along semantic lines, and interspersed
	with explanatory material in the form of figures, tables,
	lists, and their derivatives. From inspection, this appears to
	hold true whether it is a sales report, a novel, a textbook,
	or an academic paper. The terminology used is therefore also
	different: </textual><quote class="po-inline e227 e227"><textual class="po-textual">inserting</textual></quote><textual class="po-textual"> a </textual><quote class="po-inline e228 e228"><textual class="po-textual">node</textual></quote><textual class="po-textual"> into
	the tree has meaning for the document engineer who designs the
	document type or the formatting engine, but is meaningless for
	the writer, who thinks in terms of </textual><quote class="po-inline e229 e229"><textual class="po-textual">new chapter</textual></quote><textual class="po-textual">
	or </textual><quote class="po-inline e230 e230"><textual class="po-textual">add a paragraph</textual></quote><textual class="po-textual">.</textual><footnote class="po-popup e231 e231"><para class="po-block e232 e232"><textual class="po-textual">In the case of narrative or dramatic literature,
	    </textual><quote class="po-inline e233 e233"><textual class="po-textual">structure</textual></quote><textual class="po-textual"> has entirely other meanings, and
	    concerns plot revelation, narrative pace, character
	    development, and other factors completely unrelated to our
	    use of the term.</textual></para></footnote></para><para class="po-block e234 e234"><textual class="po-textual">This may explain to a considerable extent why the
	</textual><quote class="po-inline e235 e235"><textual class="po-textual">anything, anywhere</textual></quote><textual class="po-textual"> document model in
	commonly-used wordprocessors has become so pervasive: it is
	virtually impossible expressly to allow an object to occur
	only in a specific place, or to forbid one from occurring at
	any point. The interface to such models has become widespread
	precisely because it allows this latitude, regardless of
	whether it makes structural sense or not, and because such
	interfaces are marketed for general-purpose, ad hoc, and
	trivial use, as well as for complex or sophisticated use. This
	is despite the result that in terms of formal structure, all
	wordprocessor documents are in effect a simple series of
	paragraphs one level deep (with a small exception for those
	that group list items in a container or provide containment at
	the mixed-content level).</textual><footnote class="po-popup e236 e236"><para class="po-block e237 e237"><textual class="po-textual">Containment has its own perils: the author has an
	    example of an OpenOffice document, a book of a dozen
	    chapters by different authors, in which the editor
	    unwittingly pasted chapters two to twelve into the bounds
	    of the last endnote at the end of the first chapter. The
	    publisher asked for some endnotes to be subsumed into the
	    text, and when the editor deleted the last endnote of the
	    first chapter, all the remaining chapters vanished from
	    the document.</textual></para></footnote></para><para class="po-block e238 e238"><textual class="po-textual">It would therefore appear that the lack of adoption of
	structured-editing interfaces could be due to a lack of
	understanding by authors of the tree model, or to a sense that
	it constrains them unreasonably during the writing process.
	But the existence of the tree, and its supervention in the
	interface, are artefacts of the way in which editing software
	has been written, and reflections of the preoccupations of the
	designers and programmers. This is made plain by the fact that
	the interface of structured editors implements the tree,
	rather than implementing a model of the document with which
	the author is more familiar. The use of the synchronous
	typographic interface (popularly, if erroneously, known as
	</textual><quote class="po-inline e239 e239"><textual class="po-textual">WYSIWYG</textual></quote><textual class="po-textual">) goes some way towards hiding the
	technicalities of tree-based editing, but our objective here
	is to investigate the extent to which it is possible to
	present writers with a model of the document which matches
	</textual><emphasis class="po-inline e240 e240"><textual class="po-textual">their</textual></emphasis><textual class="po-textual"> expectations rather than those of
	the document engineer or programmer.</textual></para><para class="po-block e241 e241"><textual class="po-textual">Taking this view, it is possible that an interface which
	provides the existing markup facilities (from a document
	engineering point of view) but replaces the
	engineering-oriented or technology-oriented approach with one
	more closely matched to the users' expectations, would stand a
	better chance of acceptance among authors. While this has been
	attempted in some recent products, it appears to have
	addressed specific individual demands rather than the general
	principle.</textual></para></section></section><section class="po-hcontainer e242 e242" xml:id="model"><title class="po-block e243 e243"><textual class="po-textual">The interface is the product</textual></title><para class="po-block e244 e244"><textual class="po-textual">The development of the graphical user interface, common
      support libraries, dynamic data exchange, object linking and
      embedding, context-awareness, and many other related
      technologies, has led to the frequent blurring of the
      distinction between applications for the user. Sending an email
      can now invoke the default wordprocessor as the editor; clicking
      on a hypertext link in a document will open a web browser;
      following a link in a browser will open the (usually)
      appropriate application for the type of file; and a table in a
      document could be provided by an embedded spreadsheet object.</textual></para><para class="po-block e245 e245"><textual class="po-textual">The commonality of the interface framework (the position of
      the menus, arrangement of the toolbar, and availability of the
      other affordances) increases software reusability and makes it
      easier for the user to carry across skills from one application
      to another; but it also leads users into a state of unawareness
      of exactly which application is active at any one time. This
      also provides one of the building-blocks for the development of
      interface components which are generically grouped under the
      banner of </textual><quote class="po-inline e246 e246"><textual class="po-textual">Web 2.0</textual></quote><textual class="po-textual">, which attempts to imbue all
      visible objects with the status of an affordance.</textual></para><para class="po-block e247 e247"><textual class="po-textual">A side-effect of this is that a large number of
      applications, even across platforms, share an increasingly
      common interface framework, and are increasingly expected by the
      users to provide the same affordances. User tolerance for
      differences based on platform, vendor, or application appears to
      be shrinking, such that a new product would have to offer some
      very radically new and valuable feature indeed for it to justify
      breaking the conceptual mold expected by the user.</textual></para><para class="po-block e248 e248"><textual class="po-textual">Taking into account the expectations of users found in the
      survey above, there is a growing sense that the interface is the
      product, and the product is the interface, regardless of the
      technologies employed underneath. The structure-directed
      document editing model, which requires a foreknowledge or
      awareness of the underlying hierarchical document model, may
      prove to be unsatisfactory in the light of this approach.</textual></para><para class="po-block e249 e249"><textual class="po-textual">Building on the information gathered in the surveys it was
      possible to construct a list of operations or actions
      (keystrokes, menu items, toolbar buttons) which were seen as
      problematic. This meant either that they were to be handled
      specially or even avoided because of their meaning or ambiguity
      (in the opinion of the expert practitioners); or that they were
      opaque to the user because of terminology, placement,
      expectation, or effect (in the opinion of the users).</textual></para><para class="po-block e250 e250"><textual class="po-textual">From the requirements of users in the survey of requests to
      the forums, editing software is required by most users to
      </textual><quote class="po-inline e251 e251"><textual class="po-textual">be WYSIWYG</textual></quote><textual class="po-textual">; that is, to employ a synchronous
      typographic interface with no markup visible to the user.
      Whether or not an editor allows another form of access to the
      markup (tokenized, raw text, breadcrumb, or marching display),
      is not relevant for the present purpose: this is something the
      software creator can choose to do or not to do.</textual></para><para class="po-block e252 e252"><textual class="po-textual">In all cases it was seen as a priority that the behavior of
      the interface should be </textual><quote class="po-inline e253 e253"><textual class="po-textual">what the user expects</textual></quote><textual class="po-textual">.
      Where in some cases this becomes context-dependent, it was
      regarded as essential that the behavior should
      </textual><emphasis class="po-inline e254 e254"><textual class="po-textual">not</textual></emphasis><textual class="po-textual"> be the simple binary-strict IR or CS
      refusal on the grounds that </textual><quote class="po-inline e255 e255"><textual class="po-textual">you can't do that
	here</textual></quote><textual class="po-textual">. This was cited on numerous occasions both in the
      surveys and in related discussions as being The Wrong Thing,
      especially when the user's action was seen as perfectly
      reasonable, but simply happened to take place at a time when the
      cursor position indicated otherwise.</textual></para><para class="po-block e256 e256"><textual class="po-textual">In all cases discussed, it was seen as important to avoid
      asking the user a question in order to determine what is The
      Right Thing unless absolutely essential. Additional interface
      features which learn from past behavior, and which allow
      preferences to be set where there might be ambiguity, were
      considered to be outside the scope of this model. While these
      have been implemented in some systems, the present author is
      unaware of any specifically related to structural editing, and
      this would be an important area for future work.</textual></para><para class="po-block e257 e257"><textual class="po-textual">It cannot be emphasized too strongly that users, and
      especially intending users, vote with their feet when judging an
      application by its interface. In the absence of compelling
      direction from elsewhere in an organization, and where products
      are essentially comparable in function, an interface's
      appearance as well as its apparent usability are regarded as
      actually </textual><emphasis class="po-inline e258 e258"><textual class="po-textual">being</textual></emphasis><textual class="po-textual"> the product.</textual></para><para class="po-block e259 e259"><textual class="po-textual">By contrast, when functions are widely disparate, and the
      interfaces are roughly comparable, the functions may become the
      product. As we saw earlier, some interfaces fail to afford
      features that do actually exist in the product, and this may
      provide a third effect on the perceived usability.</textual></para><para class="po-block e260 e260"><textual class="po-textual">In all three cases the quality, behavior, performance, and
      other attributes of the underlying engines and routines may only
      rarely be considered by the individual user except as part of a
      formal evaluation process, and may even then be dismissed in
      favor of the specific attractions of a particular interface. The
      importance of accurate interface usability testing
      </textual><emphasis class="po-inline e261 e261"><textual class="po-textual">before product release</textual></emphasis><textual class="po-textual"> cannot therefore be
      ignored: while the market will always have the final say,
      releasing an untested interface is likely to be
      counterproductive.</textual></para><para class="po-block e262 e262"><textual class="po-textual">The following changes to the interaction are derived from
      the findings of the four enquiries (experts' survey, software
      analysis, user requirements study, and user survey), and will be
      subject to testing in the final phase (see </textual><xref class="po-milestone e263 e263" linkend="testing"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">).</textual></para><section class="po-hcontainer e264 e264"><title class="po-block e265 e265"><textual class="po-textual">Keypresses</textual></title><section class="po-hcontainer e266 e266"><title class="po-block e267 e267"><textual class="po-textual">The Enter (Return) key</textual></title><para class="po-block e268 e268"><textual class="po-textual">In most synchronous typographic wordprocessor
	  environments the default action is to end the current
	  paragraph and start a new one (the older conflation of
	  </textual><quote class="po-inline e269 e269"><textual class="po-textual">new line</textual></quote><textual class="po-textual"> and </textual><quote class="po-inline e270 e270"><textual class="po-textual">new paragraph</textual></quote><textual class="po-textual"> has
	  mostly disappeared from wordprocessors but it still present
	  in the less capable web editors). In the case of list items,
	  Enter starts a new item rather than a new paragraph within
	  the same item.</textual></para><para class="po-block e271 e271"><textual class="po-textual">The behavior in an environment like a list raises the
	  question of how to exit the list environmentÂ â how to revert
	  from list-item creation to normal paragraphsÂ â when the
	  markup is invisible. This is critically relevant where the
	  system is unable to allow the placement of the cursor beyond
	  the end of the last environment because no markup is
	  visible.</textual></para><para class="po-block e272 e272"><textual class="po-textual">The </textual><quote class="po-inline e273 e273"><textual class="po-textual">next-paragraph</textual></quote><textual class="po-textual"> behavior can usually
	  be modified in a stylesheet, so that a given paragraph style
	  (for example, Title) can be programmed to create a new
	  paragraph of another style (eg Author) when Enter is
	  pressed. In tabular matter, it may navigate down a cell, or
	  create a new empty row. In some SGML/XML editors
	  investigated, however, it caused a system beep or the
	  insertion of white-space in mixed content.</textual></para><para class="po-block e274 e274"><textual class="po-textual">Because of its history, there is an expected
	  </textual><quote class="po-inline e275 e275"><textual class="po-textual">down</textual></quote><textual class="po-textual"> (linefeed) action associated with the
	  key, and the first two examples above conform to this (new
	  paragraph; new item), as does the stylesheet-directed
	  creation of a specific following style, and this is the
	  defined behavior.</textual></para><para class="po-block e276 e276"><textual class="po-textual">The problem of terminating a list or similar
	  second-level container was partly solved in Emacs
	  psgml-mode, STiLO, and some other editors by detecting a
	  repeated Enter or split-element instruction (C-c RET in
	  Emacs) with no intervening keystroke, and interpreting this
	  as signaling a demand to exit to the next level up in the
	  hierarchy. In STiLO, a third and subsequent presses cycled
	  through all element types available at that level. While
	  this kind of complex behavior is very useful to the expert,
	  it is not easily guessable, and is not obvious to the
	  non-expert. Ctrl-Enter was adopted for this </textual><quote class="po-inline e277 e277"><textual class="po-textual">exit
	    container</textual></quote><textual class="po-textual"> action on the grounds that it is already
	  familiar in the sense of a </textual><quote class="po-inline e278 e278"><textual class="po-textual">hard return</textual></quote><textual class="po-textual">, and
	  with the possibility that this should be configurable by the
	  user, perhaps via a beginner/expert mode. There appears to
	  be no suitable alternative paradigm from online editing
	  (wikis, blogs, IM) which could be adopted.</textual></para></section><section class="po-hcontainer e279 e279"><title class="po-block e280 e280"><textual class="po-textual">The TAB key</textual></title><para class="po-block e281 e281"><textual class="po-textual">Informally, many experts would concur in banning this
	  key altogether by disabling it. Its typewriter-style use to
	  align text with locally-dependent locations across the
	  user's window is a good example of a visual-only
	  instantiation which is not stable.</textual></para><para class="po-block e282 e282"><textual class="po-textual">In practice it appears to have two valid uses, given its
	  association with the </textual><quote class="po-inline e283 e283"><textual class="po-textual">forward</textual></quote><textual class="po-textual"> direction,
	  especially in tabular matter.</textual></para><para class="po-block e284 e284"><textual class="po-textual">One use is to navigate forward linearly through markup;
	  that is, from one element or text node to the next in mixed
	  content, identifying its location in a telltale or highlight
	  (this might solve the problem of cursor placement beyond the
	  last text node referred to above); and from one element to
	  the the next in serial order in element content, in effect
	  performing a width-first traverse.</textual></para><para class="po-block e285 e285"><textual class="po-textual">The other use is as an </textual><quote class="po-inline e286 e286"><textual class="po-textual">Insert Table</textual></quote><textual class="po-textual"> key
	  when outside a table, moving to the next available location
	  where a table make sense; and it would revert to the
	  traditional spreadsheet-style cell-to-cell traverse when
	  inside a table. Both uses were designed to be tested.</textual></para></section><section class="po-hcontainer e287 e287"><title class="po-block e288 e288"><textual class="po-textual">The spacebar</textual></title><para class="po-block e289 e289"><textual class="po-textual">Apart from inserting spaces in character data content,
	  there appears to be no other legitimate use for the key in a
	  structured editing environment. Its use as a pager key in
	  Unix-based systems and its adoption by web browsers for a
	  similar purpose, as well as its use as a button or link
	  selector, is be avoided in the current context except for
	  accessibility functions when using the menus and
	  toolbars.</textual></para></section><section class="po-hcontainer e290 e290"><title class="po-block e291 e291"><textual class="po-textual">Backspace and Delete</textual></title><para class="po-block e292 e292"><textual class="po-textual">Backward and forward deletion in character data content
	  would operate as expected. When adjacent to a markup
	  boundary, however, it seems reasonable that deletion should
	  continue in the same direction by jumping linearly to the
	  next point where character data exists (if any; attribute
	  values excluded), possibly accompanied by a transient audio
	  or visual warning.</textual></para><para class="po-block e293 e293"><textual class="po-textual">Another possibility is that when all character data
	  content has been deleted from an element, and all descendant
	  elements are similarly empty, an additional press of one or
	  other of these keys should remove the containing element
	  itself. This would conform to the expectation of deletion
	  associated with both keys, but requires separate testing as
	  it may or may not conform to the user's expectations when
	  content has already been deleted, as the user will be
	  unaware of the existence of any empty markup structure when
	  there is no character data present.</textual></para></section></section><section class="po-hcontainer e294 e294"><title class="po-block e295 e295"><textual class="po-textual">Menu items</textual></title><section class="po-hcontainer e296 e296"><title class="po-block e297 e297"><textual class="po-textual">The NEW menu item</textual></title><para class="po-block e298 e298"><textual class="po-textual">Many writers on interface usability deprecate the use of
	  nouns and adjectives on toolbar and menu labels, and insist
	  that using verbs or attributes allows greater comprehension
	  (the canonical example being [</textual><xref class="po-milestone e299 e299" linkend="app08"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">]). In many cases they are right, but
	  in the case of software for writing, the terms commonly used
	  (in English) include phrases such as </textual><quote class="po-inline e300 e300"><textual class="po-textual">new
	    chapter</textual></quote><textual class="po-textual">, </textual><quote class="po-inline e301 e301"><textual class="po-textual">new paragraph</textual></quote><textual class="po-textual">, or
	  </textual><quote class="po-inline e302 e302"><textual class="po-textual">new section</textual></quote><textual class="po-textual">, and these are so prevalent a way
	  of expressing the action that they justify being collected
	  under a menu or toolbar button labelled
	  </textual><quote class="po-inline e303 e303"><textual class="po-textual">New</textual></quote><textual class="po-textual">.</textual></para><para class="po-block e304 e304"><textual class="po-textual">The first encounter with this is already familiar in
	  many editors as </textual><quote class="po-inline e305 e305"><textual class="po-textual">New Document</textual></quote><textual class="po-textual">, which allows
	  selection from a set of precompiled DTDs or Schemas. The
	  user indications in the survey were that such a set needs to
	  be very much wider, and must allow a much easier method of
	  adding new document types. (Although that activity is
	  outside the scope of this study, it does have implications
	  for document type and stylesheet designers and for the
	  introduction of a robust means of element type and attribute
	  </textual><quote class="po-inline e306 e306"><textual class="po-textual">hint</textual></quote><textual class="po-textual"> documentation.)</textual></para><para class="po-block e307 e307"><textual class="po-textual">The use of </textual><quote class="po-inline e308 e308"><textual class="po-textual">Insert</textual></quote><textual class="po-textual"> (which we discussed
	  earlier), or </textual><quote class="po-inline e309 e309"><textual class="po-textual">Surround</textual></quote><textual class="po-textual">/</textual><quote class="po-inline e310 e310"><textual class="po-textual">Enclose</textual></quote><textual class="po-textual">,
	  are always restricted to the element types available at the
	  current cursor location (which may be indeterminable by the
	  user when no markup is visible). By contrast, a selection
	  from a </textual><quote class="po-inline e311 e311"><textual class="po-textual">New</textual></quote><textual class="po-textual"> menu moves to the next available
	  location where the selected item can be inserted, if the
	  current location precludes it. If the user asks for a new
	  chapter, and their cursor is currently in the middle of an
	  acronym, they do not mean literally insert the new chapter
	  markup there, or recursively split elements until a valid
	  insertion point is reached; they mean go to the next place
	  where a chapter can start, and start it there.</textual></para><para class="po-block e312 e312"><textual class="po-textual">When requesting the insertion of inline markup in mixed
	  content, however, </textual><quote class="po-inline e313 e313"><textual class="po-textual">Add</textual></quote><textual class="po-textual"> may be convenient
	  semantic sugar for </textual><quote class="po-inline e314 e314"><textual class="po-textual">New</textual></quote><textual class="po-textual"> (as in </textual><quote class="po-inline e315 e315"><textual class="po-textual">add
	    quote</textual></quote><textual class="po-textual">, </textual><quote class="po-inline e316 e316"><textual class="po-textual">add emphasis</textual></quote><textual class="po-textual">). The same
	  principle of </textual><quote class="po-inline e317 e317"><textual class="po-textual">next available location</textual></quote><textual class="po-textual"> would be
	  honored, as such markup can usually occur arbitrarily in
	  mixed content.</textual></para><para class="po-block e318 e318"><textual class="po-textual">As a corollary to this principle, where a new element
	  has required element content, </textual><emphasis class="po-inline e319 e319"><textual class="po-textual">all</textual></emphasis><textual class="po-textual">
	  required element types must be added, and the focus then
	  returned to the first location of character data. Where
	  there is a required choice, that must be presented to the
	  user (one of the unavoidable occasions, and perhaps a
	  suitable opportunity for the implementation of the first
	  mode of TAB key operation explained above).</textual></para></section><section class="po-hcontainer e320 e320"><title class="po-block e321 e321"><textual class="po-textual">Formatting controls</textual></title><para class="po-block e322 e322"><textual class="po-textual">Given that a synchronous typographical editor operating
	  with a stylesheet would not normally have any use for the B,
	  I, and U buttons, nor for the typeface and font-size
	  dropdowns, it is tempting to abolish them completely except
	  when in style-creation mode.</textual></para><para class="po-block e323 e323"><textual class="po-textual">However, as the user expects to be able to control
	  formatting from the menu and toolbars, the B, I, and U
	  buttons should operate a drop-down of all the available
	  markup which uses those styles in the current stylesheet.
	  For example, as we have pointed out elsewhere, there are at
	  least eight reasons</textual><footnote class="po-popup e324 e324"><para class="po-block e325 e325"><textual class="po-textual">To which might validly be added
	      </textual><quote class="po-inline e326 e326"><textual class="po-textual">illustrative</textual></quote><textual class="po-textual"> for authors of manuals on
	      typography.</textual></para></footnote><textual class="po-textual"> why an author or editor might want to
	  use italics,
	  </textual><textual class="po-textual">
    </textual><itemizedlist class="po-table e327 e327"><listitem class="po-container e328 e328"><para class="po-block e329 e329"><textual class="po-textual">foreign words</textual></para></listitem><listitem class="po-container e330 e330"><para class="po-block e331 e331"><textual class="po-textual">scientific names</textual></para></listitem><listitem class="po-container e332 e332"><para class="po-block e333 e333"><textual class="po-textual">emphasis</textual></para></listitem><listitem class="po-container e334 e334"><para class="po-block e335 e335"><textual class="po-textual">titles of documents</textual></para></listitem><listitem class="po-container e336 e336"><para class="po-block e337 e337"><textual class="po-textual">names of products</textual></para></listitem><listitem class="po-container e338 e338"><para class="po-block e339 e339"><textual class="po-textual">mathematical variables</textual></para></listitem><listitem class="po-container e340 e340"><para class="po-block e341 e341"><textual class="po-textual">headings</textual></para></listitem><listitem class="po-container e342 e342"><para class="po-block e343 e343"><textual class="po-textual">decoration</textual></para></listitem></itemizedlist><textual class="po-textual"> and probably as many again for bold and
	  underlining combined [</textual><xref class="po-milestone e344 e344" linkend="fly02"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">].</textual></para><para class="po-block e345 e345"><textual class="po-textual">By the same token, the typeface dropdown (restricted to
	  those faces in use by the stylesheet) can be used to select
	  from those elements currently employing those faces; and the
	  font-size dropdown to select those employing those sizes.
	  The effect for the user is identical to the existing usage,
	  and requires no additional mouse-click, only a longer dwell
	  time and a move to select the right usage.</textual></para><para class="po-block e346 e346"><textual class="po-textual">A similar argument can be made in favor of other visual
	  selectors such as color. In stylesheet-editing mode, if one
	  is provided, the buttons and dropdowns may revert to
	  conventional usage to allow new styles to be constructed or
	  existing ones to be modified.</textual></para></section><section class="po-hcontainer e347 e347"><title class="po-block e348 e348"><textual class="po-textual">The toolbar</textual></title><para class="po-block e349 e349"><textual class="po-textual">Many remaining items on a conventional toolbar can to a
	  large extent be replaced by markup-oriented controls when
	  working with a stylesheet, using the principles given
	  above.</textual></para><para class="po-block e350 e350"><textual class="po-textual">Toolbar items with an application in markup control,
	  such as those for use with tabular setting, can of course be
	  retained largely unchanged, but by the same token they must
	  disappear from the toolbar when the DTD or Schema has no
	  tabular elements: a corollary of providing the user with the
	  best affordances possible is that inapplicable ones should
	  be eliminated.</textual></para><para class="po-block e351 e351"><textual class="po-textual">The non-markup document controls such as Save, Open, and
	  Print are of course retained in their normal form.</textual></para><para class="po-block e352 e352"><textual class="po-textual">Additional buttons for cross-reference management,
	  citation, indexing, and other apparatus common in structured
	  formal documents are added where the DTD or Schema provides
	  for such facilities. These are already familiar to many
	  users from reference management software.</textual></para><para class="po-block e353 e353"><textual class="po-textual">Generic tools such as spellcheckers, thesauruses, and
	  grammar-checkers remain unaffected, but they need to be
	  relevant and up-to-date: a number of applications tested
	  failed to include common technical terms like
	  </textual><quote class="po-inline e354 e354"><textual class="po-textual">filetype</textual></quote><textual class="po-textual"> as well as recent everyday words
	  like </textual><quote class="po-inline e355 e355"><textual class="po-textual">blog</textual></quote><textual class="po-textual"> and </textual><quote class="po-inline e356 e356"><textual class="po-textual">wiki</textual></quote><textual class="po-textual">.</textual></para></section></section><section class="po-hcontainer e357 e357"><title class="po-block e358 e358"><textual class="po-textual">Other</textual></title><section class="po-hcontainer e359 e359"><title class="po-block e360 e360"><textual class="po-textual">Referencing</textual></title><para class="po-block e361 e361"><textual class="po-textual">For normal cross-references (assuming the ID/IDREF
	  mechanism is used), adding a reference to an existing target
	  is non-problematic, requiring only a pop-up of available
	  targets, or acceptance of a scroll to the target and a click
	  on it). An attempt to add a reference to a non-existent
	  target must create a placeholder for the point of reference,
	  and then require the user to identify the target, completing
	  the resolution when the target is established. In both
	  cases, the stylesheet must know the correct generated text
	  to add at the point of reference, if any, either based on
	  the element type of the target (table number, section
	  number), or as a page number. In all cases, moving the
	  target ID to another element will update all references to
	  it.</textual></para><para class="po-block e362 e362"><textual class="po-textual">For bibliographic references, the stylesheet must
	  contain sufficient information for the correct formatting
	  style (or choice) according to the conventions of the
	  discipline. A similar behavior to the normal cross-reference
	  action can be assumed when the reference entries are
	  embedded in the document (as is possible with DocBook or
	  LaTeX, for example), but this can be pre-empted by dragging
	  and dropping a reference from an external citation database,
	  either maintained locally like Zotero, Endnote, or BIBTeX,
	  or from suitable data in a browser page on a journal or
	  reference database site; with the ID resolution being
	  satisfied by the inclusion of the referenced item in a
	  suitable format at the end of the document.</textual></para></section><section class="po-hcontainer e363 e363"><title class="po-block e364 e364"><textual class="po-textual">Mathematics</textual></title><para class="po-block e365 e365"><textual class="po-textual">The visual control of mathematics poses special problems
	  which have been addressed in several models developed by
	  software writers and vendors (Euromath, Arbortext, LyX,
	  Scientific Word, and others), and is not considered
	  here.</textual></para></section><section class="po-hcontainer e366 e366"><title class="po-block e367 e367"><textual class="po-textual">Unstructured editing</textual></title><para class="po-block e368 e368"><textual class="po-textual">Several respondents to the surveys mentioned the need
	  for systems which deduce structure while the author writes
	  without structural controls; for systems which can open
	  documents with broken structure (that is, badly-formed or
	  invalid documents) in order to allow them to be mended; and
	  for systems which allow incomplete but otherwise well-formed
	  or valid documents to be saved for later completion. While
	  these are unquestionably still needed [</textual><xref class="po-milestone e369 e369" linkend="bir97"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], and mechanisms for their instantiation
	  have been available for many years [</textual><xref class="po-milestone e370 e370" linkend="sha95"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">], they are outside
	  the scope of this research.</textual></para></section><section class="po-hcontainer e371 e371"><title class="po-block e372 e372"><textual class="po-textual">External files</textual></title><para class="po-block e373 e373"><textual class="po-textual">The use of drag-and-drop is an essential interface
	  component for the inclusion of images, real-time updates,
	  file objects, and other linking actions (like the
	  bibliographic citations mentioned earlier), although
	  traditional attribute entry of filenames and URIs must
	  remain accessible. The embedding of local (file:///) URIs is
	  deprecated for reasons of non-portability, but no viable
	  solution is apparent for standalone usage without widespread
	  adoption of a catalog method (below). The embedding of
	  non-standard methods such as links to OLE objects and local
	  email repositories is a particular difficulty.</textual></para><para class="po-block e374 e374"><textual class="po-textual">A particular demand was seen for the management of
	  external entities, both parsed and unparsed, as this was
	  given as a deficiency in many editors. The use of XML
	  Catalogs is regrettably under-developed.</textual></para></section><section class="po-hcontainer e375 e375"><title class="po-block e376 e376"><textual class="po-textual">Character data</textual></title><para class="po-block e377 e377"><textual class="po-textual">It ought to be unnecessary to mention explicitly, but
	  all visible (printable) keyboard charactersÂ â indeed all of
	  the Unicode repertoireÂ â must be accepted without error.
	  With markup hidden, there can be no excuse for markup
	  characters entered from the keyboard being interpreted
	  </textual><emphasis class="po-inline e378 e378"><textual class="po-textual">as</textual></emphasis><textual class="po-textual"> markup characters.</textual></para><para class="po-block e379 e379"><textual class="po-textual">Where letters or symbols from outside the base character
	  repertoire of the document are entered, editors for systems
	  which require additional facilities to handle them (such as
	  LaTeX) must automatically add the relevant modules
	  (packages) to the Preamble (an approximate equivalent to the
	  Internal Subset of an XML document).</textual></para></section><section class="po-hcontainer e380 e380"><title class="po-block e381 e381"><textual class="po-textual">Editing</textual></title><para class="po-block e382 e382"><textual class="po-textual">The cut/copy/paste actions applied to character data in
	  text nodes behave as normal. The three-button equivalent
	  mouse actions common in some systems must remain available.
	  Embedded whole-element markup in mixed content is
	  cut/copied/pasted with any marked surrounding character
	  data, but will silently disappear if pasted into a location
	  where that markup would be invalid (see the rules governing
	  Target Markup Adoption below).</textual></para><para class="po-block e383 e383"><textual class="po-textual">The paradigm of clicking on the start-tag to mark the
	  whole of an element is inapplicable when markup is
	  invisible, and a tree or other diagrammatic representation
	  of the document in a side-pane may be confusing for the
	  non-expert, but an equivalent style-oriented margin similar
	  to Word's allows whole-element selection in element content,
	  as does the three-click selection in Mac OSâX.</textual></para><para class="po-block e384 e384"><textual class="po-textual">Cutting (or copying) whole elements in element content
	  and pasting them elsewhere is subject to the rules of the
	  DTD/Schema in use. If the user attempts to paste the
	  material into a location where the markup would not be
	  permitted (into mixed content, for example), the markup in
	  the clipboard content is removed down to the mixed content
	  level, and the result pasted as mixed content. Pasting
	  whole-element material from element content into element
	  content at a higher or lower level automatically promotes or
	  demotes the container of the clipboard content to a suitable
	  level to be allowed.</textual></para><para class="po-block e385 e385"><textual class="po-textual">Highlighting across markup boundaries copies the marked
	  character data and any embedded whole-element markup. As
	  mentioned above, cut/copy and paste then work on the text
	  nodes in mixed content and any whole element nodes included
	  in the selection. A principle which we term </textual><quote class="po-inline e386 e386"><textual class="po-textual">Target
	    Markup Adoption</textual></quote><textual class="po-textual"> determines that pasting
	  fragmentary mixed content adopts the style of the target
	  container and </textual><emphasis class="po-inline e387 e387"><textual class="po-textual">not</textual></emphasis><textual class="po-textual"> the source style,
	  whereas pasting whole elements (in element content) retains
	  the internal consistency of styling, subject to any
	  inheritance or disinheritance at the target location. This
	  principle is already in partial use in some embedded XML
	  editors designed for web applications.</textual></para><para class="po-block e388 e388"><textual class="po-textual">An attempt to apply (inline) styling to marked text
	  across element boundaries will surround any text with the
	  appropriate markup where permitted, but leave text unmarked
	  in elements where the relevant subelements cannot be
	  applied.</textual></para></section></section><section class="po-hcontainer e389 e389" xml:id="testing"><title class="po-block e390 e390"><textual class="po-textual">Testing</textual></title><para class="po-block e391 e391"><textual class="po-textual">Implementing this in program code would, in effect, mean
	rewriting a large part of the interface of an existing editor,
	or writing an entire new one from scratch. As this is beyond
	the scope of the research, the Paper Prototyping method of
	testing is being used [</textual><xref class="po-milestone e392 e392" linkend="sny03"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">].</textual></para><para class="po-block e393 e393"><textual class="po-textual">This involves preparing sequences of screenshots or
	facsimiles on sheets of paper, and giving test subjects tasks
	which they carry out by indicating on the sheets what action
	they would take. The tester then replaces the sheet with the
	one which shows the result of that action, and the process is
	repeated. A record of the sequences is kept for analysis. The
	use of Personas (constructed psychological profiles of
	canonical users) enables experienced test subjects to match
	responses to those of the target audience. Testing will be
	carried out in the Usability Laboratory of the Human Factors
	Research Group at University College Cork.</textual></para><para class="po-block e394 e394"><textual class="po-textual">The actions and behaviors are specified as sequences of
	keystrokes or mouse movements, and prepared for testing using
	generated simulations of screenshots (see </textual><xref class="po-milestone e395 e395" linkend="testscreen"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><figure class="po-container e396 e396" xml:id="testscreen"><title class="po-block e397 e397"><textual class="po-textual">Paper prototyping: simulated screenshot of model
	  editor</textual></title><mediaobject class="po-container e398 e398"><imageobject class="po-container e399 e399"><imagedata class="po-meta e400 e400" fileref="../../../vol3/graphics/Flynn01/Flynn01-018.jpg" format="jpg" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject><caption class="po-container e401 e401"><para class="po-block e402 e402"><textual class="po-textual">Use of the </textual><quote class="po-inline e403 e403"><textual class="po-textual">New</textual></quote><textual class="po-textual"> menu in mixed
	      content</textual></para></caption></mediaobject></figure><para class="po-block e404 e404"><textual class="po-textual">Duplicates of each screen using the existing interfaces of
	OpenOffice, Word, or oXygen as appropriate will be used for a
	control sample (see</textual><xref class="po-milestone e405 e405" linkend="controlscreen"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></xref><textual class="po-textual">.</textual></para><figure class="po-container e406 e406" xml:id="controlscreen"><title class="po-block e407 e407"><textual class="po-textual">Paper prototyping: control screenshot using
	  OpenOffice</textual></title><mediaobject class="po-container e408 e408"><imageobject class="po-container e409 e409"><imagedata class="po-meta e410 e410" fileref="../../../vol3/graphics/Flynn01/Flynn01-019.jpg" format="jpg" width="100%"><textual class="po-textual">Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao Pippo! Ciao</textual></imagedata></imageobject><caption class="po-container e411 e411"><para class="po-block e412 e412"><textual class="po-textual">Inserting a paragraph break</textual></para></caption></mediaobject></figure><para class="po-block e413 e413"><textual class="po-textual">Testing will be conducted in the autumn of 2009.</textual></para></section></section><bibliography class="po-hcontainer e414 e414"><title class="po-block e415 e415"><textual class="po-textual">References</textual></title><bibliomixed class="po-block e416 e416" xml:id="ang04" xreflabel="Anghelache2004"><textual class="po-textual">Angelache,
      Romeo: </textual><quote class="po-inline e417 e417"><textual class="po-textual">The Meaning of Scientific Documents</textual></quote><textual class="po-textual">. In
      New Developments in Electronic Publishing (AMS/SMM Special
      Session, Houston, May 2004), ECM4 Satellite Conference,
      Stockholm, June 2004 pp. 5â7.</textual></bibliomixed><bibliomixed class="po-block e418 e418" xml:id="app08" xreflabel="Apple2008"><textual class="po-textual">Apple Corp,
      </textual><quote class="po-inline e419 e419"><textual class="po-textual">Menus: Naming Menu Items</textual></quote><textual class="po-textual">. In </textual><emphasis class="po-inline e420 e420"><textual class="po-textual">Human
	Interface Guidelines for OSâX</textual></emphasis><textual class="po-textual">. Part III, at
      </textual><link class="po-inline e421 e421" xlink:actuate="onRequest" xlink:show="new" xlink:type="simple"><textual class="po-textual">http://developer.apple.com/documentation/UserExperience/Conceptual/AppleHIGuidelines/XHIGMenus/XHIGMenus.html#//apple_ref/doc/uid/TP30000356-TPXREF117</textual></link><textual class="po-textual"> 
      (9 June 2008, retrieved 24 April 2009).</textual></bibliomixed><bibliomixed class="po-block e422 e422" xml:id="bir97" xreflabel="Birnbaum1997"><textual class="po-textual">Birnbaum,
      David: </textual><quote class="po-inline e423 e423"><textual class="po-textual">In Defense of Invalid SGML</textual></quote><textual class="po-textual">. In Proc.
      Annual Joint Meeting of the Association for Computing in the
      Humanities and the Association for Literary and Linguistic
      Computing, Kingston, Ontario (1997)</textual></bibliomixed><bibliomixed class="po-block e424 e424" xml:id="den86" xreflabel="Denning1986"><textual class="po-textual">Denning, Peter
      J: </textual><quote class="po-inline e425 e425"><textual class="po-textual">Electronic Publishing</textual></quote><textual class="po-textual">. Technical Report 86:21,
      NASA Ames Research (Oct 1986)</textual></bibliomixed><bibliomixed class="po-block e426 e426" xml:id="fly02" xreflabel="Flynn2002"><textual class="po-textual">Flynn, Peter:
      </textual><emphasis class="po-inline e427 e427"><textual class="po-textual">Formatting Information</textual></emphasis><textual class="po-textual">, TUGboat single
      issue 23:2 (2002), pp115â250</textual></bibliomixed><bibliomixed class="po-block e428 e428" xml:id="fly06" xreflabel="Flynn2006"><textual class="po-textual">Flynn, Peter:
      </textual><quote class="po-inline e429 e429"><textual class="po-textual">If XML is so easy, how come it's so hard?: The usability
	of editing software for structured documents</textual></quote><textual class="po-textual">. Extreme
      Markup Conference 2006, MontrÃ©al, QC (Aug 2006)</textual></bibliomixed><bibliomixed class="po-block e430 e430" xml:id="gib79" xreflabel="Gibson1979"><textual class="po-textual">Gibson, James
      J: </textual><emphasis class="po-inline e431 e431"><textual class="po-textual">The Ecological Approach to Visual
	Perception</textual></emphasis><textual class="po-textual">. Houghton Mifflin, Boston (1979), p.36
      </textual><emphasis class="po-inline e432 e432"><textual class="po-textual">et seq</textual></emphasis><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e433 e433" xml:id="hec93" xreflabel="Heck1993"><textual class="po-textual">Heck, AndrÃ©:
      </textual><quote class="po-inline e434 e434"><textual class="po-textual">Electronic Publishing and Advanced Information
	Retrieval</textual></quote><textual class="po-textual">. In Astronomical Data Analysis Software and
      Systems II, 52 (1993)</textual></bibliomixed><bibliomixed class="po-block e435 e435" xml:id="lar06" xreflabel="Lariviere2006"><textual class="po-textual">LariviÃ¨re,
      Vincent; Gingras, Yves; and Archambault Ãric: </textual><quote class="po-inline e436 e436"><textual class="po-textual">Canadian
	collaboration networks: A comparative analysis of the natural
	sciences, social sciences and the humanities</textual></quote><textual class="po-textual">. In
      Scientometrics 68:3 (Dec 2006) pp.519â533. doi:
    </textual><biblioid class="po-atom e437 doi e437"><textual class="po-textual">10.1007/s11192-006-0127-8</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e438 e438" xml:id="lom83" xreflabel="Lombardi1983"><textual class="po-textual">Lombardi,
      John V: </textual><emphasis class="po-inline e439 e439"><textual class="po-textual">Computer Literacy: The Basic Concepts and
	Language</textual></emphasis><textual class="po-textual">, Indiana University Press (1983)
      0253314011</textual></bibliomixed><bibliomixed class="po-block e440 e440" xml:id="lue07" xreflabel="Luey2007"><textual class="po-textual">Luey, Beth:
      </textual><quote class="po-inline e441 e441"><textual class="po-textual">The education of academic authors</textual></quote><textual class="po-textual">. In Publishing
      Research Quarterly, 3:2 (June 1987) pp4â10. doi:</textual><biblioid class="po-atom e442 doi e442"><textual class="po-textual">10.1007/BF02683607</textual></biblioid><textual class="po-textual">.</textual></bibliomixed><bibliomixed class="po-block e443 e443" xml:id="sha95" xreflabel="Shafer1995"><textual class="po-textual">Shafer, Keith:
      </textual><quote class="po-inline e444 e444"><textual class="po-textual">Creating DTDs via the GB-Engine and Fred</textual></quote><textual class="po-textual">. OCLC
      Online Computer Library Center, Inc., Dublin, Ohio
      (1995)</textual></bibliomixed><bibliomixed class="po-block e445 e445" xml:id="sny03" xreflabel="Snyder2003"><textual class="po-textual">Snyder, Carolyn:
    </textual><emphasis class="po-inline e446 e446"><textual class="po-textual">Paper Prototyping: The Fast and Easy Way to Design and
    Refine User Interfaces</textual></emphasis><textual class="po-textual">. Morgan Kaufmann, San Francisco
    (2003) 1558608702</textual></bibliomixed><bibliomixed class="po-block e447 e447" xml:id="wil95" xreflabel="Williams1995"><textual class="po-textual">Williams,
      Martha: </textual><quote class="po-inline e448 e448"><textual class="po-textual">Database publishing statistics</textual></quote><textual class="po-textual">. In
      Publishing Research Quarterly, 11:3 (Sept 1995).
    doi:</textual><biblioid class="po-atom e449 doi e449"><textual class="po-textual">10.1007/BF02680442</textual></biblioid><textual class="po-textual">.</textual></bibliomixed></bibliography></article></classedDocument>